setTimeout(function () {
	document.title = "TweetDeck";

	var icon = document.createElement("link");
	icon.type = "image/x-icon";
	icon.rel = "shortcut icon";
	icon.href = "https://ton.twimg.com/tweetdeck-web/favicon.b5a6cafd56.ico";
	document.getElementsByTagName("head")[0].appendChild(icon);
}, 3000);

function expandTweet(e, tweet_id) {
	e.preventDefault();
	e.target.innerText = "Loading...";
	e.target.onclick = null;

	var xhr = new XMLHttpRequest();
	xhr.open("GET", `https://api.twitter.com/1.1/statuses/show/${tweet_id}.json`, true);
	xhr.setRequestHeader("X-Twitter-Active-User", "yes");
	xhr.setRequestHeader("X-Twitter-Auth-Type", "OAuth2Session");
	xhr.setRequestHeader("X-Twitter-Client-Language", "en");
	xhr.setRequestHeader("Authorization", "Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA");
	xhr.setRequestHeader("X-Csrf-Token", (function () {
        var csrf = document.cookie.match(/(?:^|;\s*)ct0=([0-9a-f]+)\s*(?:;|$)/);
        return csrf ? csrf[1] : "";
    })());
	xhr.withCredentials = true;

	xhr.onreadystatechange = function () {
		if (xhr.readyState === 4 && xhr.status === 200) {
			var data = JSON.parse(xhr.responseText);
			e.target.parentElement.innerHTML = TD.util.transform(data.full_text, data.entities);
			e.target.remove();
		} else {
			e.target.innerText = "Error";
			e.target.style.color = "red";
		}
	};
	
	xhr.send();
}
function follow(screen_name) {
	return new Promise(function (resolve, reject) {
		var xhr = new XMLHttpRequest();
		xhr.open("POST", `https://api.twitter.com/1.1/friendships/create.json`, true);
		xhr.setRequestHeader("X-Twitter-Active-User", "yes");
		xhr.setRequestHeader("X-Twitter-Auth-Type", "OAuth2Session");
		xhr.setRequestHeader("X-Twitter-Client-Language", "en");
		xhr.setRequestHeader("Authorization", "Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA");
		xhr.setRequestHeader("X-Csrf-Token", (function () {
			var csrf = document.cookie.match(/(?:^|;\s*)ct0=([0-9a-f]+)\s*(?:;|$)/);
			return csrf ? csrf[1] : "";
		})());
		xhr.withCredentials = true;

		xhr.onreadystatechange = function () {
			if (xhr.readyState === 4 && xhr.status === 200) {
				resolve();
			} else {
				reject();
			}
		};
		
		xhr.send('screen_name='+screen_name);
	});
}
document.body.addEventListener("click", function (e) {
	if(e.target.classList.contains("tweet-bookmark-menu-option")) {
		var tweetId = e.target.dataset.tweetId;
		var xhr = new XMLHttpRequest();
		xhr.open("POST", `https://twitter.com/i/api/graphql/aoDbu3RHznuiSkQ9aNM67Q/CreateBookmark`, true);
		xhr.setRequestHeader("X-Twitter-Active-User", "yes");
		xhr.setRequestHeader("X-Twitter-Auth-Type", "OAuth2Session");
		xhr.setRequestHeader("X-Twitter-Client-Language", "en");
		xhr.setRequestHeader("Content-Type", "application/json");
		xhr.setRequestHeader("Authorization", "Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA");
		xhr.setRequestHeader("X-Csrf-Token", (function () {
			var csrf = document.cookie.match(/(?:^|;\s*)ct0=([0-9a-f]+)\s*(?:;|$)/);
			return csrf ? csrf[1] : "";
		})());
		xhr.withCredentials = true;

		xhr.onreadystatechange = function () {
			if(xhr.readyState === 4) {
				try {
					let data = JSON.parse(xhr.responseText);
					if(data.errors && data.errors.length > 0) {
						toasts.showErrorNotification({message: "Error: " + data.errors[0].message.replace('favorited', 'bookmarked') }); // why is twitter saying 'favorited' for bookmark errors?
					} else {
						toasts.showNotification({message: "Success: Bookmarked tweet" });
					}
				} catch (e) {
					toasts.showErrorNotification({message: "Error: " + xhr.responseText });
				}
			}
		};

		xhr.send(JSON.stringify({"variables":{"tweet_id":tweetId},"queryId":"aoDbu3RHznuiSkQ9aNM67Q"}));
	}
});

! function(e) {
	function t(t) {
		for (var n, a, o = t[0], l = t[1], c = t[2], d = 0, h = []; d < o.length; d++) a = o[d], s[a] && h.push(s[a][0]), s[a] = 0;
		for (n in l) Object.prototype.hasOwnProperty.call(l, n) && (e[n] = l[n]);
		for (u && u(t); h.length;) h.shift()();
		return r.push.apply(r, c || []), i()
	}

	function i() {
		for (var e, t = 0; t < r.length; t++) {
			for (var i = r[t], n = !0, o = 1; o < i.length; o++) {
				var l = i[o];
				0 !== s[l] && (n = !1)
			}
			n && (r.splice(t--, 1), e = a(a.s = i[0]))
		}
		return e
	}
	var n = {},
		s = {
			2: 0
		},
		r = [];

	function a(t) {
		if (n[t]) return n[t].exports;
		var i = n[t] = {
			i: t,
			l: !1,
			exports: {}
		};
		return e[t].call(i.exports, i, i.exports, a), i.l = !0, i.exports
	}
	a.e = function(e) {
		var t = [],
			i = s[e];
		if (0 !== i)
			if (i) t.push(i[2]);
			else {
				var n = new Promise(function(t, n) {
					i = s[e] = [t, n]
				});
				t.push(i[2] = n);
				var r, o = document.getElementsByTagName("head")[0],
					l = document.createElement("script");
				l.charset = "utf-8", l.timeout = 120, a.nc && l.setAttribute("nonce", a.nc), l.src = function(e) {
					return a.p + "web/dist/" + ({
						0: "vendors~ondemand.horizon-web.ar-js~ondemand.horizon-web.bg-js~ondemand.horizon-web.bn-js~ondemand.ho~c9bc6977",
						5: "ondemand.horizon-web.ar-js",
						6: "ondemand.horizon-web.bg-js",
						7: "ondemand.horizon-web.bn-js",
						8: "ondemand.horizon-web.ca-js",
						9: "ondemand.horizon-web.cs-js",
						10: "ondemand.horizon-web.da-js",
						11: "ondemand.horizon-web.de-js",
						12: "ondemand.horizon-web.el-js",
						13: "ondemand.horizon-web.en-GB-js",
						14: "ondemand.horizon-web.en-js",
						15: "ondemand.horizon-web.en-ss-js",
						16: "ondemand.horizon-web.en-xx-js",
						17: "ondemand.horizon-web.es-js",
						18: "ondemand.horizon-web.eu-js",
						19: "ondemand.horizon-web.fa-js",
						20: "ondemand.horizon-web.fi-js",
						21: "ondemand.horizon-web.fil-js",
						22: "ondemand.horizon-web.fr-js",
						23: "ondemand.horizon-web.ga-js",
						24: "ondemand.horizon-web.gl-js",
						25: "ondemand.horizon-web.gu-js",
						26: "ondemand.horizon-web.he-js",
						27: "ondemand.horizon-web.hi-js",
						28: "ondemand.horizon-web.hr-js",
						29: "ondemand.horizon-web.hu-js",
						30: "ondemand.horizon-web.id-js",
						31: "ondemand.horizon-web.it-js",
						32: "ondemand.horizon-web.ja-js",
						33: "ondemand.horizon-web.kn-js",
						34: "ondemand.horizon-web.ko-js",
						35: "ondemand.horizon-web.mr-js",
						36: "ondemand.horizon-web.ms-js",
						37: "ondemand.horizon-web.nb-js",
						38: "ondemand.horizon-web.nl-js",
						39: "ondemand.horizon-web.pl-js",
						40: "ondemand.horizon-web.pt-js",
						41: "ondemand.horizon-web.ro-js",
						42: "ondemand.horizon-web.ru-js",
						43: "ondemand.horizon-web.sk-js",
						44: "ondemand.horizon-web.sr-js",
						45: "ondemand.horizon-web.sv-js",
						46: "ondemand.horizon-web.ta-js",
						47: "ondemand.horizon-web.th-js",
						48: "ondemand.horizon-web.tr-js",
						49: "ondemand.horizon-web.uk-js",
						50: "ondemand.horizon-web.ur-js",
						51: "ondemand.horizon-web.vi-js",
						52: "ondemand.horizon-web.zh-Hant-js",
						53: "ondemand.horizon-web.zh-js",
						55: "vendors~sentry"
					} [e] || e) + "." + {
						0: "d70e61cbc6",
						5: "b943644207",
						6: "1caaa6143b",
						7: "c67f6e621b",
						8: "8e034e33a5",
						9: "fce0e06a8f",
						10: "cf28f5175e",
						11: "a28bfa0500",
						12: "5f771cbc21",
						13: "5cbfbe5280",
						14: "f422d6917b",
						15: "0dde454ae3",
						16: "ecc7d4fe8a",
						17: "9c07b79175",
						18: "6c52d22dca",
						19: "009fc58a84",
						20: "ee039275a0",
						21: "583617ae80",
						22: "0501e9de1d",
						23: "9be4c2cb88",
						24: "82b5d78e1a",
						25: "5950128de2",
						26: "b8744ff81b",
						27: "123ca83f02",
						28: "143d75f467",
						29: "368dfbf685",
						30: "2e7091382c",
						31: "c0f0af9c6b",
						32: "6e400f16c6",
						33: "f3ba486748",
						34: "f482969568",
						35: "0af23b7e65",
						36: "f24ea050bb",
						37: "9aed4cd698",
						38: "b7aae888b0",
						39: "34c7bfaf81",
						40: "9effb95509",
						41: "5b869130b0",
						42: "dc06b918b3",
						43: "3b1be5d15a",
						44: "4a14ae77c1",
						45: "4667f30e58",
						46: "f0a2986ce6",
						47: "102c11a67f",
						48: "395f2b4f02",
						49: "bdaa427e9e",
						50: "a1147c3c74",
						51: "e69971aaa6",
						52: "9062f1ac93",
						53: "78cf9a1267",
						55: "4cf3f0c6c4"
					} [e] + ".js"
				}(e), r = function(t) {
					l.onerror = l.onload = null, clearTimeout(c);
					var i = s[e];
					if (0 !== i) {
						if (i) {
							var n = t && ("load" === t.type ? "missing" : t.type),
								r = t && t.target && t.target.src,
								a = new Error("Loading chunk " + e + " failed.\n(" + n + ": " + r + ")");
							a.type = n, a.request = r, i[1](a)
						}
						s[e] = void 0
					}
				};
				var c = setTimeout(function() {
					r({
						type: "timeout",
						target: l
					})
				}, 12e4);
				l.onerror = l.onload = r, o.appendChild(l)
			} return Promise.all(t)
	}, a.m = e, a.c = n, a.d = function(e, t, i) {
		a.o(e, t) || Object.defineProperty(e, t, {
			enumerable: !0,
			get: i
		})
	}, a.r = function(e) {
		"undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
			value: "Module"
		}), Object.defineProperty(e, "__esModule", {
			value: !0
		})
	}, a.t = function(e, t) {
		if (1 & t && (e = a(e)), 8 & t) return e;
		if (4 & t && "object" == typeof e && e && e.__esModule) return e;
		var i = Object.create(null);
		if (a.r(i), Object.defineProperty(i, "default", {
				enumerable: !0,
				value: e
			}), 2 & t && "string" != typeof e)
			for (var n in e) a.d(i, n, function(t) {
				return e[t]
			}.bind(null, n));
		return i
	}, a.n = function(e) {
		var t = e && e.__esModule ? function() {
			return e.default
		} : function() {
			return e
		};
		return a.d(t, "a", t), t
	}, a.o = function(e, t) {
		return Object.prototype.hasOwnProperty.call(e, t)
	}, a.p = "https://ton.twimg.com/tweetdeck-web/", a.oe = function(e) {
		throw console.error(e), e
	};
	var o = window.webpackJsonp = window.webpackJsonp || [],
		l = o.push.bind(o);
	o.push = t, o = o.slice();
	for (var c = 0; c < o.length; c++) t(o[c]);
	var u = l;
	r.push([899, 1]), i()
}([, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.default = function(e, t, i) {
		var s, a;
		"string" == typeof e && (e = {
			text: e
		});
		"en-x-psaccent" === c ? a = h(e.text, d) : (void 0 === (s = l[e.text]) && (s = e.text.replace(o, ""), l[e.text] = s), a = n.default.getMessage(s) || e.text);
		i || (a = r.default.toHtml(a, t));
		return a
	};
	var n = a(i(1117)),
		s = i(37),
		r = a(i(6));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = /[^A-Za-z0-9_]/g,
		l = {},
		c = "en-US";
	s.locale$.distinctUntilChanged().subscribe(function(e) {
		c = e || "en-US"
	});
	var u = /[a-zA-Z]/g,
		d = "ȦƁƇḒḖƑƓĦĪĴĶĿḾȠǾƤɊŘŞŦŬṼẆẊẎẐ[\\]^_`ȧƀƈḓḗƒɠħīĵķŀḿƞǿƥɋřşŧŭṽẇẋẏẑ",
		h = function(e, t) {
			return e.replace(u, function(e) {
				return t.charAt(e.charCodeAt(0) - 65)
			})
		}
}, , , , function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(638));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = {};
	e.exports = a;
	var o, l, c, u = /\\/g,
		d = {},
		h = {
			sectionTags: [{
				o: "_i",
				c: "i"
			}]
		};

	function m(e) {
		e = e.replace(u, "/");
		var t = d[e];
		return void 0 === t && (t = a.getHogan(e), t = o.compile(t, h), d[e] = t), t
	}

	function f(e, t) {
		var i = this.partials[e];
		return (t = t || {})[i.name] || (t[i.name] = m(i.name)), s.default.Template.prototype.ep.call(this, e, t)
	}

	function p(e, t) {
		var i;
		return i = "" !== t ? {
			text: e,
			mode: t
		} : e, (0, n.default)(i, null, !0)
	}(c = function(e, t, i, n) {
		this.ep = f, s.default.Template.call(this, e, t, i, n)
	}).prototype = s.default.Template.prototype, (l = function() {}).prototype = s.default, (o = new l).template = c, o.parse = function(e, t, i) {
		for (var n = s.default.parse.call(this, e, t, i), r = "", a = 0; a < n.length; a++)
			if ("_v" === n[a].tag && 0 === n[a].n.indexOf("%TRANSLATION-HINT")) {
				var o = n.splice(a, 1)[0];
				a--, r = o.n.substring(o.n.indexOf("mode=") + "mode=".length)
			} return function e(t, i, n, r) {
			for (var a = [], o = 0; o < t.length; o++)
				if ("#" === t[o].tag && "_i" === t[o].n) {
					var l = p(n.substring(t[o].i, t[o].end), i);
					"raw" === l.tag ? a.push(l) : Array.prototype.push.apply(a, s.default.parse(s.default.scan(l, r.delimiters), n, r))
				} else "#" === t[o].tag || "^" === t[o].tag || "<" === t[o].tag || "$" === t[o].tag ? (t[o].nodes = e(t[o].nodes, i, n, r), a.push(t[o])) : a.push(t[o]);
			return function(e) {
				if (0 === e.length) return e;
				for (var t = [e[0]], i = 1; i < e.length; i++)
					if ("_t" !== t[t.length - 1].tag || "\n" !== e[i].tag && "_t" !== e[i].tag) t.push(e[i]);
					else {
						var n = t[t.length - 1],
							s = e[i].text;
						void 0 === s && (s = "\n"), n.text += "" + s
					} return t
			}(a)
		}(n, r, t, i)
	}, a.getHogan = function(e) {
		var t = e + ".mustache",
			i = TD.mustaches[t];
		return void 0 === i ? console.error('TD.mustaches["' + t + '"] is not defined') : i = i.trim(), i
	}, a.render = function(e, t, i) {
		var n, s = m(e),
			r = [];
		for (var a in t = t || {}, TD.globalRenderOptions) void 0 === t[a] && (t[a] = TD.globalRenderOptions[a], r.push(a));
		return n = s.render(t, i), r.forEach(function(e) {
			delete t[e]
		}), n.trim()
	}, a.toHtml = function(e, t, i) {
		return o.compile(e, h).render(t, i).trim()
	}, a.toHtmlFromRaw = function(e, t) {
		return s.default.compile(e).render(t)
	}, a.toURLFromRaw = function(e, t) {
		return e.replace(/\{\{([^}]+?)\}\}/g, function(e, i) {
			return encodeURIComponent(t[i])
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = v(i(9)),
		s = v(i(26)),
		r = v(i(27)),
		a = v(i(28)),
		o = v(i(111)),
		l = v(i(461)),
		c = v(i(163)),
		u = v(i(14)),
		d = v(i(16)),
		h = v(i(0)),
		m = v(i(83)),
		f = i(66),
		p = v(i(4)),
		g = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(164));

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = m.default.mixin(b);
	var T = !1,
		w = function() {
			function e(t) {
				(0, u.default)(this, e), this.value = t, this.observers = []
			}
			return (0, d.default)(e, [{
				key: "subscribe",
				value: function(e) {
					var t = this;
					return this.observers.push(e), this._notify(e), {
						unsubscribe: function(e) {
							t.observers = t.observers.filter(function(t) {
								return t !== e
							})
						}
					}
				}
			}, {
				key: "next",
				value: function(e) {
					var t = this;
					this.value = e, this.observers.forEach(function(e) {
						t._notify(e)
					})
				}
			}, {
				key: "_notify",
				value: function(e) {
					try {
						e(this.value)
					} catch (e) {
						console.warn("Observer threw an error when called with value: ", this.value), console.error(e.stack)
					}
				}
			}]), e
		}();

	function b() {
		this.attributes({
			_isConnected: !1
		}), this.before("initialize", function() {
			this._isInitialized = !1
		}), this.after("initialize", function() {
			var e = this;
			this.attr._isConnected && "function" != typeof this.render && !T && (T = !0, console.warn('Connected components must have a render method. "' + this.toString() + '" does not have one.')), this._connectObservable = new w(this.state), this.attr._isConnected ? this._connectAndGetProps() : this.props = {}, this.around("replaceState", function(t, i) {
				var n = e._isInitialized && !(!i || "object" !== (void 0 === i ? "undefined" : (0, c.default)(i))) && e._shouldComponentUpdate(e.props, i);
				t.call(e, i), e._notifyAndRender({
					shouldRender: n
				})
			}), this._componentDidInitialize(), this._isInitialized = !0, this._render()
		}), this.after("didTeardownChild", function() {
			this._componentWillTeardown()
		}), this._connectAndGetProps = function() {
			"function" == typeof this.__connectAndGetProps && this.__connectAndGetProps()
		}, this._componentDidInitialize = function() {
			"function" == typeof this.componentDidInitialize && this.componentDidInitialize()
		}, this._shouldComponentUpdate = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.props,
				t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.state;
			return "function" != typeof this.shouldComponentUpdate || this.shouldComponentUpdate(e, t)
		}, this._componentWillReceiveProps = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.props;
			"function" != typeof this.componentWillReceiveProps ? void 0 !== this.componentWillReceiveProps && console.warn("componentWillReceiveProps expects to be a function.") : this.componentWillReceiveProps(e)
		}, this._notifyAndRender = function() {
			var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).shouldRender,
				t = void 0 === e || e;
			this._notify(), t && this._render()
		}, this._notify = function() {
			this._connectObservable.next(this.state)
		}, this._render = function() {
			"function" == typeof this.render && this.render()
		}, this._componentWillTeardown = function() {
			"function" == typeof this.componentWillTeardown && this.componentWillTeardown()
		}, this.connect = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			if (!(e.prototype.mixedIn || []).includes(b)) throw new Error("Component passed into connect must use UiBase");
			return e.mixin(y(this._connectObservable, t))
		}
	}

	function y(e) {
		var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).mapStateToProps,
			i = void 0 === t ? function() {
				return {}
			} : t;
		return function() {
			var t = null;
			this.attributes({
				_isConnected: !0
			}), this.__connectAndGetProps = function() {
				this._boundObserver = this._observe.bind(this), t = e.subscribe(this._boundObserver)
			}, this.after("teardown", function() {
				t && t.unsubscribe(this._boundObserver)
			}), this._observe = function(e) {
				var t = i(e, this.attr);
				this._componentWillReceiveProps(t);
				var n = this._isInitialized && this._shouldComponentUpdate(t);
				this.props = t, this._notifyAndRender({
					shouldRender: n
				})
			}
		}
	}
	var _ = e.exports.connect = function(e) {
		return function(t) {
			return t.mixin(y(e, {
				mapStateToProps: function(e) {
					return e
				}
			}))
		}
	};
	e.exports.uiBaseToReact = function(e) {
		var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).displayName,
			i = void 0 === t ? void 0 : t,
			c = function(t) {
				function i(t) {
					(0, u.default)(this, i);
					var n = (0, r.default)(this, (i.__proto__ || (0, s.default)(i)).call(this, t));
					n.rootRef = p.default.createRef(), n._propsObservable = new w(t);
					var a = n;
					return e = e.mixin(function() {
						this.after("initialize", function() {
							a._uiBaseInstance = this
						})
					}), n._connectedComponent = _(n._propsObservable)(e), n
				}
				return (0, a.default)(i, t), (0, d.default)(i, [{
					key: "updateRef",
					value: function(e) {
						var t = this.props.innerRef;
						t && (t.current = e)
					}
				}, {
					key: "componentDidMount",
					value: function() {
						var e = document.createElement("div");
						this.rootRef.current.appendChild(e);
						var t, i, n = (0, f.attach)(this._connectedComponent, e, (t = this.props, i = {}, (0, l.default)(t).forEach(function(e) {
							var t = (0, o.default)(e, 2),
								n = t[0],
								s = t[1];
							i[n] = "function" == typeof s ? function() {
								return s
							} : s
						}), i)).teardownEvent;
						this._teardownEvent = n, this.updateRef(this._uiBaseInstance)
					}
				}, {
					key: "componentDidUpdate",
					value: function() {
						this._propsObservable.next(this.props)
					}
				}, {
					key: "componentWillUnmount",
					value: function() {
						(0, h.default)(document).trigger(this._teardownEvent), this.updateRef(null)
					}
				}, {
					key: "render",
					value: function() {
						return p.default.createElement("div", {
							ref: this.rootRef
						})
					}
				}]), i
			}(p.default.Component);
		return c.displayName = i, p.default.forwardRef(function(e, t) {
			return p.default.createElement(c, (0, n.default)({
				innerRef: t
			}, e))
		})
	}, e.exports.reactToUiBase = function(e) {
		return m.default.mixin(b, function() {
			this.attributes({
				props: {}
			}), this.render = function() {
				g.render(p.default.createElement(e, (0, n.default)({}, this.attr.props, this.props)), this.node)
			}, this.componentWillTeardown = function() {
				g.unmountComponentAtNode(this.node)
			}
		})
	}
}, , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = v(i(68)),
		s = v(i(239)),
		r = v(i(85)),
		a = v(i(13)),
		o = v(i(184)),
		l = v(i(571)),
		c = v(i(63)),
		u = v(i(241)),
		d = v(i(15)),
		h = v(i(2)),
		m = v(i(0)),
		f = v(i(100)),
		p = v(i(644)),
		g = i(324);

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		var t, i = 0,
			v = /(.+)(?:_normal)\.(\w+)$/,
			T = new RegExp("<(?:.|\\n)*?>", "gm"),
			w = /\B(?=(\d{3})+(?!\d))/g,
			b = /^[@\uff20]?/,
			y = /^https?:\/\/twitter\.com\/([a-zA-Z0-9_-]+)(?:(?:\/status(?:es)?\/([0-9]+))?|(?:(\/(?:lists|timelines)\/)|\/)?([a-zA-Z0-9_-]+))\/?(\?.*)?$/,
			_ = ["404", "500", "about", "account", "help", "jobs", "privacy", "search", "search-advanced", "search-home", "tos"],
			C = !isNaN(new Date("Mon Oct 08 16:34:01 +0000 2012").getTime());
		m.default.hasOwnProperty("subscribe") && m.default.subscribe("/date", function(e) {
			var t = TD.util.parseDateString(e).getTime(),
				n = (new Date).getTime();
			i = t - n
		});
		var S = {
			ANCHOR_TAG_REGEXP: /href=/g,
			LT_REGEXP: /</g,
			GT_REGEXP: />/g,
			SINGLE_QUOTE_REGEXP: /'/g,
			QUOTE_REGEXP: /"/g,
			TWITTER_USERNAME_REGEXP: /@([A-Za-z0-9_]+)/g,
			parseDateString: function(e) {
				return !C && e ? new Date(Date.parse(e.replace(/( \+)/, " UTC$1"))) : new Date(e)
			},
			parseISO8601: function(e) {
				return new Date(Date.parse(e))
			},
			iso8601: function(e) {
				return (e || new Date).toISOString()
			},
			unixTime: function(e) {
				return Math.round(e.getTime() / 1e3)
			},
			prettyDateFromUnixTimestamp: function(e) {
				return f.default.unix(e).format("D MMM YYYY")
			},
			prettyDate: function(e) {
				var t = (0, f.default)().subtract(1, "week");
				return (0, f.default)().isSame(e, "year") ? (0, f.default)(e).isBefore(t) ? TD.util.prettyMonthDayString(e) : TD.util.timeAgo(e.getTime(), {
					longForm: !1,
					adjustSystemTime: !0
				}) : TD.util.prettyDateString(e)
			},
			quotedForRegExp: function(e) {
				return String(e || "").replace(/([.\\+*?[^\]$(){}=!<>|:\/\-])/g, "\\$1")
			},
			clean: function(e) {
				if (!e) return e;
				var t = {
					"<": "&lt;",
					">": "&gt;",
					'"': "&quot;",
					"'": "&#39;"
				};
				return e.toString().replace(/[<>"']/g, function(e) {
					return t[e]
				})
			},
			removeHTMLCodes: function(e) {
				var t = {
					"&lt;": "<",
					"&gt;": ">",
					"&quot;": '"',
					"&apos;": "'",
					"&#39;": "'",
					"&amp;": "&"
				};
				return e.replace(/&(?:lt|gt|quot|apos|#39|amp);/g, function(e) {
					return t[e]
				})
			},
			stripHTMLTags: function(e) {
				return e.replace(T, "")
			},
			htmlToText: function(e) {
				return (0, m.default)("<div>" + e + "</div>").text()
			},
			h: function(e) {
				var t = (0, m.default)("<div/>"),
					i = function(e) {
						return e ? t.text(e).html().replace(/\"/gi, "&quot;") : e
					};
				return S.h = function(e) {
					return i(e)
				}, i(e)
			},
			transform: function(e, t) {
				return e ? (t = t || {}, S.updateEntities(e, t), S.linkify(e, t)) : ""
			},
			cleanWithEmoji: function(e) {
				return e ? (e = S.clean(e), TD.decider.get("tweets_emoji") && (e = p.default.parse(e)), e) : ""
			},
			updateEntities: function(e, t) {
				var i, n, s, r, a, o = twttrTxt.modifyIndicesFromUnicodeToUTF16;
				if (t.convertedToUTF16) return t;
				t.convertedToUTF16 = true,
				t.media && t.media.length ? o(e, t.media) : t.media = [],
				t.urls && t.urls.length ? o(e, t.urls) : t.urls = [],
				t.hashtags && t.hashtags.length ? o(e, t.hashtags) : t.hashtags = S.extractHashtagEntities(e),
				t.user_mentions && t.user_mentions.length ? o(e, t.user_mentions) : t.user_mentions = [],
				t.cashtags = twttrTxt.extractCashtagsWithIndices(e);
				for (n = 0, s = (i = S.extractMentionEntities(e)).length; n < s; n++) {
					r = i[n];
					(a = S.getEntityOverlap(r, t)) ?
						r.list_slug && r.indices[0] === a.indices[0] && (a.indices = r.indices, a.list_slug = r.list_slug) :
						(false && t.user_mentions.push(r)); // weird bug that adds mentions randomly
				}
				return t
			},
			extractMentionEntities: function(e) {
				var t = twttrTxt.extractMentionsOrListsWithIndices(e);
				return (0, d.default)(t, function(e) {
					e.screen_name = e.screenName, e.list_slug = e.listSlug, delete e.screenName, delete e.listSlug
				}), t
			},
			extractHashtagEntities: function(e) {
				var t = twttrTxt.extractHashtagsWithIndices(e);
				return (0, d.default)(t, function(e) {
					e.text = e.hashtag, delete e.hashtag
				}), t
			},
			getEntityOverlap: function(e, t) {
				for (var i = t.urls, n = 0, s = (i = (i = (i = i.concat(t.media)).concat(t.user_mentions)).concat(t.hashtags)).length; n < s; n++)
					if (e.indices[0] < i[n].indices[1] && e.indices[1] > i[n].indices[0]) return i[n];
				return null
			},
			linkify: function(e, t) {
				var i, n, s, r, a, o, l = "",
					c = [].concat(t.urls, t.media, t.user_mentions, t.hashtags, t.cashtags).filter(Boolean);
				c.sort(function(e, t) {
					return t.indices[0] - e.indices[0]
				});
				for (var u = 0, d = c.length; u < d; u++) {
					if (r = c[u], i = e.substring(0, r.indices[0]), !(r.indices[1] > e.length)) n = e.substring(r.indices[0], r.indices[1]), s = e.substring(r.indices[1]), a = "", r.url ? a = n === r.url ? S.createUrlAnchor(r) : n : r.screen_name ? a = r.list_slug ? TD.ui.template.render("text/list_link_slug", {
						slug: r.list_slug.substr(1),
						user: {
							screenName: r.screen_name
						},
						fullName: "@" + r.screen_name + r.list_slug
					}) : r.isImplicitMention ? "" : TD.ui.template.render("text/profile_link", {
						user: {
							screenName: r.screen_name
						}
					}) : r.text ? (o = {
						searchTerm: r.text,
						symbol: "#",
						escapedSymbol: escape("#"),
						hashFlagUrl: TD.decider.get("hashflags") ? g.hashflags.get(r.text) : null
					}, a = TD.ui.template.render("text/search_link", o)) : r.cashtag && (o = {
						searchTerm: r.cashtag,
						symbol: "$",
						escapedSymbol: escape("$")
					}, a = TD.ui.template.render("text/search_link", o)), l = a + S.cleanWithEmoji(s) + l, e = u === c.length - 1 && r.isImplicitMention ? "" : i
				}
				return (S.cleanWithEmoji(e) + l).trim()
			},
			extractTweetIdFromPermalink: function(e) {
				if ("string" == typeof e) {
					var t, i = e.trim().match(y);
					return i && (t = i[2]), t
				}
			},
			extractScreenNameFromPermalink: function(e) {
				if ("string" == typeof e) {
					var t = void 0,
						i = e.trim().match(y);
					return i && i[1] && (t = i[1]), t
				}
			},
			createUrlAnchor: function(e) {
				var t, i = e.url,
					n = "url";
				if (e.isUrlForAttachment && TD.decider.get("tweet_hide_suffix")) return "";
				var s, r, a, o, l = (e.expanded_url || e.url).match(y);
				l && (s = l[1], r = l[2], l[3] && (a = l[3].replace(/\//g, "")), o = l[4]);
				var c = s && o && !(r || a);
				(-1 !== _.indexOf(s) || c) && (s = void 0, o = void 0, r = void 0, a = void 0), (0, u.default)(i, "https://") || (0, u.default)(i, "http://") || (i = "http://" + i);
				return t = '<a href="' + TD.util.escape(i) + '" target="_blank" class="url-ext" ', e.expanded_url && (t += 'data-full-url="' + TD.util.escape(e.expanded_url) + '" '), r ? (n = "tweet", t += 'data-tweet-id="' + r + '" ') : o ? (t += 'data-screen-name="' + s + '" ', n = "timelines" === a ? "viewCustomTimeline" : "list", t += 'data-slug="' + o + '" ') : s && (n = "user", t += 'data-user-name="' + s + '" '), n && n.includes("url") && (n += " noopener noreferrer"), t += 'rel="' + n + '" ', e.display_url && e.expanded_url && 8230 == e.display_url.charCodeAt(e.display_url.length - 1) && (t += 'title="' + TD.util.escape(e.expanded_url) + '" '), t += ">" + TD.util.escape(e.display_url || e.url) + "</a>"
			},
			isLinkToTwitterItem: function(e) {
				return y.test(e)
			},
			pluralise: function(e, t, i) {
				return 1 != i ? t : e
			},
			atMentionify: function(e) {
				return e.replace(b, "@")
			},
			deMentionify: function(e) {
				return e.replace(b, "")
			},
			selectAttrsFrom: function(e, t) {
				for (var i = {}, n = 0; n < t.length; n++) i[t[n]] = e[t[n]];
				return i
			},
			values: function(e) {
				var t = [];
				for (var i in e) e.hasOwnProperty(i) && t.push(e[i]);
				return t
			},
			isEmpty: c.default,
			isWeb: (0, l.default)(function() {
				return /^https?:\/\//.test(document.location)
			}),
			isMacApp: (0, l.default)(function() {
				return "mac" === TD.util.getAppEnv()
			}),
			isChromeApp: (0, l.default)(function() {
				return (0, u.default)(window.location.href, "chrome-extension://")
			}),
			isChrome: (0, l.default)(function() {
				return window.navigator.userAgent.indexOf("Chrome") > -1
			}),
			isFirefox: (0, l.default)(function() {
				return window.navigator.userAgent.indexOf("Gecko/") > -1
			}),
			isWrapperApp: (0, l.default)(function() {
				return Boolean(window.deck && deck.inApp())
			}),
			isSafari: (0, l.default)(function() {
				return !(window.navigator.userAgent.indexOf("Chrome") > -1) && window.navigator.userAgent.indexOf("AppleWebKit") > -1
			}),
			getWebkitVersion: function() {
				var e = window.navigator.userAgent.match(/AppleWebKit\/([\d.]+)/);
				return e ? parseFloat(e[1]) : null
			},
			getTweetDeckUserAgentString: function() {
				var e = {
					clientVersion: TD.version,
					platform: TD.util.getAppEnv(),
					platformVersion: TD.util.isWrapperApp() && void 0 !== deck ? deck.getWrapperVersion() : ""
				};
				return TD.ui.template.toHtml("Twitter-TweetDeck-blackbird-chrome/{{{clientVersion}}} {{{platform}}}/{{{platformVersion}}}", e)
			},
			getTwitterCookieUserId: function() {
				var e = document.cookie.match(/(?:^|;\s*)twid=("?)(.*?)(\1)\s*(;|$)/);
				if (e && e[2]) {
					var t = window.unescape(e[2]).split("|")[0];
					return TD.net.util.formDecode(t).u
				}
				return ""
			},
			getBearerTokenAuthHeader: function() {
				return "Bearer " + TD.config.bearer_token
			},
			getCsrfTokenHeader: function() {
				var e = document.cookie.match(/(?:^|;\s*)ct0=([0-9a-f]+)\s*(?:;|$)/);
				return e ? e[1] : ""
			},
			visibilityChangeEventName: function() {
				return null == t && (void 0 !== document.hidden ? t = "visibilitychange" : void 0 !== document.mozHidden ? t = "mozvisibilitychange" : void 0 !== document.msHidden ? t = "msvisibilitychange" : void 0 !== document.webkitHidden && (t = "webkitvisibilitychange")), t
			},
			documentIsHidden: function() {
				return document.hidden || document.mozHidden || document.msHidden || document.webkitHidden
			},
			isTouchDevice: (0, l.default)(function() {
				return TD.config.force_touchdeck || TD.config.touchdeck && TD.util.isiOSDevice()
			}),
			isiOSDevice: (0, l.default)(function() {
				return /(iPad|iPhone|iPod)/g.test(navigator.userAgent)
			}),
			isUnsupportedWebWrapperVersion: function() {
				var e, t, i = !1;
				if (Boolean(TD.util.isWrapperApp() && deck.getWrapperVersion)) {
					switch (t = deck.getWrapperVersion(), TD.util.getAppEnv()) {
						case "mac":
							e = TD.minWrapperVersionMac;
							break;
						case "win":
							e = TD.minWrapperVersionWin
					}
					i = !e || !t || TD.util.versionComparator(t, e) < 0
				}
				return i
			},
			getFullVersionString: function() {
				var e = {
					version: TD.version,
					buildIDShort: TD.buildIDShort,
					appEnv: TD.util.getAppEnv()
				};
				return TD.util.isWrapperApp() && deck.getWrapperVersion && (e.wrapperVersion = deck.getWrapperVersion()), TD.ui.template.render("version", e)
			},
			isRetina: function() {
				return window.devicePixelRatio >= 1.5
			},
			shouldStream: function() {
				return !1
			},
			getCurrentLocation: function(e, t, i) {
				var n, s, r, a = Number.MAX_VALUE,
					o = navigator.geolocation,
					l = function() {
						o.clearWatch(s), n ? t(n) : i && i()
					};
				r = setTimeout(l, e), s = o.watchPosition(function(e) {
					var t = e.coords.accuracy;
					t < a && (n = e, a = t), t < 50 && (clearTimeout(r), l())
				}, i, {
					enableHighAccuracy: !0
				})
			},
			openURL: function(e, t) {
				if ((0, o.default)(e) && ((0, u.default)(e, "https://") || (0, u.default)(e, "http://")))
					if (t && (e = TD.net.util.addURLParameters(e, t)), window.navigator.standalone) {
						var i = document.createElement("a");
						i.setAttribute("href", e), i.setAttribute("target", "_blank");
						var n = document.createEvent("HTMLEvents");
						n.initEvent("click", !0, !0), i.dispatchEvent(n)
					} else {
						var s = window.open(e);
						s && s.focus()
					}
			},
			maybeOpenClickExternally: function(e) {
				var t = !1,
					i = (0, m.default)(e.currentTarget),
					n = i.prop("tagName"),
					s = i.attr("rel"),
					r = i.attr("target"),
					a = i.attr("href") || "",
					o = i.attr("data-full-url") || a,
					l = e.isTrigger,
					c = e.ctrlKey || e.shiftKey || e.altKey || e.metaKey || 0 !== e.button;
				return "A" === n && "_blank" === r && (s && s.includes("url") || c) && (TD.util.isWrapperApp() || l ? (TD.util.openURL(a), e.preventDefault(), e.stopImmediatePropagation()) : e.stopImmediatePropagation(), t = !0, TD.controller.stats.linkClick(o, i)), t
			},
			openEmail: function(e, t, i) {
				var n = "mailto:",
					s = {};
				t && (s.subject = t), i && (s.body = i), e && (n += e), n = n + "?" + TD.net.util.formEncode(s), window.open(n)
			},
			escape: function(e) {
				return S.clean(e)
			},
			truncateText: function(e, t, i, n, s, r) {
				var a;
				if (t = void 0 == t ? "…" : t, n = n || 0, r = r || 0, e.length > i + n) {
					var o = e.indexOf(" ", i - r - 1); - 1 != o && (i = Math.min(i, o + 1)), a = e.substr(0, i), s && (a = S.transform(a)), a += t
				}
				return a
			},
			timesCached: null,
			timeWords: function() {
				return TD.util.timesCached || (TD.util.timesCached = {
					longFormPast: {
						singular: {
							now: (0, h.default)("now", null, !0),
							seconds: (0, h.default)("{{one}} second ago", null, !0),
							minutes: (0, h.default)("{{one}} minute ago", null, !0),
							hours: (0, h.default)("{{one}} hour ago", null, !0),
							days: (0, h.default)("{{one}} day ago", null, !0)
						},
						plural: {
							now: (0, h.default)("now", null, !0),
							seconds: (0, h.default)("{{plural_number}} seconds ago", null, !0),
							minutes: (0, h.default)("{{plural_number}} minutes ago", null, !0),
							hours: (0, h.default)("{{plural_number}} hours ago", null, !0),
							days: (0, h.default)("{{plural_number}} days ago", null, !0)
						}
					},
					longFormFuture: {
						singular: {
							now: (0, h.default)("now", null, !0),
							seconds: (0, h.default)("{{one}} second left", null, !0),
							minutes: (0, h.default)("{{one}} minute left", null, !0),
							hours: (0, h.default)("{{one}} hour left", null, !0),
							days: (0, h.default)("{{one}} day left", null, !0)
						},
						plural: {
							now: (0, h.default)("now", null, !0),
							seconds: (0, h.default)("{{plural_number}} seconds left", null, !0),
							minutes: (0, h.default)("{{plural_number}} minutes left", null, !0),
							hours: (0, h.default)("{{plural_number}} hours left", null, !0),
							days: (0, h.default)("{{plural_number}} days left", null, !0)
						}
					},
					shortForm: {
						singular: {
							now: (0, h.default)("now", null, !0),
							seconds: (0, h.default)("{{one}}s", null, !0),
							minutes: (0, h.default)("{{one}}m", null, !0),
							hours: (0, h.default)("{{one}}h", null, !0),
							days: (0, h.default)("{{one}}d", null, !0)
						},
						plural: {
							now: (0, h.default)("now", null, !0),
							seconds: (0, h.default)("{{plural_number}}s", null, !0),
							minutes: (0, h.default)("{{plural_number}}m", null, !0),
							hours: (0, h.default)("{{plural_number}}h", null, !0),
							days: (0, h.default)("{{plural_number}}d", null, !0)
						}
					}
				}), TD.util.timesCached
			},
			datesCached: null,
			dates: function() {
				return TD.util.datesCached || (TD.util.datesCached = {
					months: [(0, h.default)("Jan"), (0, h.default)("Feb"), (0, h.default)("Mar"), (0, h.default)("Apr"), (0, h.default)("May"), (0, h.default)("Jun"), (0, h.default)("Jul"), (0, h.default)("Aug"), (0, h.default)("Sep"), (0, h.default)("Oct"), (0, h.default)("Nov"), (0, h.default)("Dec")],
					dates: [(0, h.default)("1st"), (0, h.default)("2nd"), (0, h.default)("3rd"), (0, h.default)("4th"), (0, h.default)("5th"), (0, h.default)("6th"), (0, h.default)("7th"), (0, h.default)("8th"), (0, h.default)("9th"), (0, h.default)("10th"), (0, h.default)("11th"), (0, h.default)("12th"), (0, h.default)("13th"), (0, h.default)("14th"), (0, h.default)("15th"), (0, h.default)("16th"), (0, h.default)("17th"), (0, h.default)("18th"), (0, h.default)("19th"), (0, h.default)("20th"), (0, h.default)("21st"), (0, h.default)("22nd"), (0, h.default)("23rd"), (0, h.default)("24th"), (0, h.default)("25th"), (0, h.default)("26th"), (0, h.default)("27th"), (0, h.default)("28th"), (0, h.default)("29th"), (0, h.default)("30th"), (0, h.default)("31st")]
				}), TD.util.datesCached
			},
			timeLeft: function(e, t) {
				return TD.util.timeDiff(e, {
					longForm: t.longForm,
					adjustSystemTime: t.adjustSystemTime,
					isFutureTime: !0
				})
			},
			timeAgo: function(e, t) {
				return TD.util.timeDiff(e, {
					longForm: t.longForm,
					adjustSystemTime: t.adjustSystemTime,
					isFutureTime: !1
				})
			},
			timeDiff: function(e, t) {
				t = t || {};
				var n, s, r, a = Date.now(),
					o = new Date(e).getTime(),
					l = t.longForm ? t.isFutureTime ? "longFormFuture" : "longFormPast" : "shortForm",
					c = TD.util.timeWords()[l];
				return t.adjustSystemTime && (a += i), n = t.isFutureTime ? o - a : a - o, isNaN(n) || n < -5e3 ? "" : (n < 7e3 ? (r = "", s = "now") : n < 6e4 ? (r = Math.floor(n / 1e3), s = "seconds") : n < 36e5 ? (r = Math.floor(n / 6e4), s = "minutes") : n < 864e5 ? (r = Math.floor(n / 36e5), s = "hours") : (r = Math.floor(n / 864e5), s = "days"), c = 1 === r ? c.singular : c.plural, TD.ui.template.toHtml(c[s], {
					one: r,
					plural_number: r
				}))
			},
			getDayOfWeek: function(e) {
				return [(0, h.default)("Sunday"), (0, h.default)("Monday"), (0, h.default)("Tuesday"), (0, h.default)("Wednesday"), (0, h.default)("Thursday"), (0, h.default)("Friday"), (0, h.default)("Saturday")][e.getDay()]
			},
			prettyTime: function(e) {
				return {
					month: TD.util.dates().months[e.getMonth()],
					hours24: e.getHours(),
					hours12: e.getHours() % 12 || 12,
					minutes: TD.util.padLeadingZero(e.getMinutes()),
					amPm: e.getHours() < 12 ? (0, h.default)("am") : (0, h.default)("pm"),
					date: TD.util.dates().dates[e.getDate() - 1],
					day: e.getDate(),
					dayOfWeek: S.getDayOfWeek(e),
					year: e.getFullYear().toString().slice(2),
					fullYear: e.getFullYear()
				}
			},
			prettyTimeString: function(e) {
				return (0, h.default)("{{hours12}}:{{minutes}}{{amPm}} · {{day}} {{month}} {{fullYear}}", TD.util.prettyTime(e))
			},
			prettyTimeOrDateString: function(e) {
				var t = new Date;
				return t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(1), e >= t ? TD.util.prettyTimeOfDayString(e) : e >= t - 5184e5 ? (0, h.default)("{{dayOfWeek}}, {{hours12}}:{{minutes}}{{amPm}}", TD.util.prettyTime(e)) : (0, h.default)("{{day}} {{month}} {{year}}, {{hours12}}:{{minutes}}{{amPm}}", TD.util.prettyTime(e))
			},
			prettyTimeOfDayString: function(e) {
				return (0, h.default)("{{hours12}}:{{minutes}}{{amPm}}", TD.util.prettyTime(e))
			},
			prettyDateString: function(e) {
				return (0, h.default)("{{day}} {{month}} {{fullYear}}", TD.util.prettyTime(e))
			},
			prettyDateShortString: function(e) {
				return (0, h.default)("{{month}} {{fullYear}}", TD.util.prettyTime(e))
			},
			prettyMonthDayString: function(e) {
				return (0, h.default)("{{month}} {{day}}", TD.util.prettyTime(e))
			},
			padLeadingZero: function(e) {
				return e.toString().replace(/^(\d)$/, "0$1")
			},
			prettyTimeOfDayOrDateString: function(e) {
				return (new Date).toDateString() === e.toDateString() ? TD.util.prettyTimeOfDayString(e) : TD.util.prettyDateString(e)
			},
			isValidNumber: function(e, t) {
				"string" == typeof e && (e = parseFloat(e));
				var i = !(0, a.default)(t, "noNegativeNumbers") || e >= 0;
				return "number" == typeof e && isFinite(e) && i
			},
			truncateNumber: function(e) {
				var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 4;
				if (!TD.util.isValidNumber(e)) return "";
				var i = 0,
					n = e;
				if (String(e).length <= t) return TD.util.prettyNumber(e);
				for (t -= 1; t < String(Math.floor(n)).length;) ++i, n /= 1e3;
				return parseFloat(n.toPrecision(t)) + ["", "K", "M", "B", "T"][i]
			},
			prettyNumber: function(e, t) {
				return TD.util.isValidNumber(e, t) ? ("string" == typeof e && (e = parseInt(e, 10)), e.toString().split(".")[0].replace(w, ",")) : ""
			},
			chirpColumnSort: function(e, t) {
				var i = {
						before: -1,
						after: 1
					},
					n = 0,
					s = e.getSortIndex(),
					r = t.getSortIndex(),
					a = s.type;
				if (s.type !== r.type) return TD.config.internal_build && console.warn("chirpColumnSort cannot compare", s.type, "to", r.type), 0;
				switch (a) {
					case "milliseconds":
					case "number":
						n = r.value - s.value;
						break;
					case "numericString":
						n = TD.util.numericStringComparator(r.value, s.value);
						break;
					default:
						TD.config.internal_build && console.warn("chirpColumnSort unrecognised sort type:", a), n = 0
				}
				n || (n = (i[s.conflictResolution] || 0) - (i[r.conflictResolution] || 0));
				return n
			},
			chirpReverseColumnSort: function(e, t) {
				return TD.util.chirpColumnSort(t, e)
			},
			getTopChirp: function(e) {
				return e.reduce(function(e, t) {
					return e && t ? e.belongsAbove(t) ? e : t : e || t
				})
			},
			transformTwitterAvatar: function(e, t) {
				return e.replace(v, "$1_" + t + ".$2")
			},
			getOSName: function() {
				var e = "";
				return S.isWrapperApp() ? e = deck.osname() : -1 != navigator.appVersion.indexOf("Win") ? e = "windows" : -1 != navigator.appVersion.indexOf("Mac") ? e = "osx" : -1 != navigator.appVersion.indexOf("Linux") && (e = "linux"), e
			},
			numericStringComparator: function(e, t) {
				var i = e.length - t.length;
				return i || (e > t ? i = 1 : e < t && (i = -1)), i
			},
			hasFeature: function(e) {
				switch (e) {
					case "file":
						return !!window.File;
					case "filereader":
						return !!window.FileReader
				}
			},
			getAppEnv: function() {
				var t = "unknown";
				if (e.exports.isChromeApp()) t = "chrome";
				else if (e.exports.isWrapperApp()) switch (e.exports.getOSName()) {
					case "osx":
						t = "mac";
						break;
					case "windows":
						t = "win"
				} else(0, u.default)(window.location.href, "file://") || (t = "web");
				return t
			},
			checkAPIRoot: function() {
				if ("http:" === window.location.protocol || "https:" === window.location.protocol) {
					var e = window.location.protocol + "//" + window.location.host;
					e !== TD.config.api_root && (console.log("NOTE: overwriting api_root of", TD.config.api_root, "with", e), TD.config.api_root = e)
				}
			},
			hasFixedScrollBars: function() {
				var e, t = (0, m.default)("<div>").css({
					width: "100px",
					height: "100px",
					overflow: "scroll",
					position: "absolute",
					top: "-9999px"
				});
				return (0, m.default)("body").append(t), e = t[0].offsetWidth - t[0].clientWidth, t.remove(), Boolean(e)
			},
			bind: function(e, t) {
				return function() {
					e.apply(t, arguments)
				}
			},
			random: function(e, t) {
				return null == t && (t = e, e = 0), e + (0 | Math.random() * (t - e + 1))
			},
			extendObjectWith: function(e, t) {
				(0, d.default)(t, function(t) {
					e[t[0]] = t[1]
				})
			},
			insertLogDivider: (0, r.default)(function() {
				console.log(" ")
			}, 1),
			versionComparator: function(e, t) {
				e = e.toString(), t = t.toString();
				for (var i, n, s = e.split("."), r = t.split("."), a = Math.min(s.length, r.length), o = 0; o < a; o++) {
					if ((i = parseInt(s[o], 10)) > (n = parseInt(r[o], 10))) return 1;
					if (i < n) return -1
				}
				return s.length > r.length ? 1 : s.length < r.length ? -1 : 0
			},
			TpmCounter: function(e, t, i) {
				var n = 0,
					s = 0,
					r = 0,
					a = [],
					o = (new Date).getTime(),
					l = setInterval(function() {
						var e, l, c = (new Date).getTime(),
							u = c - t;
						for (a.push({
								renderedCount: r,
								startTime: o
							}), s += r, r = 0, o = c; a.length && a[0].startTime < u;) e = a.shift(), s -= e.renderedCount;
						a.length && (l = c - a[0].startTime, n = s * (6e4 / l), (0, m.default)(document).trigger(i, {
							itemsPerMinute: Math.round(n)
						}))
					}, e);
				this.incrementCounter = function(e) {
					r += e
				}, this.stop = function() {
					clearInterval(l)
				}
			},
			deterministicObjectHash: function(e) {
				var t = TD.util.createHashableObject(e),
					i = (0, n.default)(t),
					s = TD.core.sha1(i);
				return s = s.substr(0, 10)
			},
			createHashableObject: function(e) {
				var t, i;
				if (Array.isArray(e))(t = e.map(TD.util.createHashableObject)).push("A");
				else if (e === Object(e)) {
					for (var n in t = [], e) e.hasOwnProperty(n) && (i = TD.util.createHashableObject(e[n]), t.push([n, i]));
					t.sort(function(e, t) {
						return e[0].localeCompare(t[0])
					}), t.push("O")
				} else t = e;
				return t
			},
			isNetworkFailure: function(e) {
				return 0 === e.status || 500 === e.status && "internal server error" === e.responseText
			},
			keyEquals: function(e, t) {
				return function(i) {
					return i[e] === t
				}
			},
			equals: function(e) {
				return function(t) {
					return e === t
				}
			},
			merge: function() {
				return s.default.apply(s.default.apply.placeholder, [{}].concat([].slice.call(arguments)))
			},
			pluck: function(e) {
				return function(t) {
					return t && t[e]
				}
			},
			unpluck: function(e) {
				return function(t) {
					var i = {};
					return i[e] = t, i
				}
			},
			isDisabled: function() {
				return function(e) {
					return (0, m.default)(e).hasClass("is-disabled")
				}
			},
			makeDate: function(e) {
				return new Date(e)
			},
			effect: function(e) {
				return function(t) {
					return e.apply(this, arguments), t
				}
			},
			dEffect: function(e) {
				return function(t) {
					var i = this,
						n = [].slice.call(arguments);
					return TD.core.defer.maybeDeferred(function() {
						return e.apply(i, n)
					}).addCallback(function() {
						return t
					})
				}
			},
			metric: function(e, t, i) {
				(0, m.default)(document).trigger("metric", {
					key: e,
					value: t,
					type: i
				})
			},
			getChirpId: function(e) {
				return e.id.toString()
			},
			getXhrStatusFromSendRequestResult: function(e) {
				return ((e = e || {}).req || e.xhr || {}).status
			},
			catch: function(e, t) {
				return function() {
					try {
						return e.apply(this, arguments)
					} catch (e) {
						t && console.error(e.stack)
					}
				}
			},
			compareBySortString: function(e, t) {
				var i = e.sortString,
					n = t.sortString;
				return i < n ? -1 : i > n ? 1 : 0
			}
		};
		return S
	}()
}, , function(e, t, i) {
	"use strict";
	var n, s = i(1449),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	t.showErrorNotification = function(e) {
		var t = e.timeoutDelayMs || 7e3;
		return r.default.addDanger({
			bodyText: e.message,
			timeoutDelayMs: t
		})
	}, t.showNotification = function(e) {
		var t = e.timeoutDelayMs || 3e3;
		return r.default.add({
			titleText: e.title,
			bodyText: e.message,
			timeoutDelayMs: t
		})
	}, t.removeNotification = function(e) {
		setTimeout(function() {
			r.default.remove(e.notification)
		}, e.timeoutDelayMs || 3e3)
	}, t.updateNotification = function(e) {
		r.default.update(e.notification, {
			bodyText: e.message
		}), e.remove && t.removeNotification(e)
	},
	window.toasts = t;
}, , function(e, t, i) {
	"use strict";
	var n, s = h(i(9)),
		r = h(i(224)),
		a = h(i(331)),
		o = h(i(44)),
		l = h(i(13)),
		c = h(i(2)),
		u = h(i(0)),
		d = h(i(17));

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = ((n = {
		simpleColumnTypes: {
			TRENDS: "trends",
			ANALYTICS: "analytics",
			WHATSHAPPENING: "whatshappening"
		},
		storageColumnTypes: {
			OTHER: "other",
			HOME: "home",
			ME: "me",
			INBOX: "privateMe",
			SCHEDULED: "scheduled"
		},
		feedTypes: {
			HOME: "home",
			USERTIMELINE: "usertimeline",
			INTERACTIONS: "interactions",
			MENTIONS: "mentions",
			SEARCH: "search",
			LIST: "list",
			CUSTOMTIMELINE: "customtimeline",
			DIRECT: "direct",
			USERTWEETS: "usertweets",
			FAVORITES: "favorites",
			NETWORKACTIVITY: "networkactivity",
			SCHEDULED: "scheduled",
			DATAMINR: "dataminr",
			LIVEVIDEO: "livevideo",
			EVENT: "event"
		}
	}).allFeedTypes = (0, o.default)(n.feedTypes).reduce(function(e, t) {
		return e[n.feedTypes[t]] = !0, e
	}, {}), n.nonExhaustibleFeedTypes = {}, d.default.extendObjectWith(n.nonExhaustibleFeedTypes, [
		[n.feedTypes.CUSTOMTIMELINE, !0],
		[n.feedTypes.FAVORITES, !0]
	]), n.gaplessFeedTypes = {}, d.default.extendObjectWith(n.gaplessFeedTypes, [
		[n.feedTypes.CUSTOMTIMELINE, !0],
		[n.feedTypes.DIRECT, !0],
		[n.feedTypes.SCHEDULED, !0]
	]), n.reorderableFeedTypes = {}, d.default.extendObjectWith(n.reorderableFeedTypes, [
		[n.feedTypes.CUSTOMTIMELINE, !0],
		[n.feedTypes.SCHEDULED, !0]
	]), n.followingFeedTypes = {}, d.default.extendObjectWith(n.followingFeedTypes, [
		[n.feedTypes.HOME, !0],
		[n.feedTypes.NETWORKACTIVITY, !0]
	]), n.columnMetaTypes = {
		TIMELINE: "col_timeline",
		INTERACTIONS: "col_interactions",
		MENTIONS: "col_mentions",
		FOLLOWERS: "col_followers",
		SEARCH: "col_search",
		LIST: "col_list",
		CUSTOMTIMELINE: "col_customtimeline",
		MESSAGES: "col_messages",
		USERTWEETS: "col_usertweets",
		FAVORITES: "col_favorites",
		ACTIVITY: "col_activity",
		DATAMINR: "col_dataminr",
		LIVEVIDEO: "col_livevideo",
		EVENT: "col_event",
		HOME: "col_home",
		ME: "col_me",
		INBOX: "col_inbox",
		SCHEDULED: "col_scheduled",
		TRENDS: "col_trends",
		ANALYTICS: "col_analytics",
		WHATSHAPPENING: "col_whatshappening",
		UNKNOWN: "col_unknown"
	}, n.columnMetaTypeToScribeNamespace = {}, d.default.extendObjectWith(n.columnMetaTypeToScribeNamespace, [
		[n.columnMetaTypes.TIMELINE, {
			page: "home",
			section: ""
		}],
		[n.columnMetaTypes.INTERACTIONS, {
			page: "connect",
			section: "activity"
		}],
		[n.columnMetaTypes.MENTIONS, {
			page: "connect",
			section: "mentions"
		}],
		[n.columnMetaTypes.SEARCH, {
			page: "search",
			section: "tweets"
		}],
		[n.columnMetaTypes.LIST, {
			page: "list",
			section: "tweets"
		}],
		[n.columnMetaTypes.USERTWEETS, {
			page: "profile_tweets",
			section: ""
		}],
		[n.columnMetaTypes.FAVORITES, {
			page: "favorites",
			section: ""
		}],
		[n.columnMetaTypes.ACTIVITY, {
			page: "network_activity",
			section: ""
		}],
		[n.columnMetaTypes.DATAMINR, {
			page: "dataminr",
			section: "watchlist"
		}],
		[n.columnMetaTypes.TRENDS, {
			page: "trends",
			section: ""
		}],
		[n.columnMetaTypes.ANALYTICS, {
			page: "analytics",
			section: ""
		}],
		[n.columnMetaTypes.WHATSHAPPENING, {
			page: "whats_happening",
			section: ""
		}],
		[n.columnMetaTypes.HOME, {
			page: "home",
			section: ""
		}],
		[n.columnMetaTypes.ME, {
			page: "connect",
			section: "mentions"
		}]
	]), n.columnIconClasses = {
		TWITTER: "icon-twitter-bird",
		HASH: "icon-hash",
		CONTENT: "icon-content",
		USER: "icon-user",
		HOME: "icon-home",
		INTERACTIONS: "icon-notifications",
		ACTIVITY: "icon-activity",
		MENTIONS: "icon-mention",
		FOLLOWERS: "icon-follow",
		MESSAGES: "icon-message",
		SEARCH: "icon-search",
		LIST: "icon-list",
		TWEETS: "icon-tweets",
		FAVORITES: "icon-favorite",
		SCHEDULED: "icon-schedule",
		TRENDS: "icon-trending",
		ANALYTICS: "icon-heart",
		CUSTOMTIMELINE: "icon-custom-timeline",
		DATAMINR: "icon-dataminr",
		LIVEVIDEO: "icon-play-video",
		EVENT: "icon-magic-search",
		WHATSHAPPENING: "icon-magic-search"
	}, n.columnClasses = {
		TWITTER: "type-twitter",
		HOME: "column-type-home",
		INTERACTIONS: "column-type-interactions",
		ACTIVITY: "column-type-activity",
		MENTIONS: "column-type-mention",
		FOLLOWERS: "column-type-new-followers",
		MESSAGES: "column-type-message",
		SEARCH: "column-type-search",
		LIST: "column-type-list",
		CUSTOMTIMELINE: "column-type-customtimeline",
		TWEETS: "column-type-tweets",
		FAVORITES: "column-type-favorite",
		SCHEDULED: "column-type-scheduled",
		TRENDS: "column-type-trends",
		ANALYTICS: "column-type-analytics",
		WHATSHAPPENING: "column-type-whatshappening"
	}, n.columnMetaTypeToIconClass = {}, d.default.extendObjectWith(n.columnMetaTypeToIconClass, [
		[n.columnMetaTypes.TIMELINE, n.columnIconClasses.HOME],
		[n.columnMetaTypes.INTERACTIONS, n.columnIconClasses.INTERACTIONS],
		[n.columnMetaTypes.MENTIONS, n.columnIconClasses.MENTIONS],
		[n.columnMetaTypes.FOLLOWERS, n.columnIconClasses.FOLLOWERS],
		[n.columnMetaTypes.SEARCH, n.columnIconClasses.SEARCH],
		[n.columnMetaTypes.LIST, n.columnIconClasses.LIST],
		[n.columnMetaTypes.CUSTOMTIMELINE, n.columnIconClasses.CUSTOMTIMELINE],
		[n.columnMetaTypes.MESSAGES, n.columnIconClasses.MESSAGES],
		[n.columnMetaTypes.TRENDS, n.columnIconClasses.TRENDS],
		[n.columnMetaTypes.ANALYTICS, n.columnIconClasses.ANALYTICS],
		[n.columnMetaTypes.USERTWEETS, n.columnIconClasses.USER],
		[n.columnMetaTypes.FAVORITES, n.columnIconClasses.FAVORITES],
		[n.columnMetaTypes.ACTIVITY, n.columnIconClasses.ACTIVITY],
		[n.columnMetaTypes.HOME, n.columnIconClasses.HOME],
		[n.columnMetaTypes.ME, n.columnIconClasses.MENTIONS],
		[n.columnMetaTypes.INBOX, n.columnIconClasses.MESSAGES],
		[n.columnMetaTypes.SCHEDULED, n.columnIconClasses.SCHEDULED],
		[n.columnMetaTypes.UNKNOWN, n.columnIconClasses.TWITTER],
		[n.columnMetaTypes.DATAMINR, n.columnIconClasses.DATAMINR],
		[n.columnMetaTypes.LIVEVIDEO, n.columnIconClasses.LIVEVIDEO],
		[n.columnMetaTypes.EVENT, n.columnIconClasses.EVENT],
		[n.columnMetaTypes.WHATSHAPPENING, n.columnIconClasses.WHATSHAPPENING]
	]), n.columnMetaTypeToClass = {}, d.default.extendObjectWith(n.columnMetaTypeToClass, [
		[n.columnMetaTypes.TIMELINE, n.columnClasses.HOME],
		[n.columnMetaTypes.INTERACTIONS, n.columnClasses.INTERACTIONS],
		[n.columnMetaTypes.MENTIONS, n.columnClasses.MENTIONS],
		[n.columnMetaTypes.FOLLOWERS, n.columnClasses.FOLLOWERS],
		[n.columnMetaTypes.SEARCH, n.columnClasses.SEARCH],
		[n.columnMetaTypes.LIST, n.columnClasses.LIST],
		[n.columnMetaTypes.CUSTOMTIMELINE, n.columnClasses.CUSTOMTIMELINE],
		[n.columnMetaTypes.MESSAGES, n.columnClasses.MESSAGES],
		[n.columnMetaTypes.TRENDS, n.columnClasses.TRENDS],
		[n.columnMetaTypes.ANALYTICS, n.columnClasses.ANALYTICS],
		[n.columnMetaTypes.WHATSHAPPENING, n.columnClasses.WHATSHAPPENING],
		[n.columnMetaTypes.USERTWEETS, n.columnClasses.TWEETS],
		[n.columnMetaTypes.FAVORITES, n.columnClasses.FAVORITES],
		[n.columnMetaTypes.ACTIVITY, n.columnClasses.ACTIVITY],
		[n.columnMetaTypes.HOME, n.columnClasses.HOME],
		[n.columnMetaTypes.ME, n.columnClasses.MENTIONS],
		[n.columnMetaTypes.INBOX, n.columnClasses.MESSAGES],
		[n.columnMetaTypes.SCHEDULED, n.columnClasses.SCHEDULED],
		[n.columnMetaTypes.UNKNOWN, n.columnClasses.TWITTER]
	]), n.columnMetaTypeToTitleTemplateData = {}, d.default.extendObjectWith(n.columnMetaTypeToTitleTemplateData, [
		[n.columnMetaTypes.TIMELINE, {
			title: (0, c.default)("Home", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.INTERACTIONS, {
			title: (0, c.default)("Notifications", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.MENTIONS, {
			title: (0, c.default)("Mentions", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.FOLLOWERS, {
			title: (0, c.default)("Followers", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.SEARCH, {
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.LIST, {
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.CUSTOMTIMELINE, {
			needsUserAttribution: !0,
			editableFieldClass: "js-customtimeline-title",
			maxLength: 25
		}],
		[n.columnMetaTypes.MESSAGES, {
			title: (0, c.default)("Messages", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.TRENDS, {
			title: (0, c.default)("Trending", null, !0),
			needsUserAttribution: !1
		}],
		[n.columnMetaTypes.ANALYTICS, {
			title: (0, c.default)("Analytics", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.USERTWEETS, {
			title: (0, c.default)("User", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.FAVORITES, {
			title: (0, c.default)("Likes", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.ACTIVITY, {
			title: (0, c.default)("Activity", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.HOME, {
			title: (0, c.default)("Home", null, !0)
		}],
		[n.columnMetaTypes.ME, {
			title: (0, c.default)("Mentions", null, !0)
		}],
		[n.columnMetaTypes.INBOX, {
			title: (0, c.default)("Messages", null, !0)
		}],
		[n.columnMetaTypes.SCHEDULED, {
			title: (0, c.default)("Scheduled", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.DATAMINR, {
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.LIVEVIDEO, {
			title: (0, c.default)("Live video", null, !0),
			needsUserAttribution: !0
		}],
		[n.columnMetaTypes.EVENT, {
			title: (0, c.default)("Event", null, !0),
			needsUserAttribution: !1
		}],
		[n.columnMetaTypes.WHATSHAPPENING, {
			title: (0, c.default)("What's Happening", null, !0),
			needsUserAttribution: !1
		}],
		[n.columnMetaTypes.UNKNOWN, {
			title: (0, c.default)("Unknown Column", null, !0)
		}]
	]), n.embeddableColumnTypes = [n.columnMetaTypes.FAVORITES, n.columnMetaTypes.USERTWEETS, n.columnMetaTypes.LIST, n.columnMetaTypes.CUSTOMTIMELINE], n.noPreferencesColumnTypes = [n.columnMetaTypes.TRENDS, n.columnMetaTypes.ANALYTICS, n.columnMetaTypes.WHATSHAPPENING], n.shareableColumnTypes = [n.columnMetaTypes.CUSTOMTIMELINE, n.columnMetaTypes.SEARCH], n.viewableColumnTypes = [n.columnMetaTypes.CUSTOMTIMELINE], n.filterableColumnTypes = [n.columnMetaTypes.TIMELINE, n.columnMetaTypes.INTERACTIONS, n.columnMetaTypes.MENTIONS, n.columnMetaTypes.FOLLOWERS, n.columnMetaTypes.SEARCH, n.columnMetaTypes.LIST, n.columnMetaTypes.CUSTOMTIMELINE, n.columnMetaTypes.MESSAGES, n.columnMetaTypes.USERTWEETS, n.columnMetaTypes.FAVORITES, n.columnMetaTypes.ACTIVITY, n.columnMetaTypes.HOME, n.columnMetaTypes.ME, n.columnMetaTypes.INBOX, n.columnMetaTypes.SCHEDULED, n.columnMetaTypes.DATAMINR, n.columnMetaTypes.LIVEVIDEO, n.columnMetaTypes.EVENT, n.columnMetaTypes.TRENDS], n.clearableColumnTypes = [n.columnMetaTypes.TIMELINE, n.columnMetaTypes.INTERACTIONS, n.columnMetaTypes.MENTIONS, n.columnMetaTypes.FOLLOWERS, n.columnMetaTypes.SEARCH, n.columnMetaTypes.LIST, n.columnMetaTypes.MESSAGES, n.columnMetaTypes.USERTWEETS, n.columnMetaTypes.FAVORITES, n.columnMetaTypes.ACTIVITY, n.columnMetaTypes.HOME, n.columnMetaTypes.ME, n.columnMetaTypes.INBOX, n.columnMetaTypes.DATAMINR, n.columnMetaTypes.LIVEVIDEO, n.columnMetaTypes.EVENT], n.actionColumnTypes = [n.columnMetaTypes.INTERACTIONS, n.columnMetaTypes.MENTIONS, n.columnMetaTypes.ACTIVITY, n.columnMetaTypes.FOLLOWERS], n.notificationColumnTypes = new a.default([n.columnMetaTypes.INTERACTIONS, n.columnMetaTypes.MENTIONS, n.columnMetaTypes.FOLLOWERS, n.columnMetaTypes.ME]), n.notificationFeedTypes = new a.default([n.feedTypes.INTERACTIONS, n.feedTypes.MENTIONS]), n.singleActionColumnTypes = [n.columnMetaTypes.MENTIONS, n.columnMetaTypes.FOLLOWERS], n.mediaPreviewableColumnTypes = [n.columnMetaTypes.TIMELINE, n.columnMetaTypes.INTERACTIONS, n.columnMetaTypes.MENTIONS, n.columnMetaTypes.SEARCH, n.columnMetaTypes.LIST, n.columnMetaTypes.CUSTOMTIMELINE, n.columnMetaTypes.USERTWEETS, n.columnMetaTypes.FAVORITES, n.columnMetaTypes.ACTIVITY, n.columnMetaTypes.HOME, n.columnMetaTypes.ME, n.columnMetaTypes.DATAMINR, n.columnMetaTypes.LIVEVIDEO, n.columnMetaTypes.EVENT], n.combinedColumnTypes = {}, d.default.extendObjectWith(n.combinedColumnTypes, [
		[n.columnMetaTypes.ME, !0],
		[n.columnMetaTypes.INBOX, !0],
		[n.columnMetaTypes.SCHEDULED, !0]
	]), n.isTopHalfOfTweet = function(e) {
		var t = e.event.originalEvent.pageY - e.parentOffset.top,
			i = e.$streamItem.height(),
			n = e.$streamItem.find("#" + e.dropIndicatorId),
			s = n.length,
			r = i - (s ? n.height() : 0),
			a = s ? .08 * r : 0;
		return t + a < r / 2 || !(t - a < r / 2) && void 0
	}, n.getDropIndicatorText = function(e, t) {
		var i = this.getDropActionType(e, t);
		return (0, c.default)({
			add: "Add here",
			copy: "Copy here",
			move: "Move here"
		} [i])
	}, n.getDropActionType = function(e, t) {
		return e.attr("data-column") === t ? "move" : this.isColumnCustomTimeline(e) ? "copy" : "add"
	}, n.isColumnCustomTimeline = function(e) {
		var t = e.attr("data-column"),
			i = TD.storage.columnController.get(t);
		return "col_" + (i ? TD.storage.feedController.get(i.getFeedKeys()).getType() : null) === n.columnMetaTypes.CUSTOMTIMELINE
	}, n.getColumnType = function(e) {
		var t = e.model.getType(),
			i = e.getFeeds();
		switch (t) {
			case n.storageColumnTypes.HOME:
				return n.columnMetaTypes.HOME;
			case n.storageColumnTypes.ME:
				return n.columnMetaTypes.ME;
			case n.storageColumnTypes.INBOX:
				return n.columnMetaTypes.INBOX;
			case n.storageColumnTypes.SCHEDULED:
				return n.columnMetaTypes.SCHEDULED;
			case n.simpleColumnTypes.TRENDS:
				return n.columnMetaTypes.TRENDS;
			case n.simpleColumnTypes.ANALYTICS:
				return n.columnMetaTypes.ANALYTICS;
			case n.simpleColumnTypes.WHATSHAPPENING:
				return n.columnMetaTypes.WHATSHAPPENING;
			default:
				return 1 === i.length ? n._inferColumnTypeFromFeed(i[0], e) : n.columnMetaTypes.UNKNOWN
		}
	}, n.getBaseQuery = function(e) {
		var t = n.isSearchColumn(e) || n.isEventColumn(e),
			i = e.getFeeds();
		if (t && i.length) {
			var s = i[0].getMetadata(),
				r = (0, l.default)(s, "baseQuery"),
				a = (0, l.default)(s, "term");
			return r || a
		}
	}, n.getOwnList = function(e) {
		var t = e.getFeeds().find(function(e) {
			var t = "list" === e.getType(),
				i = e.getMetadata();
			return t && i
		});
		if (t) {
			var i = t.getMetadata();
			return TD.cache.lists.find(i.listId, i.screenName, i.slug, !0)
		}
	}, n.isFilterable = function(e) {
		return n.filterableColumnTypes.includes(n.getColumnType(e))
	}, n.isClearable = function(e) {
		return n.clearableColumnTypes.includes(n.getColumnType(e))
	}, n.isShareable = function(e) {
		return n.shareableColumnTypes.includes(n.getColumnType(e))
	}, n.isEmbeddable = function(e) {
		var t = n.getColumnType(e);
		if ("col_list" === t) {
			var i = n.getOwnList(e);
			if (!i || i.isPrivate) return !1
		}
		return n.embeddableColumnTypes.includes(t)
	}, n.isViewable = function(e) {
		return n.viewableColumnTypes.includes(n.getColumnType(e))
	}, n.isCustomTimeline = function(e) {
		return n.getColumnType(e) === n.columnMetaTypes.CUSTOMTIMELINE
	}, n.isDataminr = function(e) {
		return n.getColumnType(e) === n.columnMetaTypes.DATAMINR
	}, n.isActivityColumn = function(e) {
		return n.getColumnType(e) === n.columnMetaTypes.ACTIVITY
	}, n.isActionsColumn = function(e) {
		return n.actionColumnTypes.includes(n.getColumnType(e))
	}, n.hasPreferences = function(e) {
		return !n.noPreferencesColumnTypes.includes(n.getColumnType(e))
	}, n.isMessageColumn = function(e) {
		var t = n.getColumnType(e);
		return t === n.columnMetaTypes.MESSAGES || t === n.columnMetaTypes.INBOX
	}, n.isEventColumn = function(e) {
		return n.getColumnType(e) === n.columnMetaTypes.EVENT
	}, n.isSimpleColumn = function(e) {
		return (0, r.default)(n.simpleColumnTypes).includes(e)
	}, n.isSearchColumn = function(e) {
		return n.getColumnType(e) === n.columnMetaTypes.SEARCH
	}, n.isTouchColumnOptions = function() {
		return Boolean(d.default.isTouchDevice() && TD.decider.get("touchdeck_column_options_v2"))
	}, n.isOwnCustomTimeline = function(e) {
		return !!e.getFeeds().length && e.getFeedsByType(n.feedTypes.CUSTOMTIMELINE).some(function(e) {
			var t = e.getMetadata();
			return TD.storage.Account.generateKeyFor("twitter", t.ownerId) === e.getAccountKey()
		})
	}, n.canFilterByUsersIFollow = function(e) {
		return ["col_interactions", "col_mentions", "col_followers"].includes(n.getColumnType(e))
	}, n._twitterFeedTypeToColumnMetaType = {}, d.default.extendObjectWith(n._twitterFeedTypeToColumnMetaType, [
		[n.feedTypes.HOME, n.columnMetaTypes.TIMELINE],
		[n.feedTypes.USERTIMELINE, n.columnMetaTypes.TIMELINE],
		[n.feedTypes.INTERACTIONS, n.columnMetaTypes.INTERACTIONS],
		[n.feedTypes.MENTIONS, n.columnMetaTypes.MENTIONS],
		[n.feedTypes.SEARCH, n.columnMetaTypes.SEARCH],
		[n.feedTypes.LIST, n.columnMetaTypes.LIST],
		[n.feedTypes.CUSTOMTIMELINE, n.columnMetaTypes.CUSTOMTIMELINE],
		[n.feedTypes.DIRECT, n.columnMetaTypes.MESSAGES],
		[n.feedTypes.USERTWEETS, n.columnMetaTypes.USERTWEETS],
		[n.feedTypes.FAVORITES, n.columnMetaTypes.FAVORITES],
		[n.feedTypes.NETWORKACTIVITY, n.columnMetaTypes.ACTIVITY],
		[n.feedTypes.DATAMINR, n.columnMetaTypes.DATAMINR],
		[n.feedTypes.LIVEVIDEO, n.columnMetaTypes.LIVEVIDEO],
		[n.feedTypes.EVENT, n.columnMetaTypes.EVENT]
	]), n._inferColumnTypeFromFeed = function(e, t) {
		var i, s, r = e.getService(),
			a = e.getType(),
			o = e.getMetadata(),
			l = n.columnMetaTypes.UNKNOWN;
		if ("twitter" === r) switch (l = n._twitterFeedTypeToColumnMetaType[a] || l, a) {
			case n.feedTypes.SEARCH:
				var c = twttrTxt.extractMentionsWithIndices(o.term);
				if (1 === c.length) {
					var u = c[0];
					0 === u.indices[0] && u.indices[1] === o.term.length && (l = n.columnMetaTypes.MENTIONS)
				}
				break;
			case n.feedTypes.INTERACTIONS:
				if ((i = t.model.getFilters()) && 1 === (s = new TD.vo.ActionFilter(i.action)).getActiveFacetCount(l)) {
					var d = s.toJSONObject();
					d.showMentions ? l = n.columnMetaTypes.MENTIONS : d.showFollowers && (l = n.columnMetaTypes.FOLLOWERS)
				}
		}
		return l
	}, n.getColumnIconClassByColumn = function(e) {
		var t = n.getColumnType(e);
		return n.columnMetaTypeToIconClass[t]
	}, n.getColumnClassByColumn = function(e) {
		var t = e.model.getType();
		return n.columnMetaTypeToClass[t]
	}, n.getColumnHeaderTitleHTML = function(e) {
		var t = n.getColumnTitleArgs(e);
		return null === t ? d.default.escape(e.model.getTitle()) : n.isSearchColumn(e) ? TD.ui.template.render("column_title_editable", t) : TD.ui.template.render("column_title", (0, s.default)({}, t, {
			emojifiedTitle: d.default.cleanWithEmoji(t.title)
		}))
	}, n.getColumnTitleHTML = function(e) {
		var t = n.getColumnTitleArgs(e);
		return null === t ? d.default.escape(e.model.getTitle()) : TD.ui.template.render("column_title", (0, s.default)({}, t, {
			emojifiedTitle: d.default.cleanWithEmoji(t.title)
		}))
	}, n.getColumnTitleArgs = function(e) {
		var t, i, s, r, a, l, u, h, m, f, p = n.getColumnType(e),
			g = e.getFeeds(),
			v = {},
			T = n.columnMetaTypeToTitleTemplateData[p];
		if (p === n.columnMetaTypes.FAVORITES && (T.title = (0, c.default)("Likes")), p === n.columnMetaTypes.UNKNOWN && e.model.getTitle()) return null;
		if ((0, o.default)(n.simpleColumnTypes).some(function(e) {
				return n.columnMetaTypes[e] === p
			})) {
			if (v.title = T.title, T.needsUserAttribution) {
				var w = TD.storage.accountController.getDefault().getUsername();
				v.needsUserAttribution = T.needsUserAttribution, v.screenName = d.default.atMentionify(w)
			}
			return v
		}
		v.editableFieldClass = T.editableFieldClass, v.maxLength = T.maxLength;
		for (var b = 0; b < g.length; b++) {
			if (i = (t = g[b]).getType(), s = t.getMetadata()) switch (i) {
				case n.feedTypes.LIST:
					if (l = TD.cache.names.getScreenName(s.ownerId), !(m = TD.cache.names.getListName(s.listId, s.ownerId))) return null;
					v.title = m;
					break;
				case n.feedTypes.CUSTOMTIMELINE:
					l = TD.cache.names.getScreenName(s.ownerId), u = TD.storage.accountController.get(t.getAccountKey()).getProfileImageURL(), f = TD.cache.names.getCustomTimelineName(s.id), v.title = f;
					break;
				case n.feedTypes.SEARCH:
					if (u = TD.storage.accountController.get(t.getAccountKey()).getProfileImageURL(), p === n.columnMetaTypes.MENTIONS ? l = s.term : h = s.baseQuery ? s.baseQuery : s.term, !h) return null;
					v.title = h;
					break;
				case n.feedTypes.DATAMINR:
					v.title = s.watchlist.name;
					break;
				case n.feedTypes.LIVEVIDEO:
				case n.feedTypes.EVENT:
					v.title = s.title;
					break;
				default:
					if (s.id) {
						if (!(l = TD.cache.names.getScreenName(s.id))) return null
					} else p === n.columnMetaTypes.SCHEDULED && (l = (0, c.default)("All accounts"));
					v.title = T.title
			}
			l || "tweetdeck" !== (a = (r = TD.storage.accountController.get(t.getAccountKey())).getType()) && (l = r.getUsername(), "twitter" === a && (l = d.default.atMentionify(l)))
		}
		if (T.needsUserAttribution) {
			if (!l) return null;
			v.needsUserAttribution = T.needsUserAttribution, v.screenName = l, v.profileImageURL = u
		}
		return v
	}, n.inferFeedTypeFromActionFilter = function(e) {
		var t = this.feedTypes.INTERACTIONS,
			i = e.getActiveFacetCount(n.columnMetaTypes.INTERACTIONS),
			s = e.toJSONObject();
		return 1 === i && s.showMentions && (t = this.feedTypes.MENTIONS), t
	}, n.getColumnFromElement = function(e) {
		var t = (0, u.default)(e).closest("[data-column]").attr("data-column");
		return TD.controller.columnManager.get(t)
	}, n.getColumnScrollContainerByKey = function(e) {
		var t = this.getColumnElementByKey(e),
			i = t.find(".js-detail-container");
		return i.length > 0 ? i : t.find(".js-column-scroller")
	}, n.getColumnElementByKey = function(e) {
		return (0, u.default)(".js-app-columns .js-column").filter('[data-column="' + e + '"]')
	}, n.getKeyForColumnAtIndex = function(e) {
		return (0, u.default)(".js-app-columns .js-column").eq(e).attr("data-column")
	}, n.getKeyForLastColumn = function() {
		return (0, u.default)(".js-app-columns .js-column").last().attr("data-column")
	}, n)
}, , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = f(i(620)),
		s = f(i(9)),
		r = f(i(162)),
		a = f(i(13)),
		o = f(i(0)),
		l = f(i(109)),
		c = f(i(58)),
		u = f(i(1844)),
		d = f(i(1845)),
		h = f(i(21)),
		m = i(468);

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = TD.controller.stats = function() {
		var e, t, i = {},
			f = (e = {}, (0, r.default)(e, h.default.columnMetaTypes.MENTIONS, {
				legacyId: 2,
				namespace: {
					section: "twitter",
					component: "mention"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.FOLLOWERS, {
				legacyId: 3,
				namespace: {
					section: "twitter",
					component: "followers"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.TIMELINE, {
				legacyId: 3,
				namespace: {
					section: "twitter",
					component: "home"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.SEARCH, {
				legacyId: 4,
				namespace: {
					section: "twitter",
					component: "search"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.MESSAGES, {
				legacyId: 5,
				namespace: {
					section: "twitter",
					component: "inbox"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.FAVORITES, {
				legacyId: 8,
				namespace: {
					section: "twitter",
					component: "favorites"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.LIST, {
				legacyId: 22,
				namespace: {
					section: "twitter",
					component: "list"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.SCHEDULED, {
				legacyId: 28,
				namespace: {
					section: "tweetdeck",
					component: "scheduledupdates"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.USERTWEETS, {
				legacyId: 32,
				namespace: {
					section: "twitter",
					component: "usertweets"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.USERTIMELINE, {
				legacyId: 33,
				namespace: {
					section: "twitter",
					component: "usertimeline"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.HOME, {
				legacyId: 34,
				namespace: {
					section: "tweetdeck",
					component: "home"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.ME, {
				legacyId: 35,
				namespace: {
					section: "tweetdeck",
					component: "me"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.INBOX, {
				legacyId: 36,
				namespace: {
					section: "tweetdeck",
					component: "inbox"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.INTERACTIONS, {
				legacyId: 37,
				namespace: {
					section: "twitter",
					component: "interactions"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.ACTIVITY, {
				legacyId: 38,
				namespace: {
					section: "twitter",
					component: "networkactivity"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.CUSTOMTIMELINE, {
				legacyId: 39,
				namespace: {
					section: "twitter",
					component: "customtimeline"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.DATAMINR, {
				legacyId: 39,
				namespace: {
					section: "dataminr",
					component: "watchlist"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.LIVEVIDEO, {
				namespace: {
					section: "twitter",
					component: "livevideo"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.TRENDS, {
				namespace: {
					section: "twitter",
					component: "trends"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.ANALYTICS, {
				namespace: {
					section: "twitter",
					component: "analytics"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.WHATSHAPPENING, {
				namespace: {
					section: "twitter",
					component: "whatshapening"
				}
			}), (0, r.default)(e, h.default.columnMetaTypes.EVENT, {
				namespace: {
					section: "twitter",
					component: "event"
				}
			}), e);
		i.columnNamespaces = f;
		var p, g;
		i.SCRIBE_CLIENT = "deck";
		var v = {
				config: {},
				impressions: []
			},
			T = [],
			w = (0, o.default)(document),
			b = function(e, t) {
				if (i.scribeClientEvent && i.scribeGuestId) {
					if (e = e || {}, t = t || {}, e.client = i.SCRIBE_CLIENT, t.user_agent = p, t.guest_id = i.scribeGuestId, !t.user_id) {
						var n = TD.storage.store.getTwitterLoginAccount();
						n && (t.user_id = n.getUserID())
					}
					i.scribeClientEvent.scribe(e, t), w.trigger("scribing", {
						terms: e,
						data: t
					}), TD.config.scribe_debug_level > 0 && console.log((0, m.namespaceStringFromTerms)(e)), TD.config.scribe_debug_level > 1 && console.log("Scribing:", e, t)
				} else T.push([e, t])
			};

		function y(e, t, i) {
			var s = f[e],
				r = {
					page: "column",
					section: "unknown",
					component: "unknown",
					action: t
				};
			i && (r.element = i), s && s.namespace ? (0, n.default)(r, s.namespace) : console.log("Tracking: Unknown column type", e), b(r)
		}

		function _(e) {
			var t = {
					page: (e = e || {}).page || "compose",
					section: e.section,
					component: e.component,
					action: e.action
				},
				i = {};
			e.twitterId && (i.contributee_id = e.twitterId), b(t, i)
		}
		return i.generateScribeUserAgent = function(e, t, i, n) {
			var s = {
				client_name: e,
				client_version: t,
				platform: i,
				platform_version: n
			};
			return TD.ui.template.toHtml("Twitter-TweetDeck-{{{client_name}}}/{{{client_version}}} {{{platform}}}/{{{platform_version}}}", s)
		}, i.generateScribeGuestId = function(e, t) {
			var i = "tweetdeck:" + e + ":" + t,
				n = TD.core.sha1(i);
			return parseInt(n.substr(0, 13), 16)
		}, i.flushScribeQueue = function() {
			g && g.flush(g.getBuffer())
		}, i.updateTransportOptions = function(e) {
			g ? g.updateOptions(e) : TD.sync.util.warn("scribeTransport options not updated as controller.stats not initialised")
		}, i.init = function() {
			var e = TD.util.getAppEnv();
			t = TD.config.client_name + "-" + e, p = i.generateScribeUserAgent(t, TD.version, e, "1");
			g = new u.default({
				bufferEvents: !0,
				useAjax: !1,
				flushOnUnload: !0
			}), i.scribeClientEvent = new d.default(g), (0, c.default)().subscribe(i.setExperiments.bind(i)), TD.controller.scheduler.schedulePeriodicTask(900, function() {
				i.impression(), i.twitterSession(), TD.util.metric("ping");
				var e = TD.storage.store.getTwitterLoginAccount();
				e ? e.isCookieUser() ? TD.util.metric("ping:session:cookie") : TD.util.metric("ping:session:tweetdeck") : TD.util.metric("ping:session:none")
			}, !0), TD.controller.scheduler.schedulePeriodicTask(60, TD.controller.stats.flushScribeQueue), (0, o.default)(document).on("scribeEvent", function(e, t) {
				this.generic(t.terms, t.data)
			}.bind(this)), TD.config.scribe_debug_level > 0 && console.log("Logging scribe events! %cclient:page:section:component:element:action", "font-weight: bold;")
		}, i.setUid = function(e) {
			if (e, i.scribeGuestId = "", e) {
				for (i.scribeGuestId = i.generateScribeGuestId(p, TD.core.sha1(e)); T.length;) {
					var t = T.shift();
					b(t[0], t[1])
				}
				i.impression()
			}
		}, i.generic = function(e, t) {
			b(e, t)
		}, i.setExperiments = function(e) {
			v.config = e.config || {}, v.impressions = e.impressions || []
		}, i.getExperimentBucket = function(e) {
			return (0, a.default)(v, ["config", e, "value"], "")
		}, i.isInExperimentBucket = function(e, t) {
			return i.getExperimentBucket(e) === t
		}, i.experimentImpression = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
			t = t || this.getExperimentBucket(e);
			var i = v.impressions.find(function(i) {
				var n = i.key === e,
					s = i.bucket === t;
				return n && s
			});
			if (i) {
				var n = {
						page: "ddg",
						section: i.key,
						component: "",
						element: "",
						action: "experiment"
					},
					s = {
						experiment_key: i.key,
						bucket: i.bucket,
						version: i.version
					};
				b(n, s)
			}
		}, i.checkNamespace = function(e, t) {
			if (-1 === t.indexOf(e)) throw new Error("value must be in " + t)
		}, i.impression = function() {
			var e = function() {
				var e, t = {};
				try {
					e = TD.storage.accountController.getPreferredAccount("twitter")
				} catch (e) {}
				return e && (t.tw = e.getUserID()), t
			}();
			e.interval = "900", e.is_touch_device = !1, TD.util.isTouchDevice() && (e.is_touch_device = !0), b({
				action: "impression",
				page: "main"
			}, e)
		}, i.twitterSession = function() {
			if ("web" === TD.util.getAppEnv()) {
				var e, t = TD.storage.store.getTwitterLoginAccount();
				if (t) {
					var i = TD.util.getTwitterCookieUserId();
					e = i ? i === t.getUserID() ? "same" : "different" : "none", b({
						page: "accounts",
						section: "twitter_session",
						action: e
					})
				}
			}
		}, i.heartbeat = function(e) {
			b({
				page: "main",
				action: "heartbeat"
			}, {
				user_id: e
			})
		}, i.scribeChirpAction = function(e) {
			var t = e.action,
				i = e.columnType,
				n = e.userId,
				r = (0, a.default)(f, [i, "namespace"], null),
				o = (0, s.default)({
					page: r ? "column" : ""
				}, r, {
					element: t,
					action: "click"
				});
			b(o, {
				contributee_id: n
			})
		}, i.like = function(e, t) {
			var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
				n = (0, s.default)({
					page: "column",
					section: "tweet",
					action: "like"
				}, i);
			b(n, {
				items: [e],
				contributee_id: t
			})
		}, i.unlike = function(e, t) {
			var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
				n = (0, s.default)({
					page: "column",
					section: "tweet",
					action: "unlike"
				}, i);
			b(n, {
				items: [e],
				contributee_id: t
			})
		}, i.retweet = function(e, t) {
			b({
				page: "column",
				section: "tweet",
				action: "retweet"
			}, {
				items: [e],
				contributee_id: t
			})
		}, i.embedTweetDialogOpen = function(e) {
			var t = {};
			t.twid = e, b({
				page: "main",
				section: "embed_tweet_dialog",
				action: "open"
			}, t)
		}, i.translate = function(e, t, i, n, s) {
			var r = {};
			r.oid = e, r.twid = t, r.tw = i, r.dest_lang = n, r.src_lang = s, b({
				page: "column",
				section: "tweet",
				action: "translate"
			}, r)
		}, i.reportUser = function(e, t) {
			b({
				page: "column",
				section: "tweet",
				component: "report_user",
				element: t || "",
				action: e
			})
		}, i.reportUserAbusive = function(e, t) {
			b({
				page: "column",
				section: "tweet",
				component: "report_user_abusive",
				element: t || "",
				action: e
			})
		}, i.reportDM = function(e) {
			b({
				page: "column",
				section: "tweet",
				component: "report_message",
				element: "",
				action: e
			})
		}, i.sharedAccountWarning = function(e) {
			b({
				page: "main",
				section: "shared_account_warning",
				action: e
			})
		}, i.addColumn = function(e) {
			y(e, "add")
		}, i.removeColumn = function(e) {
			y(e, "remove")
		}, i.editScheduledTweet = function() {
			b({
				page: "main",
				section: "compose",
				element: "tweet",
				action: "edit"
			})
		}, i.deleteScheduledTweet = function() {
			b({
				page: "main",
				section: "compose",
				element: "tweet",
				action: "delete"
			})
		}, i.postTweet = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
			_({
				action: e.isScheduled ? "schedule_tweet" : "send_tweet",
				twitterId: e.twitterId
			})
		}, i.postReply = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
			_({
				action: e.isScheduled ? "schedule_reply" : "send_reply",
				component: e.inline ? "inline_compose" : "docked_compose",
				twitterId: e.twitterId
			})
		}, i.composeFromContextMenu = function(e) {
			b({
				page: "compose",
				component: "docked_compose",
				element: "chrome_context_menu",
				action: e
			})
		}, i.postMessage = function(e) {
			var t = {
				action: e.isGroupDm ? "send_group_dm" : "send_dm",
				twitterId: e.twitterId,
				withImage: e.withImage,
				component: "docked_compose"
			};
			e.isReplyBar && (t.page = "main", t.section = "messages", t.component = "reply_bar"), _(t)
		}, i.quoteTweet = function() {
			b({
				page: "main",
				section: "tweet",
				element: "tweet",
				action: "quote"
			})
		}, i.discardQuoteTweet = function() {
			b({
				page: "main",
				section: "compose",
				element: "tweet",
				action: "discard_quote_tweet"
			})
		}, i.shareTweetViaDM = function() {
			b({
				page: "main",
				section: "tweet",
				element: "send_tweet_dm",
				action: "click"
			})
		}, i.sharedTweetDM = function() {
			b({
				page: "main",
				section: "messages",
				element: "shared_tweet_dm",
				action: "click"
			})
		}, i.composeClearReply = function() {
			b({
				page: "compose",
				action: "clear_reply"
			})
		}, i.composeStackReply = function() {
			b({
				page: "compose",
				action: "stack_reply"
			})
		}, i.composePopFromInline = function() {
			b({
				page: "compose",
				component: "inline_compose",
				element: "pop_inline_to_docked",
				action: "click"
			})
		}, i.messageBannerImpression = function(e) {
			b({
				page: "main",
				section: "message_banner",
				action: "impression"
			}, {
				message_id: e
			})
		}, i.messageBannerDismiss = function(e) {
			b({
				page: "main",
				section: "message_banner",
				action: "dismiss"
			}, {
				message_id: e
			})
		}, i.messageBannerClick = function(e, t) {
			b({
				page: "main",
				section: "message_banner",
				action: "click"
			}, {
				message_id: e,
				button_id: t
			})
		}, i.searchboxFocus = function() {
			b({
				page: "main",
				component: "search_box",
				action: "focus_field"
			})
		}, i.searchboxPerformSearch = function(e) {
			b({
				page: "main",
				component: "search_box",
				action: "search"
			}, {
				query: e
			})
		}, i.typeaheadItemSelected = function(e, t, i) {
			b({
				page: "main",
				component: "search_box",
				element: "typeahead",
				action: "search"
			}, {
				query: e,
				type: t,
				index: i
			})
		}, i.typeaheadRecentItemSelected = function(e, t, i) {
			b({
				page: "main",
				component: "search_box",
				element: "recent",
				action: "search"
			}, {
				query: e,
				type: t,
				index: i
			})
		}, i.viewedTweetSocialProof = function(e) {
			var t = {
				page: "column",
				section: "social_proof",
				component: e,
				action: "impression"
			};
			switch (e) {
				case "retweeters":
					t.component = "retweeted_by";
					break;
				case "favoriters":
					t.component = "favorited_by";
					break;
				case "repliers":
					t.component = "replied_by";
					break;
				default:
					throw new Error("Social proof type “" + e + "” not recognised")
			}
			b(t)
		}, i.setting = function(e, t) {
			var i = {
				page: "settings",
				section: e
			};
			"boolean" == typeof t ? i.action = t ? "on" : "off" : (i.component = {
				condensed: "narrow",
				"full-size": "wide"
			} [t] || t, i.action = "select"), b(i)
		}, i.defaultAccountSelected = function() {
			b({
				page: "settings",
				section: "default_account",
				action: "select"
			})
		}, i.apiErrorResponse = function(e, t, i) {
			var n = {
				status_code: e
			};
			TD.util.random(0, 99) < 10 && (t && (n.event_info = t), i && (n.url = i), b({
				page: "api",
				action: "request"
			}, n))
		}, i.advancedSearchSettings = function(e, t, i, n) {
			var s = {
					section: {},
					component: {
						action: "interactions"
					},
					element: {
						written_in: "language"
					}
				},
				r = {
					page: "main",
					section: s.section[e] || e,
					component: s.component[t] || t,
					element: s.element[i] || i,
					action: "change"
				};
			b(r, {
				value: n
			})
		}, i.columnHeaderSearchUpdate = function(e) {
			b({
				page: "main",
				section: "column_header",
				component: "content",
				element: "matching",
				action: "change"
			}, {
				value: e
			})
		}, i.actionFilterError = function() {
			b({
				page: "main",
				section: "column_options",
				component: "interactions",
				action: "validation_error"
			}, {
				error: "No interaction types selected"
			})
		}, i.columnActionClick = function(e, t) {
			var i = {
				page: "main",
				section: "column_options",
				element: e,
				action: "click"
			};
			if (t && f[t.type]) {
				var n = f[t.type].namespace.component;
				n && (i.component = n)
			}
			b(i, t = t || {})
		}, i.conversationDetailViewImpression = function(e) {
			b({
				page: "main",
				section: "messages",
				component: "conversation",
				element: e,
				action: "impression"
			})
		}, i.messagesColumnHeaderClick = function(e) {
			b({
				page: "main",
				section: "messages",
				component: "header",
				element: e,
				action: "click"
			})
		}, i.messageAttachmentClick = function(e) {
			b({
				page: "main",
				section: "messages",
				component: "message",
				element: e,
				action: "click"
			})
		}, i.navbarListsClick = function() {
			b({
				page: "main",
				section: "navbar",
				element: "lists",
				action: "click"
			})
		}, i.navbarAddColumnClick = function() {
			b({
				page: "main",
				section: "navbar",
				element: "add_column",
				action: "click"
			})
		}, i.navbarPageLeft = function() {
			b({
				page: "main",
				section: "navbar",
				component: "column_nav",
				element: "page_left",
				action: "click"
			})
		}, i.navbarReorderColumns = function() {
			b({
				page: "main",
				section: "navbar",
				component: "column_nav",
				action: "reorder"
			})
		}, i.navbarJumpToColumn = function() {
			b({
				page: "main",
				section: "navbar",
				component: "column_nav",
				element: "column_item",
				action: "click"
			})
		}, i.navbarPageRight = function() {
			b({
				page: "main",
				section: "navbar",
				component: "column_nav",
				element: "page_right",
				action: "click"
			})
		}, i.navbarSettingsClick = function() {
			b({
				page: "main",
				section: "navbar",
				element: "settings",
				action: "click"
			})
		}, i.navbarMigrate = function(e) {
			var t = ["impression", "click"];
			if (-1 === t.indexOf(e)) throw new Error("action must be in " + t);
			b({
				page: "main",
				section: "navbar",
				element: "migrate",
				action: e
			})
		}, i.navbarComposeClick = function() {
			b({
				page: "main",
				section: "navbar",
				element: "compose",
				action: "click"
			})
		}, i.tweetStreamImpression = function(e, t, i) {
			if (!(t.length < 1)) {
				var s = {
					component: "stream",
					action: "results"
				};
				i && (s.element = "linger");
				var r = {
						items: t
					},
					a = h.default.columnMetaTypeToScribeNamespace[e];
				a && (s = (0, n.default)(s, a), b(s, r))
			}
		}, i.tweetImpression = function(e) {
			b({
				page: "tweet",
				component: "tweet",
				action: "impression"
			}, {
				items: [e]
			})
		}, i.mediaImpression = function(e) {
			b({
				page: "tweet",
				component: "gallery",
				element: "photo",
				action: "impression"
			}, {
				items: [e]
			})
		}, i.ownTweetDetailImpression = function(e) {
			b({
				page: "main",
				section: "detail",
				component: "own_tweet",
				action: "impression"
			}, {
				items: [e]
			})
		}, i.appWokenFromSleep = function(e) {
			b({
				page: "main",
				action: "wake"
			}, {
				custom_json_payload: {
					msSinceSleep: e
				}
			})
		}, i.purgedFeed = function(e) {
			b({
				page: "main",
				section: "feed",
				action: "remove"
			}, e)
		}, i.newListClick = function() {
			b({
				page: "add_column",
				component: "list",
				element: "create_list_button",
				action: "click"
			})
		}, i.listCreated = function() {
			b({
				page: "main",
				component: "list",
				action: "create"
			})
		}, i.listUpdated = function() {
			b({
				page: "main",
				component: "list",
				action: "update"
			})
		}, i.listDeleted = function() {
			b({
				page: "main",
				component: "list",
				action: "delete"
			})
		}, i.newCustomtimelineClick = function() {
			b({
				page: "add_column",
				component: "customtimeline",
				element: "create_customtimeline_button",
				action: "click"
			})
		}, i.customTimelineCreated = function() {
			b({
				page: "main",
				component: "customtimeline",
				action: "create"
			})
		}, i.customTimelineUpdated = function() {
			b({
				page: "main",
				component: "customtimeline",
				action: "update"
			})
		}, i.customTimelineDeleted = function() {
			b({
				page: "main",
				component: "customtimeline",
				action: "delete"
			})
		}, i.tweetAddedOrMovedToCustomTimeline = function(e) {
			b({
				page: "main",
				component: "customtimeline",
				element: "tweet",
				action: e
			})
		}, i.tweetRemovedFromCustomTimeline = function() {
			b({
				page: "main",
				component: "customtimeline",
				element: "tweet",
				action: "remove"
			})
		}, i.migrateAppflow = function(e, t) {
			i.checkNamespace(e, ["migrate_education", "migrate_risk", "migrate_risk_agreement", "migrate_teams", "migrate_team_instructions", "migrate_team_member"]), i.checkNamespace(t, ["impression", "previous", "cancel", "next", "ok"]), b({
				page: "startflow",
				section: e,
				action: t
			})
		}, i.migrateStartflow = function(e, t, n) {
			i.checkNamespace(e, ["migrate_tweetdeck_login", "migrate_twitter_login", "migrate_final_confirmation", "migrate_progress", "migrate_progress_success", "migrate_progress_team_setup"]), i.checkNamespace(t, ["impression", "previous", "cancel", "next", "restart"]), b({
				page: "startflow",
				section: e,
				element: n ? "error" : void 0,
				action: t
			})
		}, i.dataminrAuthRequest = function() {
			b({
				page: "api",
				section: "dataminr",
				element: "authorize",
				action: "request"
			})
		}, i.dataminrApiRequest = function(e) {
			i.checkNamespace(e, ["alerts", "watchlists"]), b({
				page: "api",
				section: "dataminr",
				element: e,
				action: "request"
			})
		}, i.dataminrClickImpression = function(e, t) {
			i.checkNamespace(t, ["show_followers", "show_following", "website", "map", "dataminr_settings", "user_media", "dataminr", "search", "search_any", "search_all", "hashtag"]), i.checkNamespace(e, ["dataminr_alert", "dataminr_alert_detail"]), b({
				page: "main",
				section: e,
				element: t,
				action: "click"
			})
		}, i.loginError = function(e) {
			b({
				page: "login",
				action: "login_error"
			}, {
				message: e
			})
		}, i.getElementNamespace = function(e) {
			var t = (0, o.default)(e),
				n = h.default.getColumnFromElement(t),
				r = n ? h.default.getColumnType(n) : "",
				l = (0, a.default)(i.columnNamespaces, [r, "namespace"], null);
			return l ? (0, s.default)({
				page: "column"
			}, l) : t.closest(".js-user-results").length > 0 ? {
				page: "main",
				section: "search_results",
				component: "users"
			} : void 0
		}, i.linkClick = function(e, t) {
			var n = "twitter.com" === (0, l.default)(e).domain().toLowerCase();
			if (b({
					page: "main",
					section: "link",
					component: n ? "twitter" : void 0,
					action: "click"
				}), TD.util.extractTweetIdFromPermalink(e)) {
				var r = i.getElementNamespace(t);
				b((0, s.default)({}, r, {
					element: "permalink",
					action: "click"
				}))
			}
		}, i
	}()
}, , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.nativeVideoPlayer$ = t.altTextMaxLength$ = t.useRwebComposer$ = t.streamSearchesWithNegation$ = t.showReleaseNotesLinkEnabled$ = t.horizonWebCardsEnabled$ = t.horizonWebCardsStatic$ = t.activityStreaming$ = t.activityValuePolling$ = t.trendsAndBeta$ = t.betaAndInsights$ = t.tweetdeckBeta$ = t.premiumAnalytics$ = t.gdprUpdates$ = t.scheduledTweetEphemeral$ = t.gdprConsent$ = t.twitterTextEmojiDiscounting$ = t.unifiedImageVariants$ = t.locale$ = t.devel$ = t.dogfood$ = t.subscriptionsDebugEnabled$ = t.contentUsertweetsRestPolling$ = t.actuallyRenderContentUsertweets$ = t.tweetdeckScheduledNewApi$ = t.contentUsertweetsEnabled$ = t.actuallyRenderContentSearchTweets$ = t.contentSearchEnabled$ = t.livePipelineEnabled$ = void 0, t.getStreamForLiveVideo = function() {
		return o
	};
	var n, s = i(36),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(58);
	var o = (0, a.getStreamForFeatureFlag)("tweetdeck_dogfood"),
		l = (0, a.getStreamForFeatureFlag)("tweetdeck_devel"),
		c = (0, a.getStreamForFeatureFlag)("tweetdeck_content_search_darkmode"),
		u = (0, a.getStreamForFeatureFlag)("tweetdeck_content_render_search_tweets"),
		d = (0, a.getStreamForFeatureFlag)("tweetdeck_content_usertweets_darkmode"),
		h = (0, a.getStreamForFeatureFlag)("tweetdeck_content_usertweets_render"),
		m = (0, a.getStreamForFeatureFlag)("tweetdeck_content_usertweets_rest_polling_interval"),
		f = (0, a.getStreamForFeatureFlag)("tweetdeck_scheduled_new_api"),
		p = (0, a.getStreamForFeatureFlag)("tweetdeck_live_engagements"),
		g = (0, a.getStreamForFeatureFlag)("tweetdeck_locale"),
		v = (0, a.getStreamForFeatureFlag)("tweetdeck_subscriptions_debug"),
		T = (0, a.getStreamForFeatureFlag)("tweetdeck_uiv"),
		w = (0, a.getStreamForFeatureFlag)("twitter_text_emoji_counting_enabled"),
		b = (0, a.getStreamForFeatureFlag)("tweetdeck_trends_column"),
		y = (0, a.getStreamForFeatureFlag)("tweetdeck_gdpr_consent"),
		_ = (0, a.getStreamForFeatureFlag)("tweetdeck_scheduled_tweet_ephemeral"),
		C = (0, a.getStreamForFeatureFlag)("tweetdeck_gdpr_updates"),
		S = (0, a.getStreamForFeatureFlag)("tweetdeck_premium_analytics"),
		D = (0, a.getStreamForFeatureFlag)("tweetdeck_insights"),
		k = (0, a.getStreamForFeatureFlag)("twitter_weak_maps"),
		E = (0, a.getStreamForFeatureFlag)("tweetdeck_activity_value_polling"),
		I = (0, a.getStreamForFeatureFlag)("tweetdeck_activity_streaming"),
		A = (0, a.getStreamForFeatureFlag)("tweetdeck_horizon_web_cards_enabled"),
		x = (0, a.getStreamForFeatureFlag)("tweetdeck_horizon_web_cards_static"),
		M = (0, a.getStreamForFeatureFlag)("tweetdeck_show_release_notes_link"),
		R = (0, a.getStreamForFeatureFlag)("tweetdeck_searches_with_negation"),
		F = (0, a.getStreamForFeatureFlag)("tweetdeck_native_video_player"),
		O = (0, a.getStreamForFeatureFlag)("tweetdeck_rweb_composer"),
		P = r.default.Observable.zip(k, D, function(e, t) {
			return {
				betaEnabled: e,
				insightsEnabled: t
			}
		}),
		N = r.default.Observable.zip(b, k, function(e, t) {
			return {
				trendsInColumnEnabled: e,
				betaEnabled: t
			}
		}),
		U = (0, a.getStreamForFeatureFlag)("tweetdeck_alt_text_max_length");
	t.livePipelineEnabled$ = p, t.contentSearchEnabled$ = c, t.actuallyRenderContentSearchTweets$ = u, t.contentUsertweetsEnabled$ = d, t.tweetdeckScheduledNewApi$ = f, t.actuallyRenderContentUsertweets$ = h, t.contentUsertweetsRestPolling$ = m, t.subscriptionsDebugEnabled$ = v, t.dogfood$ = o, t.devel$ = l, t.locale$ = g, t.unifiedImageVariants$ = T, t.twitterTextEmojiDiscounting$ = w, t.gdprConsent$ = y, t.scheduledTweetEphemeral$ = _, t.gdprUpdates$ = C, t.premiumAnalytics$ = S, t.tweetdeckBeta$ = k, t.betaAndInsights$ = P, t.trendsAndBeta$ = N, t.activityValuePolling$ = E, t.activityStreaming$ = I, t.horizonWebCardsStatic$ = x, t.horizonWebCardsEnabled$ = A, t.showReleaseNotesLinkEnabled$ = M, t.streamSearchesWithNegation$ = R, t.useRwebComposer$ = O, t.altTextMaxLength$ = U, t.nativeVideoPlayer$ = F
}, , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(132),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};

	function a(e) {
		return e ? TD.controller.clients.getClient(e) : o()
	}

	function o() {
		return TD.controller.clients.getPreferredClient("twitter")
	}

	function l(e) {
		return TD.controller.clients.getClientsByService(e)
	}
	t.getClientByAccountKeyOrDefault = function(e) {
		return a(e) || o()
	}, t.getClientByAccountKey = a, t.getClientByAccount = function(e) {
		return t.getClientByAccountKey(e.getKey())
	}, t.getTwitterClient = o, t.getClientsByService = l, t.getClientByScreenName = function(e) {
		var t = l("twitter");
		return (0, r.default)(t, function(t) {
			if (t.oauth.account.getUsername().toLowerCase() === e.toLowerCase()) return t
		})
	}, t.getAccountData = function(e) {
		var t = a(e);
		if (!t) return null;
		var i = t.oauth.account;
		return {
			accountKey: e,
			id: i.getUserID(),
			screenName: i.getUsername(),
			profileImageURL: i.getProfileImageURL()
		}
	}
}, , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.setValueForFeatureFlag = void 0;
	var n = u(i(108)),
		s = u(i(9)),
		r = u(i(13));
	t.startPollingForSettings = function() {
		return v.next(!0), new n.default(function(e, t) {
			f = e, p = t
		})
	}, t.stopPollingForSettings = function() {
		v.next(!1)
	}, t.default = C, t.getStreamForFeatureFlag = function(e) {
		return C().map(function(t) {
			return S(e, t)
		}).distinctUntilChanged()
	}, t.getValueForFeatureFlag = function(e) {
		return S(e, h)
	};
	var a = u(i(0)),
		o = u(i(36)),
		l = u(i(109)),
		c = u(i(131));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var d = i(1450),
		h = d,
		m = function() {},
		f = m,
		p = m,
		g = (0, l.default)(window.location.href).search(!0).no_dogfood,
		v = new o.default.Subject,
		T = {},
		w = v.switchMap(function(e) {
			return e ? o.default.Observable.timer(0, 3e5) : o.default.Observable.empty()
		}).flatMap(function() {
			return o.default.Observable.fromPromise((e = [TD.config.twitter_api_base, "/", TD.config.twitter_api_version, "/help/settings.json"].join(""), c.default.promised(e, {
				params: {
					settings_version: (0, r.default)(h, "versions.settings", ""),
					feature_set_token: (0, r.default)(h, "feature_set_token", "")
				}
			}))).catch(function(e) {
				return p(e), o.default.Observable.empty()
			});
			var e
		}).pluck("data").filter(Boolean).startWith({}).publishReplay(1).refCount(),
		b = w.mapTo(!0),
		y = o.default.Observable.fromEvent((0, a.default)(document), "debugRetriggerTwitterSettings").mapTo(!0),
		_ = o.default.Observable.merge(b, y).mergeMap(function() {
			return w.take(1)
		}).map(function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = (0, r.default)(window, "TD.config.config_overlay", {});
			return (0, s.default)({}, d, e, {
				config: (0, s.default)({}, d.config, e.config, t, g ? {
					tweetdeck_devel: {
						value: !1
					},
					tweetdeck_dogfood: {
						value: !1
					}
				} : {})
			})
		}).map(function(e) {
			return (0, s.default)({}, e, {
				config: (0, s.default)({}, e.config, T)
			})
		});

	function C() {
		return _
	}

	function S(e, t) {
		return (0, r.default)(t, ["config", e, "value"], !1)
	}
	_.subscribe(function(e) {
		h = e, f()
	});
	t.setValueForFeatureFlag = function(e, t) {
		T[e] = {
			value: t
		}, (0, a.default)(document).trigger("debugRetriggerTwitterSettings")
	}
}, , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = o(i(163)),
		s = o(i(44)),
		r = o(i(281)),
		a = o(i(0));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = i(36),
		c = {
			shallowEquals: function() {
				return function(e, t) {
					try {
						return (0, r.default)((0, s.default)(e), (0, s.default)(t)).every(function(i) {
							return t[i] === e[i]
						})
					} catch (e) {
						return !0
					}
				}
			},
			existenceEquality: function(e, t) {
				return Boolean(e) === Boolean(t)
			},
			filterKeys: function(e) {
				return function(t) {
					return e && "object" === (void 0 === t ? "undefined" : (0, n.default)(t)) ? e.reduce(function(e, i) {
						return t.hasOwnProperty(i) && (e[i] = t[i]), e
					}, {}) : t
				}
			},
			toDeferred: function(e) {
				var t = new TD.core.defer.Deferred;
				return e.take(1).subscribe(function(e) {
					return t.callback(e)
				}, function(e) {
					return t.errback(e)
				}), t
			},
			fromDeferred: function(e) {
				var t = new l.AsyncSubject;
				return e.addCallbacksWith(t, function(e) {
					t.next(e), t.complete()
				}, t.error), t.asObservable()
			},
			makeFromDeferred: function(e, t) {
				return function() {
					return c.fromDeferred(e.apply(t || this, arguments))
				}
			},
			fromEventOnce: function(e, t) {
				var i = new l.AsyncSubject;
				return (0, a.default)(e).one(t, function(e) {
					i.next(e), i.complete()
				}), i.asObservable()
			}
		};
	e.exports = c
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getTwitterLoginAccount = function() {
		return o(TD.storage.store.getTwitterLoginAccount())
	}, t.getDefaultAccount = function() {
		return o(TD.storage.accountController.getDefault()) || null
	}, t.setDefaultAccount = a, t.getAccount = function(e) {
		return o(TD.storage.accountController.get(e))
	}, t.getAccountFromId = function(e) {
		return o(TD.storage.accountController.getAccountFromId(e))
	}, t.removeAccount = function(e) {
		e !== t.getDefaultAccount().accountKey ? TD.controller.clients.removeClient(e) : (a(t.getTwitterLoginAccount().accountKey), TD.storage.notification.flush().addCallback(function() {
			TD.controller.clients.removeClient(e)
		}))
	}, t.getAccountsForService = function(e) {
		return l(TD.storage.accountController.getAccountsForService(e)).sort(c)
	}, t.getTwitterAccounts = function() {
		return t.getAccountsForService("twitter")
	}, t.filterAccountsWithClient = function(e) {
		return e.filter(function(e) {
			return e.hasClient
		})
	}, t.updateAccount = function(e, t) {
		var i = TD.storage.accountController.get(e);
		if (t.id !== i.getUserID()) return;
		i.setUsername(t.screenName), i.setName(t.name), i.setProfileImageURL(t.profileImageURL), i.setIsPrivate(t.isProtected), i.setUpdated((new Date).getTime())
	}, t.setIsAdmin = function(e, t) {
		TD.storage.accountController.get(e).setIsAdmin(t)
	}, t.serializeAccount = o, t.serializeAccounts = l, t.sortAccounts = c;
	var n, s = i(17),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};

	function a(e) {
		TD.storage.accountController.setDefault(e)
	}

	function o(e) {
		if (e) {
			var t = TD.storage.accountController.getDefault(),
				i = TD.storage.store.getTwitterLoginAccount();
			return {
				name: e.getName(),
				emojifiedName: r.default.cleanWithEmoji(e.getName()),
				accountKey: e.getKey(),
				profileImageURL: e.getProfileImageURL(),
				userId: e.getUserID(),
				screenName: e.getUsername(),
				isProtected: e.getIsPrivate(),
				isDefault: e === t,
				isTwoginAccount: e === i,
				isAdmin: e.getIsAdmin(),
				isContributor: e.isContributor(),
				isCookieUser: e.isCookieUser(),
				isMissingUserData: e.isMissingUserData(),
				hasClient: !!TD.controller.clients.getClient(e.getKey()),
				requireConsent: e.requiresConsent()
			}
		}
	}

	function l() {
		return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).filter(Boolean).map(o)
	}

	function c(e, t) {
		var i, n;
		if (TD.storage.store.getTwitterLoginAccount()) {
			if (e.isTwoginAccount) return -1;
			if (t.isTwoginAccount) return 1
		} else {
			if (e.isDefault) return -1;
			if (t.isDefault) return 1
		}
		return (i = e.screenName.toLowerCase()) < (n = t.screenName.toLowerCase()) ? -1 : i > n ? 1 : 0
	}
}, , , , , , , , , function(e, t, i) {
	"use strict";
	var n = i(5).component,
		s = i(137),
		r = i(66),
		a = i(45);
	e.exports = n(function() {}, r, a, s)
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = p(i(108)),
		s = p(i(68)),
		r = p(i(9)),
		a = p(i(239)),
		o = p(i(415)),
		l = p(i(132)),
		c = p(i(15)),
		u = p(i(48)),
		d = p(i(110)),
		h = p(i(0)),
		m = p(i(1430)),
		f = p(i(419));

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		var e = {},
			t = {
				isContributor: function() {
					return !1
				},
				isCookieUser: function() {
					return !0
				}
			};

		function i(e) {
			return e.isContributor() && TD.storage.store.getTwitterLoginAccount() || e
		}

		function p(e, t) {
			return t.isContributor() ? (0, r.default)({}, e, {
				"x-act-as-user-id": t.getUserID()
			}) : e
		}

		function g(e) {
			var t = {};
			t.Authorization = TD.util.getBearerTokenAuthHeader(), t["X-Twitter-Auth-Type"] = "OAuth2Session";
			var i = TD.util.getCsrfTokenHeader();
			return i && (t["X-Csrf-Token"] = i), (0, d.default)({}, e, t)
		}

		function v(e, t) {
			return [p, function(e, t) {
				var n = i(t);
				return (0, r.default)({}, e, {
					"x-td-oauth-key": n.getOAuthToken(),
					"x-td-oauth-secret": n.getTokenSecret()
				})
			}].reduce(function(e, i) {
				return i(e, t)
			}, e)
		}

		function T(e) {
			return "" === e ? null : h.default.parseJSON(e)
		}

		function w(e) {
			return function() {
				var t = [].slice.call(arguments),
					i = e.apply(this, t);
				return i.addErrback(function(i) {
					return 403 === i.number && i.req && i.req.responseJSON && i.req.responseJSON.errors && i.req.responseJSON.errors[0] && 353 === i.req.responseJSON.errors[0].code ? (TD.util.metric("api:request:missing-csrf"), e.apply(this, t)) : i
				}), i
			}
		}
		e.maybeAddContributorsHeaders = p;
		var b, y, _ = .5;

		function C(e) {
			return new Response(e.responseText, {
				status: e.status,
				statusText: e.statusText
			})
		}
		return e.sendRequest = f.default.deDupeDeferred(function(e) {
			return function(t, i, n, s, r) {
				var a = [].slice.call(arguments),
					o = e.apply(this, a);
				return o.addErrback(TD.util.effect(function(e) {
					if (e.req) {
						var t = TD.decider.get("sample_failed_requests"),
							i = TD.decider.get("dev_sample_all_failed_requests"),
							n = Math.random() < _ / 100;
						t && (n || i) && (TD.controller.stats.generic({
							page: "api",
							action: "failure"
						}, {
							custom_json_payload: TD.net.util.getFailureScribePayload(e)
						}), TD.util.metric("api:request:failure:scribe"))
					}
				})), o
			}
		}(function(e, t, i, n, r) {
			if (TD.decider.get("disable_ajax_" + e.toLowerCase())) return TD.core.defer.fail(new Error("Network is disabled"));
			var a, o, m = !1,
				f = new TD.core.defer.Deferred(function() {
					m = !0, a.abort()
				}),
				p = {
					url: t,
					global: !1,
					type: e,
					dataType: "text json",
					converters: {
						"text json": T
					}
				};
			r && (0, d.default)(p, r);
			i = (0, u.default)(i || {}, {
				"X-Twitter-Client-Version": TD.util.getTweetDeckUserAgentString()
			}), ("LOCAL" === TD.buildID || TD.config.internal_build || TD.decider.get("force_zipkin_header")) && t.indexOf("twitter.com") > -1 && (i["X-B3-Flags"] = 1);
			p.beforeSend = function(e) {
				var t = !1;
				if ((0, c.default)(i, function(i, n) {
						var s = n.toLowerCase();
						"content-type" !== s && e.setRequestHeader(n, i), TD.decider.get("disable_contributed_requests") && "x-act-as-user-id" === s && (t = !0)
					}), t) return !1
			}, n && (p.data = n);
			(o = i["Content-Type"] || i["content-type"]) && (p.contentType = o, "application/json" === o && (p.data = (0, s.default)(p.data)));
			return p.tweetdeck = {
				headers: i,
				settings: r
			}, (a = h.default.ajax(p)).done(function(e, t, i) {
				f.callback({
					data: e,
					xhr: i
				})
			}), a.complete(function(e, t) {
				var n = e.getResponseHeader("X-Acted-As-User-Id"),
					s = (0, l.default)(i, function(e, t) {
						if ("x-act-as-user-id" == t.toLowerCase()) return e
					});
				s && (n ? s !== n && (0, h.default)(document).trigger("metric", {
					key: "auth:contributors:actedasheader:unmatched"
				}) : (0, h.default)(document).trigger("metric", {
					key: "auth:contributors:actedasheader:missing"
				}))
			}), a.fail(function(e, t, i) {
				m ? f.errback(new TD.core.defer.CancelledError(e, "abort")) : f.errback(new TD.core.defer.XMLHttpRequestError(e, i, p))
			}), f
		}), function(e, t, i, n, s) {
			if (!TD.decider.get("prevent_duplicate_ajax_requests")) return TD.util.metric("api:request:duplicate:allowed"), f.default.DO_THING_ANYWAY;
			TD.util.metric("api:request:duplicate:prevented")
		}), e.jsonp = function(t, i) {
			return e.sendRequest("GET", t, {}, i, {
				dataType: "jsonp",
				timeout: 1e4
			})
		}, e.upload = function(t, i) {
			return TD.decider.hasAccessLevel("mediaUpload", "USE_SRU") ? function(e, t) {
				var i = g(p({}, t)),
					n = TD.config.twitter_upload_base + "/1.1/media/upload.json",
					s = new m.default(e, {
						uploadUrl: n,
						sruHeaders: i
					}),
					a = new TD.core.defer.Deferred(function() {
						s.cancel(), (0, h.default)(document).trigger("videoUploadCancel", {
							userId: t.getUserID()
						})
					}),
					o = "image/gif" === e.type ? {
						extraInitParams: "&media_category=tweet_gif"
					} : {};
				"video/mp4" === e.type ? s.upload((0, r.default)({}, o, {
					success: a.callback.bind(a),
					error: a.errback.bind(a),
					progress: function(e, i) {
						(0, h.default)(document).trigger("videoUploadProgress", {
							percent: e,
							mode: i,
							userId: t.getUserID()
						})
					}
				})) : s.upload((0, r.default)({}, o, {
					success: a.callback.bind(a),
					error: a.errback.bind(a)
				}));
				return a.addCallbacks(TD.util.effect(function(e) {
					(0, h.default)(document).trigger("dataApiResponse", {
						url: n,
						contributed: t.isContributor(),
						status: 200
					})
				}), TD.util.effect(function(e) {
					(0, h.default)(document).trigger("dataApiResponse", {
						url: n,
						contributed: t.isContributor(),
						status: 400
					})
				})), a
			}(t, i) : function(t, i) {
				var n = g(p({}, i)),
					s = new FormData;
				s.append("media", t);
				var r = TD.config.twitter_upload_base + "/1.1/media/upload.json",
					a = e.sendRequest("POST", r, n, s, {
						timeout: 12e4,
						processData: !1,
						contentType: !1,
						xhrFields: {
							withCredentials: !0
						}
					});
				return a.addCallback(function(e) {
					if ((e = e || {}).data = e.data || {}, "string" != typeof e.data.media_id_string) throw new Error("Upload response missing media_id_string.");
					return e.data.media_id_string
				}), a
			}(t, i)
		}, e.signRequest = function(t, i, n, s, r) {
			r = v(r || {}, t), "GET" === n && (r["x-td-oauth-no-redirect"] = !0);
			var a = function(e, t, i) {
				var n = TD.config.api_root + "/oauth/" + t;
				return n += "/" + i.getType() + "/", n += encodeURIComponent(e)
			}(i, "sign", t);
			return e.sendRequest(n, a, r, s)
		}, e.checkCookie = function() {
			var t = TD.storage.store.getTwitterLoginAccount();
			if (!t) return TD.core.defer.succeed();
			var i = t.getUserID();
			return e.getCookieId().addCallback(function(e) {
				var t = TD.core.defer.succeed();
				return e !== i && (t = TD.core.defer.fail(new Error("Cookie does not match expected account")), (0, h.default)(document).trigger("dataTwitterAccountAccessDenied", {
					account: TD.storage.accountController.getCookieAccount(),
					isLoginAccount: !0
				})), t
			})
		}, e.getCookieId = function(t) {
			var i = TD.util.getTwitterCookieUserId();
			return i ? (TD.util.metric("api:cookie:id:used-twid"), TD.core.defer.succeed("" + i)) : (TD.util.metric("api:cookie:id:twid-missing"), e.getCookieUser(t).addCallback(function(e) {
				return TD.util.metric("api:cookie:id:used-verify"), e.data.id_str
			}).addErrback(TD.util.effect(function() {
				TD.util.metric("api:cookie:id:failed-verify")
			})))
		}, e.getCookieUser = (y = 0, w(function(t) {
			return !(t = t || {}).skipCache && Date.now() - y < 3e5 ? (TD.util.metric("api:cookie:verify:cache:hit"), TD.core.defer.succeed(b)) : (TD.util.metric("api:cookie:verify:cache:" + (t.skipCache ? "skip" : "miss")), e.verifyCredentials().addCallback(TD.util.effect(function(e) {
				y = Date.now(), b = e
			})))
		})), e.verifyCredentials = function() {
			return e.sendRequest("GET", TD.config.twitter_api_base + "/1.1/account/verify_credentials.json", g({}), {}, {
				xhrFields: {
					withCredentials: !0
				}
			})
		}, e.buildRequest = function(t) {
			"GET" !== t.method && "DELETE" !== t.method || (t.url = TD.net.util.addURLParameters(t.url, t.params), delete t.params), t.body = t.params;
			var n = p(t.headers, t.account);
			if(n['x-act-as-user-id'] && t.url && t.url.includes('/1.1/statuses/user_timeline.json') && !t.url.includes('user_id')) {
				let url = new URL(t.url);
				let params = new URLSearchParams(url.search);
				params.set('user_id', n['x-act-as-user-id']);
				url.search = params.toString();
				t.url = url.toString();
			}
			if (i(t.account).isCookieUser()) {
				return e.checkCookie().addCallback((0, o.default)({
					method: t.method,
					url: t.url,
					headers: g(n),
					body: t.body,
					settings: (0, a.default)({}, t.settings, {
						xhrFields: {
							withCredentials: !0
						}
					})
				}));
			}
			var s = e.signRequest(t.account, t.url, t.method, t.body, t.headers);
			return s.addCallback(function(e) {
				var i = e.data,
					s = (0, d.default)({}, i.headers, n);
				return {
					method: t.method,
					url: t.url,
					headers: s,
					body: t.body,
					settings: t.settings
				}
			}), s
		}, e.request = w(function(i, n) {
			var s = (0, u.default)(n || {}, {
					url: i,
					method: "GET",
					headers: {},
					params: {},
					account: t,
					settings: {}
				}),
				r = Date.now(),
				a = e.buildRequest(s);
			return a.addCallback(function(t) {
				return e.sendRequest(t.method, t.url, t.headers, t.body, t.settings)
			}), a.addBoth(TD.util.effect(function(e) {
				if (TD.decider.get("disable_api_stats") || (0, h.default)(document).trigger("dataApiResponse", {
						url: i,
						contributed: s.account.isContributor(),
						status: TD.util.getXhrStatusFromSendRequestResult(e)
					}), !TD.decider.get("disable_request_timing_metrics")) {
					var t = Date.now() - r;
					TD.util.metric("api:request:time:cors", [t], "metric")
				}
			})), a
		}), e.fetched = function(i) {
			var s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
				method: "GET",
				headers: {},
				params: {},
				account: t
			};
			return new n.default(function(t) {
				e.request(i, s).addCallbacks(function(e) {
					return t(C(e.xhr))
				}, function(e) {
					return t(C(e.req))
				})
			})
		}, e.promised = function(e) {
			var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
				method: "GET",
				headers: {},
				params: {},
				account: t
			};
			return new n.default(function(t, n) {
				TD.net.ajax.request(e, i).addCallbacks(t, n)
			})
		}, e
	}()
}, , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.MATCH_DELIMITER = void 0;
	var n = o(i(65)),
		s = o(i(170)),
		r = o(i(820));
	t.query = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
		return l.query(e)
	}, t.makeCommandBag = u, t.flightWithCommands = function() {
		this.before("initialize", function() {
			this._commandBag = u()
		}), this.before("teardown", function() {
			this._commandBag.removeAll()
		}), this.addCommands = function(e) {
			this._commandBag.add(e)
		}, this.removeCommands = function(e) {
			this._commandBag.remove(e)
		}, this.removeAllCommands = function() {
			this._commandBag.removeAll()
		}
	};
	var a = o(i(2147));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = h();
	l.add([{
		label: "Show help",
		apply: function() {
			return window.open("https://support.twitter.com/articles/20169620")
		}
	}]);
	var c = t.MATCH_DELIMITER = "<>>BANAN∆ANA¬NA!!!™•";

	function u() {
		return h(l)
	}

	function d(e) {
		return "string" == typeof e.label && "function" == typeof e.apply
	}

	function h() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
			t = [];
		return {
			add: function() {
				var i = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).filter(d);
				e && e.add(i), t = [].concat((0, n.default)(t), (0, n.default)(i)), t = (0, r.default)(t, function(e) {
					return e.label.toLowerCase()
				})
			},
			remove: function() {
				var i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
				e && e.remove(i), t = (0, s.default)(t, i)
			},
			removeAll: function() {
				e && e.remove(t), t = []
			},
			query: function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
					i = t.filter(function(e) {
						return !e.canApply || e.canApply()
					});
				return (e ? a.default.filter(i, e, {
					key: "label"
				}) : i).map(function(t) {
					var i = t.label + " ";
					return {
						original: t,
						string: (e ? a.default.wrap(i, e, {
							wrap: {
								tagOpen: c,
								tagClose: c
							}
						}) : t.label).trim()
					}
				})
			}
		}
	}
	window.cmd = t
}, function(e, t, i) {
	"use strict";
	var n = o(i(48)),
		s = o(i(32)),
		r = o(i(0)),
		a = i(277);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		this.measureElementHeight = function(e, t) {
			var i = (0, r.default)(e);
			return i.removeClass(t), i.height()
		}, this.animateHeight = function(e, t, i, n) {
			var s, r, a = this.measureElementHeight(e, t);
			"expand" === n ? (s = 0, r = a) : (s = a, r = 0), this.animateHeightFromTo(e, s, r, t, function() {
				"function" == typeof i && i();
				"collapse" === n && e.css("height", "")
			})
		}, this.animateHeightFromTo = function(e, t, i, n, r) {
			var o = function() {
				e.removeClass(n), e.css("height", ""), e.trigger("uiTransitionExpandEnd"), "function" == typeof r && r()
			};
			t !== i ? (e.css({
				height: t
			}), (0, s.default)(function() {
				e.addClass(n), e.trigger("uiTransitionExpandStart", {
					delta: i - t
				}), e.one(a.TRANSITION_END, o), e.height(i)
			})) : r && r()
		}, this.animateElementContentHeight = function(e, t, i, n) {
			this.animateElementHeightChange(e, function() {
				e.html(t)
			}, i, n)
		}, this.animateElementHeightChange = function(e, t, i, n) {
			var s, r = this.measureElementHeight(e, i);
			e.css({
				height: ""
			}), t(), s = this.measureElementHeight(e), this.animateHeightFromTo(e, r, s, i, n)
		}, this.deferredAnimateElementHeightChange = function(e, t, i) {
			i = (0, n.default)(i || {}, {
				isAnimatingClass: ""
			});
			var s = new TD.core.defer.Deferred;
			return this.animateElementHeightChange(e, t, i.isAnimatingClass, s.callback.bind(s)), s
		}, this.transitionExpand = function(e, t, i) {
			this.animateHeight(e, t, i, "expand")
		}, this.transitionCollapse = function(e, t, i) {
			this.animateHeight(e, t, i, "collapse")
		}, this.transitionTop = function(e, t, i, n) {
			e.addClass(t), e.one(a.TRANSITION_END, function() {
				e.removeClass(t), "function" == typeof n && n()
			}), e.css("top", i)
		}, this.addAnimateClass = function(e, t, i) {
			i = i || function() {}, e.one(a.ANIMATION_END, function() {
				e.removeClass(t), i()
			}), e.addClass(t)
		}, this.stopAnimation = function(e, t) {
			e.off(a.ANIMATION_END), e.removeClass(t)
		}
	}
}, , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.render = function(e, t) {
		return s.default.render(n.default.createElement(a.default, null, n.default.createElement(r.default, null, e)), t)
	}, t.unmountComponentAtNode = function(e) {
		s.default.unmountComponentAtNode(e)
	};
	var n = o(i(4)),
		s = o(i(101)),
		r = o(i(1863)),
		a = o(i(1886));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = a(i(9)),
		s = a(i(13));
	t.isAllowedLegacyCard = l, t.isStaticCard = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		return (0, s.default)(o[e.name], "staticView", !1)
	}, t.hasPoll = c, t.convertCardFromGraphQL = function(e) {
		var t = e.binding_values.reduce(function(e, t) {
			return e[t.key] = t.value, e
		}, {});
		return (0, n.default)({}, e, {
			binding_values: t
		})
	}, t.isAllowedCardForTrendsColumn = function(e) {
		return "3260518932:moment" === e
	}, t.isUsingHorizonWebCards = function() {
		return u.length > 0
	}, t.isHorizonWebCardTypeEnabled = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		return !!(u && e.name && u.includes(e.name))
	}, t.shouldShowCard = d, t.checkCardsInTDExperiment = function(e, t) {
		if (t.getMediaPreviewSize() === TD.vo.Column.MEDIA_PREVIEW_OFF && !t.detailViewComponent) return;
		var i = TD.controller.stats.isInExperimentBucket("cards_in_td_columns_8351", "control"),
			n = TD.controller.stats.isInExperimentBucket("cards_in_td_columns_8351", "cards_in_td_columns_enabled");
		if (!i && !n) return;
		e.some(function(e) {
			return d(e, t.temporary) && !c(e.card)
		}) && (0, r.default)(document).trigger("uiCardsInColumns")
	};
	var r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = {
		"3260518932:moment": {},
		poll2choice_text_only: {},
		poll3choice_text_only: {},
		poll4choice_text_only: {},
		summary: {},
		summary_large_image: {},
		"3691233323:periscope_broadcast": {
			staticView: !0
		},
		audio: {
			staticView: !0
		},
		player: {
			staticView: !0
		},
		"745291183405076480:live_event": {
			staticView: !0
		},
		"745291183405076480:live_video": {
			staticView: !0
		}
	};

	function l() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		return Boolean(o[e.name])
	}

	function c() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		return Boolean(l(e) && e.name.match(/poll[2-4]choice_text_only/))
	}
	var u = [];

	function d(e) {
		return e.hasCard() && !e.hasMedia() && !e.isQuoteStatus
	}
	i(37).horizonWebCardsEnabled$.subscribe(function(e) {
		return u = e
	})
}, , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = o(i(9)),
		s = o(i(228));
	t.default = function(e) {
		var t = e.name,
			i = e.fontSize,
			o = e.color,
			l = (0, s.default)(e, ["name", "fontSize", "color"]);
		return r.default.createElement("i", (0, n.default)({}, l, {
			className: (0, a.default)("icon Icon icon-" + t, i && "txt-size--" + i, o && "color-" + o)
		}))
	};
	var r = o(i(4)),
		a = (o(i(8)), o(i(103)));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = o(i(108)),
		s = o(i(55)),
		r = o(i(46)),
		a = o(i(2));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = {
			NAME: "TD.core.defer",
			DEBUG_DEFERREDS: !1
		},
		c = Array.prototype.slice,
		u = function(e) {
			this.message = e, this.name = e
		};
	(u.prototype = new Error).toString = function() {
		return this.message && this.message != this.name ? this.name + "(" + this.message.toString() + ")" : this.name + "()"
	};
	var d = function(e, t, i) {
		i.prototype = new u(e.NAME + "." + t), e[t] = i
	};
	d(l, "AlreadyCalledError", function(e) {
		this.deferred = e
	}), d(l, "CancelledError", function(e) {
		this.deferred = e
	}), d(l, "GenericError", function(e) {
		this.message = e
	}), d(l, "XMLHttpRequestError", function(e, t, i) {
		this.req = e, this.message = t, this.requestSettings = i || {};
		try {
			this.number = e.status
		} catch (e) {}
		if (this.req) switch (this.req.responseText) {
			case "Item cannot be scheduled for the past.":
				this.humanReadableMessage = (0, a.default)("You can't schedule a Tweet for the past.");
				break;
			case "Item too far in the future.":
				this.humanReadableMessage = (0, a.default)("You can't schedule a Tweet for more than a year ahead.");
				break;
			case "You have too many updates scheduled.":
				this.humanReadableMessage = (0, a.default)("You can only save 150 scheduled Tweets at once. Please delete one or try later.")
		}
	});
	var h = function() {
		try {
			throw new Error("DEBUG_DEFERRED stack trace")
		} catch (e) {
			return e.stack
		}
	};
	l.Deferred = function(e) {
		this.chain = [], this.id = (0, r.default)("d:"), l.DEBUG_DEFERREDS && (this.create_stack = h()), this.fired = -1, this.paused = 0, this.results = [null, null], this.canceller = e, this.silentlyCancelled = !1, this.chained = !1
	}, l.Deferred.prototype = {
		toString: function() {
			var e;
			return e = -1 == this.fired ? "unfired" : 0 === this.fired ? "success" : "error", "Deferred(" + this.id + ", " + e + "[" + this.chain.length + "])"
		},
		cancel: function() {
			-1 == this.fired ? (this.canceller ? this.canceller(this) : this.silentlyCancelled = !0, -1 == this.fired && this.errback(new l.CancelledError(this))) : 0 === this.fired && this.results[0] instanceof l.Deferred && this.results[0].cancel()
		},
		_resback: function(e) {
			l.DEBUG_DEFERREDS && (this.invoke_stack = h()), this.fired = e instanceof Error ? 1 : 0, this.results[this.fired] = e, this._fire()
		},
		_check: function() {
			if (-1 != this.fired) {
				if (!this.silentlyCancelled) throw new l.AlreadyCalledError(this);
				this.silentlyCancelled = !1
			}
		},
		callback: function(e) {
			if (this._check(), e instanceof l.Deferred) throw new Error("Deferred instances can only be chained if they are the result of a callback");
			this._resback(e)
		},
		errback: function(e) {
			if (this._check(), e instanceof l.Deferred) throw new Error("Deferred instances can only be chained if they are the result of a callback");
			e instanceof Error || (e = new l.GenericError(e)), this._resback(e)
		},
		addBoth: function(e) {
			var t = c.call(arguments, 1);
			return this.addCallbacks(e, e, t, t, null, null)
		},
		addBothWith: function(e, t) {
			var i = c.call(arguments, 2);
			return this.addCallbacks(t, t, i, i, e, e)
		},
		addCallback: function(e) {
			var t = c.call(arguments, 1);
			return this.addCallbacks(e, null, t, null, null, null)
		},
		addCallbackWith: function(e, t) {
			var i = c.call(arguments, 2);
			return this.addCallbacks(t, null, i, null, e, null)
		},
		addErrback: function(e) {
			var t = c.call(arguments, 1);
			return this.addCallbacks(null, e, null, t, null, null)
		},
		addErrbackWith: function(e, t) {
			var i = c.call(arguments, 2);
			return this.addCallbacks(null, t, null, i, null, e)
		},
		addCallbacks: function(e, t, i, n, s, r) {
			if (this.chained) throw new Error("Chained Deferreds can not be re-used");
			return this.chain.push([e, t, i, n, s, r]), this.fired >= 0 && this._fire(), this
		},
		addCallbacksWith: function(e, t, i, n, s) {
			return this.addCallbacks(t, i, n, s, e, e)
		},
		_fire: function() {
			for (var e, t, i = this.chain, n = this.fired, s = this.results[n], r = this, a = null, o = function(e) {
					r._resback(e), r.paused--, 0 === r.paused && r.fired >= 0 && r._fire()
				}; i.length > 0 && 0 === this.paused;) {
				var c = i.shift(),
					u = c[n];
				if (null !== u) try {
					e = c[2 + n] ? [s].concat(c[2 + n]) : [s], t = c[4 + n], n = (s = u.apply(t, e)) instanceof Error ? 1 : 0, s instanceof l.Deferred && (a = o, this.paused++)
				} catch (e) {
					n = 1, (s = e instanceof Error ? e : new l.GenericError(e)).stack && s.stack.split ? s.stackTrace = s.stack.split("\n") : s.stackTrace = []
				}
			}
			this.fired = n, this.results[n] = s, a && this.paused && (s.addBoth(a), s.chained = !0)
		},
		toPromise: function() {
			var e = this;
			return new n.default(function(t, i) {
				e.addCallbacks(function(e) {
					return t(e)
				}, function(e) {
					return i(e)
				})
			})
		}
	}, l.DeferredList = function(e, t, i) {
		l.Deferred.apply(this, [i]), this.list = e;
		var n = [];
		this.resultList = n, this.finishedCount = 0, this.fireOnOneCallback = Boolean(t && t.fireOnOneCallback), this.fireOnOneErrback = Boolean(t && t.fireOnOneErrback), this.consumeErrors = Boolean(t && t.consumeErrors);
		for (var r = (0, s.default)(this._cbDeferred, this), a = 0; a < e.length; a++) {
			var o = e[a];
			n.push(void 0), o.addCallback(r, a, !0), o.addErrback(r, a, !1)
		}
		0 !== e.length || this.fireOnOneCallback || this.callback(this.resultList)
	}, l.DeferredList.prototype = new l.Deferred, l.DeferredList.prototype._cbDeferred = function(e, t, i) {
		return this.resultList[t] = [i, e], this.finishedCount += 1, -1 == this.fired && (i && this.fireOnOneCallback ? this.callback([t, e]) : !i && this.fireOnOneErrback ? this.errback(e) : this.finishedCount == this.list.length && this.callback(this.resultList)), !i && this.consumeErrors && (e = null), e
	}, l.gatherResults = function(e) {
		var t = new l.DeferredList(e, {
			fireOnOneErrback: !0
		});
		return t.addCallback(function(e) {
			for (var t = [], i = 0; i < e.length; i++) t.push(e[i][1]);
			return t
		}), t
	}, l.succeed = function(e) {
		var t = new l.Deferred;
		return t.callback(e), t
	}, l.fail = function(e) {
		var t = new l.Deferred;
		return t.errback(e), t
	}, l.maybeDeferred = function(e) {
		var t;
		try {
			var i = e.apply(null, c.call(arguments, 1));
			t = i instanceof l.Deferred ? i : i instanceof Error ? l.fail(i) : l.succeed(i)
		} catch (e) {
			t = l.fail(e)
		}
		return t
	}, l.timeout = function(e, t) {
		var i = new TD.core.defer.Deferred;
		return setTimeout(i.callback.bind(i, t), e), i
	}, l.fromPromise = function(e) {
		var t = new TD.core.defer.Deferred;
		return e.then(function(e) {
			return t.callback(e)
		}, function(e) {
			return t.errback(e)
		}), t
	}, e.exports = l
}, , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.Observe = void 0;
	var n = c(i(26)),
		s = c(i(14)),
		r = c(i(16)),
		a = c(i(27)),
		o = c(i(28)),
		l = c(i(4));
	c(i(8));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.Observe = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.state = {
				data: null
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidMount",
			value: function() {
				this.subscribe()
			}
		}, {
			key: "componentWillUnmount",
			value: function() {
				this.unsubscribe()
			}
		}, {
			key: "componentDidUpdate",
			value: function(e, t) {
				this.props.observable !== e.observable && (this.unsubscribe(), this.subscribe())
			}
		}, {
			key: "subscribe",
			value: function() {
				var e = this;
				this.subscription = this.props.observable.subscribe(function(t) {
					e.setState({
						data: t
					}, function() {
						e.props.onValue && e.props.onValue(t)
					})
				})
			}
		}, {
			key: "unsubscribe",
			value: function() {
				this.subscription.unsubscribe()
			}
		}, {
			key: "render",
			value: function() {
				return this.props.children(this.state.data)
			}
		}]), t
	}(l.default.Component)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getFormattedDateTime = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
			t = e.fullMonth ? "MMMM" : "MMM";
		return (0, r.default)(e.time).format("h:mm A [·] ddd D " + t + " YYYY")
	}, t.convertDateToSeconds = function(e) {
		e || (e = new Date);
		return Math.round(e.getTime() / 1e3)
	}, t.daysAgoInSeconds = a, t.daysAgoInMilliseconds = function(e) {
		return 1e3 * a(e)
	}, t.hoursAgoInMilliseconds = function(e) {
		if (e < 0 || "number" != typeof e) return;
		return 60 * e * 60 * 1e3
	};
	var n, s = i(100),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};

	function a(e) {
		return e < 0 || "number" != typeof e ? 0 : 24 * e * 60 * 60
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(46)),
		s = r(i(48));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(2341);
	e.exports = function() {
		this.showModal = function(e, t, i) {
			if (!e || "function" != typeof e || "function" != typeof e.attachTo) throw new TypeError("Component must be a constructor and have an attachTo method.");
			(t = t || {}).isModal = !0, t.isNonDismissible = !!i.withNonDismissible, i = (0, s.default)(i || {}, {
				id: (0, n.default)("modal")
			}), this.boundHandleModalContext = this.handleModalContext.bind(this, e, t, i), this.on(document, "uiModalContext", this.boundHandleModalContext), this.trigger("uiNeedsModalContext", i)
		}, this.handleModalContext = function(e, t, i, n, s) {
			s.id === i.id && (this.off(document, "uiModalContext", this.boundHandleModalContext), s.$node && e.mixin(a).attachTo(s.$node, t))
		}
	}
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = c(i(26)),
		s = c(i(14)),
		r = c(i(16)),
		a = c(i(27)),
		o = c(i(28)),
		l = c(i(4));
	c(i(8));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "render",
			value: function() {
				return this.props.children(TD.settings.getTheme())
			}
		}]), t
	}(l.default.Component);
	t.default = u
}, , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = {
		atMentionify: function(e) {
			return TD.util.atMentionify(e)
		},
		deMentionify: function(e) {
			return TD.util.deMentionify(e)
		},
		getTweetLength: function(e, t) {
			return twttrTxt.parseTweet(e, t).weightedLength
		},
		extractMentions: function(e) {
			return twttrTxt.extractMentions(e)
		},
		removeFirstMention: function(e) {
			var t, i = twttrTxt.extractMentionsWithIndices(e);
			return i.length && (t = i[0].indices, e = e.substring(0, t[0]).trim() + e.substring(t[1])), e
		},
		makeTweetDraggable: function(e) {
			(0, r.default)(e).closest(".stream-item").attr("draggable", !0).addClass("will-animate"), document.getSelection().removeAllRanges()
		},
		makeTweetUnDraggable: function(e) {
			(0, r.default)(e).closest(".stream-item").removeAttr("draggable").removeClass("will-animate")
		}
	};
	e.exports = a
}, function(e, t, i) {
	"use strict";
	var n, s = i(46),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = function() {
		this.focusRequest = function() {
			this.trigger("uiFocusRequest", {
				id: this.focusId
			})
		}, this.focusRelease = function() {
			this.trigger("uiFocusRelease", {
				id: this.focusId
			})
		}, this.handleFocus = function(e, t) {
			t.id === this.focusId ? this.hasFocus = !0 : this.hasFocus = !1
		}, this.whenHasFocus = function(e) {
			return function() {
				if (this.hasFocus) return e.apply(this, arguments)
			}.bind(this)
		}, this.getNewFocusId = function() {
			return (0, r.default)("focus")
		}, this.after("teardown", function() {
			this.hasFocus && this.trigger("uiFocusRelease", {
				id: this.focusId
			})
		}), this.after("initialize", function() {
			this.focusId = this.attr.focusId || this.getNewFocusId(), this.hasFocus = !1, this.on(document, "uiFocus", this.handleFocus), !0 === this.attr.autoFocus && this.focusRequest()
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = g(i(32)),
		s = g(i(276)),
		r = g(i(814)),
		a = g(i(184)),
		o = g(i(77)),
		l = g(i(332)),
		c = g(i(189)),
		u = g(i(57)),
		d = g(i(38)),
		h = g(i(80)),
		m = g(i(2)),
		f = g(i(0)),
		p = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(152));

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = TD.settings = function(e, t) {
		var i, g = p.makeCommandBag(),
			v = {},
			T = {};
		v.NEW_COMPOSER_OPT_IN = "new_composer_opt_in";
		var w = ["previous_splash_version", "dataminr_auth_token"],
			b = ["narrow", "medium", "wide"];
		v.COLUMN_WIDTH_VALUES = b;
		var y = ["smallest", "small", "medium", "large", "largest"];
		v.FONT_SIZE_VALUES = y;
		var _ = {
			smallest: 12,
			small: 13,
			medium: 14,
			large: 15,
			largest: 16
		};

		function C(e) {
			var t, n;
			if (!i) throw new Error("Settings client hasn't been initialized. Call settings.init() first.");
			return n = void 0, (t = i.get("settings")) && (n = t[e]), (0, h.default)(n) && (n = T[e]), ((0, d.default)(n) || (0, u.default)(n)) && (n = TD.sync.util.clone(n)), n
		}
		return v.linkShorteners = [{
			id: "twitter",
			title: "Twitter"
		}, {
			id: "bitly",
			title: "Bit.ly"
		}], v.init = function() {
			(i = e.clientController.client) ? (0, f.default)(document).trigger("dataSettingsValues", TD.sync.util.clone(i.get("settings"))): console.warn("Initialized settings before storage.clientController.init() was called."), g.add([{
				label: (0, m.default)("Increase column width"),
				apply: function() {
					var e = v.getColumnWidth(),
						t = Math.min(b.length - 1, b.indexOf(e) + 1);
					v.setColumnWidth(b[t])
				},
				canApply: function() {
					return v.getColumnWidth() !== (0, c.default)(b)
				}
			}, {
				label: (0, m.default)("Decrease column width"),
				apply: function() {
					var e = v.getColumnWidth(),
						t = Math.max(0, b.indexOf(e) - 1);
					v.setColumnWidth(b[t])
				},
				canApply: function() {
					return v.getColumnWidth() !== (0, l.default)(b)
				}
			}, {
				label: (0, m.default)("Increase font size"),
				apply: function() {
					var e = v.getFontSize(),
						t = Math.min(y.length - 1, y.indexOf(e) + 1);
					v.setFontSize(y[t])
				},
				canApply: function() {
					return v.getFontSize() !== (0, c.default)(y)
				}
			}, {
				label: (0, m.default)("Decrease font size"),
				apply: function() {
					var e = v.getFontSize(),
						t = Math.max(0, y.indexOf(e) - 1);
					v.setFontSize(y[t])
				},
				canApply: function() {
					return v.getFontSize() !== (0, l.default)(y)
				}
			}, {
				label: "Use dark theme",
				apply: function() {
					return TD.settings.setTheme("dark")
				},
				canApply: function() {
					return "dark" !== v.getTheme()
				}
			}, {
				label: "Use light theme",
				apply: function() {
					return TD.settings.setTheme("light")
				},
				canApply: function() {
					return "light" !== v.getTheme()
				}
			}])
		}, v.get = C, v.set = function(e, l) {
			var c = {};
			return t.notify("/storage/client/settings/" + e, l), (0, o.default)(l, C(e)) ? TD.core.defer.succeed() : (-1 === w.indexOf(e) && ((0, a.default)(l) || (0, r.default)(l) || (0, s.default)(l)) && TD.controller.stats.setting(e, l), (0, n.default)(function() {
				c[e] = l, (0, f.default)(document).trigger("dataSettingsValues", c)
			}), i.dictSet("settings", e, l))
		}, T.use_stream = !0, v.getUseStream = function() {
			return Boolean(C("use_stream"))
		}, v.setUseStream = function(e) {
			return v.set("use_stream", Boolean(e))
		}, T.use_notification_sound = !0, v.getUseNotificationSound = function() {
			return Boolean(C("use_notification_sound"))
		}, v.setUseNotificationSound = function(e) {
			return v.set("use_notification_sound", Boolean(e))
		}, v.getLanguage = function() {
			return String(C("language"))
		}, v.setLanguage = function(e) {
			return v.set("language", String(e))
		}, T.check_for_updates = !0, v.getCheckForUpdates = function() {
			return Boolean(C("check_for_updates"))
		}, v.setCheckForUpdates = function(e) {
			return v.set("check_for_updates", Boolean(e))
		}, T.use_narrow_columns = !1, T.column_width = "medium", v.getColumnWidth = function() {
			var e = C("use_narrow_columns");
			return (0, r.default)(e) && (v.set("use_narrow_columns", null), e) ? (v.setColumnWidth("narrow"), "narrow") : C("column_width")
		}, v.setColumnWidth = function(e) {
			return v.set("column_width", e)
		}, T.font_size = "medium", v.getFontSize = function() {
			return C("font_size")
		}, v.getHorizonWebFontSize = function() {
			switch (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : v.getFontSize()) {
				case "large":
					return "normal";
				case "largest":
					return "large";
				default:
					return "small"
			}
		}, v.setFontSize = function(e) {
			return v.set("font_size", e)
		}, v.getFontSizePixels = function(e) {
			return _[e]
		}, T.theme = "light", v.getTheme = function() {
			return C("theme")
		}, v.setTheme = function(e) {
			return TD.util.isWrapperApp() && deck.setTheme && deck.setTheme(String(e)), v.set("theme", String(e))
		}, T.link_shortener = "twitter", v.getLinkShortener = function() {
			return String(C("link_shortener"))
		}, v.setLinkShortener = function(e) {
			return v.set("link_shortener", String(e))
		}, T.use_jmp = !1, v.getUseJmp = function() {
			return Boolean(C("use_jmp"))
		}, v.setUseJmp = function(e) {
			return v.set("use_jmp", Boolean(e))
		}, v.getGlobalFilter = function() {
			return C("global_filter")
		}, v.setGlobalFilter = function(e) {
			return v.set("global_filter", e)
		}, T.show_startup_notifications = !0, v.getShowStartupNotifications = function() {
			return Boolean(C("show_startup_notifications"))
		}, v.setShowStartupNotifications = function(e) {
			return v.set("show_startup_notifications", Boolean(e))
		}, T.show_trends_filter_callout = !0, v.getShowTrendsFilterCallout = function() {
			return C("show_trends_filter_callout")
		}, v.setShowTrendsFilterCallout = function(e) {
			return v.set("show_trends_filter_callout", Boolean(e))
		}, T.show_search_filter_callout = !0, v.getShowSearchFilterCallout = function() {
			return C("show_search_filter_callout")
		}, v.setShowSearchFilterCallout = function(e) {
			return v.set("show_search_filter_callout", Boolean(e))
		}, T.show_gdpr_important_updates = !0, v.getShowGdprImportantUpdates = function() {
			return C("show_gdpr_important_updates")
		}, v.setShowGdprImportantUpdates = function(e) {
			return v.set("show_gdpr_important_updates", Boolean(e))
		}, T.premium_has_seen_welcome_modal = !1, v.getPremiumHasSeenWelcomeModal = function() {
			return C("premium_has_seen_welcome_modal")
		}, v.setPremiumHasSeenWelcomeModal = function(e) {
			return v.set("premium_has_seen_welcome_modal", Boolean(e))
		}, T.show_trending_column_new_pill = !0, v.getShowTrendingColumnNewPill = function() {
			return C("show_trending_column_new_pill")
		}, v.setShowTrendingColumnNewPill = function(e) {
			return v.set("show_trending_column_new_pill", Boolean(e))
		}, T.auto_play_gifs = !0, v.getAutoPlayGifs = function() {
			return C("auto_play_gifs")
		}, v.setAutoPlayGifs = function(e) {
			return v.set("auto_play_gifs", Boolean(e))
		}, T.display_sensitive_media = !1, v.getDisplaySensitiveMedia = function() {
			return Boolean(C("display_sensitive_media"))
		}, v.setDisplaySensitiveMedia = function(e) {
			return v.set("display_sensitive_media", Boolean(e))
		}, T.scheduled_col_autoadded = !1, v.getScheduledColAdded = function() {
			return Boolean(C("scheduled_col_autoadded"))
		}, v.setScheduledColAdded = function(e) {
			return v.set("scheduled_col_autoadded", Boolean(e))
		}, T.previous_splash_version = "0", v.getPreviousSplashVersion = function() {
			return C("previous_splash_version")
		}, v.setPreviousSplashVersion = function(e) {
			return v.set("previous_splash_version", String(e))
		}, T.name_cache = {}, v.getNameCache = function() {
			return C("name_cache")
		}, v.setNameCache = function(e) {
			return v.set("name_cache", e)
		}, T.seen_message_ids = [], v.getIdsForSeenMessages = function() {
			return C("seen_message_ids")
		}, v.setIdsForSeenMessages = function(e) {
			return v.set("seen_message_ids", e)
		}, T.navbar_width = "condensed", v.getNavbarWidth = function() {
			return C("navbar_width")
		}, v.setNavbarWidth = function(e) {
			return v.set("navbar_width", e)
		}, T.compose_stay_open = !1, v.getComposeStayOpen = function() {
			return Boolean(C("compose_stay_open"))
		}, v.setComposeStayOpen = function(e) {
			return v.set("compose_stay_open", Boolean(e))
		}, T.dataminr_auth_token = null, v.getDataminrAuthToken = function() {
			return C("dataminr_auth_token")
		}, v.setDataminrAuthToken = function(e) {
			return v.set("dataminr_auth_token", e)
		}, T.account_selector_grid_mode = "grid", v.getAccountSelectorGridMode = function() {
			return C("account_selector_grid_mode")
		}, v.setAccountSelectorGridMode = function(e) {
			return v.set("account_selector_grid_mode", e)
		}, T.safeguarded_account_list = [], v.getSafeguardedAccountList = function() {
			return C("safeguarded_account_list")
		}, v.setSafeguardedAccountList = function(e) {
			return v.set("safeguarded_account_list", e)
		}, v.removeSafeguardedAccount = function(e) {
			return v.set("safeguarded_account_list", v.getSafeguardedAccountList().filter(function(t) {
				return e !== t
			}))
		}, v.addSafeguardedAccount = function(e) {
			return v.set("safeguarded_account_list", v.getSafeguardedAccountList().filter(function(t) {
				return e !== t
			}).concat([e]))
		}, v.getBitlyAccount = function() {
			var e = C("bitly_login"),
				t = C("bitly_api_key");
			if (e && t) return {
				apiKey: t,
				login: e
			}
		}, v.setBitlyAccount = function(e) {
			return v.set("bitly_login", e.login).addCallback(function() {
				return v.set("bitly_api_key", e.apiKey)
			}).addCallback(function() {
				return v.getBitlyAccount()
			})
		}, T.new_composer_opt_in = !1, v.getNewComposerOptIn = function() {
			return Boolean(C("new_composer_opt_in"))
		}, v.setNewComposerOptIn = function(e) {
			return v.set("new_composer_opt_in", Boolean(e))
		}, T.new_composer_upsell_viewed = void 0, v.getNewComposerUpsellViewed = function() {
			return C("new_composer_upsell_viewed")
		}, v.setNewComposerUpsellViewed = function(e) {
			return v.set("new_composer_upsell_viewed", Boolean(e))
		}, v
	}(TD.storage, TD.storage.notification)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getTwitterApiUrl = void 0, t.makeTwitterRequest = function(e, t) {
		var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
			n = (0, s.getClientByAccountKeyOrDefault)(e),
			r = l({
				resource: t
			});
		if (n) return n.request(r, i);
		return a.default.fail("Could not find client for " + e)
	}, t.makeTwitterApiCall = function(e) {
		var t = l(e),
			i = e.method,
			r = e.params,
			a = e.dataProcessor,
			o = e.feedType,
			c = (0, s.getClientByAccountKeyOrDefault)(e.request.accountKey),
			u = function(e) {
				return function(t) {
					var i = {
						request: e.request,
						response: t
					};
					"function" == typeof e.error ? e.error(i) : "string" == typeof e.error ? (0, n.default)(document).trigger(e.error, i) : (0, n.default)(document).trigger("dataTwitterApiError", {
						error: "Unknown error"
					})
				}
			}(e),
			d = function(e, t) {
				return function(t) {
					var i = {
						request: e.request,
						response: t
					};
					"function" == typeof e.success ? e.success(i) : "string" == typeof e.success ? (0, n.default)(document).trigger(e.success, i) : (0, n.default)(document).trigger("dataTwitterApiSuccess", i)
				}
			}(e);
		try {
			return c.makeTwitterCall(t, r, i || "GET", a, d, u, o)
		} catch (e) {
			u()
		}
	};
	var n = o(i(0)),
		s = i(47),
		r = i(458),
		a = o(i(193));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = t.getTwitterApiUrl = function(e) {
		var t = e.baseUrl,
			i = void 0 === t ? r.twitter_api_base : t,
			n = e.apiVersion;
		return i + "/" + (void 0 === n ? r.twitter_api_version : n) + "/" + e.resource
	}
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = i(721),
		s = i(17);
	t.default = (0, n.createInterval)(s.chirpReverseColumnSort)
}, , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = o(i(2083)),
		s = o(i(57)),
		r = o(i(48));
	t.makeDOMMutator = function(e, t) {
		t = (0, r.default)({}, t, {
			debounce: !0,
			debouncePerContext: !1
		});
		var i = new n.default;
		return function() {
			var n = t.debouncePerContext && (0, s.default)(this) ? this : l;
			(t.debounce || t.debouncePerContext) && a.default.clear(i.get(n));
			var r = e.bind.apply(e, [this].concat(Array.prototype.slice.call(arguments))),
				o = a.default.mutate(r);
			i.set(n, o)
		}
	};
	var a = o(i(512));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = {
		_: "dom_utils shared context"
	}
}, , function(e, t, i) {
	"use strict";

	function n(e) {
		var t = document.createElement("div");
		for (var i in e)
			if (void 0 !== t.style[i]) return e[i];
		return !1
	}
	e.exports = {
		TRANSITION_END: n({
			transition: "transitionend",
			WebkitTransition: "webkitTransitionEnd",
			MozTransition: "transitionend",
			OTransition: "otransitionend",
			msTransition: "MSTransitionEnd"
		}),
		ANIMATION_END: n({
			animation: "animationend",
			WebkitAnimation: "webkitAnimationEnd",
			MozAnimation: "animationend",
			OAnimation: "oanimationend",
			msAnimation: "MSAnimationEnd"
		})
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = f(i(9)),
		s = f(i(65)),
		r = f(i(68));
	t.graphqlRequest = function(e) {
		var t = e.query,
			i = e.queryId,
			n = e.operationName,
			s = e.variables,
			r = e.account;
		return (0, a.toPromise)(y.request((0, a.createOperation)({
			queryId: i,
			account: r
		}, {
			query: t,
			operationName: n,
			variables: s
		})))
	}, t.graphqlSubscription = function(e, t) {
		var i = e.query,
			n = e.queryId,
			s = e.operationName,
			r = e.variables,
			o = e.account;
		return _.request((0, a.createOperation)({
			queryId: n,
			account: o,
			subscriptionOptions: t
		}, {
			query: i,
			operationName: s,
			variables: r
		}))
	};
	var a = i(285),
		o = i(58),
		l = i(2115),
		c = i(2116),
		u = i(809),
		d = i(131),
		h = i(17),
		m = i(460);

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var p = TD.config.twitter_api_base + "/graphql",
		g = ["UpdateGryphonOnboardingState"];

	function v(e) {
		var t = e.query,
			i = e.queryId,
			n = e.operationName;
		if (!t && !i) {
			var s = new Error("GraphQL: query does not specify query body or id");
			return (0, m.captureException)(s), {
				isValid: !1,
				error: s
			}
		}
		if ((0, o.getValueForFeatureFlag)("graphql_detailed_url_format_enabled") && i && !n) {
			var r = new Error("GraphQL: query with id " + i + " does not include operation name");
			return (0, m.captureException)(r), {
				isValid: !1,
				error: r
			}
		}
		return {
			isValid: !0
		}
	}

	function T(e, t) {
		var i = e.query,
			n = e.queryId,
			s = e.operationName,
			a = e.variables,
			l = void 0,
			c = void 0,
			u = {},
			h = (0, o.getValueForFeatureFlag)("graphql_detailed_url_format_enabled");
		return a && (u.variables = (0, r.default)(a)), h && n && s ? (l = p + "/" + n + "/" + s, c = "GET") : (l = p, c = "POST", u.query = i, u.queryId = n), g.includes(s) && (c = "POST"), (0, d.fetched)(l, {
			method: c,
			headers: {
				"content-type": "application/json"
			},
			params: u,
			account: t
		})
	}
	var w = (0, c.onError)(function(e) {
			var t = e.graphQLErrors,
				i = e.networkError,
				n = e.operation,
				r = n.getContext().queryId;
			if (t && t.forEach(function(e) {
					var t = e.code,
						i = e.kind,
						a = e.source,
						o = e.path,
						l = [].concat((0, s.default)(o || []), (0, s.default)([t, i, a].map(function(e) {
							return null != e ? e : ""
						}))).join(":"),
						c = "graphql:error:" + n.operationName + ":" + r + ":" + l;
					(0, h.metric)(c)
				}), i) {
				var a = i.statusCode;
				null == a && i.response && (a = i.response.status);
				var o = "graphql:response-error:" + n.operationName + ":" + r + ":" + (null == a ? "" : a);
				(0, h.metric)(o)
			}
		}),
		b = new a.ApolloLink(function(e) {
			return new a.Observable(function(t) {
				var i = e.query,
					n = e.operationName,
					s = e.variables,
					r = e.getContext(),
					a = r.queryId,
					o = r.account,
					c = v({
						query: i,
						queryId: a,
						operationName: n
					}),
					u = c.isValid,
					d = c.error;
				if (u) return T({
						query: i,
						queryId: a,
						operationName: n,
						variables: s
					}, o).then((0, l.parseAndCheckHttpResponse)(e)).then(function(e) {
						return t.next(e), t.complete(), e
					}).catch(function(e) {
						e.result && e.result.errors && e.result.data && t.next(e.result), t.error(e)
					}),
					function() {};
				t.error(d)
			})
		}),
		y = a.ApolloLink.from([w, b]);
	var _ = a.ApolloLink.from([w, new a.ApolloLink(function(e) {
		return new a.Observable(function(t) {
			var i = e.query,
				s = e.operationName,
				r = e.variables,
				a = e.getContext(),
				o = a.queryId,
				l = a.account,
				c = a.subscriptionOptions,
				d = v({
					query: i,
					queryId: o,
					operationName: s
				}),
				h = d.isValid,
				m = d.error;
			if (h) {
				var f = new u.GraphQLSubscription((0, n.default)({}, c, {
					executeGraphQLQuery: function() {
						return T({
							query: i,
							queryId: o,
							operationName: s,
							variables: r
						}, l)
					},
					callback: function(e) {
						t.next(e)
					}
				}));
				return function() {
					f.teardown()
				}
			}
			t.error(m)
		})
	})])
}, function(e, t, i) {
	"use strict";
	var n = a(i(331)),
		s = a(i(46)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.requestUsers = function(e) {
		var t = (0, s.default)("twitterUsers");
		return (0, r.default)(document).trigger("uiNeedsTwitterUsers", {
			requestId: t,
			userIds: e.map(function(e) {
				return e.id
			})
		}), t
	}, t.getFirstReply = function(e) {
		return e[0]
	}, t.getRecipientsToDisplay = function(e) {
		var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
			n = (e = t.dedupeAndFilterRecipients(e, i)).map(function(e) {
				return e.id
			});
		return e.length >= 4 ? {
			users: e.slice(0, 2),
			remainder: e.length - 2,
			userIds: n
		} : {
			users: e,
			remainder: 0,
			userIds: n
		}
	}, t.dedupeAndFilterRecipients = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
			t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
			i = new n.default(t);
		return e.filter(function(e) {
			var t = !i.has(e.id);
			return i.add(e.id), t
		})
	}, t.getImplicitMentions = function(e) {
		return e.filter(function(e) {
			return e.isImplicitMention
		}).map(function(e) {
			return {
				id: e.id_str,
				screenName: e.screen_name,
				name: e.name
			}
		})
	}, t.getDefaultModalOptions = function() {
		return {
			withNonDismissible: !1,
			withDismissButton: !0,
			withClickTrap: !0,
			withDraggable: !0,
			withDragHandle: !1,
			withHeader: !0,
			withHeaderDivider: !0,
			withBorder: !1,
			withFooter: !1,
			withDoneButton: !1,
			withContentClasses: ["width--600", "max-height--400", "seamful", "scroll-v"],
			withOverlayClasses: [""]
		}
	}
}, , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.linkifyUser = function(e) {
		var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).withBold,
			i = void 0 !== t && t,
			r = e.emojifiedName || s.default.cleanWithEmoji(e.name),
			a = e.screenName || e.screen_name;
		return n.default.render("text/user_link_fullname", {
			profileUrl: "https://twitter.com/" + a,
			name: r,
			withBold: i,
			unsafe: !0
		})
	};
	var n = r(i(6)),
		s = r(i(17));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = l(i(68)),
		s = l(i(15)),
		r = l(i(132)),
		a = l(i(0)),
		o = i(17);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = i(844);

	function u(e, t, i, n) {
		var s;
		return e.code ? s = function(e, t, i) {
			return 34 === e ? i && i.status && 0 === i.status.indexOf("DM") ? c.USER_DOES_NOT_EXIST : t.indexOf("show.json") > -1 ? c.USER_DOES_NOT_EXIST : c[404] : 88 === e ? t.indexOf("dm/new.json") > -1 ? c.RATE_LIMITED_DM_SEND : c.RATE_LIMITED : (0, r.default)(c, function(t) {
				return t.twitterErrorCode === e
			})
		}(e.code, i, n) : 403 === t.status && (e.indexOf("retweet") > -1 ? s = c.DUPLICATE_RETWEET : e.indexOf("Share validations failed") > -1 && (s = c.PROTECTED_TWEET)), s || (s = c.UNKNOWN), TD.controller.stats.apiErrorResponse(t.status, e.code, i), s
	}

	function d(e, t, i) {
		if (e) {
			var n = {
				rateLimitRemaining: parseInt(t.getResponseHeader("x-rate-limit-remaining"), 10),
				rateLimitTotal: parseInt(t.getResponseHeader("x-rate-limit-limit"), 10),
				rateLimitReset: parseInt(t.getResponseHeader("x-rate-limit-reset"), 10)
			};
			n.rateLimitTotal && n.rateLimitReset && (0, a.default)(document).trigger("dataRateLimit", {
				feedType: e,
				accountKey: i.getKey(),
				rateLimitData: n
			})
		}
	}
	e.exports = {
		processSuccessResponse: function(e, t, i, s) {
			if (!t.handleSuccess) return i;
			var r = i.data;
			if (t.processor) try {
				r = t.processor.call(s, i.data)
			} catch (e) {
				throw new Error("Error processing Twitter data (" + e.message + "): " + (0, n.default)(i.data))
			}
			return d(t.feedType, i.xhr, s.oauth.account), (0, a.default)(document).trigger("dataTwitterAccountAccessSuccess", {
				account: s.oauth.account
			}), {
				data: r,
				xhr: i.xhr
			}
		},
		processErrorResponse: function(e, t, i, n) {
			if (!t.handleError) throw i;
			var r;
			i.req = i.req || {};
			var o = [];
			if (i.req.responseText) {
				try {
					r = JSON.parse(i.req.responseText)
				} catch (i) {
					console.error("Failed to parse error responseText", i.req)
				}
				r && r.errors && ("string" == typeof r.errors ? o.push(u(r.errors, i.req, e, t.params)) : (0, s.default)(r.errors, function(n) {
					o.push(u(n, i.req, e, t.params))
				}))
			}
			throw i.req.errors = o,
				function(e) {
					var t = e.errors,
						i = e.xhr,
						n = e.originalMessage,
						s = e.options,
						r = e.account;
					(0, a.default)(document).trigger("dataTwitterApiError", {
						request: s,
						response: {
							xhr: i,
							ts: "",
							error: n
						},
						errors: t
					}), t.forEach(function(e, t, i) {
						var n = e.twitterErrorCode;
						if (n)
							if ((0, a.default)(document).trigger("metric", {
									key: "api:error:" + n
								}), 32 === n || 89 === n || 220 === n) {
								var s = TD.storage.store.getTwitterLoginAccount(),
									o = s && r.getUserID() === s.getUserID();
								(0, a.default)(document).trigger("dataTwitterAccountAccessDenied", {
									account: r,
									isLoginAccount: o
								})
							} else 64 === n && (0, a.default)(document).trigger("dataTwitterAccountSuspended", {
								account: r
							})
					})
				}({
					errors: o,
					xhr: i.req,
					originalMessage: i.msg,
					options: t,
					account: n
				}), d(t.feedType, i.req, n), i
		},
		logTweetProcessingError: function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			TD.controller.stats.generic({
				page: "api",
				component: "tweet",
				action: "failure"
			}, {
				custom_json_payload: {
					stack: t.stack,
					tweetId: e.id_str
				}
			}), (0, o.metric)("api:client:processtweet:failure")
		}
	}
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.hashflags = t.HashFlags = void 0;
	var n = c(i(1460)),
		s = c(i(1463)),
		r = c(i(14)),
		a = c(i(16)),
		o = c(i(100)),
		l = i(17);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = 36e5,
		d = t.HashFlags = function() {
			function e() {
				var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
					i = t.interval,
					n = void 0 === i ? u : i,
					s = t.isPolling,
					a = void 0 !== s && s,
					o = t.flags,
					l = void 0 === o ? [] : o;
				(0, r.default)(this, e), h.call(this), this.interval = n, this.isPolling = a, this.flags = l
			}
			return (0, a.default)(e, [{
				key: "start",
				value: function() {
					var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.interval;
					this.isPolling || (this.getFlags(), setInterval(this.getFlags, e), this.isPolling = !0)
				}
			}, {
				key: "get",
				value: function(e) {
					e = e.toLowerCase();
					var t = this.flags[e];
					return t && o.default.utc().isBetween((0, o.default)(Number(t.startingTimestampMs)), (0, o.default)(Number(t.endingTimestampMs))) ? t.assetUrl : null
				}
			}, {
				key: "optimize",
				value: function(e) {
					return e.reduce(function(e, t) {
						var i = t.startingTimestampMs,
							n = t.endingTimestampMs,
							s = t.assetUrl;
						return e[t.hashtag.toLowerCase()] = {
							startingTimestampMs: i,
							endingTimestampMs: n,
							assetUrl: s
						}, e
					}, {})
				}
			}]), e
		}(),
		h = function() {
			var e = this;
			this.getFlags = (0, s.default)(n.default.mark(function t() {
				var i, s, r, a;
				return n.default.wrap(function(t) {
					for (;;) switch (t.prev = t.next) {
						case 0:
							return i = (0, o.default)().utc().subtract(1, "hour").format("YYYY-MM-DD-HH"), s = "https://ton.twimg.com/hashflag/config-" + i + ".json", t.prev = 2, t.next = 5, fetch(s);
						case 5:
							return r = t.sent, t.next = 8, r.json();
						case 8:
							a = t.sent, e.flags = e.optimize(a), t.next = 15;
							break;
						case 12:
							t.prev = 12, t.t0 = t.catch(2), (0, l.metric)("api:hashflags:getFlags:failure");
						case 15:
						case "end":
							return t.stop()
					}
				}, t, e, [
					[2, 12]
				])
			}))
		};
	t.hashflags = new d
}, , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = f(i(26)),
		s = f(i(14)),
		r = f(i(16)),
		a = f(i(27)),
		o = f(i(28));
	t.renderCardForChirp = function(e, t, i) {
		var n = i.context,
			s = i.scribeNamespace;
		if (!(0, m.shouldShowCard)(e)) return;
		var r = e.possiblySensitive && !TD.settings.getDisplaySensitiveMedia(),
			a = !!t.closest(".is-inverted-dark").length;
		c.render(l.default.createElement(p, {
			card: e.card,
			cardContext: {
				tweetId: e.id,
				tweetPermalink: e.getChirpURL(),
				tweetUserId: e.getMainUser().id
			},
			legacyCardParams: {
				id: e.getMainTweet ? e.getMainTweet().id : e.id,
				isContributorAccount: e.account.isContributor(),
				accountUserId: e.account.getUserID(),
				isInvertedDark: a
			},
			context: n,
			isPossiblySensitive: !!r,
			scribeNamespace: s
		}), t[0])
	};
	var l = f(i(4)),
		c = (f(i(8)), function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(164))),
		u = f(i(2)),
		d = i(1898),
		h = f(i(748)),
		m = i(168);

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var p = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "renderLegacyCard",
			value: function() {
				var e = this.props,
					t = e.legacyCardParams,
					i = e.isPossiblySensitive;
				return l.default.createElement(d.LegacyCardReact, {
					cardName: this.props.card.name,
					isInvertedDark: t.isInvertedDark,
					isPossiblySensitive: i,
					isContributorAccount: t.isContributorAccount,
					accountUserId: t.accountUserId,
					id: t.id,
					context: this.props.context,
					scribeNamespace: this.props.scribeNamespace
				})
			}
		}, {
			key: "render",
			value: function() {
				var e = this;
				return (0, m.hasPoll)(this.props.card) ? l.default.createElement(g, {
					link: this.props.cardContext.tweetPermalink
				}) : l.default.createElement(h.default, {
					cardData: this.props.card,
					cardContext: this.props.cardContext,
					isPossiblySensitive: this.props.isPossiblySensitive,
					scribeNamespace: this.props.scribeNamespace,
					renderFallback: function() {
						return "detail" === e.props.context && (0, m.isAllowedLegacyCard)(e.props.card) ? e.renderLegacyCard() : null
					}
				})
			}
		}]), t
	}(l.default.Component);

	function g(e) {
		var t = e.link;
		return l.default.createElement("a", {
			"data-testid": "pollBadge",
			className: "media-badge txt-size-variable--12 txt-mute",
			href: t,
			rel: "url",
			target: "_blank"
		}, l.default.createElement("i", {
			className: "icon icon-poll txt-size-variable--15 align-top"
		}), " ", (0, u.default)("Poll"))
	}
	t.default = p
}, , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = a(i(65)),
		s = a(i(229)),
		r = i(830);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = {
		maxRecipientsReached: function(e) {
			return e.messageRecipients.length >= e.attr.maxRecipients
		},
		getMaxAllowedImages: function(e) {
			return "message" === e.tweetType ? 1 : 4
		},
		shouldSetNewReplyTo: function(e) {
			return !e.inReplyTo
		},
		onlyOneAccountIsSelected: function(e) {
			return 1 === e.selectedAccountKeys.length
		},
		existingConversation: function(e) {
			return !(!e.messageConversation && !e.messageRecipients.length)
		},
		keyIsInSelectedAccounts: function(e, t) {
			return e.selectedAccountKeys.some(function(e) {
				return e === t
			})
		},
		recipientsWithoutSelfMention: function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
			return 0 === t.length ? e : [].concat((0, n.default)(e.slice(0, 1)), (0, n.default)(e.slice(1).filter(function(e) {
				var i = (0, r.generateAccountKey)("twitter", e.id);
				return t.some(function(e) {
					return e !== i
				})
			})))
		},
		getUpdatedExcludedRecipientsIds: function(e, t) {
			var i = t.userId;
			return t.shouldExclude ? e.excludedRecipientsIds.concat(i) : (0, s.default)(e.excludedRecipientsIds, i)
		}
	};
	e.exports = o
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.makeSparklineDefaults = t.makeChartDefaults = t.getBackgroundColor = t.getSeriesGray = void 0;
	var n = a(i(9));
	t.getNamedChartColor = function(e, t) {
		return l[t % l.length]
	};
	var s = a(i(860)),
		r = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(364));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = ["#1DA1F2", "#17BF63", "#FFAD1F", "#794BC4"],
		l = ["blue", "green", "yellow", "purple"],
		c = {
			light: "#FFFFFF",
			dark: "#15202B"
		},
		u = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
			return o[t % o.length]
		},
		d = t.getSeriesGray = function() {
			return "#8899A6"
		};
	t.getBackgroundColor = function(e) {
		return e && c[e] || c.light
	};
	var h = t.makeChartDefaults = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		return (0, n.default)({
			datumInput: function(e) {
				return r.isoParse(1e3 * e.timestamp)
			},
			datumOutput: "count",
			inputTickSpacing: 1e3,
			defaultSeriesShape: s.default.seriesShapes.LINE,
			outputTickLabelFormat: "s",
			seriesColor: u,
			focusMode: s.default.focusModes.INPUT,
			tooltipOptions: {
				datumInputFormat: r.utcFormat("%B %-d, %Y %H:%M"),
				datumOutputFormat: ",.0f"
			},
			tickLabelColor: d()
		}, e)
	};
	t.makeSparklineDefaults = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		return (0, n.default)({}, h(), {
			outputTickLines: !1,
			outputTickLabels: !1,
			inputTickLines: !1,
			inputTickLabels: !1,
			transitionDurationMs: 0
		}, e)
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.highlightSubstring = o, t.highlightSubstringAndAddHashflag = function(e, t) {
		return o(e, t) + function(e) {
			var t = twttrTxt.extractHashtagsWithIndices(e),
				i = 1 === t.length && 0 === t[0].indices[0] && t[0].indices[1] === e.length,
				n = s.hashflags.get(e.replace("#", ""));
			if (!i || !n) return "";
			return a.default.render("text/hashflag", {
				hashFlagUrl: n
			})
		}(e)
	};
	var n, s = i(324),
		r = i(6),
		a = (n = r) && n.__esModule ? n : {
			default: n
		};

	function o(e, t) {
		var i, n, s = -1;
		return t && (s = e.toLowerCase().indexOf(t.toLowerCase())), -1 !== s ? (n = {
			before: e.substr(0, s),
			highlight: e.substr(s, t.length),
			after: e.substr(s + t.length)
		}, i = a.default.toHtmlFromRaw("{{before}}<b>{{highlight}}</b>{{after}}", n)) : i = a.default.toHtmlFromRaw("{{text}}", {
			text: e
		}), i
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(13),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(646),
		o = i(37);
	var l = ["ja", "zh-cn", "zh-tw", "ko"],
		c = a.configs.defaults;
	o.twitterTextEmojiDiscounting$.subscribe(function(e) {
		c = e ? a.configs.version3 : a.configs.defaults
	}), e.exports = {
		remainingPercentageThreshold: 7.2,
		getConfiguration: function() {
			return c
		},
		getLanguageWeight: function() {
			var e = (0, r.default)(navigator, "language", "");
			return l.includes(e.toLowerCase()) ? 2 : 1
		},
		getAvailableCharacterPercent: function(e) {
			var t = this.getConfiguration(),
				i = parseInt(t.maxWeightedTweetLength, 10);
			return 100 * (parseInt(e, 10) * this.getLanguageWeight()) / i
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = o(i(46)),
		s = o(i(48)),
		r = o(i(0)),
		a = o(i(6));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = i(5).compose,
		c = i(231);
	e.exports = function() {
		l.mixin(this, [c]), this.attributes({
			dropdownContainerSelector: ".js-dropdown-container",
			dropdownContentSelector: ".js-dropdown-content",
			isSelectableClass: "is-selectable",
			isSelectableSelector: ".is-selectable",
			isSelectedClass: "is-selected",
			isSelectedSelector: ".is-selected",
			dropdownOptions: {
				position: "",
				toggle: !1
			},
			dropdownPositions: {
				offsetLeft: "pos-l",
				offsetRight: "pos-r",
				underLeftIcon: "pos-r-under-icon",
				verticalRight: "pos-br",
				above: "pos-t"
			}
		}), this.after("initialize", function() {
			this.on(document, "uiDropdownShowing uiDetailViewOpening uiKeyEscape", this.teardownCurrentDropdown.bind(this)), this.dropdownFocusId = this.getNewFocusId(), this.on(document, "uiKeyEnter uiKeySpace", this.whenHasDropdownFocus(this.clickSelectedActionable)), this.on(document, "uiKeyUp", this.whenHasDropdownFocus(this.makeHandleChangeSelectionIndexBy(-1))), this.on(document, "uiKeyDown", this.whenHasDropdownFocus(this.makeHandleChangeSelectionIndexBy(1))), this.on(document, "uiKeyRight uiKeyLeft", this.whenHasDropdownFocus(this.jumpIntoDropdown))
		}), this.before("teardown", function() {
			this.teardownCurrentDropdown()
		}), this.renderDropdown = function(e, t, i, o) {
			if (!e || !e.length) throw new Error("Please supply a node to render dropdown with.");
			if (!t) throw new Error("Please supply a template.");
			i = i || {}, o = (0, s.default)(o || {}, this.attr.dropdownOptions);
			var l = (0, n.default)("dropdown");
			if (this.dropdownIsOpen()) {
				if (this.$dropdownSourceNode && e.get(0) === this.$dropdownSourceNode.get(0)) return o.toggle ? (this.trigger("uiDropdownToggling", {
					id: l
				}), this.teardownCurrentDropdown()) : this.trigger("uiDropdownAlreadyOpen", {
					id: l
				});
				this.teardownCurrentDropdown()
			}
			this.$dropdownSourceNode = e, this.trigger("uiDropdownShowing", {
				id: l
			});
			var c = t;
			"string" == typeof t && (c = (0, r.default)(a.default.render(t, i)));
			var u = (0, r.default)(a.default.render("menus/dropdown", o));
			return u.find(this.attr.dropdownContentSelector).append(c), e.after(u), this.currentDropdown = {
				$el: u,
				id: l
			}, this.maybeRepositionDropdown(), this.attachDropdownInteractions(u, o), this.parentFocusId = this.focusId, this.focusId = this.dropdownFocusId, this.focusRequest(), this.on(document, "click", this.handleDocumentClick), this.trigger("uiDropdownShown", {
				id: l
			}), u
		}, this.handleDocumentClick = function(e) {
			this.teardownCurrentDropdown()
		}, this.attachDropdownInteractions = function(e, t) {
			this.on(e, "mouseleave", this.removeCurrentSelection), this.on(e, "mouseover", {
				isSelectableSelector: this.handleChangeSelectionToTarget
			}), this.on(e, "click", this.cancelEventIfNotFromSelectable);
			var i = e.find(this.attr.isSelectableSelector),
				n = i.filter(this.attr.isSelectedSelector),
				s = i.index(n);
			this.currentDropdown.$selectables = i, this.currentDropdown.selectedIndex = s, s > -1 && this.changeSelectionToIndex(s)
		}, this.teardownCurrentDropdown = function(e, t) {
			if (e = e || {}, t = t || {}, this.dropdownIsOpen()) {
				if (t.id === this.currentDropdown.id) return;
				this.$dropdownSourceNode = null, this.trigger("uiDropdownHiding", {
					id: this.currentDropdown.id
				}), this.focusRelease(), this.focusId = this.parentFocusId;
				var i = this.currentDropdown.$el;
				this.off(document, "click", this.handleDocumentClick), this.off(i, "mouseleave", this.removeCurrentSelection), this.off(i, "mouseover"), this.off(i, "click", this.cancelEventIfNotFromSelectable), this.currentDropdown.$el.remove();
				var n = this.currentDropdown.id;
				this.currentDropdown = null, this.trigger("uiDropdownHidden", {
					id: n
				})
			}
		}, this.clickSelectedActionable = function() {
			this.currentDropdown.selectedIndex > -1 && this.currentDropdown.$selectables.eq(this.currentDropdown.selectedIndex).find("[data-action]").first().click()
		}, this.changeSelection = function(e) {
			var t = (0, r.default)(e),
				i = this.currentDropdown.$selectables.index(t.get(0));
			this.removeCurrentSelection(), i > -1 && (this.currentDropdown.$selectables.eq(i).addClass(this.attr.isSelectedClass), this.currentDropdown.selectedIndex = i)
		}, this.changeSelectionToIndex = function(e) {
			if (e < 0) return this.removeCurrentSelection();
			var t = this.currentDropdown.$selectables.eq(e);
			this.changeSelection(t)
		}, this.handleChangeSelectionToTarget = function(e, t) {
			this.changeSelection(t.el)
		}, this.makeHandleChangeSelectionIndexBy = function(e) {
			return function(t, i) {
				t.stopPropagation();
				var n = this.getNewSelectedIndex(e);
				this.changeSelectionToIndex(n)
			}
		}, this.removeCurrentSelection = function() {
			this.currentDropdown.$selectables.eq(this.currentDropdown.selectedIndex).removeClass(this.attr.isSelectedClass), this.currentDropdown.selectedIndex = -1
		}, this.getNewSelectedIndex = function(e) {
			void 0 === e && (e = 1);
			var t = this.currentDropdown.selectedIndex;
			if (0 === e) return t;
			var i = this.currentDropdown.$selectables.length,
				n = (t + e) % i;
			return t < 0 ? e > 0 ? 0 : i - 1 : n < 0 ? i + n : n
		}, this.whenHasDropdownFocus = function(e) {
			return this.whenHasFocus(function() {
				if (this.focusId === this.dropdownFocusId) return e.apply(this, arguments)
			})
		}, this.jumpIntoDropdown = function(e) {
			-1 === this.currentDropdown.selectedIndex && this.changeSelectionToIndex(0)
		}, this.cancelEventIfNotFromSelectable = function(e) {
			var t = this.currentDropdown.$el,
				i = (0, r.default)(e.target).closest(this.attr.isSelectableSelector, t);
			i.length || (event.stopPropagation(), event.preventDefault())
		}, this.dropdownIsOpen = function() {
			return !(!this.currentDropdown || !this.currentDropdown.$el)
		}, this.maybeRepositionDropdown = function() {
			var e, t, i, n, s, r = this.currentDropdown.$el,
				a = r.closest(this.attr.dropdownContainerSelector);
			a.length > 0 && !r.hasClass("pos-t") && (e = r.offset().top, s = r.outerHeight(), i = e + s, t = a.offset().top, n = t + a.height(), TD.util.isTouchDevice() && TD.decider.get("touchdeck_dropdowns_v2") && TD.decider.get("touchdeck_tweet_controls_v3") && (s += 25), i >= n && e - s > t && r.addClass("pos-t"))
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(282)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		this.attributes({
			eventMap: {
				uiDragStart: "dragstart",
				uiDragEnd: "dragend",
				mousedown: "predrag"
			},
			dropTargetClass: "with-drop-target",
			draggableSelector: ".is-draggable"
		}), this.setupDragDrop = function(e) {
			e.type || (e.type = ["*"]), "string" == typeof e.type && (e.type = [e.type]), (0, n.default)(e.type, "*") && (e.wantsAll = !0), void 0 !== e.indicateDrop && (this.indicateDrop = !!e.indicateDrop), e.drop && !1 !== this.indicateDrop && (this.indicateDrop = !0), this.listeners.push(e)
		}, this.hasSetupDragDrop = function() {
			return this.listeners.length > 0
		}, this.wantsDragType = function(e) {
			return this.listeners.some(function(t) {
				return t.wantsAll || (0, n.default)(t.type, e)
			})
		}, this.notifyListeners = function(e, t) {
			this.listeners.forEach(function(i) {
				if (i.wantsAll || (0, n.default)(i.type, t.type)) {
					var s = i[e.type] || i[this.attr.eventMap[e.type]];
					s && "function" == typeof s && s.call(i.context || this, e, t)
				}
			}.bind(this))
		}, this.saveDragState = function(e) {
			return function(t, i) {
				return this.dragDropState = {
					active: !0,
					data: i
				}, e.apply(this, [].slice.call(arguments))
			}
		}, this.clearDragState = function(e) {
			return function(t, i) {
				return this.dragDropState = this.dragDropStateInit, e.apply(this, [].slice.call(arguments))
			}
		}, this.retrieveDragState = function(e) {
			return function(t) {
				return e.call(this, t, this.dragDropState.data)
			}
		}, this.retrieveAndNotify = function() {
			return this.retrieveDragState(this.notifyListeners)
		}, this.extractDataFromEvent = function(e) {
			var t = e.target.tagName.toLowerCase(),
				i = (0, s.default)(e.target).attr("data-drag-type") || t;
			return {
				type: i,
				el: e.target
			}
		}, this.whenActive = function(e) {
			return function(t) {
				var i = this.dragDropState.active && this.wantsDragType(this.dragDropState.data.type);
				if (i) return e.apply(this, arguments)
			}.bind(this)
		}, this.whenSetup = function(e) {
			return function() {
				if (this.hasSetupDragDrop()) return e.apply(this, arguments)
			}.bind(this)
		}, this.whenSetupAndActive = function(e) {
			return this.whenSetup(this.whenActive(e))
		}, this.before("initialize", function() {
			this.listeners = [], this.dragDropState = this.dragDropStateInit = {
				active: !1,
				data: {}
			}, this.indicateDrop = !0, this.dragDepth = 0
		}), this.after("initialize", function() {
			this.on(document, "uiDragStart", this.whenSetup(this.saveDragState(this.notifyListeners))), this.on(document, "uiDragEnd", this.whenSetup(function() {
				this.dragDepth = 0, this.clearDragState(this.notifyListeners).apply(this, arguments)
			})), this.on("drop", this.whenSetupAndActive(function(e) {
				e.preventDefault(), this.dragDepth = 0, this.retrieveAndNotify().apply(this, arguments)
			})), this.on("dragenter", this.whenSetupAndActive(function(e) {
				this.dragDepth += 1, 1 === this.dragDepth && this.retrieveAndNotify().apply(this, [].slice.call(arguments))
			})), this.on("dragleave", this.whenSetupAndActive(function(e) {
				this.dragDepth -= 1, this.dragDepth <= 0 && (this.dragDepth = 0, this.retrieveAndNotify().apply(this, [].slice.call(arguments)))
			})), this.on("dragover", this.whenSetupAndActive(function(e) {
				!0 === this.indicateDrop && e.preventDefault(), this.retrieveAndNotify().apply(this, [].slice.call(arguments))
			})), this.on("mousedown", {
				draggableSelector: this.whenSetup(function(e, t) {
					var i = this.extractDataFromEvent({
						target: t.el
					});
					this.notifyListeners(e, i)
				})
			})
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(48),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(880);
	e.exports = {
		makeElementVisible: function(e, t, i) {
			if (!e.length || !t.length) return;
			i = (0, r.default)(i || {}, {
				time: 300,
				easing: "inOutQuad"
			});
			var n = e.outerHeight(),
				s = t.outerHeight(),
				o = e.scrollTop(),
				l = function(e, t) {
					var i = e.offset(),
						n = t.offset();
					return {
						top: n.top - i.top,
						left: n.left - i.left
					}
				}(e, t).top,
				c = l + s,
				u = o;
			c > n && (u = o + (c - n));
			l < 0 && (u = o + l);
			return a.ease({
				from: o,
				to: u,
				time: i.time,
				easing: a.easeFn(i.easing),
				applicator: function(t) {
					e.scrollTop(t)
				}
			})
		}
	}
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = g(i(68)),
		s = g(i(32)),
		r = g(i(1431)),
		a = g(i(77)),
		o = g(i(132)),
		l = g(i(55)),
		c = g(i(253)),
		u = g(i(15)),
		d = g(i(425)),
		h = g(i(80)),
		m = g(i(43)),
		f = g(i(110)),
		p = i(19);

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var v = {};
	e.exports = v;
	v.NotJsonable = function(e) {
		(0, f.default)(this, e), this.___ = e.toString()
	}, v.NotJsonable.prototype = {};
	var T = function(e) {
		console.log.apply(console, (0, m.default)(e, function(e) {
			if (!(0, h.default)(e)) try {
				return JSON.parse((0, n.default)(e))
			} catch (t) {
				return new v.NotJsonable(e)
			}
		}))
	};
	v.stateLog = function() {
		TD.config.debug_level >= 2 && T(arguments)
	}, v.verboseLog = function() {
		TD.config.debug_level >= 4 && T((0, d.default)(arguments))
	}, v.warn = function() {
		TD.config.debug_level >= 0 && console.log.apply(console, (0, d.default)(arguments))
	}, v.trace = function(e) {
		if (TD.config.debug_level >= 1) {
			for (var t, i = arguments.length, n = Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++) n[s - 1] = arguments[s];
			(t = console).log.apply(t, ["TRACE: " + e + ": "].concat(n))
		}
	}, v.printStacktrace = function() {
		if (TD.config.debug_menu) try {
			throw new Error
		} catch (e) {
			console.log(e.stack)
		}
	}, v.getStack = function() {
		try {
			throw new Error
		} catch (e) {
			return TD.util.isChromeApp() ? e.stack.split("\n").slice(2).join("\n") : ""
		}
	}, v.assert = function(e, t, i) {
		if (!e) throw console.log("------------------------------------------"), console.log(["ASSERT FAILURE", t, i]), v.printStacktrace(), console.log("------------------------------------------"), TD.sync.trace && TD.sync.trace.assert(t, i), new Error("AssertionError")
	}, v.precondition = function(e, t, i) {
		if (!e) throw console.log("------------------------------------------"), console.log(["PRECONDITION FAILURE", t, i]), v.printStacktrace(), console.log("------------------------------------------"), TD.sync.trace && TD.sync.trace.assert("PRECONDITION " + t, i), new Error("PreconditionAssertionError")
	}, v.warning = function(e) {
		var t = (0, d.default)(arguments).slice(1);
		console.log(["WARNING", e, v.pformat(t)])
	}, v.error = function(e) {
		var t = (0, d.default)(arguments).slice(1);
		console.log(["ERROR", e, v.pformat(t)])
	}, v.list_to_set = function(e) {
		var t = {};
		return (0, u.default)(e, function(e) {
			t[e] = !0
		}), t
	}, v.pformat = function(e) {
		return (0, n.default)(e, null, "  ")
	}, v.repr = function(e) {
		return (0, n.default)(e)
	}, v.clone = function(e) {
		if (null === e || (0, h.default)(e)) return e;
		try {
			return JSON.parse((0, n.default)(e))
		} catch (t) {
			return v.stateLog("util.clone couldn't parse object", e, t), ["<not jsonable>", e]
		}
	}, v.dictMap = function(e, t, i) {
		var n = {};
		return (0, u.default)((0, m.default)(e, t, i), function(e) {
			n[e[0]] = e[1]
		}), n
	}, v.stall = function(e, t) {
		(0, h.default)(t) && (t = 0);
		var i = new TD.core.defer.Deferred;
		return (0, c.default)((0, l.default)(i.callback, i), 1e3 * t, e), i
	}, v.autoRetry = function(e, t, i) {
		var n = e();
		return t.forEach(function(t) {
			n.addErrback(function(n) {
				if (!i || i(n)) {
					var s = new TD.core.defer.Deferred;
					return s.addCallback(e), setTimeout(function() {
						s.callback()
					}, t), s
				}
				return n
			})
		}), n
	}, v.DO_THING_ANYWAY = "doThingAnyway", v.deDupeDeferred = function(e, t) {
		var i = [];
		return t = t || function() {},
			function() {
				var n = function(n) {
					var s = (0, o.default)(i, function(e) {
						return (0, a.default)(e.args, n)
					});
					return s || (s = {
						args: (0, r.default)(n),
						needsThingDone: !0,
						deferreds: [],
						doThing: function() {
							var t = [null].concat((0, r.default)(n));
							return TD.core.defer.maybeDeferred(e.bind.apply(e, t))
						},
						beforeDeDupe: function() {
							var e;
							try {
								e = t.apply(null, (0, r.default)(n))
							} catch (e) {}
							return e
						}
					}, i.push(s)), s
				}([].slice.call(arguments));
				if (!n.needsThingDone && n.beforeDeDupe() === v.DO_THING_ANYWAY) return n.doThing();
				var s = new TD.core.defer.Deferred;
				return n.deferreds.push(s), n.needsThingDone && (n.needsThingDone = !1, n.doThing().addBoth(function(e) {
					i = i.filter(function(t) {
						return t !== e
					});
					var t = [].slice.call(arguments, 1);
					e.deferreds.forEach(function(e) {
						e.callback.apply(e, t)
					})
				}.bind(null, n))), s
			}
	}, v.makeThingScheduler = function(e, t, i, n, r) {
		var a = !1,
			o = !1;
		n = n || function() {
			return !0
		}, r = (0, h.default)(r) ? 1 : r;
		var c = [],
			u = function i() {
				if (a && !o) {
					if (o = !0, a = !1, t) var n = (0, p.showNotification)({
						message: t,
						timeoutDelayMs: 1 / 0
					});
					var r = TD.core.defer.maybeDeferred(e);
					r.addCallback(function(e) {
						if (o = !1, t && (0, p.removeNotification)({
								notification: n,
								timeoutDelayMs: 100
							}), a) i();
						else {
							var r = c;
							c = [];
							for (var u = 0; u < r.length; u++) try {
								r[u].callback(e)
							} catch (e) {
								(0, s.default)((0, l.default)(r[u].errback, r[u]), e)
							}
						}
					}), r.addErrback(function(e) {
						o = !1, t && ((0, p.removeNotification)({
							notification: n,
							timeoutDelayMs: 100
						}), (0, p.showErrorNotification)({
							message: "Error with " + t
						}));
						var i = c;
						c = [];
						for (var r = 0; r < i.length; r++) try {
							i[r].errback(e)
						} catch (e) {
							(0, s.default)((0, l.default)(i[r].errback, i[r]), e)
						}
					})
				}
			};
		return function(e) {
			if (!n()) return TD.core.defer.succeed();
			e = (0, h.default)(e) ? r : e, a = !0;
			var t = new TD.core.defer.Deferred;
			return c.push(t), setTimeout(u, 1e3 * e), t
		}
	}
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n, s = i(9);
	(n = s) && n.__esModule;
	TD.buildID = "eaa4dd9d220d59ad2697caa42876b7d8f3073c67", TD.buildIDShort = "oldtweetdeck", TD.version = "4.0.220811153004", TD.config = i(1812), e.exports = TD.config
}, function(e, t, i) {
	"use strict";
	e.exports = {
		minimum_version: "4.0.190610153508",
		web_root: "https://tweetdeck.twitter.com",
		api_root: "https://tweetdeck.twitter.com",
		twitter_api_base: "https://api.twitter.com",
		twitter_api_version: "1.1",
		twitter_stream_base: "https://userstream.twitter.com",
		twitter_upload_base: "https://upload.twitter.com",
		td_create_key: "WRaMQNHU2Jy51bhFEL3C",
		td_create_secret: "MiLkmD1t1xlZqKoLLY8ScxX5gwpOQsjBopZcV4KLcuo=",
		// bearer_token: "AAAAAAAAAAAAAAAAAAAAAF7aAAAAAAAASCiRjWvh7R5wxaKkFp7MM%2BhYBqM%3DbQ0JPmjU9F6ZoMhDfI4uTNAaQuTDm2uO9x3WFVr2xBZ2nhjdP0",
		bearer_token: "AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA",
		mapbox_access_token: "pk.eyJ1IjoidHdpdHRlcmdlbzQ0YWJjN2IiLCJhIjoiY2lyNmY4bzlkMDBkc2cybmZ0ZDhmOXpiOSJ9.ZqJPuJTqqxFLO0oUD0zFAw",
		client_name: "blackbird",
		sync_name: "blackbird",
		touchdeck: !0
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.captureException = void 0;
	var n = a(i(111)),
		s = a(i(461)),
		r = i(58);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = null;
	(0, r.getStreamForFeatureFlag)("tweetdeck_error_collection").first(function(e) {
		return e
	}).subscribe(function() {
		o = i.e(55).then(i.t.bind(null, 2644, 7)).then(function(e) {
			return e.init({
				dsn: "https://363cb598d1cc4b0ba83656c03e1e3f92@sentry.io/1352207",
				release: TD.version,
				environment: "production",
				debug: !1,
				integrations: function(e) {
					return e.filter(function(e) {
						return "TryCatch" !== e.name && "GlobalHandlers" !== e.name
					})
				},
				beforeSend: function(e) {
					return (0, r.getValueForFeatureFlag)("tweetdeck_error_collection") ? e : null
				}
			}), e
		})
	});
	t.captureException = function(e, t) {
		o && o.then(function(i) {
			return t ? i.withScope(function(r) {
				(0, s.default)(t).forEach(function(e) {
					var t = (0, n.default)(e, 2),
						i = t[0],
						s = t[1];
					r.setExtra(i, s)
				}), i.captureException(e)
			}) : i.captureException(e)
		})
	}
}, , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.namespaceStringFromTerms = function(e) {
		return n.map(function(t) {
			return e[t] || ""
		}).join(":")
	}, t.scribeTermsMatch = s, t.scribeQueryMatch = function(e, t) {
		return s(t, e)
	};
	var n = ["client", "page", "section", "component", "element", "action"];

	function s(e, t) {
		var i = t.split(":");
		return n.every(function(t, n) {
			var s = e[t] || "",
				r = i[n] || "";
			return "*" === r || r === s
		})
	}
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = g(i(9)),
		s = g(i(108)),
		r = g(i(14)),
		a = g(i(16)),
		o = g(i(808)),
		l = g(i(13));
	t.getAccountPipeline = function(e) {
		var t = e.getUserID();
		T.has(t) || T.set(t, new w(e));
		return T.get(t)
	};
	var c = i(2110),
		u = g(i(36)),
		d = i(809),
		h = i(131),
		m = i(278),
		f = g(i(109)),
		p = i(17);

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var v = c.NativeEventSource || c.EventSourcePolyfill,
		T = new o.default;
	var w = function() {
		function e(t) {
			var i = this;
			(0, r.default)(this, e), this.updateSubscriptions = function(e) {
				var t = e.toSubscribe,
					n = void 0 === t ? [] : t,
					s = e.toUnsubscribe,
					r = void 0 === s ? [] : s,
					a = e.sessionId,
					o = void 0 === a ? "" : a;
				(0, p.metric)("project-content:live-pipeline-update-subscriptions");
				var l = TD.config.twitter_api_base + "/" + TD.config.twitter_api_version + "/live_pipeline/update_subscriptions";
				return i.makeFetched(l, {
					method: "POST",
					headers: {
						"LivePipeline-Session": o
					},
					params: {
						sub_topics: n.join(","),
						unsub_topics: r.join(",")
					},
					account: i.account
				})
			}, this.account = t;
			var n = (0, h.maybeAddContributorsHeaders)({}, t);
			this.livepipeline = new d.LivePipeline({
				makeEventSource: function(e) {
					return t.isContributor() ? i.makeEventSourcePolyfill(n, e) : i.makeEventSource(e)
				},
				updateSubscriptions: this.updateSubscriptions
			})
		}
		return (0, a.default)(e, [{
			key: "makeEventSource",
			value: function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
					t = (0, f.default)(TD.config.twitter_api_base + "/live_pipeline/events").query({
						topic: e.join(",")
					});
				return (0, p.metric)("project-content:event-source"), s.default.resolve(new v(t, {
					withCredentials: !0
				}))
			}
		}, {
			key: "makeEventSourcePolyfill",
			value: function(e) {
				var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
					i = (0, f.default)(TD.config.twitter_api_base + "/live_pipeline/events").query({
						topic: t.join(",")
					}),
					n = {
						withCredentials: !0,
						headers: e
					};
				(0, p.metric)("project-content:event-source-polyfill");
				var r = new c.EventSourcePolyfill(i, n);
				return r ? s.default.resolve(r) : s.default.reject(new Error("could not polyfill"))
			}
		}, {
			key: "makeFetched",
			value: function(e, t) {
				return (0, h.fetched)(e, t)
			}
		}, {
			key: "subscribe",
			value: function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
					t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
				this.updateSubscriptions({
					toSubscribe: e,
					sessionId: t
				})
			}
		}, {
			key: "unsubscribe",
			value: function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
					t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
				this.updateSubscriptions({
					toUnsubscribe: e,
					sessionId: t
				})
			}
		}, {
			key: "subscribeToTweetEngagement",
			value: function(e) {
				if (!e) return u.default.Observable.empty();
				var t = "/tweet_engagement/" + e;
				return this.subscribeToTopic(t)
			}
		}, {
			key: "subscribeToTopic",
			value: function(e) {
				var t = this;
				return e ? u.default.Observable.create(function(i) {
					var n = t.livepipeline.subscribeTopic(e, function(t) {
						i.next({
							topic: e,
							payload: t
						})
					});
					return function() {
						return n.teardown()
					}
				}) : u.default.Observable.empty()
			}
		}, {
			key: "subscribeToGraphQLQuery",
			value: function(e) {
				var t = this,
					i = "ok",
					s = new u.default.BehaviorSubject(i);
				return e ? {
					status$: s.distinctUntilChanged(),
					messages$: u.default.Observable.create(function(r) {
						var a = new b(4e4, function() {
								i = "notOk", s.next(i), (0, p.metric)("project-content:subscribe:ok-missing")
							}),
							o = (0, m.graphqlSubscription)((0, n.default)({}, e, {
								account: t.account
							}), {
								livePipeline: t.livepipeline,
								onSubscriptionStatus: function(e) {
									"Ok" === e && (a.reset(), i = "ok", s.next(i)), (0, p.metric)("project-content:subscribe:status-" + e.toLowerCase())
								},
								onGraphQLResponse: function(e) {
									return (0, p.metric)("project-content:subscribe:graphql-response-" + e)
								},
								onBackoff: function(e) {
									return (0, p.metric)("project-content:subscribe:backoff", [e], "metric")
								}
							}).subscribe(function(e) {
								r.next({
									payload: (0, l.default)(e, "data"),
									errors: (0, l.default)(e, "errors")
								})
							});
						return function() {
							a.stop(), o.unsubscribe()
						}
					})
				} : {
					status$: s,
					messages$: u.default.Observable.empty()
				}
			}
		}]), e
	}();
	t.default = w;
	var b = function() {
		function e(t, i) {
			(0, r.default)(this, e), this.onTimeout = i, this.timeoutMs = t
		}
		return (0, a.default)(e, [{
			key: "reset",
			value: function() {
				this.stop(), this.intervalId = setInterval(this.onTimeout, this.timeoutMs)
			}
		}, {
			key: "stop",
			value: function() {
				this.intervalId && clearInterval(this.intervalId)
			}
		}]), e
	}()
}, function(e, t, i) {
	"use strict";
	var n = a(i(515)),
		s = a(i(43)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(6),
		l = i(83),
		c = i(231);
	e.exports = l.mixin(function() {
		this.attributes({
			replies: null,
			excludedRecipientsIds: [],
			withUserBio: !0,
			replyCheckboxSelector: ".js-reply-checkbox",
			autoFocus: !0,
			withComposeContext: !1
		}), this.after("initialize", function() {
			var e = this.attr,
				t = e.replies,
				i = e.excludedRecipientsIds,
				r = t[0];
			(0, s.default)(t, function(e, t) {
				e.isChecked = !(0, n.default)(i, e.id)
			}), r.isChecked = !0, r.isDisabled = !0;
			var a = o.render("compose/reply_list", this.attr);
			this.$node.html(a), this.on("change", {
				replyCheckboxSelector: this.handleReplyCheckbox
			})
		}), this.handleReplyCheckbox = function(e, t) {
			var i = (0, r.default)(t.el).attr("data-id"),
				n = !t.el.checked;
			this.trigger(document, "uiRecipientToggledFromList", {
				userId: i,
				shouldExclude: n
			})
		}
	}, c)
}, , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(44),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	t.trackQuerySupportedByContent = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
			t = !0;
		if (!(e = String(e || "").trim()).length) return (0, a.metric)("project-content:unsupported-search-reason:empty-query"), !1;
		e.match(/"[^"]+"/) && ((0, a.metric)("project-content:unsupported-search-reason:phrase"), t = !1);
		e.match(/\bfilter:/) && ((0, a.metric)("project-content:unsupported-search-reason:filter"), t = !1);
		e.match(/\binclude:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-include"), t = !1);
		e.match(/\bexclude:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-exclude"), t = !1);
		e.match(/\bto:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-to"), t = !1);
		e.match(/\bfrom:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-from"), t = !1);
		e.match(/\blist:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-list"), t = !1);
		e.match(/\blang:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-lang"), t = !1);
		e.match(/\bsource:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-source"), t = !1);
		e.match(/\bmin_replies:/) && ((0, a.metric)("project-content:unsupported-search-reason:min-replies"), t = !1);
		e.match(/\bmin_retweets:/) && ((0, a.metric)("project-content:unsupported-search-reason:min-retweets"), t = !1);
		e.match(/\bmin_faves:/) && ((0, a.metric)("project-content:unsupported-search-reason:min-faves"), t = !1);
		e.match(/\bmin_reputation:/) && ((0, a.metric)("project-content:unsupported-search-reason:min_reputation"), t = !1);
		e.match(/\bnear:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-near"), t = !1);
		e.match(/\bwithin:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-within"), t = !1);
		e.match(/\bplace:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-place"), t = !1);
		e.match(/\bsince_id:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-since_id"), t = !1);
		e.match(/\bmax_id:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-max_id"), t = !1);
		e.match(/\bsince(_time)?:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-since"), t = !1);
		e.match(/\buntil(_time)?:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-until"), t = !1);
		e.match(/\bwithin_time:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-within_time"), t = !1);
		e.match(/\bcard_name:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-card_name"), t = !1);
		e.match(/\bcard_domain:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-card_domain"), t = !1);
		e.match(/\burl:/) && ((0, a.metric)("project-content:unsupported-search-reason:operator-url"), t = !1);
		e.match(/\B\-\w+/) && !o && ((0, a.metric)("project-content:unsupported-search-reason:negation"), t = !1);
		var i = e.match(c);
		i && (i.forEach(function(e) {
			var t = l[e];
			(0, a.metric)("project-content:unsupported-search-reason:disallowed-character-" + t)
		}), (0, a.metric)("project-content:unsupported-search-reason:disallowed-characters"), t = !1);
		e.match(u) && ((0, a.metric)("project-content:unsupported-search-reason:operator-or"), t = !1);
		e.match(h) && ((0, a.metric)("project-content:unsupported-search-reason:scriptio-continua"), t = !1);
		e.match(d) || ((0, a.metric)("project-content:unsupported-search-reason:no-unicode-word-characters"), t = !1);
		return t
	};
	var a = i(17);
	var o = !1;
	i(37).streamSearchesWithNegation$.subscribe(function(e) {
		o = e
	});
	var l = {
			"!": "exclamation-mark",
			'"': "quotation-mark",
			"%": "percent-sign",
			"&": "ampersand",
			"'": "apostrophe",
			"*": "asterisk",
			",": "comma",
			".": "full-stop",
			"/": "solidus",
			";": "semicolon",
			"<": "less-than-sign",
			"=": "equals-sign",
			">": "greater-than-sign",
			"?": "question-mark",
			"[": "left-square-bracket",
			"]": "right-square-bracket",
			"^": "circumflex-accent",
			"{": "left-curly-bracket",
			"|": "vertical-line",
			"}": "right-curly-bracket",
			"~": "tilde",
			"“": "left-double-quotation-mark",
			"”": "right-double-quotation-mark",
			"♦": "black-diamond-suit"
		},
		c = new RegExp("[" + (0, r.default)(l).map(function(e) {
			return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
		}).join("") + "]", "g"),
		u = /\bOR\b/,
		d = /[0-9A-Z_a-z](?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*/g,
		h = /(?:[\u0E00-\u0E7F\u3040-\u30FF\u31F0-\u31FF\u3300-\u4DB5\u4E00-\u9FFF\uA980-\uA9DF\uF900-\uFAFF]|[\uD840-\uD868\uD86A-\uD879][\uDC00-\uDFFF]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD87A[\uDC00-\uDFEF]|\uD87E[\uDC00-\uDE1F])/
}, , , function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_profile_empty@2x.41be8a92c4.jpg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_profile_empty.b902792cc4.jpg"
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.PLACE_TYPE = void 0;
	var n = r(i(14)),
		s = r(i(16));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = t.PLACE_TYPE = {
			SUPERNAME: 19,
			COUNTRY: 12,
			TOWN: 7
		},
		o = function() {
			function e() {
				(0, n.default)(this, e), this.placeType = null, this.name = "", this.woeid = -1, this.url = "", this.countryCode = "", this.country = "", this.label = "", this.sortString = "", this.isTown = !1
			}
			return (0, s.default)(e, [{
				key: "fromJSONObject",
				value: function(e) {
					switch (this.name = e.name, this.woeid = e.woeid, this.url = e.url, this.countryCode = e.countryCode, this.country = e.country, this.placeType = e.placeType, this.placeType.code) {
						case a.TOWN:
							this.label = "—" + this.name, this.sortString = this.country + this.name, this.isTown = !0;
							break;
						case a.SUPERNAME:
							this.label = this.name.toUpperCase(), this.sortString = "";
							break;
						default:
							this.label = this.name, this.sortString = this.name
					}
					return this
				}
			}]), e
		}();
	t.default = o
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.GridChartReact = void 0;
	var n = g(i(9)),
		s = g(i(26)),
		r = g(i(14)),
		a = g(i(16)),
		o = g(i(27)),
		l = g(i(28)),
		c = i(4),
		u = g(c),
		d = (g(i(8)), function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(364))),
		h = i(2347),
		m = g(i(859)),
		f = i(358),
		p = i(7);

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var v = function(e) {
		function t() {
			return (0, r.default)(this, t), (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).apply(this, arguments))
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "renderLegend",
			value: function() {
				if (!this.props.chartData) return null;
				var e = this.props.chartOptions;
				return this.props.chartData.map(function(t, i) {
					return u.default.createElement(m.default, {
						key: t.label || i,
						className: "margin-r--20",
						color: e.seriesColor(null, i),
						label: t.label,
						value: TD.util.truncateNumber(d.sum(t.data, function(e) {
							return e.count
						}))
					})
				})
			}
		}, {
			key: "render",
			value: function() {
				return u.default.createElement(c.Fragment, null, u.default.createElement("div", {
					className: "flex"
				}, this.props.displayLegend ? this.renderLegend() : null), u.default.createElement(h.GridChartTimeSeriesUtc, (0, n.default)({}, this.props.chartOptions, {
					data: this.props.chartData,
					style: {
						width: this.props.chartWidth,
						height: this.props.chartHeight
					}
				})))
			}
		}]), t
	}(c.Component);
	v.defaultProps = {
		displayLegend: !0,
		chartOptions: (0, f.makeChartDefaults)(),
		chartWidth: "100%",
		chartHeight: "300px"
	}, t.default = (0, p.reactToUiBase)(v);
	t.GridChartReact = v
}, , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = o(i(9));
	t.fetchAccountSyncState = function() {
		return (0, s.graphqlRequest)(r.default).then(function(e) {
			return e && e.data && e.data.accountsync_onboarding_state
		}).catch(function(e) {
			return {
				beta_survey_dismissed: !1,
				show_opt_in_modal: !1
			}
		})
	}, t.updateOptInModalDismissed = function(e) {
		return (0, s.graphqlRequest)((0, n.default)({}, a.default, {
			variables: {
				optInModalDismissed: e
			}
		})).catch(function() {})
	}, t.updateUserOptedIn = function(e) {
		return (0, s.graphqlRequest)((0, n.default)({}, a.default, {
			variables: {
				userOptedIn: e
			}
		})).catch(function() {})
	}, t.updateBetaSurveyDismissed = function(e) {
		return (0, s.graphqlRequest)((0, n.default)({}, a.default, {
			variables: {
				betaSurveyDismissed: e
			}
		})).catch(function() {})
	};
	var s = i(278),
		r = o(i(2431)),
		a = o(i(2432));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = i(5).component,
		s = i(2466);
	e.exports = n(function() {
		this.attributes({
			searchControlSelector: ".js-search-input-control"
		}), this.waitingForAsyncResponse = function(e, t) {
			this.trigger(this.$searchControls, "uiAsyncFormWaitingForResponse")
		}, this.receivedAsyncResponse = function(e, t) {
			this.trigger(this.$searchControls, "uiAsyncFormReceivedResponse")
		}, this.handleSearchInputCleared = function() {
			this.$node.closest("form").submit()
		}, this.destroy = function(e, t) {
			this.teardown()
		}, this.before("teardown", function() {
			this.trigger(this.$searchControls, "uiSearchInputDestroy")
		}), this.after("initialize", function() {
			this.on("uiReceivedAsyncResponse", this.receivedAsyncResponse), this.on("uiWaitingForAsyncResponse", this.waitingForAsyncResponse), this.on("uiDestroyAsynchronousForm", this.destroy), this.on("uiSearchInputCleared", this.handleSearchInputCleared), this.$searchControls = this.select("searchControlSelector"), s.attachTo(this.$searchControls)
		})
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = d(i(9));
	t.getTrends = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
			t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : g(),
			i = m + "/trends/plus.json",
			n = {
				account: t,
				handleSuccess: !0,
				handleError: !0,
				method: "GET",
				processor: p,
				params: e
			},
			r = c.default.request(i, n);
		return r.addCallbacks(function(e) {
			return s.default.processSuccessResponse(i, n, e, {
				oauth: {
					account: t
				}
			}).data
		}, function(e) {
			return s.default.processErrorResponse(i, n, e, t)
		}), r
	}, t.getTrendLocations = function() {
		var e = m + "/trends/available.json",
			t = g(),
			i = {
				account: t,
				handleSuccess: !0,
				handleError: !0,
				method: "GET",
				processor: f
			},
			n = c.default.request(e, i);
		return n.addCallbacks(function(n) {
			return s.default.processSuccessResponse(e, i, n, {
				oauth: {
					account: t
				}
			}).data
		}, function(n) {
			return s.default.processErrorResponse(e, i, n, t)
		}), n
	}, t.fetchHorizonWebCardDataFromGraphQL = function(e) {
		return (0, u.graphqlRequest)((0, n.default)({}, l.default, {
			variables: {
				tweet_id: e
			}
		}))
	};
	var s = d(i(284)),
		r = d(i(842)),
		a = d(i(523)),
		o = i(17),
		l = d(i(2489)),
		c = d(i(131)),
		u = i(278);

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = TD.config,
		m = h.twitter_api_base + "/" + h.twitter_api_version;

	function f(e) {
		return e.map(function(e) {
			return (new a.default).fromJSONObject(e)
		}).sort(o.compareBySortString)
	}

	function p(e) {
		return e.modules.map(function(e) {
			return (new r.default).fromJSONObject({
				name: e.trend.name,
				query: e.trend.target.query,
				metaDescription: e.trend.meta_description,
				rank: e.trend.rank,
				target: e.trend.target,
				badges: e.trend.badges
			})
		})
	}

	function g() {
		return TD.storage.accountController.getPreferredAccount("twitter")
	}
}, function(e, t, i) {
	"use strict";
	var n = a(i(13)),
		s = a(i(85)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component,
		l = i(875),
		c = i(2492),
		u = i(2493),
		d = i(2494),
		h = i(2495),
		m = i(2496),
		f = i(2497),
		p = i(2498);
	e.exports = o(function() {
		this.attributes({
			inputSelector: ".js-app-search-input",
			dropdownSelector: ".js-typeahead-dropdown",
			itemsSelector: ".js-typeahead-item",
			itemSelectedClass: "is-selected",
			itemSelectedSelector: ".js-typeahead-item.is-selected",
			deciders: {
				showDebugInfo: !1
			},
			datasources: ["topics", "savedSearches", "recentSearches", "users", "lists", "conversations", "locations"],
			limits: {
				users: 5,
				topics: 5,
				lists: 2,
				conversations: 3,
				locations: 4
			},
			datasourcesRecentOnly: ["recentSearches"],
			queryTypes: ["topic", "saved-search", "recent-search", "user", "conversation", "location"],
			minHeight: 300,
			hideAfterSelect: !1,
			autoSelect: !1,
			delayOnInputInMs: 0,
			withClickTrap: !1
		}), this.after("initialize", function() {
			if (this.query = null, this.on(document, "dataTypeaheadSuggestions", this.handleDataTypeaheadSuggestions), this.on("uiTypeaheadInputFocus", this.handleTypeaheadInputFocus), this.on("uiTypeaheadInputBlur", this.handleTypeaheadInputBlur), this.on("uiTypeaheadInputSubmit", this.handleTypeaheadInputSubmit), this.on("uiTypeaheadInputChanged", (0, s.default)(this.handleTypeaheadInputChanged, this.attr.delayOnInputInMs)), this.on("uiTypeaheadInputMoveUp", this.handleTypeaheadInputMoveUp), this.on("uiTypeaheadInputMoveDown", this.handleTypeaheadInputMoveDown), this.on("uiTypeaheadInputRight", this.handleTypeaheadInputMoveRight), this.on("uiTypeaheadInputLeft", this.handleTypeaheadInputMoveLeft), this.on("uiTypeaheadInputTab", this.completeSelection), this.on("uiTypeaheadInputEscaped", this.handleTypeaheadInputEscaped), this.on("mouseover", {
					itemsSelector: this.handleItemMouseover
				}), this.on("mouseout", {
					itemsSelector: this.handleItemMouseout
				}), this.on("click", {
					itemsSelector: this.handleItemClick
				}), this.attr.withClickTrap) {
				var e = this.select("dropdownSelector").add(this.select("inputSelector"));
				this.setClickTrapTarget(e), this.onReceiveClick(this.handleClickTrapClick)
			}
		}), this.handleClickTrapClick = function() {
			this.hideDropdown(), this.trigger(this.select("inputSelector"), "uiTypeaheadNoItemSelected")
		}, this.handleTypeaheadInputEscaped = function() {
			this.hideDropdown()
		}, this.handleTypeaheadInputFocus = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			this.hasFocus = !0, t.query !== this.query && this.handleTypeaheadInputChanged(e, t)
		}, this.handleTypeaheadInputBlur = function() {
			this.hasFocus = !1, this.trigger("dataTypeaheadQueryReset")
		}, this.handleItemMouseover = function(e, t) {
			this.select("itemsSelector").removeClass(this.attr.itemSelectedClass), (0, r.default)(t.el).addClass(this.attr.itemSelectedClass)
		}, this.handleItemMouseout = function(e, t) {
			this.select("itemsSelector").removeClass(this.attr.itemSelectedClass)
		}, this.moveSelection = function(e) {
			var t, i = this.select("itemsSelector").filter(":visible"),
				n = i.filter(this.attr.itemSelectedSelector);
			n.removeClass(this.attr.itemSelectedClass), (t = n.length ? i.index(n) + e : -1 + e) < 0 ? t = i.length - 1 : t >= i.length && (t = 0), i.eq(t).addClass(this.attr.itemSelectedClass)
		}, this.getSelectedItemIndex = function() {
			var e = this.select("itemsSelector").filter(":visible"),
				t = e.filter(this.attr.itemSelectedSelector);
			return e.index(t)
		}, this.handleTypeaheadInputMoveUp = function(e) {
			this.moveSelection(-1)
		}, this.handleTypeaheadInputMoveDown = function(e) {
			this.moveSelection(1)
		}, this.handleTypeaheadInputMoveRight = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = t.query || ""; - 1 === this.getSelectedItemIndex() ? t.cursorPosition >= i.length && this.moveSelection(1) : this.completeSelection(e, t)
		}, this.handleTypeaheadInputMoveLeft = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			"rtl" === t.dir ? this.completeSelection(e, t) : (this.select("itemsSelector").removeClass(this.attr.itemSelectedClass), this.trigger("uiTypeaheadInputFocus", t))
		}, this.handleTypeaheadInputChanged = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = t.query || "",
				n = this.attr.datasources;
			0 === i.trim().length && (n = this.attr.datasourcesRecentOnly), this.query = i, this.select("itemsSelector").removeClass(this.attr.itemSelectedClass), this.trigger("uiNeedsTypeaheadSuggestions", {
				query: i,
				datasources: n,
				dropdownId: this.getDropdownId(),
				type: "search",
				limits: this.attr.limits
			})
		}, this.getDropdownId = function() {
			return this.dropdownId || (this.dropdownId = "swift_typeahead_dropdown_" + Date.now()), this.dropdownId
		}, this.generateItemFromSelectedElement = function(e) {
			var t, i = e.attr("data-search-type");
			switch (i) {
				case "user":
					t = {
						id: e.attr("data-user-id"),
						name: e.attr("data-user-name"),
						screenName: e.attr("data-screen-name"),
						profileImageURL: e.attr("data-profile-image-url"),
						verified: "true" === e.attr("data-verified")
					};
					break;
				case "conversation":
					t = {
						conversationId: e.attr("data-conversation-id"),
						accountKey: e.attr("data-account-key")
					};
					break;
				case "location":
					t = {
						name: e.attr("data-location-name"),
						lat: e.attr("data-location-lat"),
						lng: e.attr("data-location-lng")
					};
					break;
				default:
					t = {}
			}
			return t
		}, this.triggerSelectionEvent = function(e) {
			var t = e.$selected,
				i = e.removeItem,
				n = this.select("itemsSelector"),
				s = n.index(t),
				r = this.query,
				a = t.data("search-query"),
				o = t.data("search-scope");
			(r || a) && (this.trigger(t, "uiTypeaheadItemSelected", {
				index: s,
				searchType: t.data("search-type"),
				query: a,
				input: r,
				item: this.generateItemFromSelectedElement(t),
				removeItem: Boolean(i),
				searchScope: o
			}), this.attr.hideAfterSelect && this.hideDropdown())
		}, this.handleItemClick = function(e, t) {
			var i = (0, r.default)(e.target).hasClass("remove-recent-search-item");
			this.triggerSelectionEvent({
				$selected: (0, r.default)(t.el),
				removeItem: i
			})
		}, this.handleTypeaheadInputSubmit = function(e) {
			var t = this.select("itemsSelector").filter(this.attr.itemSelectedSelector).filter(":visible").first();
			t.length ? this.triggerSelectionEvent({
				$selected: t
			}) : this.trigger(this.select("inputSelector"), "uiTypeaheadNoItemSelected")
		}, this.completeSelection = function(e, t) {
			var i = t && "rtl" === t.dir ? "rtl" : "ltr";
			if (!("rtl" === i && "uiTypeaheadInputRight" === e.type || -1 !== ["ltr", void 0, ""].indexOf(i) && "uiTypeaheadInputLeft" === e.type)) {
				var n = this.select("itemsSelector").filter(this.attr.itemSelectedSelector).first();
				if (!n.length) {
					var s = (n = this.select("itemsSelector").first()).data("search-query") !== this.query;
					if (!s) return void("uiTypeaheadInputTab" === e.type && (this.hasFocus = !1))
				}
				var r = n.data("search-type"),
					a = this.attr.queryTypes.some(function(e) {
						return e === r
					});
				if (a) {
					var o = n.data("search-query"),
						l = this.select("itemsSelector"),
						c = l.index(n);
					this.trigger("uiTypeaheadItemComplete", {
						value: o,
						searchType: n.data("search-type"),
						index: c,
						query: o,
						item: this.generateItemFromSelectedElement(n)
					}), this.hideDropdown()
				} else "uiTypeaheadInputTab" === e.type && (this.hasFocus = !1)
			}
		}, this.hideDropdown = function() {
			this.attr.withClickTrap && this.disableClickTrap(), this.attr.hideAfterSelect && this.select("dropdownSelector").addClass("is-hidden")
		}, this.showDropdown = function() {
			this.attr.hideAfterSelect && this.select("dropdownSelector").removeClass("is-hidden"), this.attr.withClickTrap && this.enableClickTrap()
		}, this.handleDataTypeaheadSuggestions = function(e, t) {
			var i = this.select("itemsSelector").filter(this.attr.itemSelectedSelector);
			if (t.dropdownId === this.getDropdownId() && t.query === this.query && this.hasFocus && !i.length) {
				this.trigger("uiTypeaheadRenderResults", t);
				var s = this.attr.datasources.some(function(e) {
					return t.suggestions[e] && t.suggestions[e].length
				});
				if (s) {
					this.trigger("uiTypeaheadSuggestions"), this.showDropdown(), this.attr.autoSelect && 0 === this.select("itemSelectedSelector").length && this.select("itemsSelector").first().addClass("is-selected");
					var r = (0, n.default)(t, "datasources", []),
						a = 1 === r.length && "recentSearches" === r[0];
					this.select("itemsSelector").removeClass("list-item-last").filter(":visible").last().addClass(a ? "list-item" : "list-item-last")
				} else this.trigger("uiTypeaheadNoSuggestions")
			}
		}
	}, l, d, c, u, m, f, h, p)
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n, s = i(111),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(323);
	var o = function(e) {
		return "https://abs.twimg.com/emoji/v2/72x72/" + e + ".png"
	};
	e.exports = {
		parse: function(e) {
			var t = [],
				i = 0;
			return (0, a.parse)(e, {
				buildUrl: o
			}).forEach(function(n) {
				var s = (0, r.default)(n.indices, 2),
					a = s[0],
					o = s[1];
				t.push(e.substring(i, a)), t.push('<img class="emoji" draggable="false" alt="' + n.text + '" src="' + n.url + '"/>'), i = o
			}), t.push(e.substring(i, e.length)), t.join("")
		}
	}
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	i.r(t);
	var n, s = i(0);
	(n = i.n(s).a).createElement = function(e) {
		return n(document.createElement(e))
	}
}, , , function(e, t, i) {
	"use strict";
	var n = r(i(88)),
		s = r(i(2));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = {
		_index: null,
		_initialiseIndex: function() {
			var e = a.getAllLanguages();
			a._index = {}, e.forEach(function(e) {
				a._index[e.code] = e, e.actual_code && (a._index[e.actual_code] = e)
			})
		},
		getLanguageFromISOCode: function(e) {
			a._index || a._initialiseIndex();
			var t = a._index[e];
			return (0, n.default)(t)
		},
		getSystemLanguageCode: function(e) {
			var t = navigator.language || navigator.userLanguage || "";
			return e && (t = t.replace(/-[a-z]+$/i, "")), t
		},
		isSupportedTranslationSourceLanguage: function(e) {
			return -1 !== a.getSupportedTranslationSourceLanguages().indexOf(e.toLowerCase())
		},
		isSystemLangSupportedDestinationLanguage: function() {
			var e = a.getSupportedTranslationDestinationLanguages();
			return -1 !== e.indexOf(a.getSystemLanguageCode(!0).toLowerCase()) || -1 !== e.indexOf(a.getSystemLanguageCode(!1).toLowerCase())
		},
		getSupportedDestinationSystemLanguage: function() {
			return -1 !== a.getSupportedTranslationDestinationLanguages().indexOf(a.getSystemLanguageCode(!0).toLowerCase()) ? a.getSystemLanguageCode(!0) : a.getSystemLanguageCode(!1)
		},
		getAllLanguages: function() {
			return [{
				code: "am",
				localized_name: (0, s.default)("Amharic"),
				name: "አማርኛ"
			}, {
				code: "ar",
				localized_name: (0, s.default)("Arabic"),
				name: "العربية"
			}, {
				code: "bg",
				localized_name: (0, s.default)("Bulgarian"),
				name: "Български"
			}, {
				code: "bn",
				localized_name: (0, s.default)("Bengali"),
				name: "বাংলা"
			}, {
				code: "bo",
				localized_name: (0, s.default)("Tibetan"),
				name: "བོད་སྐད"
			}, {
				code: "ca",
				localized_name: (0, s.default)("Catalan"),
				name: "Català"
			}, {
				code: "chr",
				localized_name: (0, s.default)("Cherokee"),
				name: "ᏣᎳᎩ"
			}, {
				code: "cs",
				localized_name: (0, s.default)("Czech"),
				name: "čeština"
			}, {
				code: "da",
				localized_name: (0, s.default)("Danish"),
				name: "Dansk"
			}, {
				code: "de",
				localized_name: (0, s.default)("German"),
				name: "Deutsch"
			}, {
				code: "dv",
				localized_name: (0, s.default)("Maldivian"),
				name: "ދިވެހި"
			}, {
				code: "el",
				localized_name: (0, s.default)("Greek"),
				name: "Ελληνικά"
			}, {
				code: "en",
				localized_name: (0, s.default)("English"),
				name: "English"
			}, {
				code: "es",
				localized_name: (0, s.default)("Spanish"),
				name: "Español"
			}, {
				code: "et",
				localized_name: (0, s.default)("Estonian"),
				name: "eesti"
			}, {
				code: "fa",
				localized_name: (0, s.default)("Persian"),
				name: "فارسی"
			}, {
				code: "fi",
				localized_name: (0, s.default)("Finnish"),
				name: "Suomi"
			}, {
				code: "fr",
				localized_name: (0, s.default)("French"),
				name: "Français"
			}, {
				code: "gu",
				localized_name: (0, s.default)("Gujarati"),
				name: "ગુજરાતી"
			}, {
				code: "iw",
				actual_code: "he",
				localized_name: (0, s.default)("Hebrew"),
				name: "עברית"
			}, {
				code: "hi",
				localized_name: (0, s.default)("Hindi"),
				name: "हिंदी"
			}, {
				code: "ht",
				localized_name: (0, s.default)("Haitian Creole"),
				name: "Kreyòl ayisyen"
			}, {
				code: "hu",
				localized_name: (0, s.default)("Hungarian"),
				name: "Magyar"
			}, {
				code: "hy",
				localized_name: (0, s.default)("Armenian"),
				name: "Հայերեն"
			}, {
				code: "in",
				actual_code: "id",
				localized_name: (0, s.default)("Indonesian"),
				name: "Bahasa Indonesia"
			}, {
				code: "is",
				localized_name: (0, s.default)("Icelandic"),
				name: "Íslenska"
			}, {
				code: "it",
				localized_name: (0, s.default)("Italian"),
				name: "Italiano"
			}, {
				code: "iu",
				localized_name: (0, s.default)("Inuktitut"),
				name: "ᐃᓄᒃᑎᑐᑦ"
			}, {
				code: "ja",
				localized_name: (0, s.default)("Japanese"),
				name: "日本語"
			}, {
				code: "ka",
				localized_name: (0, s.default)("Georgian"),
				name: "ქართული"
			}, {
				code: "km",
				localized_name: (0, s.default)("Khmer"),
				name: "ខ្មែរ"
			}, {
				code: "kn",
				localized_name: (0, s.default)("Kannada"),
				name: "ಕನ್ನಡ"
			}, {
				code: "ko",
				localized_name: (0, s.default)("Korean"),
				name: "한국어"
			}, {
				code: "lo",
				localized_name: (0, s.default)("Lao"),
				name: "ລາວ"
			}, {
				code: "lt",
				localized_name: (0, s.default)("Lithuanian"),
				name: "Lietuvių"
			}, {
				code: "lv",
				localized_name: (0, s.default)("Latvian"),
				name: "latviešu valoda"
			}, {
				code: "ml",
				localized_name: (0, s.default)("Malayalam"),
				name: "മലയാളം"
			}, {
				code: "my",
				localized_name: (0, s.default)("Myanmar"),
				name: "မြန်မာဘာသာ"
			}, {
				code: "ne",
				localized_name: (0, s.default)("Nepali"),
				name: "नेपाली"
			}, {
				code: "nl",
				localized_name: (0, s.default)("Dutch"),
				name: "Nederlands"
			}, {
				code: "no",
				localized_name: (0, s.default)("Norwegian"),
				name: "Norsk"
			}, {
				code: "or",
				localized_name: (0, s.default)("Oriya"),
				name: "ଓଡ଼ିଆ"
			}, {
				code: "pa",
				localized_name: (0, s.default)("Panjabi"),
				name: "ਪੰਜਾਬੀ"
			}, {
				code: "pl",
				localized_name: (0, s.default)("Polish"),
				name: "Polski"
			}, {
				code: "pt",
				localized_name: (0, s.default)("Portuguese"),
				name: "Português"
			}, {
				code: "ro",
				localized_name: (0, s.default)("Romanian"),
				name: "limba română"
			}, {
				code: "ru",
				localized_name: (0, s.default)("Russian"),
				name: "Русский"
			}, {
				code: "si",
				localized_name: (0, s.default)("Sinhala"),
				name: "සිංහල"
			}, {
				code: "sk",
				localized_name: (0, s.default)("Slovak"),
				name: "slovenčina"
			}, {
				code: "sl",
				localized_name: (0, s.default)("Slovene"),
				name: "slovenski jezik"
			}, {
				code: "sv",
				localized_name: (0, s.default)("Swedish"),
				name: "Svenska"
			}, {
				code: "ta",
				localized_name: (0, s.default)("Tamil"),
				name: "தமிழ்"
			}, {
				code: "te",
				localized_name: (0, s.default)("Telugu"),
				name: "తెలుగు"
			}, {
				code: "th",
				localized_name: (0, s.default)("Thai"),
				name: "ไทย"
			}, {
				code: "tl",
				localized_name: (0, s.default)("Tagalog"),
				name: "Tagalog"
			}, {
				code: "tr",
				localized_name: (0, s.default)("Turkish"),
				name: "Türkçe"
			}, {
				code: "uk",
				localized_name: (0, s.default)("Ukrainian"),
				name: "українська мова"
			}, {
				code: "ur",
				localized_name: (0, s.default)("Urdu"),
				name: "ﺍﺭﺩﻭ"
			}, {
				code: "vi",
				localized_name: (0, s.default)("Vietnamese"),
				name: "Tiếng Việt"
			}, {
				code: "zh",
				localized_name: (0, s.default)("Chinese"),
				name: "中文"
			}]
		},
		getSupportedTranslationSourceLanguages: function() {
			return ["bg", "ca", "zh", "cs", "da", "nl", "en", "et", "fi", "fr", "de", "el", "ht", "hi", "hu", "id", "in", "it", "iw", "ja", "ko", "lv", "lt", "no", "pl", "pt", "ro", "ru", "sk", "sl", "es", "sv", "th", "tr", "uk", "vi", "ar", "fa", "he"]
		},
		getSupportedTranslationDestinationLanguages: function() {
			return ["bg", "ca", "zh-cn", "zh-tw", "cs", "da", "nl", "en", "et", "fi", "fr", "de", "el", "ht", "hi", "hu", "id", "in", "it", "iw", "ja", "ko", "lv", "lt", "no", "pl", "pt", "ro", "ru", "sk", "sl", "es", "sv", "th", "tr", "uk", "vi", "ar", "fa", "he"]
		}
	};
	e.exports = TD.languages = a
}, , , , , function(e, t, i) {
	i(1836), i(714), i(1837), i(1838), i(1839), i(1840), i(1841), i(1842)
}, , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(0)),
		s = r(i(1855));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = TD.components.Base = (0, s.default)(function() {
		this.$node = n.default.createElement("div").addClass("js-component")
	}).methods({
		$find: function() {
			return this.$node.find.apply(this.$node, arguments)
		},
		publishEvent: function(e, t) {
			var i = {
				data: t,
				target: this
			};
			TD.storage.notification.notify(e, i)
		},
		bubbleEvent: function(e, t) {
			var i = {
				data: t,
				target: this
			};
			this.$node.trigger(e, [i])
		},
		destroy: function() {
			this.$node.remove()
		},
		show: function() {
			this.$node.show()
		},
		hide: function() {
			this.$node.hide()
		}
	})
}, , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.HorizonWebCard = void 0;
	var n = b(i(26)),
		s = b(i(14)),
		r = b(i(16)),
		a = b(i(27)),
		o = b(i(28)),
		l = b(i(9)),
		c = b(i(4)),
		u = (b(i(8)), b(i(268))),
		d = b(i(72)),
		h = b(i(2059)),
		m = b(i(2)),
		f = b(i(17)),
		p = b(i(804)),
		g = i(37),
		v = i(206),
		T = i(33),
		w = b(i(2060));

	function b(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var y = !1;
	var _ = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var c = arguments.length, u = Array(c), d = 0; d < c; d++) u[d] = arguments[d];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(u))), r.handleScribeEvent = function(e) {
				var t = e.action,
					i = e.cardName,
					n = e.cardUrl,
					s = e.ctaIndex,
					a = e.isMessageMe,
					o = r.props,
					c = o.cardContext,
					u = o.isPossiblySensitive,
					d = c.tweetId,
					h = c.tweetUserId;
				(0, T.generic)((0, l.default)({}, r.props.scribeNamespace, {
					element: "platform_card",
					action: t
				}), {
					items: [function(e) {
						var t = e.cardName,
							i = e.cardUrl,
							n = e.ctaIndex,
							s = e.tweetId,
							r = e.tweetUserId,
							a = e.viewingUserId,
							o = e.isPossiblySensitive;
						return (0, l.default)({
							item_type: 0,
							id: s,
							card_name: t,
							card_url: i,
							card_platform_key: "Web-13",
							publisher_id: r,
							is_possibly_sensitive: o
						}, n ? {
							cardEvent: {
								card_user_data: {
									binding_values: [{
										name: "cta_clicked_index",
										value: n
									}]
								}
							}
						} : null, a ? {
							cardEvent: {
								card_user_data: {
									binding_values: [{
										name: "viewing_user_id",
										value: a
									}]
								}
							}
						} : null)
					}({
						cardName: i,
						cardUrl: n,
						ctaIndex: s,
						tweetId: d,
						tweetUserId: h,
						viewingUserId: a ? TD.storage.store.getTwitterLoginAccountID() : null,
						isPossiblySensitive: u
					})]
				})
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "renderCard",
			value: function() {
				var e = this;
				return c.default.createElement(v.Observe, {
					observable: g.horizonWebCardsStatic$
				}, function(t) {
					if (null == t) return null;
					var i = t.includes(e.props.cardData.name) ? "static" : "default";
					return c.default.createElement(C, {
						state: i,
						cardData: e.props.cardData,
						cardContext: e.props.cardContext,
						onScribeEvent: e.handleScribeEvent,
						isPossiblySensitive: e.props.isPossiblySensitive
					})
				})
			}
		}, {
			key: "render",
			value: function() {
				var e = this;
				return c.default.createElement(v.Observe, {
					observable: g.horizonWebCardsEnabled$
				}, function(t) {
					if (!t) return null;
					var i = e.props.cardData;
					return t.includes(i.name) ? e.renderCard() : e.props.renderFallback()
				})
			}
		}]), t
	}(c.default.Component);
	_.defaultProps = {
		renderFallback: function() {
			return null
		}
	}, t.default = _;
	var C = t.HorizonWebCard = function(e) {
		function t() {
			(0, s.default)(this, t);
			var e = (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).call(this));
			return function() {
				if (!y) {
					var e = "webkitLineClamp" in document.body.style;
					d.default.init({
						getUserById: function(e) {
							return p.default.getById(e).toPromise().then(function(e) {
								return e ? {
									profileImageUrl: e.profileImageURL,
									name: e.name,
									isVerified: e.isVerified,
									isProtected: e.isProtected,
									screenName: e.screenName,
									translatorType: void 0
								} : null
							})
						},
						getCtaString: function(e) {
							switch (e) {
								case "play":
									return (0, m.default)("Play");
								case "shop":
									return (0, m.default)("Shop");
								case "book":
									return (0, m.default)("Book");
								case "connect":
									return (0, m.default)("Connect");
								case "order":
									return (0, m.default)("Order");
								case "open":
									return (0, m.default)("Open");
								case "install":
								default:
									return (0, m.default)("Install")
							}
						},
						renderLink: function(e, t) {
							return function(i) {
								return c.default.createElement("a", (0, l.default)({
									href: e,
									target: "_blank",
									rel: "url noopener noreferrer",
									className: "flex flex-column flex-auto"
								}, t), i)
							}
						},
						renderMomentLink: function(e, t) {
							return function(i) {
								return c.default.createElement("a", (0, l.default)({
									href: "https://twitter.com/i/moments/" + e,
									target: "_blank",
									rel: "url noopener noreferrer",
									className: "flex flex-column flex-auto"
								}, t), i)
							}
						},
						renderEventLink: function(e, t) {
							return function(i) {
								return c.default.createElement("a", (0, l.default)({
									href: "https://twitter.com/i/events/" + e,
									target: "_blank",
									rel: "url noopener noreferrer",
									className: "flex flex-column flex-auto"
								}, t), i)
							}
						},
						renderProfileLink: function(e, t) {
							return function(i) {
								return c.default.createElement(h.default, (0, l.default)({
									screenName: e
								}, t), i)
							}
						},
						renderTwemojiText: function(e) {
							return c.default.createElement("span", {
								dangerouslySetInnerHTML: {
									__html: f.default.cleanWithEmoji(e)
								}
							})
						},
						renderRatingsLabel: function(e) {
							var t = e.appStarRating,
								i = e.appNumRatings;
							return (0, m.default)("{{stars}} stars – {{ratings}} ratings", {
								stars: t + "/5.0",
								ratings: i
							})
						},
						shouldLimitTextToSingleLine: function() {
							return !e
						}
					}), y = !0
				}
			}(), e
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "render",
			value: function() {
				var e = c.default.createElement("div", {
					"data-testid": "card",
					className: "hw-card-container margin-vm"
				}, c.default.createElement(u.default, {
					isUnifiedCard: !1,
					cardState: this.props.state,
					card: this.props.cardData,
					cardContext: this.props.cardContext,
					onScribeEvent: this.props.onScribeEvent
				}));
				return this.props.isPossiblySensitive ? c.default.createElement(w.default, {
					children: e
				}) : e
			}
		}]), t
	}(c.default.Component)
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = a(i(426)),
		s = a(i(15)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = TD.cache.twitterUsers = function() {
		var e = {},
			t = {},
			i = {},
			a = [],
			o = 500;

		function l(e, n) {
			var s, a, o, l, c = TD.util.deMentionify(n || "").toLowerCase();
			return e || n ? (s = e ? t[e] : i[c]) ? l = TD.core.defer.succeed(s) : (a = TD.storage.accountController.getPreferredAccount("twitter"), o = TD.controller.clients.getClient(a.getKey()), l = new TD.core.defer.Deferred, o.showUser(e, c, function(e) {
				l.callback(e)
			}, function(t, i, n) {
				l.errback(new TD.core.defer.XMLHttpRequestError(t, n)), t && t.errors && t.errors.forEach(function() {
					63 === (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).twitterErrorCode && r.default.publish("/user/suspended", [e, c])
				})
			})) : l = TD.core.defer.fail("Must provide user ID or screen name"), l
		}
		return e.add = function(e) {
			var n = t[e.id];
			n ? delete i[n.screenName.toLowerCase()] : a.unshift(e), t[e.id] = e, i[e.screenName.toLowerCase()] = e, (0, r.default)(document).trigger("dataCachedTwitterUser", e), (0, s.default)(a.splice(o), function(e) {
				delete t[e.id], delete i[e.screenName.toLowerCase()]
			})
		}, e.getById = function(e) {
			return l(e, null)
		}, e.removeById = function(e) {
			return delete t[e]
		}, e.removeByIds = function(t) {
			var i = !0,
				s = !1,
				r = void 0;
			try {
				for (var a, o = (0, n.default)(t); !(i = (a = o.next()).done); i = !0) {
					var l = a.value;
					e.removeById(l)
				}
			} catch (e) {
				s = !0, r = e
			} finally {
				try {
					!i && o.return && o.return()
				} finally {
					if (s) throw r
				}
			}
		}, e.getByScreenName = function(e) {
			return l(null, e)
		}, e
	}()
}, , , , , , function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.attributes({
			account: null,
			twitterUser: null,
			follows: "s-follows"
		}), this.handleRelationshipData = function(e, t) {
			t && t.relationship && this.account.isSameUser(t.relationship.source.screen_name) && this.twitterUser.isSameUser(t.relationship.target.screen_name) && this.$node.toggleClass(this.attr.follows, t.relationship.target.following)
		}, this.destroy = function(e) {
			e.stopPropagation(), this.teardown()
		}, this.after("initialize", function() {
			if (this.account = this.attr.account, this.twitterUser = this.attr.twitterUser, !(this.account instanceof TD.storage.Account)) throw new Error("source must be instance of TD.storage.Account");
			if (!(this.twitterUser instanceof TD.services.TwitterUser)) throw new Error("target must be instance of TD.services.TwitterUser");
			this.on(document, "dataRelationship", this.handleRelationshipData), this.attr.closeEvent && this.on(this.attr.closeEvent, this.destroy), this.trigger("uiNeedsRelationship", {
				account: this.account,
				screenName: this.twitterUser.screenName
			})
		})
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			account: null,
			twitterUser: null,
			states: {
				blocking: "blocking",
				following: "following",
				me: "me",
				notFollowing: "notFollowing",
				pending: "pending",
				unknown: "unknown"
			},
			classNamesForStates: {
				blocking: "s-blocking",
				following: "s-following",
				me: "s-thats-you",
				notFollowing: "s-not-following",
				pending: "s-pending",
				unknown: "unknown"
			},
			buttonEnabledForStates: {
				blocking: !0,
				following: !0,
				me: !0,
				notFollowing: !0,
				pending: !1,
				unknown: !1
			},
			followButton: ".js-follow-button"
		}), this.after("initialize", function() {
			this.account = this.attr.account, this.twitterUser = this.attr.twitterUser, this.state = this.attr.states.unknown, this.on(document, "dataRelationship", this.handleRelationshipData), this.on("click", {
				followButton: this.handleFollowButtonClick
			}), this.on(document, "uiFollowAction dataUnfollowActionError", this.handleActionFactory("following")), this.on(document, "uiFollowProtectedUserAction", this.handleActionFactory("pending")), this.on(document, "uiUnfollowAction dataFollowActionError", this.handleActionFactory("notFollowing")), this.on(document, "uiBlockAction dataUnblockActionError", this.handleActionFactory("blocking")), this.on(document, "uiUnblockAction dataBlockActionError dataReportActionError", this.handleActionFactory("notFollowing")), r.default.subscribe("/user/" + this.screenName + "/block", this.handlePubSubEvent("blocking")), r.default.subscribe("/user/" + this.screenName + "/unblock", this.handlePubSubEvent("notFollowing")), this.attr.closeEvent && this.on(this.attr.closeEvent, this.destroy), this.trigger("uiNeedsRelationship", {
				account: this.account,
				screenName: this.twitterUser.screenName
			})
		}), this.resetState = function() {
			this.$node.removeClass(this.attr.classNamesForStates[this.state])
		}, this.setState = function(e, t) {
			e.following ? this.state = this.attr.states.following : e.following_requested ? this.state = this.attr.states.pending : this.state = this.attr.states.notFollowing, e.id === t.id && (this.state = this.attr.states.me), e.blocking && (this.state = this.attr.states.blocking)
		}, this.handleFollowButtonClick = function(e) {
			var t = {
				account: this.account,
				twitterUser: this.twitterUser
			};
			switch (this.state) {
				case this.attr.states.following:
					this.trigger("uiUnfollowAction", t);
					break;
				case this.attr.states.notFollowing:
					this.twitterUser.isProtected ? this.trigger("uiFollowProtectedUserAction", t) : this.trigger("uiFollowAction", t);
					break;
				case this.attr.states.blocking:
					this.trigger("uiUnblockAction", t);
					break;
				case this.attr.states.me:
					TD.util.openURL("https://twitter.com/settings/profile")
			}
			e.stopPropagation()
		}, this.toggleEnableButton = function(e) {
			this.select("followButton").toggleClass("is-disabled", !e)
		}, this.setTargetElementState = function() {
			this.$node.addClass(this.attr.classNamesForStates[this.state])
		}, this.isRelevantRelationship = function(e) {
			return this.account.isSameUser(e.source.screen_name) && this.twitterUser.isSameUser(e.target.screen_name)
		}, this.handleRelationshipData = function(e, t) {
			t && t.relationship && this.isRelevantRelationship(t.relationship) && (this.resetState(), this.setState(t.relationship.source, t.relationship.target), this.toggleEnableButton(this.attr.buttonEnabledForStates[this.state]), this.setTargetElementState())
		}, this.isRelevantAction = function(e) {
			return e && e.twitterUser && e.twitterUser.isSameUser(this.twitterUser) && e.account === this.account
		}, this.handleActionFactory = function(e) {
			return function(t, i) {
				i = i || {}, this.isRelevantAction(i.request || i) && (this.resetState(), this.state = this.attr.states[e], this.setTargetElementState(), this.toggleEnableButton(this.attr.buttonEnabledForStates[e]))
			}.bind(this)
		}, this.handlePubSubEvent = function(e) {
			return function(t, i) {
				i.getAccountKey() === this.account.getAccountKey() && (this.resetState(), this.state = this.attr.states[e], this.setTargetElementState())
			}.bind(this)
		}, this.destroy = function(e) {
			e.stopPropagation(), this.teardown()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(2)),
		s = a(i(6)),
		r = a(i(7));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			template: "video_preview",
			data: null,
			isScheduled: !1,
			maxVideoDurationInSeconds: 140,
			videoSelector: "video",
			videoContainerSelector: ".js-video-container",
			videoControlsSelector: ".js-custom-video-controls",
			playPauseSelector: ".js-play-pause",
			muteUnmuteSelector: ".js-mute-unmute",
			timeDurationSelector: ".js-video-time-duration",
			progressBarSelector: ".js-video-progress",
			processingVideoSelector: ".js-processing-video",
			videoWidth: "100%",
			videoHeight: "100%"
		}), this.initialState({
			videoSrc: function() {
				var e = this.attr.data;
				return e.videoSrc || URL.createObjectURL(e.files[0])
			},
			duration: 0,
			currentTime: 0,
			playState: "ended",
			muted: !1
		}), this._getDuration = function() {
			return this.videoEl.duration
		}, this.componentDidInitialize = function() {
			var e = this;
			this.initialRender(), this.$video = this.select("videoSelector"), this.videoEl = this.$video.get(0), this.on(this.$video, "loadedmetadata", function() {
				e._getDuration() > e.attr.maxVideoDurationInSeconds ? e.trigger("uiComposeVideoTooLarge") : e.mergeState({
					duration: e._getDuration()
				})
			}), this.on(this.$video, "timeupdate", function() {
				return e.mergeState({
					currentTime: e.videoEl.currentTime
				})
			}), this.on(this.$video, "playing", function() {
				return e.mergeState({
					playState: "playing"
				})
			}), this.on(this.$video, "pause", function() {
				return e.mergeState({
					playState: "paused"
				})
			}), this.on(this.$video, "ended", function() {
				return e.mergeState({
					playState: "ended"
				})
			}), this.on(this.$video, "volumechange", function() {
				return e.mergeState({
					muted: e.videoEl.muted
				})
			}), this.on("click", {
				playPauseSelector: function() {
					return "playing" === e.state.playState ? e.videoEl.pause() : e.videoEl.play()
				},
				muteUnmuteSelector: function() {
					return e.videoEl.muted = !e.state.muted
				},
				progressBarSelector: this.handleProgressBarClick
			})
		}, this.componentWillTeardown = function() {
			this.$video && this.$video.attr("src", "")
		}, this.initialRender = function() {
			var e = s.default.render(this.attr.template, {
				isScheduled: this.attr.isScheduled,
				videoWidth: this.attr.videoWidth,
				videoHeight: this.attr.videoHeight
			});
			this.$node.html(e), this.select("videoControlsSelector").html(s.default.render("compose/custom_video_controls"))
		}, this.render = function() {
			this.renderProcessorOrPreview(), this.renderVideoSrc(), this.renderPlayPauseButton(), this.renderMuteUnmuteButton(), this.renderTimeDurationText(), this.renderProgressBar()
		}, this.renderProcessorOrPreview = function() {
			var e = Boolean(this.state.duration);
			this.select("videoContainerSelector").toggleClass("is-hidden", !e), this.select("processingVideoSelector").toggleClass("is-hidden", e)
		}, this.renderVideoSrc = function() {
			var e = this.$video.attr("src");
			this.state.videoSrc && this.state.videoSrc !== e && this.$video.attr("src", this.state.videoSrc)
		}, this.renderPlayPauseButton = function() {
			var e = this.select("playPauseSelector");
			switch (e.removeClass("icon-pause icon-play"), this.state.playState) {
				case "playing":
					e.addClass("icon-pause");
					break;
				case "paused":
				case "ended":
					e.addClass("icon-play")
			}
		}, this.renderMuteUnmuteButton = function() {
			var e = this.select("muteUnmuteSelector");
			this.state.muted ? e.removeClass("icon-sound").addClass("icon-sound-off") : e.removeClass("icon-sound-off").addClass("icon-sound")
		}, this.renderTimeDurationText = function() {
			var e = this.select("timeDurationSelector"),
				t = this.getCurrentTimeAndDuration(this.state.currentTime, this.state.duration);
			e.text(t)
		}, this.renderProgressBar = function() {
			var e = this.select("progressBarSelector");
			e.attr("max", this.state.duration).attr("aria-valuemax", this.state.duration), e.get(0).value = this.state.currentTime
		}, this.handleProgressBarClick = function(e) {
			var t = this.select("progressBarSelector"),
				i = e.pageX,
				n = t.offset().left,
				s = t.get(0).offsetWidth,
				r = this.state.duration,
				a = (i - n) / s * r;
			this.videoEl.currentTime = a
		}, this.formatSeconds = function(e) {
			if (e >= 3600 || e < 0) throw new RangeError("Cannot format seconds greater than 3600 or less than 0");
			var t = Math.floor(e / 60),
				i = Math.floor(e % 60);
			return i < 10 ? t + ":0" + i : t + ":" + i
		}, this.getCurrentTimeAndDuration = function(e, t) {
			try {
				return (0, n.default)("{{videoCurrentTime}} / {{videoDuration}}", {
					videoCurrentTime: this.formatSeconds(e),
					videoDuration: this.formatSeconds(t)
				})
			} catch (e) {
				return ""
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = a(i(14)),
		s = a(i(16)),
		r = a(i(261));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = function() {
		function e(t, i) {
			if ((0, n.default)(this, e), this.created = t, this.cursors = i, !i.length) throw Error("AggregateCursor created with no cursors");
			this.interval = i.reduce(function(e, t) {
				return e.hull(t.interval)
			}, r.default.empty)
		}
		return (0, s.default)(e, [{
			key: "getCursors",
			value: function() {
				return this.cursors
			}
		}]), e
	}();
	t.default = o
}, , , , function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(100);
	e.exports = TD.vo.ContentFilter = function(e) {
		this.fromJSONObject(e)
	}, TD.vo.ContentFilter.TYPE_ANYTHING = "anything", TD.vo.ContentFilter.TYPE_IMG = "img", TD.vo.ContentFilter.TYPE_VID = "vid", TD.vo.ContentFilter.TYPE_GIF = "gif", TD.vo.ContentFilter.TYPE_VINE = "vine", TD.vo.ContentFilter.TYPE_BROADCAST = "broadcast", TD.vo.ContentFilter.TYPE_IMG_AND_VID = "img_vid", TD.vo.ContentFilter.TYPE_LINKS = "links", TD.vo.ContentFilter.LANG_ANY = "any", TD.vo.ContentFilter.prototype.matching = "", TD.vo.ContentFilter.prototype.excluding = "", TD.vo.ContentFilter.prototype.type = "anything", TD.vo.ContentFilter.prototype.lang = "any", TD.vo.ContentFilter.prototype.includeRTs = !0, TD.vo.ContentFilter.prototype.sinceTimeInSec = "", TD.vo.ContentFilter.prototype.untilTimeInSec = "", TD.vo.ContentFilter.prototype.setMatching = function(e) {
		this.matching = e || ""
	}, TD.vo.ContentFilter.prototype.setExcluding = function(e) {
		this.excluding = e || ""
	}, TD.vo.ContentFilter.prototype.setType = function(e) {
		this.type = e || TD.vo.ContentFilter.TYPE_ANYTHING
	}, TD.vo.ContentFilter.prototype.setLanguage = function(e) {
		this.lang = e || TD.vo.ContentFilter.LANG_ANY
	}, TD.vo.ContentFilter.prototype.setIncludeRTs = function(e) {
		this.includeRTs = void 0 === e || Boolean(e)
	}, TD.vo.ContentFilter.prototype.setSinceTimeInSec = function(e) {
		this.sinceTimeInSec = a.unix(e).isValid() ? e : ""
	}, TD.vo.ContentFilter.prototype.setUntilTimeInSec = function(e) {
		this.untilTimeInSec = a.unix(e).isValid() ? e : ""
	}, TD.vo.ContentFilter.prototype.toJSONObject = function() {
		return {
			matching: this.matching,
			excluding: this.excluding,
			type: this.type,
			lang: this.lang,
			includeRTs: this.includeRTs,
			sinceTimeInSec: this.sinceTimeInSec,
			untilTimeInSec: this.untilTimeInSec
		}
	}, TD.vo.ContentFilter.prototype.fromJSONObject = function(e) {
		e && (this.setMatching(e.matching), this.setExcluding(e.excluding), this.setType(e.type), this.setLanguage(e.lang), this.setIncludeRTs(e.includeRTs), this.setSinceTimeInSec(e.sinceTimeInSec), this.setUntilTimeInSec(e.untilTimeInSec))
	}, TD.vo.ContentFilter.prototype.getQueryString = function() {
		var e = [];
		switch (this.type) {
			case TD.vo.ContentFilter.TYPE_IMG:
				e.push("filter:images");
				break;
			case TD.vo.ContentFilter.TYPE_VID:
				e.push("filter:videos");
				break;
			case TD.vo.ContentFilter.TYPE_GIF:
				e.push("card_name:animated_gif");
				break;
			case TD.vo.ContentFilter.TYPE_VINE:
				e.push("filter:vine");
				break;
			case TD.vo.ContentFilter.TYPE_BROADCAST:
				e.push('(card_domain:pscp.tv OR card_domain:periscope.tv OR "twitter.com/i/broadcasts/")');
				break;
			case TD.vo.ContentFilter.TYPE_IMG_AND_VID:
				e.push("(filter:images OR filter:videos)");
				break;
			case TD.vo.ContentFilter.TYPE_LINKS:
				e.push("filter:links")
		}
		return this.lang !== TD.vo.ContentFilter.LANG_ANY && e.push("lang:" + this.lang), this.includeRTs || e.push("exclude:nativeretweets exclude:retweets"), this.excluding && e.push(this.getExcludingQuery()), this.sinceTimeInSec && e.push("since_time:" + this.sinceTimeInSec), this.untilTimeInSec && e.push("until_time:" + this.untilTimeInSec), e.join(" ")
	}, TD.vo.ContentFilter.prototype.getSummaryText = function() {
		var e = [];
		switch (this.type) {
			case TD.vo.ContentFilter.TYPE_IMG:
				e.push((0, r.default)("showing images"));
				break;
			case TD.vo.ContentFilter.TYPE_VID:
				e.push((0, r.default)("showing videos"));
				break;
			case TD.vo.ContentFilter.TYPE_GIF:
				e.push((0, r.default)("showing GIFs"));
				break;
			case TD.vo.ContentFilter.TYPE_VINE:
				e.push((0, r.default)("showing Vines"));
				break;
			case TD.vo.ContentFilter.TYPE_BROADCAST:
				e.push((0, r.default)("showing broadcasts"));
				break;
			case TD.vo.ContentFilter.TYPE_IMG_AND_VID:
				e.push((0, r.default)("showing images and videos"));
				break;
			case TD.vo.ContentFilter.TYPE_LINKS:
				e.push((0, r.default)("showing links"))
		}
		if (this.matching && e.push((0, r.default)("matching ‘{{{matching}}}’", {
				matching: this.matching
			})), this.excluding && e.push((0, r.default)("excluding ‘{{{excluding}}}’", {
				excluding: this.excluding
			})), this.lang !== TD.vo.ContentFilter.LANG_ANY) {
			var t = TD.languages.getLanguageFromISOCode(this.lang);
			e.push((0, r.default)("written in {{{lang}}}", {
				lang: t.localized_name
			}))
		}
		return this.includeRTs || e.push((0, r.default)("Retweets excluded")), this.sinceTimeInSec && e.push((0, r.default)("from {{sinceDatePretty}}", {
			sinceDatePretty: TD.util.prettyDateFromUnixTimestamp(this.sinceTimeInSec)
		})), this.untilTimeInSec && e.push((0, r.default)("to {{untilDatePretty}}", {
			untilDatePretty: TD.util.prettyDateFromUnixTimestamp(this.untilTimeInSec)
		})), 0 === e.length ? "" : e.join(", ")
	}, TD.vo.ContentFilter.prototype.getExcludingQuery = function() {
		if (!this.excluding) return "";
		var e = TD.services.TwitterSearchParser.extractPhrases(this.excluding, !0);
		return (e = e.map(function(e) {
			return "-" + e
		})).join(" ")
	}, TD.vo.ContentFilter.prototype.getFilters = function() {
		var e, t = [];
		switch (this.type) {
			case TD.vo.ContentFilter.TYPE_IMG:
				e = new TD.vo.Filter(TD.vo.Filter.HAS_IMAGE, !0, !0), t.push(e);
				break;
			case TD.vo.ContentFilter.TYPE_VID:
				e = new TD.vo.Filter(TD.vo.Filter.HAS_VIDEO, !0, !0), t.push(e);
				break;
			case TD.vo.ContentFilter.TYPE_GIF:
				e = new TD.vo.Filter(TD.vo.Filter.HAS_GIF, !0, !0), t.push(e);
				break;
			case TD.vo.ContentFilter.TYPE_VINE:
				e = new TD.vo.Filter(TD.vo.Filter.HAS_VINE, !0, !0), t.push(e);
				break;
			case TD.vo.ContentFilter.TYPE_IMG_AND_VID:
				e = new TD.vo.Filter(TD.vo.Filter.HAS_MEDIA, !0, !0), t.push(e);
				break;
			case TD.vo.ContentFilter.TYPE_LINKS:
				e = new TD.vo.Filter(TD.vo.Filter.HAS_LINK, !0, !0), t.push(e)
		}
		return this.matching && TD.services.TwitterSearchParser.extractPhrases(this.matching, !1).forEach(function(i) {
			e = new TD.vo.Filter(TD.vo.Filter.PHRASE, i, !0), t.push(e)
		}), this.excluding && TD.services.TwitterSearchParser.extractPhrases(this.excluding, !1).forEach(function(i) {
			e = new TD.vo.Filter(TD.vo.Filter.PHRASE, i, !1), t.push(e)
		}), this.sinceTimeInSec && t.push(new TD.vo.Filter(TD.vo.Filter.SINCE_TIME, this.sinceTimeInSec, !0)), this.untilTimeInSec && t.push(new TD.vo.Filter(TD.vo.Filter.UNTIL_TIME, this.untilTimeInSec, !0)), this.includeRTs || (e = new TD.vo.Filter(TD.vo.Filter.IS_RETWEET, !1, !0), t.push(e)), t
	}, TD.vo.ContentFilter.prototype.hasActiveMediaFilter = function() {
		return [TD.vo.ContentFilter.TYPE_IMG, TD.vo.ContentFilter.TYPE_VID, TD.vo.ContentFilter.TYPE_GIF, TD.vo.ContentFilter.TYPE_VINE, TD.vo.ContentFilter.TYPE_BROADCAST, TD.vo.ContentFilter.TYPE_IMG_AND_VID].indexOf(this.type) > -1
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.default = o;
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(819);

	function o(e) {
		this.fromJSONObject(e)
	}
	TD.vo.LocationFilter = o, o.prototype.toJSONObject = function() {
		return {
			lat: this.lat,
			lng: this.lng,
			radius: this.radius,
			zoom: this.zoom,
			name: this.name
		}
	}, o.prototype.fromJSONObject = function(e) {
		e && (this.setLat(e.lat), this.setLng(e.lng), this.setRadius(e.radius), this.setZoom(e.zoom), this.setName(e.name))
	}, o.prototype.setLat = function(e) {
		this.lat = e || ""
	}, o.prototype.setLng = function(e) {
		this.lng = e || ""
	}, o.prototype.setRadius = function(e) {
		this.radius = e || ""
	}, o.prototype.setZoom = function(e) {
		this.zoom = e || ""
	}, o.prototype.setName = function(e) {
		this.name = e || ""
	}, o.prototype.getQueryString = function() {
		return this.lat && this.lng && this.radius ? "near:" + this.lat + "," + this.lng + " within:" + this.radius : ""
	}, o.prototype.getSummaryText = function() {
		if (this.name && this.radius) return (0, r.default)("Within {{radius}} of {{name}}", {
			radius: this.radius,
			name: this.name
		});
		if (this.lat && this.lng && this.radius) {
			var e = (0, a.getPrettyCoordinates)(this.lat, this.lng, this.radius);
			return (0, r.default)("Within {{radius}} of {{prettyCoordinates}}", {
				radius: this.radius,
				prettyCoordinates: e
			})
		}
		return ""
	}, o.prototype.getFilters = function() {
		return this.lat && this.lng && this.radius ? [new TD.vo.Filter(TD.vo.Filter.LOCATION, this.toJSONObject(), !0)] : []
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getPrettyCoordinates = function(e, t) {
		var i = Math.abs(Math.round(10 * e) / 10),
			n = e > 0 ? "N" : "S",
			s = Math.abs(Math.round(10 * t) / 10);
		return i + "°" + n + ", " + s + "°" + (t > 0 ? "E" : "W")
	}
}, , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = o(i(14)),
		s = o(i(16)),
		r = o(i(240)),
		a = o(i(80));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = function() {
		function e(t) {
			(0, n.default)(this, e), this.maxSize = t, this.length = 0, this._first = void 0, this._last = void 0, this._index = {}, this._lefts = {}, this._rights = {}
		}
		return (0, s.default)(e, [{
			key: "enqueue",
			value: function(e, t) {
				e && (this.dequeue(e), 0 == this.length ? this._first = this._last = e : (this._lefts[this._first] = e, this._rights[e] = this._first, this._first = e), this._index[e] = t, this.length++, this.prune())
			}
		}, {
			key: "dequeue",
			value: function(e) {
				if (!(0, a.default)(this._index[e])) {
					var t = this._lefts[e],
						i = this._rights[e];
					t ? this._rights[t] = i : this._first = i, i ? this._lefts[i] = t : this._last = t, delete this._index[e], delete this._rights[e], delete this._lefts[e], this.length--
				}
			}
		}, {
			key: "prune",
			value: function() {
				for (; this.maxSize && this.length > this.maxSize;) this.dequeue(this._last)
			}
		}, {
			key: "get",
			value: function(e) {
				return this._index[e]
			}
		}, {
			key: "getOrElse",
			value: function(e, t) {
				var i = this._index[e];
				return void 0 === i && (i = (0, r.default)(t) ? t() : t, this.enqueue(e, i)), i
			}
		}, {
			key: "take",
			value: function(e) {
				var t = [],
					i = this._first;
				e = Math.min(e, this.length);
				for (var n = 0; n < e; n++) t.push(this._index[i]), i = this._rights[i];
				return t
			}
		}]), e
	}();
	t.default = l
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = d(i(9)),
		s = d(i(14)),
		r = d(i(16)),
		a = d(i(13)),
		o = d(i(0)),
		l = i(513),
		c = i(73),
		u = d(i(36));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = (0, c.fromEventOnce)((0, o.default)(document), "TD.ready"),
		m = function() {
			function e(t) {
				(0, s.default)(this, e), this.subscriptionEnabled = !1, this.featureFlagSubscription = null, this.dataSettingsSubscription = null, this.subscription = null, this.feed = t, this.feedType = t.getType(), this.feedKey = t.getKey(), this._subscribeToRealtimeSettings()
			}
			return (0, r.default)(e, [{
				key: "_subscribeToFeatureFlagForContentUpdates",
				value: function(e) {
					var t = this;
					this.featureFlagSubscription = e.combineLatest(h, function(e) {
						return e
					}).subscribe(function(e) {
						return t._toggleSubscriptionsEnabled(e)
					})
				}
			}, {
				key: "_subscribeToRealtimeSettings",
				value: function() {
					var e = this;
					this.dataSettingsSubscription = u.default.Observable.fromEvent((0, o.default)(document), "dataSettingsValues", function(e, t) {
						return t
					}).filter(function(e) {
						return e && void 0 !== e.use_stream
					}).pluck("use_stream").subscribe(function(t) {
						return e._toggleSubscriptionsEnabled(t)
					})
				}
			}, {
				key: "_toggleSubscriptionsEnabled",
				value: function(e) {
					this.subscriptionEnabled = Boolean(e);
					var t = e ? "enable" : "disable";
					TD.util.metric("project-content:toggle-subscriptions:" + this.feedType + ":toggle"), TD.util.metric("project-content:toggle-subscriptions:" + this.feedType + ":" + t);
					try {
						e ? this._enableContent() : this._disableContent(), TD.util.metric("project-content:toggle-subscriptions:" + this.feedType + ":toggle:success"), TD.util.metric("project-content:toggle-subscriptions:" + this.feedType + ":" + t + ":success")
					} catch (e) {
						TD.util.metric("project-content:toggle-subscriptions:" + this.feedType + ":toggle:failure"), TD.util.metric("project-content:toggle-subscriptions:" + this.feedType + ":" + t + ":failure")
					}
				}
			}, {
				key: "_enableContent",
				value: function() {
					if (TD.settings.getUseStream()) {
						if (this.feedKey && !this.subscription) {
							var e = this._getGraphQlQuery();
							if (e) {
								var t = TD.storage.accountController.get(this.feed.getAccountKey());
								this.subscription = this._doSubscribe((0, n.default)({}, e, {
									account: t,
									feed: this.feed
								})), TD.util.metric("project-content:subscribe:" + this.feedType)
							}
						}
					} else this.subscriptionEnabled = !1
				}
			}, {
				key: "_disableContent",
				value: function() {
					if (!this.subscription || !this.feedKey) return !1;
					this.subscription.unsubscribe(), this.subscription = null, TD.util.metric("project-content:unsubscribe:" + this.feedType)
				}
			}, {
				key: "_doSubscribe",
				value: function(e) {
					var t = this,
						i = e.query,
						n = e.queryId,
						s = e.operationName,
						r = e.variables,
						a = e.account,
						o = e.bufferWindow,
						c = void 0 === o ? 200 : o,
						u = (0, l.getAccountPipeline)(a).subscribeToGraphQLQuery({
							query: i,
							queryId: n,
							operationName: s,
							variables: r
						}),
						d = u.messages$,
						h = u.status$,
						m = d.bufferTime(c).filter(function(e) {
							return e.length > 0
						}).subscribe(function(e) {
							return t._handleMessages(e, a)
						}),
						f = null,
						p = h.subscribe(function(e) {
							f = e
						});
					return {
						unsubscribe: function() {
							m.unsubscribe(), p.unsubscribe()
						},
						getStatus: function() {
							return f
						}
					}
				}
			}, {
				key: "_handleMessages",
				value: function(e, t) {
					var i = this;
					e.forEach(function(e) {
						return i._sendTweetMetric(e)
					});
					var n = e.filter(function(e) {
						return !e.errors || 0 === e.errors.length
					}).map(function(e) {
						return i._extractTweet(e)
					}).filter(Boolean).map(function(e) {
						return new TD.services.TwitterStatus(t).fromGraphQLJSONObject(e)
					}).filter(function(e) {
						var t = e.getMainUser && e.getMainUser();
						return t && !t.isBlockingOrMuting()
					});
					if (n.length) {
						var s = TD.controller.feedManager.getPoller(this.feedKey);
						s && s.acceptContentedChirps(n)
					}
				}
			}, {
				key: "_sendTweetMetric",
				value: function(e) {
					if (e && e.payload) {
						var t = this._getEventType(e),
							i = this._getTweetId(e);
						"TweetSubscriptionEvent" === t && i && TD.util.metric("api:content:tweet:" + this.feedType)
					}
				}
			}, {
				key: "_getEventType",
				value: function(e) {
					return (0, a.default)(e, "payload." + this.subscriptionType + ".__typename")
				}
			}, {
				key: "_getTweetId",
				value: function(e) {
					return (0, a.default)(e, "payload." + this.subscriptionType + ".tweet.rest_id")
				}
			}, {
				key: "_extractTweet",
				value: function(e) {
					var t = "project-content:tweet-count",
						i = this._getEventType(e);
					if ("SubscriptionStatus" === i) {
						var n = (0, a.default)(e, "payload." + this.subscriptionType + ".status");
						return TD.util.metric(t + ":subscription-status:" + n), null
					}
					if ("TweetSubscriptionEvent" === i) {
						TD.util.metric(t + ":" + this.subscriptionType);
						var s = (0, a.default)(e, "payload." + this.subscriptionType + ".tweet");
						return s || (TD.util.metric("project-content:tweet-missing:" + this.subscriptionType), null)
					}
					return TD.util.metric(t + ":unknown"), null
				}
			}, {
				key: "getStatus",
				value: function() {
					return this.subscription ? this.subscription.getStatus() : null
				}
			}, {
				key: "teardown",
				value: function() {
					this.featureFlagSubscription.unsubscribe(), this.dataSettingsSubscription.unsubscribe(), this._disableContent()
				}
			}]), e
		}();
	t.default = m
}, , function(e, t, i) {
	e.exports = i.p + "web/assets/logos/32.02d1bc1e02.png"
}, , function(e, t, i) {
	"use strict";
	var n = l(i(68)),
		s = l(i(44)),
		r = l(i(15)),
		a = l(i(122)),
		o = l(i(0));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = i(2174),
		u = i(419),
		d = i(2175);

	function h() {
		this._initBackend()
	}
	var m = ["ScribeTransport"],
		f = m.concat(["__version__", "previousMultiUserAccount", "currentAuthType", "guestID", "ScribeTransport"]),
		p = {
			local: localStorage,
			session: sessionStorage
		};
	h.PERSISTENT_SESSION_ITEMS = ["twitterAccountID", "_session", "__hasAlreadyReloaded"], h._testStore = function(e, t) {
		u.stateLog("_testStore()");
		for (var i = !1, n = !1, s = "test"; s.length < 1024;) s += s;
		try {
			e.setItem("__test__", s), i = e.getItem("__test__") === s, e.removeItem("__test__")
		} catch (t) {
			i = !1, (n = t.code === window.DOMException.QUOTA_EXCEEDED_ERR) && 0 === e.length && TD.sync.util.warn(t, "In Safari private browsing mode")
		}
		if (t && n) try {
			h.flushDataFromStore(e), i = h._testStore(e, !1)
		} catch (e) {
			i = !1
		}
		return i
	}, h.flushDataFromStore = function(e, t) {
		t = (t || []).concat(f), h.wipe(e, t)
	}, h.flushBackend = function(e, t) {
		return h.flushDataFromStore(p[e], t)
	}, h.wipeAll = function() {
		[localStorage, sessionStorage].forEach(h.wipe)
	}, h.wipe = function(e, t) {
		var i = {};
		(t = (0, a.default)((t || []).concat(m))).forEach(function(t) {
			var n = e.getItem(t);
			n && (i[t] = n)
		});
		try {
			e.clear()
		} catch (t) {
			console.warn("Clearing", e, "failed:", t)
		}(0, r.default)(i, function(t, i) {
			e.setItem(i, t)
		})
	}, h.flushWebstorage = function(e) {
		TD.sync.util.trace("clearing web storage");
		try {
			(0, s.default)(p).forEach(function(t) {
				h.flushDataFromStore(p[t], e)
			})
		} catch (e) {
			console.error("Unable to clear webstorage.", e)
		}
	}, h.clearOtherBackends = function(e) {
		(0, s.default)(p).forEach(function(t) {
			t !== e && h.wipe(p[t])
		})
	}, h.prototype.storeLoginResult = function(e) {
		var t = this.getTwitterLoginAccountID();
		t && e !== t && h.flushWebstorage(), this.setTwitterLoginAccountID(e)
	}, h.prototype._initBackend = function() {
		this._backendType = "unknown", h._testStore(window.localStorage, !0) ? (this._migrateBackend(window.localStorage), this._backend = window.localStorage, this._backendType = "local") : h._testStore(window.sessionStorage, !0) ? (this._migrateBackend(window.sessionStorage), this._backend = window.sessionStorage, this._backendType = "session") : (u.stateLog("store._initBackend(): Falling back to MemoryStorage."), this._backend = new c, this._backendType = "memory"), this._tryUpgrade(), h.clearOtherBackends(this._backendType)
	}, h.prototype._migrateBackend = function(e, t) {
		if ((t = t || this._getPersistentBackend()) !== e)
			for (var i in t)
				if (t.hasOwnProperty(i)) {
					try {
						e.setItem(i, t.getItem(i))
					} catch (e) {
						if (e.code === window.DOMException.QUOTA_EXCEEDED_ERR) return void TD.sync.util.warn("Migration failed due to quota limits.", e);
						throw e
					}
					t.removeItem(i)
				}
	}, h.prototype._getPersistentBackend = function() {
		return this._backend instanceof c ? localStorage : this._backend
	}, h.prototype._tryUpgrade = function() {
		try {
			d.doUpgrade(this)
		} catch (e) {
			TD.sync.util.warn("Error during store upgrade:", e), h.flushWebstorage()
		}
	}, h.prototype.getTwitterLoginAccountID = function() {
		var e = this._backend.getItem("twitterAccountID");
		if (e) return e;
		u.stateLog("store.getTwitterLoginAccountID(): account invalid", e)
	}, h.prototype.setTwitterLoginAccountID = function(e) {
		this._backend.setItem("twitterAccountID", e)
	}, h.prototype.getTwitterLoginAccount = function() {
		var e = this.getTwitterLoginAccountID(),
			t = TD.storage.Account.generateKeyFor("twitter", e);
		return TD.storage.accountController.get(t)
	}, h.prototype.getOrCreateTwitterLoginAccount = function() {
		var e = this;
		return TD.core.defer.maybeDeferred(function() {
			return e.getTwitterLoginAccount() || TD.storage.accountController.verifyTwitterCookieAccount()
		})
	}, h.prototype.getOrCreateGuestID = function() {
		var e = localStorage.getItem("guestID");
		if (!e) {
			e = this.createGuestID();
			try {
				localStorage.setItem("guestID", e)
			} catch (t) {
				this._backend.setItem("guestID", e)
			}
		}
		return e
	}, h.prototype.createGuestID = function() {
		return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
			var t = 16 * Math.random() | 0;
			return ("x" == e ? t : 3 & t | 8).toString(16)
		})
	}, h.prototype.getSessionMigratedToWeb = function() {
		return this._getPersistentBackend().getItem("sessionMigratedToWeb")
	}, h.prototype.setSessionMigratedToWeb = function() {
		this._getPersistentBackend().setItem("sessionMigratedToWeb", !0)
	}, h.prototype.removeSessionMigratedToWeb = function() {
		this._getPersistentBackend().removeItem("sessionMigratedToWeb")
	}, h.prototype._getLastVerifiedTimestamps = function() {
		var e = {};
		try {
			e = this.getJSON("accountsLastVerified")
		} catch (e) {
			u.stateLog("_getLastVerifiedTimestamps(): failed", e)
		}
		return e
	}, h.prototype.getLastVerifiedTimestamp = function(e) {
		var t, i;
		return t = this._getLastVerifiedTimestamps()[e.getKey()] || 0, i = e.getUpdated() || 0, Math.max(t, i)
	}, h.prototype.setLastVerifiedTimestamp = function(e) {
		var t = this._getLastVerifiedTimestamps(),
			i = t[e.getKey()] || 0,
			n = e.getUpdated() || 0,
			s = Math.max(i, n);
		s !== i && (t[e.getKey()] = s, this.setJSON("accountsLastVerified", t))
	}, h.prototype.removeLastVerifiedTimestamp = function(e) {
		var t = this._getLastVerifiedTimestamps();
		delete t[e.getKey()], this.setJSON("accountsLastVerified", t)
	}, h.prototype.setLastVersionRefreshTimestamp = function(e) {
		this._getPersistentBackend().setItem("lastVersionRefreshTimestamp", "" + e)
	}, h.prototype.getLastVersionRefreshTimestamp = function(e) {
		var t = parseInt("" + this._getPersistentBackend().getItem("lastVersionRefreshTimestamp"), 10);
		return "number" == typeof t && !isNaN(t) && t > 0 ? t : 0
	}, h.prototype.getSessionData = function() {
		var e = {
			uid: this._backend.getItem("twitterAccountID"),
			migrate: {},
			session: null
		};
		if (e.uid) try {
			e.session = JSON.parse(this._backend.getItem("_session"))
		} catch (t) {
			e.session = null
		}
		return e
	}, h.prototype.setSessionData = function(e) {
		this._backend.setItem("_session", (0, n.default)(e))
	}, h.prototype.getSessionMigrationData = function() {
		var e = ["__version__", "previousMultiUserAccount", "currentAuthType", "guestID", "tweetdeckAccount", "_session", "accountsLastVerified"];
		return {
			local: e.reduce(function(e, t) {
				var i = localStorage.getItem(t);
				return null !== i && (e[t] = i), e
			}, {}),
			session: e.reduce(function(e, t) {
				var i = sessionStorage.getItem(t);
				return null !== i && (e[t] = i), e
			}, {})
		}
	}, h.prototype.checkVersion = function() {
		var e = d.CURRENT_VERSION,
			t = this._backend.getItem("__version__");
		if (null !== t && ~t != ~e) throw new Error("Wrong version number in store. (saved) %s != (given) %s", t, e)
	}, h.prototype.setVersion = function(e) {
		this._backend.setItem("__version__", e)
	}, h.prototype.getJSON = function(e) {
		return JSON.parse(this._backend.getItem(e) || "{}")
	}, h.prototype.setJSON = function(e, t) {
		this._backend.setItem(e, (0, n.default)(t))
	}, h.prototype.setJSONCritical = function(e, t, i) {
		try {
			this._backend.setItem(e, (0, n.default)(t))
		} catch (n) {
			if (n.code !== window.DOMException.QUOTA_EXCEEDED_ERR || i) throw n;
			(0, o.default)(document).trigger("dataStorageFull"), this.setJSONCritical(e, t, !0)
		}
	}, e.exports = {
		Store: h,
		MemoryStorage: c,
		store: new h
	}
}, , function(e, t, i) {
	"use strict";
	var n, s, r, a, o, l = v(i(108)),
		c = v(i(415)),
		u = v(i(120)),
		d = v(i(99)),
		h = v(i(132)),
		m = v(i(807)),
		f = v(i(63)),
		p = v(i(15)),
		g = v(i(0));

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.AccountController = (n = TD.storage, s = TD.sync.util, TD.sync.tdapi, r = TD.storage.notification, a = TD.core.defer, (o = function() {
		var e = this;
		this._moduleName = "accounts", this.reqsinflight = [], e.ACCEPTED_ACCOUNT_TYPES = {
			twitter: !0,
			bitly: !0
		}, this._objects = {}, this._cookieAccountPromise = null, this._unverified = {}, e.blacklistAccount = function(t) {
			s.stateLog("blacklisting", t);
			var i = t.getKey();
			n.clientController.client.addToAccountBlacklist(i), this._objects[i] && e.remove(i), n.clientController.client.delFromAccountWhitelist(i), r.notify("/storage/account/blacklisted", t)
		}, e.whitelistAccounts = function(e) {
			s.stateLog("whitelisting", e), n.clientController.client && (0, p.default)(e, function(e) {
				n.clientController.client.addToAccountWhitelist(e.getKey()), n.clientController.client.delFromAccountBlacklist(e.getKey())
			})
		}, e.isEmpty = function() {
			return (0, f.default)(this._objects)
		}, e.isSingleUser = function() {
			return 1 === this.getAll().length
		}, e.getDefault = function() {
			if (n.clientController.client) {
				var t = n.clientController.client.getDefaultAccount(),
					i = this._objects[t];
				return t && i && e.isPostingAccount(i) ? i : e.isEmpty() ? null : (e.setDefault(e.getPostingAccounts()[0].getKey()), this._objects[n.clientController.client.getDefaultAccount()])
			}
		}, e.getUserIdentifier = function() {
			var t = e.getAccountFromId(n.store.getTwitterLoginAccountID());
			return t ? t.state.username : ""
		}, e.setDefault = function(e) {
			n.clientController.client.setDefaultAccount(e)
		}, e.getAccountsForService = function(t) {
			return e.getAll().filter(function(e) {
				return e.getType() === t
			})
		}, e.getAccountFromUsername = function(t) {
			var i = e.getAccountsForService("twitter");
			return t = t.toLowerCase(), (0, m.default)(i, function(e) {
				return e.getUsername().toLowerCase() === t
			})
		}, e.getAccountFromId = function(t) {
			var i = e.getAccountsForService("twitter");
			return (0, h.default)(i, function(e) {
				return "" + e.getUserID() === t
			})
		}, e.getPreferredAccount = function(t) {
			var i = e.getDefault();
			return !i || t && i.getType() != t ? e.getAccountsForService(t)[0] : i
		}, this.init = function() {
			s.trace("accountController init"), this.subscription = g.default.subscribe("/storage/client/change", function(t) {
				(0, p.default)(t.getAccountBlacklist(), function(t) {
					e._objects[t] && e.remove(t)
				})
			})
		}, this.reset = function() {
			this._objects = {}, this._cookieAccountPromise = null, this._unverified = {}, this.subscription && g.default.unsubscribe(this.subscription)
		}, this.triggerPush = function() {
			s.assert(!1, "triggerPush() should not be called on account controller")
		}, this.updateFromBackend = function(e, t) {
			s.stateLog("accountController.updateFromBackend:", e);
			var i = s.list_to_set(t.settings.account_whitelist || []);
			e = (e = e || []).filter(function(e) {
				var t = n.Account.generateKeyFor(e.service, e.uid),
					s = i[t];
				return !!this.ACCEPTED_ACCOUNT_TYPES[e.service] && (s || (this._unverified[t] = n.Account.newFromBackendState(e)), s)
			}.bind(this));
			var r = this;
			(0, p.default)(e, function(e) {
				var t = n.Account.generateKeyFor(e.service, e.uid),
					i = r._objects[t];
				i ? (s.stateLog("updating existing", i, "with", e), i.newRemoteState(e)) : (s.stateLog("creating new Account with", e), i = n.Account.newFromBackendState(e), r.manage(i))
			})
		}, this.get = function(e) {
			return "tweetdeck" === e ? {
				getKey: function() {
					return "tweetdeck"
				},
				getUserID: function() {
					return "tweetdeck"
				},
				getType: function() {
					return "tweetdeck"
				}
			} : this._objects[e]
		}, this.manage = function(e) {
			if (!e.getKey()) throw (0, g.default)(document).trigger("metric", {
				key: "account:manage:fail"
			}), new TypeError("account must have its .key set");
			return e.managed = !0, this._objects[e.getKey()] || r.notify("/storage/account/new", e), this._objects[e.getKey()] = e, this.whitelistAccounts([e]), n.store.setLastVerifiedTimestamp(e), (0, g.default)(document).trigger("metric", {
				key: "account:manage:success"
			}), this.pushAccount(e)
		}, this.manageContributee = function(e) {
			var t = TD.storage.Account.generateKeyFor("twitter", e.id),
				i = this.get(t);
			return i ? this.updateAccountFromContributee(i, e) : this.createAccountFromContributee(e)
		}, this.createAccountFromContributee = function(e) {
			var t = new TD.storage.Account(null, {
				contributor: !0
			});
			return t.setType("twitter"), t.setUserID(e.id), t.setIsAdmin(e.isAdmin), t.computeKey(), this._verifyAndManageAccount(t)
		}, this.updateAccountFromContributee = function(e, t) {
			var i = TD.core.defer.succeed();
			return e.getPrivate("isAccessDenied") && (e.setPrivate("isAccessDenied", !1), (0, g.default)(document).trigger("dataTwitterAccountAccessEnabled", {
				accountKey: e.getKey()
			}), i.addCallback(e.makeContributor.bind(e))), i.addCallback(e.setIsAdmin.bind(e, t.isAdmin)), i
		}, this.isContributeeManaged = function(e) {
			var t = TD.storage.Account.generateKeyFor("twitter", e.id);
			return !!this.get(t)
		}, e.remove = function(e) {
			var t = this._objects[e];
			t.managed = !1, delete this._objects[e], r.notify("/storage/account/removed", t), n.store.removeLastVerifiedTimestamp(t), t.isContributor() && !t.getPrivate("isAccessDenied") && (0, g.default)(document).trigger("uiRemoveContributee", {
				accountKey: TD.storage.store.getTwitterLoginAccount().getKey(),
				userId: t.getUserID()
			})
		}, e.getAll = function() {
			var t = (0, d.default)(this._objects);
			return t.sort(e.accountComparator), t
		}, e.getPostingAccounts = function() {
			return (0, u.default)(e.getAll(), e.isPostingAccount)
		}, e.isPostingAccount = function(e) {
			return "bitly" !== e.getType()
		}, e.accountComparator = function(t, i) {
			var n = t.getType(),
				s = i.getType(),
				r = "twitter" === n,
				a = "twitter" === s,
				o = TD.storage.store.getTwitterLoginAccount(),
				l = o ? o.getKey() : e.getDefault().getKey();
			if (t.getKey() === l) return -1;
			if (i.getKey() === l) return 1;
			if (r && a) {
				var c = t.getUsername().toLowerCase(),
					u = i.getUsername().toLowerCase();
				return (c > u) - (c < u)
			}
			return r ? -1 : a ? 1 : (n > s) - (n < s)
		}, e.getDefaults = function() {
			var t = e.getAll(),
				i = e.getDefault(),
				n = [],
				s = {};
			i && (s[i.getType()] = !0, n.push(i));
			for (var r = 0; r < t.length; r++) s[t[r].getType()] || (s[t[r].getType()] = !0, n.push(t[r]));
			return n
		}, e.pushAccount = function(e) {}, e.authFromAccount = function(e) {
			return TD.controller.auth.create(e.getType(), e)
		}, e.getTemporaryCookieAccount = function() {
			var e = new TD.storage.Account;
			return e.setType("twitter"), e.makeOAuth2(), e
		}, e.getCookieAccount = function() {
			var e = TD.storage.store.getTwitterLoginAccount();
			if (e && e.isCookieUser()) return e
		}, e._verifyAndManageAccount = function(t, i) {
			var n = e.authFromAccount(t),
				s = new a.Deferred;
			return n.verifyAccount(s.callback.bind(s), s.errback.bind(s)), i && s.addErrback(function() {}), s.addCallback(function() {
				return TD.storage.accountController.manage(t)
			}), s
		}, e.verifyAndManageCookieAccount = function(t) {
			return e.authFromAccount(t).verifyCookieAccount().addCallback(function() {
				return TD.storage.accountController.manage(t)
			})
		}, e.verifyTwitterCookieAccount = function() {
			var e = this;
			this._cookieAccountPromise || (this._cookieAccountPromise = new l.default(function(t, i) {
				var n = e.getTemporaryCookieAccount();
				e.verifyAndManageCookieAccount(n).addCallback((0, c.default)(n)).addCallbacks(t, i)
			}));
			var t = new TD.core.defer.Deferred;
			return this._cookieAccountPromise.then(t.callback.bind(t), t.errback.bind(t)), t
		}, e.verifyNewTwoginAccount = function() {
			s.stateLog("verifyNewTwoginAccount");
			var e = n.Account.generateKeyFor("twitter", TD.storage.store.getTwitterLoginAccountID()),
				t = this._unverified[e];
			if (t) var i = this._verifyAndManageAccount(t, !0);
			return this._unverified = {}, i || TD.core.defer.succeed()
		}
	}).prototype = new n.SobjController, n.accountController = new o, o), e.exports = TD.storage.accountController
}, function(e, t, i) {
	"use strict";
	t.generateAccountKey = function(e, t) {
		return "tweetdeck" === e ? "tweetdeck" : encodeURI(e + ":" + t)
	}, t.generateEggAvatarForId = function(e) {
		return "https://abs.twimg.com/sticky/default_profile_images/default_profile_" + Number(e) % 7 + "_bigger.png"
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = c(i(9)),
		s = c(i(13));
	t.getLoggedInUser = function() {
		return d().addCallback(function(e) {
			var t = m("viewer.user", e.errors);
			if (t) throw new Error(t || "Unknown failure fetching logged-in user");
			return f((0, s.default)(e, "data.viewer.user"))
		})
	}, t.getContributees = function() {
		return d().addCallback(function(e) {
			return (0, s.default)(e, "data.viewer.teams.act_as", []).filter(function(t, i) {
				return !m(["viewer.teams.act_as", i], e.errors)
			}).map(p)
		})
	};
	var r = c(i(36)),
		a = c(i(73)),
		o = i(278),
		l = c(i(2193));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = r.default.Observable.of(!0).flatMap(function() {
		return r.default.Observable.fromPromise((0, o.graphqlRequest)(l.default))
	}).share();

	function d() {
		return a.default.toDeferred(u)
	}

	function h(e) {
		return ((Array.isArray(e) ? e.join(".") : e) + ".").replace(/\.\[(\d+)\]\./, ".$1.")
	}

	function m(e) {
		var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
			i = h(e);
		return t.filter(function(e) {
			return h(e.path).startsWith(i)
		}).map(function(e) {
			return e.message
		}).filter(Boolean).join("\n") || null
	}

	function f(e) {
		return (0, n.default)({}, e.legacy, {
			id_str: e.rest_id
		})
	}

	function p(e) {
		return {
			admin: "ADMIN" === e.access_level || "Admin" === e.access_level,
			user: f(e.user)
		}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(13),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a, o, l, c, u = i(2194);
	e.exports = TD.net.util = (a = {}, o = encodeURIComponent, l = /[!'()]/g, c = /\*/g, window.encodeURIComponent = function(e) {
		return o(e).replace(l, escape).replace(c, "%2A")
	}, a.addURLParam = function(e, t, i) {
		var n = {};
		return n[t] = i, a.addURLParameters(e, n)
	}, a.addURLParameters = function(e, t) {
		var i = a.buildQueryString(t),
			n = e;
		return i ? (-1 === e.indexOf("?") ? n += "?" : n += "&", n + i) : e
	}, a.buildQueryString = function(e) {
		var t, i = [];
		if (e)
			for (var n in e) void 0 !== e[n] && (t = n + "=" + encodeURIComponent(e[n]), i.push(t));
		return i.join("&")
	}, a.formDecode = function(e) {
		var t, i, n, s = {};
		return e.split("#", 1)[0].split("&").forEach(function(e) {
			if ((n = e.indexOf("=")) > 0) {
				t = e.slice(0, n), i = e.slice(n + 1);
				try {
					t = decodeURIComponent(t)
				} catch (e) {}
				try {
					i = decodeURIComponent(i)
				} catch (e) {}
				s[t] = i
			}
		}), s
	}, a.decodeURL = function(e) {
		var t = e.split("?");
		return t.length > 1 ? a.formDecode(t[1]) : {}
	}, a.formEncode = function(e) {
		var t = [];
		for (var i in e) t.push(i + "=" + encodeURIComponent(e[i]));
		return t.join("&")
	}, a.getQueryStringParams = function() {
		var e = window.location.href.split("?");
		if (e.length >= 2) {
			var t = e.slice(1).join("?");
			return this.formDecode(t)
		}
		return {}
	}, a.getFailureScribePayload = function(e) {
		return {
			request: {
				hadBody: !!(0, r.default)(e, ["requestSettings", "data"]),
				headers: (0, r.default)(e, ["requestSettings", "tweetdeck", "headers"]),
				settings: (0, r.default)(e, ["requestSettings", "tweetdeck", "settings"]),
				type: (0, r.default)(e, ["requestSettings", "type"]),
				url: (0, r.default)(e, ["requestSettings", "url"])
			},
			response: {
				errors: (0, r.default)(e, ["req", "responseJSON", "errors"], []),
				headers: u(e.req.getAllResponseHeaders()),
				message: e.message,
				statusCode: e.number
			}
		}
	}, a)
}, , , , , , , function(e, t, i) {
	"use strict";
	var n, s = i(13),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(17),
		o = i(721),
		l = i(168);
	var c = (0, o.createInterval)();
	t.getTweetText = function(e) {
		return e.full_text || (0, r.default)(e, "extended_tweet.full_text", "") || e.text
	}, t.getUnicodeDisplayRange = function(e) {
		return (0, r.default)(e, "extended_tweet.display_text_range", null) || e.display_text_range
	}, t.getTweetEntities = function(e) {
		var i = t.extractEntities(e.extended_tweet || e),
			n = t.getUnicodeDisplayRange(e);
		t.identifyQuoteTweetAttachmentUrls(i, n), t.identifyMediaAttachmentUrls(i, n);
		var s = e && e.card;
		return s && (0, l.isHorizonWebCardTypeEnabled)(s) && t.identifyCardAttachmentUrls(e, i, n), t.identifyImplicitMentions(i, n), i
	}, t.extractEntities = function(e) {
		var t = e.entities || {},
			i = {
				hashtags: t.hashtags,
				urls: t.urls,
				user_mentions: t.user_mentions,
				cashtags: t.cashtags,
				media: t.media
			};
		return (0, r.default)(e, "extended_entities.media.length", 0) > 0 && (i.media = e.extended_entities.media), i
	}, t.identifyMediaAttachmentUrls = function(e, i) {
		if (i && e && !e.convertedToUTF16) {
			var n = e.media;
			(void 0 === n ? [] : n).filter(t.entityIsOutsideDisplayRange.bind(t, i)).forEach(function(e) {
				e.isUrlForAttachment = !0
			})
		}
	}, t.identifyQuoteTweetAttachmentUrls = function(e, i) {
		if (e && i && !e.convertedToUTF16) {
			var n = e.urls;
			(void 0 === n ? [] : n).filter(t.entityIsOutsideDisplayRange.bind(t, i)).forEach(function(e) {
				var t = (0, a.extractTweetIdFromPermalink)(e.expanded_url);
				e.isUrlForAttachment = Boolean(t)
			})
		}
	}, t.identifyCardAttachmentUrls = function(e, t, i) {
		var n = e && e.card;
		if (n && t && i) {
			var s = t.urls,
				r = void 0 === s ? [] : s,
				a = t.media,
				o = void 0 === a ? [] : a,
				l = Boolean(e.quoted_status_id_str || e.is_quote_status),
				c = o.length > 0;
			l || c || r.forEach(function(e) {
				e.isUrlForAttachment = e.url === n.url && e.indices[1] === i[1]
			})
		}
	}, t.identifyImplicitMentions = function(e, i) {
		if (i && e) {
			var n = e.user_mentions;
			(void 0 === n ? [] : n).filter(t.entityIsOutsideDisplayRange.bind(t, i)).forEach(function(e) {
				e.isImplicitMention = !0
			})
		}
	}, t.entityIsOutsideDisplayRange = function(e, t) {
		var i = new c(c.inclusiveEndpoint(e[0]), c.exclusiveEndpoint(e[1])),
			n = new c(c.inclusiveEndpoint(t.indices[0]), c.exclusiveEndpoint(t.indices[1]));
		return i.intersection(n).empty
	}
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getHumanFormatOptions = function() {
		return {
			separator: "",
			decimals: 0
		}
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(14)),
		s = r(i(16));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = function() {
		function e() {
			(0, n.default)(this, e), this.name = "", this.query = "", this.url = "", this.description = "", this.attribution = "", this.created = 0, this.promotedContent = null, this.events = null
		}
		return (0, s.default)(e, [{
			key: "fromJSONObject",
			value: function(e) {
				return this.name = e.name, this.query = e.query, this.metaDescription = e.metaDescription, this.rank = e.rank, this.target = e.target, this.badges = e.badges, this.promotedContent = e.promoted_content, this.events = e.events, this.created = (new Date).getTime(), this.query = encodeURIComponent(this.name), this.url || (this.url = "http://search.twitter.com/search?q=" + this.query), this.promotedContent && this.promotedContent.description && (this.description = TD.util.escape(this.promotedContent.description)), this
			}
		}]), e
	}();
	t.default = a
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/dmr_growl_icon.b39cba9336.png"
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = {
		AUTHENTICATION_FAILED: {
			twitterErrorCode: 32,
			message: (0, r.default)("Your username and password did not match our records or have expired")
		},
		404: {
			twitterErrorCode: 34,
			message: (0, r.default)("We could not complete your request because the tweet may be protected or deleted")
		},
		SUSPENDED_USER: {
			twitterErrorCode: 63,
			message: (0, r.default)("This user has been suspended")
		},
		SUSPENDED_ACCOUNT: {
			twitterErrorCode: 64,
			message: (0, r.default)("Your account is suspended and is not permitted to access this feature")
		},
		RATE_LIMITED: {
			twitterErrorCode: 88,
			message: (0, r.default)("Sorry, you've made too many requests so Twitter has temporarily limited your access. Try again in a few minutes")
		},
		RATE_LIMITED_DM_SEND: {
			twitterErrorCode: 88,
			message: (0, r.default)("You hit your daily limit for sending messages")
		},
		INVALID_TOKEN: {
			twitterErrorCode: 89,
			message: (0, r.default)("Your access is invalid or has expired")
		},
		RECIPIENT_DOES_NOT_EXIST: {
			twitterErrorCode: 108,
			message: (0, r.default)("There is no user by that name.")
		},
		OVER_CAPACITY: {
			twitterErrorCode: 130,
			message: (0, r.default)("Twitter is temporarily over capacity. Please try again later")
		},
		INTERNAL_ERROR: {
			twitterErrorCode: 131,
			message: (0, r.default)("There's something wrong. Please try again later")
		},
		USER_AUTHENTICATION_FAILED: {
			twitterErrorCode: 135,
			message: (0, r.default)("Could not authenticate you")
		},
		NOT_FOLLOWING: {
			twitterErrorCode: 150,
			message: (0, r.default)("This user doesn't follow you. You can only send messages to people who do.")
		},
		MESSAGE_SEND_ERROR: {
			twitterErrorCode: 151,
			message: (0, r.default)("Something went wrong, but don't fret, it's not your fault.")
		},
		DUPLICATE_TWEET: {
			twitterErrorCode: 187,
			message: (0, r.default)("You already tweeted that")
		},
		INVALID_SEARCH_QUERY: {
			twitterErrorCode: 195,
			message: (0, r.default)("Invalid search query")
		},
		ACCESS_REVOKED: {
			twitterErrorCode: 220,
			message: (0, r.default)("Unable to access this resource")
		},
		DUPLICATE_MESSAGE: {
			twitterErrorCode: 311,
			message: (0, r.default)("You have already sent this message")
		},
		TOO_MANY_CONTRIBUTORS: {
			twitterErrorCode: 317,
			message: (0, r.default)("You cannot add any more Team members.")
		},
		TOO_MANY_CONTRIBUTEES: {
			twitterErrorCode: 318,
			message: (0, r.default)("That user cannot be added to any more Teams.")
		},
		CONTRIBUTION_DISALLOWED: {
			twitterErrorCode: 330,
			message: (0, r.default)("That user has privacy settings enabled preventing them from being added to this team.")
		},
		PROTECTED_TWEET: {
			message: (0, r.default)("Sorry, we could not perform your retweet because the tweet is protected")
		},
		DUPLICATE_RETWEET: {
			message: (0, r.default)("Whoops! You've already Retweeted that…")
		},
		USER_DOES_NOT_EXIST: {
			message: (0, r.default)("That user does not exist")
		},
		UNKNOWN: {
			message: (0, r.default)("An unknown error occurred. Please try again shortly.")
		}
	}
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/hidden-selected.3a5a341eeb.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/hidden-unselected.5208180de2.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/large-selected.bff6bffb7e.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/large-unselected.7117aebf19.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/medium-selected.37909b7469.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/medium-unselected.0178d13273.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/small-selected.9a9d50e109.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/small-unselected.ad19e97845.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_screenshot@1x.f26cda6456.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_screenshot@2x.ecf8f0a3c6.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/sparkles-icon.1edb0061a8.svg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/tweetdeck-optin-nux.badf4ef2ff.png"
}, , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = TD.config,
		s = n.twitter_api_base,
		r = n.twitter_api_version;
	t.insights = s + "/" + r + "/tweetdeck/insights"
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.hasUserAccessToGryphonBeta = function() {
		var e = 1 === (0, s.getTwitterAccounts)().length,
			t = (0, n.getValueForFeatureFlag)("tweetdeck_gryphon_beta_bypass_enabled");
		return !TD.util.isWrapperApp() && (t || e && (0, n.getValueForFeatureFlag)("tweetdeck_gryphon_beta_enabled") || (0, n.getValueForFeatureFlag)("tweetdeck_gryphon_beta_all_enabled"))
	}, t.hasUserAccessToGryphonBetaSurvey = function() {
		return !TD.util.isWrapperApp() && (0, n.getValueForFeatureFlag)("gryphon_survey_enabled") && !!(0, n.getValueForFeatureFlag)("gryphon_survey_url")
	};
	var n = i(58),
		s = i(74)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = l(i(282)),
		s = l(i(48));
	t.default = function(e) {
		var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};

		function i(i) {
			var n = t.pollInterval * (1 + Math.random() * t.jitter);
			return r.default.Observable.timer(0, n).flatMap(function() {
				return a.default.fromDeferred(function(t) {
					return o.default.request(e, {
						account: t
					})
				}(i)).catch(function(e) {
					return r.default.Observable.empty()
				})
			}).pluck("data").publishReplay(1).refCount()
		}
		t = (0, s.default)(t || {}, {
			pollInterval: 3e5,
			jitter: .05
		});
		var l = {};
		return function(e) {
			var t = e.account,
				s = t ? t.getKey() : "";
			(0, n.default)(l, s) || (l[s] = i(t));
			return l[s]
		}
	};
	var r = l(i(36)),
		a = l(i(73)),
		o = l(i(131));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = function() {
		this.getLoginAccountAccessDeniedMessageId = function() {
			return "expired-login-error"
		}, this.getLoginAccountAccessDeniedMessageData = function(e) {
			return {
				id: this.getLoginAccountAccessDeniedMessageId(),
				text: [(0, r.default)("TweetDeck no longer has permission to access your main login account @{{1}}.", {
					1: e.account.getUsername()
				}), (0, r.default)("You will be logged out to prevent unauthorized access.")].join(" "),
				colors: {
					background: "#b2d5ed",
					foreground: "#555"
				}
			}
		}, this.getDataminrAccountAccessDeniedMessageData = function(e) {
			return {
				id: "expired-dataminr-login-error",
				text: (0, r.default)("TweetDeck no longer has permission to access your Dataminr account.") + " " + (0, r.default)("Please check your Dataminr settings."),
				colors: {
					background: "#b2d5ed",
					foreground: "#555"
				}
			}
		}
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.CALLBACK_URL_REQUIRED = t.BASE_URL_REQUIRED = t.CANCELLED = t.POPUP_BLOCKED = void 0;
	var n = u(i(108)),
		s = u(i(9)),
		r = u(i(13));
	t.observedPopup = function(e) {
		if (!(e = (0, s.default)({
				pollInterval: 100,
				windowOpener: c.default.isMacApp() ? l.default : window.open.bind(window),
				queryParams: {}
			}, e)).baseUrl) return n.default.reject(new Error(m));
		if (!e.callbackUrl) return n.default.reject(new Error(f));
		var t = (screen.width - 800) / 2,
			i = (screen.height - 820) / 2,
			u = e.windowOpener(function(e) {
				return (0, o.default)(e.baseUrl).setSearch(e.queryParams).toString()
			}(e), null, "width=800,height=820,left=" + t + ",top=" + i + ",resizable,scrollbars,status");
		if (null === u) return n.default.reject(new Error(d));
		return a.default.Observable.timer(e.pollInterval, e.pollInterval).map(function() {
			return function(e, t) {
				var i = t.callbackUrl,
					n = t.paramToExtractValueFrom,
					a = "";
				try {
					a = (0, r.default)(e, "location.href", "")
				} catch (e) {}
				var l = n ? function(e, t) {
					return {
						valueFromParams: (0, o.default)(t).search(!0)[e]
					}
				}(n, a) : {};
				return (0, s.default)({
					cancelled: e.closed,
					complete: 0 === a.indexOf(i)
				}, l)
			}(u, e)
		}).filter(p).take(1).do(u.close.bind(u)).map(function(e) {
			if (e.cancelled) throw new Error(h);
			return e
		}).toPromise()
	};
	var a = u(i(36)),
		o = u(i(109)),
		l = u(i(2427)),
		c = u(i(17));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var d = t.POPUP_BLOCKED = "popup_blocked",
		h = t.CANCELLED = "cancelled",
		m = t.BASE_URL_REQUIRED = "baseUrl is required",
		f = t.CALLBACK_URL_REQUIRED = "callbackUrl is required";

	function p(e) {
		return e.cancelled || e.complete
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = t.OPT_IN_COOKIE_NAME = "tweetdeck_version",
		s = function(e) {
			document.cookie = n + "=" + e + ";path=/;domain=.twitter.com;max-age=15768000;secure;samesite=none"
		};
	t.setTweetDeckLegacyVersionCookie = function() {
		s("legacy")
	}, t.setTweetDeckGryphonVersionCookie = function() {
		s("beta")
	}
}, function(e, t, i) {
	"use strict";
	var n = i(109),
		s = {
			getLoginUrl: function(e) {
				e = e || {};
				var t = new n(window.location.href);
				t.setQuery({
					via_twitter_login: !0
				});
				var i = new n("https://mobile.twitter.com/login");
				return i.setQuery({
					hide_message: !0,
					redirect_after_login: t.href()
				}), e.usernameOrEmail && i.setQuery({
					username_or_email: e.usernameOrEmail
				}), i.href()
			},
			getLogoutUrl: function() {
				var e = new n(window.location.href),
					t = new n("https://mobile.twitter.com/logout");
				return t.setQuery({
					redirect_after_logout: e.href()
				}), t.href()
			}
		};
	e.exports = s
}, function(e, t, i) {
	"use strict";
	var n = o(i(0)),
		s = o(i(6)),
		r = i(7),
		a = o(r);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.initialState({
			showFilterCallout: function() {
				return this.attr.getSetting()
			}
		}), this.attributes({
			template: "column/filter_callout",
			content: null,
			getSetting: null,
			setSetting: null,
			scribeComponent: "",
			onClick: function() {
				return function() {}
			}
		}), this.after("initialize", function() {
			this.on("click", this.handleFilterCalloutClick), this.on("uiRemoveSearchCallout", this.teardown)
		}), this.handleFilterCalloutClick = function() {
			this.trigger("uiEnterSettings"), this.attr.onClick(), (0, n.default)(document).trigger("scribeEvent", {
				terms: {
					page: "column",
					section: "twitter",
					component: this.attr.scribeComponent,
					element: "filter_callout",
					action: "click"
				}
			})
		}, this.render = function() {
			if (this.state.showFilterCallout) {
				var e = s.default.render(this.attr.template, {
					content: this.attr.content
				});
				this.$node.html(e), this.attr.setSetting(!1)
			}
		}, this.after("teardown", function() {
			this.$node.remove()
		})
	}), e.exports.FilterCalloutReact = (0, r.uiBaseToReact)(e.exports)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.FilterMessageUiBase = t.default = void 0;
	var n = a(i(4)),
		s = (a(i(8)), i(7)),
		r = a(i(171));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function o(e) {
		var t = e.title,
			i = e.filters,
			s = e.onClick;
		return n.default.createElement("div", {
			onClick: function(e) {
				e.stopPropagation(), s()
			},
			className: "flex flex-align--center is-actionable with-column-divider-bottom column-message padding-l--20 padding-rxs padding-vs txt-size--13 txt-line-height--23",
			"data-testid": "filterMessage"
		}, t ? n.default.createElement("p", {
			className: "flex-shrink--0 padding-r--5"
		}, t) : null, i && i.map(function(e) {
			return n.default.createElement("span", {
				key: e.name,
				onClick: function(t) {
					t.stopPropagation(), s(e.name)
				},
				className: "inline-flex padding-rs"
			}, n.default.createElement("span", {
				className: "txt-size--16 txt-line-height--20 color-twitter-darker-gray dark-only--color-twitter-gray"
			}, n.default.createElement(r.default, {
				name: e.icon
			})), " ", e.text ? n.default.createElement("span", {
				className: "margin-l--6 flex-grow--1"
			}, e.text) : null)
		}))
	}
	t.default = o;
	t.FilterMessageUiBase = (0, s.reactToUiBase)(o)
}, function(e, t, i) {
	"use strict";
	var n = h(i(0)),
		s = h(i(2481)),
		r = h(i(2482)),
		a = h(i(2483)),
		o = h(i(21)),
		l = i(7),
		c = h(l),
		u = h(i(2504)),
		d = i(33);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var m = i(2505),
		f = i(876),
		p = i(153),
		g = i(6);
	e.exports = c.default.mixin(function() {
		this.attributes({
			actionButton: "[data-action]",
			searchInputForm: ".js-column-options-search-form",
			searchInput: ".js-search-input",
			scribeSection: "column_options",
			isAnimatingClass: "is-column-options-animating",
			column: null,
			columnType: null,
			onFilterChange: null,
			onShowing: function() {
				return function() {}
			},
			onShown: function() {
				return function() {}
			},
			onHiding: function() {
				return function() {}
			},
			onHidden: function() {
				return function() {}
			},
			expandContentFilter: !1,
			expandUserFilter: !1,
			expandActionFilter: !1,
			expandEngagementFilter: !1,
			expandLocationFilter: !1,
			isTouchColumnOptionsClass: "is-touch-column-options",
			hideContentClass: "scroll-none",
			accordionSelector: ".js-accordion",
			scribeElementSelector: "[data-scribe-element]",
			searchFilterSelector: ".js-search-filter",
			contentFilterSelector: ".js-content-filter",
			userFilterSelector: ".js-user-filter"
		}), this.updateHeight = function() {
			this.$node.css("height", ""), this.$node.height(this.$node.height()), this.trigger("uiAccordionTotalHeightChanged")
		}, this.handleChildTransitionExpandStart = function(e, t) {
			this.$node.css("height", "")
		}, this.handleChildTransitionExpandEnd = function() {
			this.$node.css("height", "")
		}, this.handleUpdateSearchFilter = function(e) {
			this.attr.onFilterChange(e)
		}, this.handleShowUserFilter = function(e) {
			e.stopPropagation(), this.showAccordionPanel(this.select("userFilterSelector"))
		}, this.handleShowContentFilter = function(e) {
			e.stopPropagation(), this.showAccordionPanel(this.select("contentFilterSelector"))
		}, this.hide = function() {
			var e = this,
				t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
			this.$node.hasClass(this.attr.isAnimatingClass) || (this.attr.onHiding(), this.$node.addClass(this.attr.hideContentClass), this.transitionCollapse(this.$node, this.attr.isAnimatingClass, function() {
				t && e.$node.empty(), e.attr.onHidden()
			}), t && this.teardown())
		}, this.showColumnOptions = function() {
			var e = this;
			this.attr.onShowing(), this.$node.addClass(this.attr.hideContentClass), this.transitionExpand(this.$node, this.attr.isAnimatingClass, function() {
				e.$node.removeClass(e.attr.hideContentClass), e.attr.onShown()
			})
		}, this.handleClickEvents = function(e) {
			var t = (0, n.default)(e.target).closest(this.attr.actionButton),
				i = t.data("action"),
				s = this.column.model.getKey();
			switch (i) {
				case "remove":
					this.trigger("uiDeleteColumnAction", {
						columnId: s
					});
					break;
				case "clear":
					this.column.clear(), this.trigger("uiClearColumnAction", {
						columnId: s
					});
					break;
				case "left":
				case "right":
					this.trigger("uiMoveColumnAction", {
						columnId: s,
						action: i
					});
					break;
				case "edit-list":
					this.trigger("uiShowEditListMembers", {
						list: o.default.getOwnList(this.column)
					});
					break;
				case "edit-customtimeline":
					var r = this.column.getCustomTimelineFeed(),
						a = this.column.getCustomTimeline(),
						l = {
							timelineId: r.getMetadata().id,
							accountKey: r.getAccountKey(),
							name: a.name,
							description: a.description,
							columnKey: this.column.model.getKey()
						};
					this.trigger("uiShowEditCustomTimeline", l);
					break;
				case "embed":
					(0, u.default)(this.column), (0, d.columnActionClick)("embed", {
						type: o.default.getColumnType(this.column)
					});
					break;
				case "view-on-web":
					this.trigger("uiViewTimeline");
					break;
				case "reference-to":
					this.trigger("uiReferenceTimeline");
					break;
				case "copy-search-query":
					var c = o.default.getBaseQuery(this.column),
						h = this.props.searchFilter.getQueryString(),
						m = [c, h].join(" ");
					this.trigger("uiShowCopySearchQuery", {
						query: m
					});
					break;
				case "moment":
					this.trigger("uiCreateMomentAction", {
						collection: this.column.getCustomTimeline()
					})
			}
		}, this.handleScribeElementClick = function(e) {
			var t = (0, n.default)(e.target).closest(this.attr.scribeElementSelector).attr("data-scribe-element");
			(0, d.generic)({
				section: this.attr.scribeSection,
				element: t,
				action: "click"
			})
		}, this.attachColumnFilters = function() {
			var e = this,
				t = o.default.isSearchColumn(this.attr.column) || o.default.isEventColumn(this.attr.column),
				i = this.attr.column instanceof TD.vo.Column,
				n = this.connect(a.default, {
					mapStateToProps: function() {
						return {
							searchFilter: e.props.searchFilter
						}
					}
				});
			this.attachChild(n, this.select("searchFilterSelector"), {
				renderOptions: i ? {
					withUsersFilter: !0,
					withLanguage: t,
					withDateTime: t,
					withRetweetsToggle: !0,
					withFromList: t,
					withUsersIFollow: o.default.canFilterByUsersIFollow(this.column),
					withActionFilter: o.default.isActionsColumn(this.column),
					withEngagementFilter: t,
					withPeriscopeFilter: t,
					withLocationFilter: t,
					expandContentFilter: this.attr.expandContentFilter,
					expandUserFilter: this.attr.expandUserFilter,
					expandActionFilter: this.attr.expandActionFilter,
					expandEngagementFilter: this.attr.expandEngagementFilter,
					expandLocationFilter: this.attr.expandLocationFilter
				} : {
					expandContentFilter: this.attr.expandContentFilter
				},
				accordionSelector: this.attr.accordionSelector,
				contentFilterSelector: this.attr.contentFilterSelector,
				userFilterSelector: this.attr.userFilterSelector,
				scribeSection: this.attr.scribeSection,
				column: this.column,
				isSearchOrEventColumn: t,
				onChange: function() {
					return e.handleUpdateSearchFilter.bind(e)
				}
			})
		}, this.componentDidInitialize = function() {
			var e;
			this.column = this.attr.column, this.on("uiShowUserFilter", this.handleShowUserFilter), this.on("uiShowContentFilter", this.handleShowContentFilter), this.on("uiColumnOptionsCloseAction", this.hide), this.on("uiAccordionExpandAction", this.updateHeight), this.on("uiAccordionCollapseAction", this.updateHeight), this.on(document, "uiColumnWidthChange", this.updateHeight), this.on("uiTransitionExpandStart", {
				searchFilterSelector: this.handleChildTransitionExpandStart
			}), this.on("uiTransitionExpandEnd", {
				searchFilterSelector: this.handleChildTransitionExpandEnd
			}), this.on("click", {
				actionButton: this.handleClickEvents,
				scribeElementSelector: this.handleScribeElementClick
			});
			var t = o.default.isTouchColumnOptions();
			t ? this.$node.addClass(this.attr.isTouchColumnOptionsClass) : this.$node.removeClass(this.attr.isTouchColumnOptionsClass), e = {
				searchTerm: o.default.getBaseQuery(this.column),
				isOwnList: Boolean(o.default.getOwnList(this.column)),
				isOwnCustomTimeline: o.default.isOwnCustomTimeline(this.column),
				isShareableOrEmbeddable: o.default.isShareable(this.column) || o.default.isEmbeddable(this.column),
				isClearable: o.default.isClearable(this.column),
				isTouchColumnOptions: t,
				isDataminr: o.default.isDataminr(this.column)
			};
			var i = g.render("column/column_options", e);
			this.$node.html(i), o.default.isFilterable(this.column) && this.attachColumnFilters(), o.default.hasPreferences(this.column) && this.attachChild(m, this.select("accordionSelector"), {
				column: this.column
			}), this.attachChild(s.default, ".js-notification-filter-info", {
				columnType: this.attr.columnType,
				columnAccounts: this.attr.column.getFeeds().map(function(e) {
					return TD.storage.accountController.get(e.getAccountKey())
				})
			}), this.attachChild(r.default, ".js-quality-filter-info", {
				columnType: this.attr.columnType,
				columnAccounts: this.attr.column.getFeeds().map(function(e) {
					return TD.storage.accountController.get(e.getAccountKey())
				})
			}), void 0 === this.props.isOpen && this.showColumnOptions()
		}, this.shouldComponentUpdate = function(e) {
			return this.props.isOpen !== e.isOpen
		}, this.render = function() {
			void 0 !== this.props.isOpen && (this.props.isOpen ? this.showColumnOptions() : this.hide(!1))
		}
	}, f, p), e.exports.ColumnOptionsReact = (0, l.uiBaseToReact)(e.exports)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = m(i(26)),
		s = m(i(14)),
		r = m(i(16)),
		a = m(i(27)),
		o = m(i(28)),
		l = m(i(224)),
		c = m(i(4)),
		u = (m(i(8)), m(i(2488))),
		d = i(530),
		h = i(523);

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = void 0;

	function p() {
		return f || (f = (0, d.getTrendLocations)()).addCallback(function(e) {
			var t = [],
				i = {},
				n = {},
				s = {},
				r = {};
			return e.forEach(function(e) {
				if (function(e) {
						return -1 !== (0, l.default)(h.PLACE_TYPE).indexOf(e.placeType.code)
					}(e)) switch (n[e.woeid] = e, e.placeType.code) {
					case h.PLACE_TYPE.SUPERNAME:
					case h.PLACE_TYPE.COUNTRY:
						t.push(e), i[e.countryCode] = e;
						break;
					case h.PLACE_TYPE.TOWN:
						var a = i[e.countryCode].woeid;
						r[e.woeid] = a;
						var o = s[a];
						o || (s[a] = o = []), o.push(e)
				}
			}), {
				countries: t,
				locationByWoeid: n,
				citiesByCountryWoeid: s,
				countryWoeidByCityWoeid: r
			}
		}), f
	}
	var g = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "render",
			value: function() {
				var e = this;
				return c.default.createElement(u.default, {
					runDeferred: p
				}, function(t) {
					return e.props.children(t)
				})
			}
		}]), t
	}(c.default.Component);
	t.default = g
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			inputSelector: ".js-typeahead-input",
			KEY_CODE_MAP: {
				8: {
					name: "BACKSPACE",
					event: "uiTypeaheadInputBackspace",
					on: "keydown",
					preventDefault: !1
				},
				13: {
					name: "ENTER",
					event: "uiTypeaheadInputSubmit",
					on: "keypress",
					preventDefault: !0
				},
				27: {
					name: "ESC",
					event: "uiTypeaheadInputEscaped",
					on: "keydown"
				},
				9: {
					name: "TAB",
					event: "uiTypeaheadInputTab",
					on: "keydown",
					preventDefault: !0
				},
				37: {
					name: "LEFT",
					event: "uiTypeaheadInputLeft",
					on: "keydown"
				},
				39: {
					name: "RIGHT",
					event: "uiTypeaheadInputRight",
					on: "keydown"
				},
				38: {
					name: "UP",
					event: "uiTypeaheadInputMoveUp",
					on: "keydown",
					preventDefault: !0
				},
				40: {
					name: "DOWN",
					event: "uiTypeaheadInputMoveDown",
					on: "keydown",
					preventDefault: !0
				}
			}
		}), this.after("initialize", function() {
			this.$input = this.select("inputSelector");
			var e = this.domEventToComponentEventFactory.bind(this);
			this.on(this.$input, "input", e("uiTypeaheadInputChanged")), this.on(this.$input, "focus", e("uiTypeaheadInputFocus")), this.on(this.$input, "blur", e("uiTypeaheadInputBlur")), this.on(this.$input, "keydown keypress", this.maybeTriggerModifierEvent)
		}), this.domEventToComponentEventFactory = function(e) {
			return function(t, i) {
				this.trigger(this.$input, e, {
					query: this.$input.val()
				})
			}.bind(this)
		}, this.maybeTriggerModifierEvent = function(e) {
			var t = this.attr.KEY_CODE_MAP[e.which || e.keyCode];
			if (t) {
				if (e.type !== t.on) return;
				var i = (0, r.default)(e.currentTarget),
					n = i.val();
				if ("BACKSPACE" === t.name && "" !== n) return;
				if ("TAB" === t.name && "" === n) return;
				t.preventDefault && e.preventDefault(), n = "" === n.trim() ? "" : n, this.trigger(i, t.event, {
					query: n
				})
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(32)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		var e = [],
			t = [],
			i = !1;
		this.onReceiveClick = function(t) {
			e.push(t)
		}, this.onLoseClick = function(e) {
			t.push(e)
		}, this.runReceiveHandlers = function() {
			e.forEach(function(e) {
				e.call(this)
			}, this)
		}, this.runLoseHandlers = function(e) {
			this.targetWithinComponent(e.target) || t.forEach(function(e) {
				e.call(this)
			}, this)
		}, this.targetWithinComponent = function(e) {
			return (0, s.default)(e).closest(this.$clickTrapTarget || this.$node).length > 0
		}, this.setClickTrapTarget = function(e) {
			this.$clickTrapTarget = e
		}, this.enableClickTrap = function() {
			i || ((0, n.default)(function() {
				(0, s.default)("body").on("click.clicktrap", "*", this.runLoseHandlers.bind(this)), this.$node.on("click.clicktrap", "*", this.runReceiveHandlers.bind(this))
			}.bind(this)), i = !0)
		}, this.disableClickTrap = function() {
			i && ((0, s.default)("body").off("click.clicktrap"), this.$node.off("click.clicktrap"), i = !1)
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(121)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).compose,
		o = i(153);
	e.exports = function() {
		a.mixin(this, [o]), this.attributes({
			accordionItemSelector: ".js-accordion-item",
			accordionIsExpandedClass: "is-expanded",
			accordionIsActiveClass: "is-active",
			accordionToggleSelector: ".js-accordion-toggle-view",
			accordionTogglePreventSelector: ".js-accordion-toggle-view-prevent",
			accordionPanelSelector: ".js-accordion-panel",
			isAccordionPanelAnimatingClass: "is-accordion-panel-animating"
		}), this.expandAccordionItem = function(e) {
			var t = this;
			this.trigger(e, "uiAccordionWillExpand");
			var i = e.find(this.attr.accordionPanelSelector);
			e.addClass(this.attr.accordionIsActiveClass), this.transitionExpand(i, this.attr.isAccordionPanelAnimatingClass, function() {
				e.addClass(t.attr.accordionIsExpandedClass), t.updatePanelHeights(), t.trigger(e, "uiAccordionDidExpand")
			}), this.trigger(e, "uiAccordionExpandAction")
		}, this.collapseAccordionItem = function(e) {
			var t = this,
				i = e.find(this.attr.accordionPanelSelector);
			e.removeClass(this.attr.accordionIsExpandedClass), this.transitionCollapse(i, this.attr.isAccordionPanelAnimatingClass, function() {
				e.removeClass(t.attr.accordionIsActiveClass), t.trigger("uiAccordionTotalHeightChanged")
			}), this.trigger(e, "uiAccordionCollapseAction")
		}, this.getOpenAccordionItem = function() {
			return this.select("accordionItemSelector").filter(function(e, t) {
				return (0, s.default)(t).hasClass(this.attr.accordionIsExpandedClass)
			}.bind(this))
		}, this.accordionToggle = function(e) {
			var t = (0, s.default)(e.target),
				i = t.closest(this.attr.accordionTogglePreventSelector);
			if (!(i.length > 0 && (0, s.default)(e.currentTarget).find(i).length > 0)) {
				var n = t.closest(this.attr.accordionItemSelector),
					r = this.getOpenAccordionItem();
				r.length > 0 && this.collapseAccordionItem(r), n.is(r) || this.expandAccordionItem(n)
			}
		}, this.showAccordionPanel = function(e) {
			var t = e.closest(this.attr.accordionItemSelector),
				i = this.getOpenAccordionItem();
			t.is(i) || (this.collapseAccordionItem(i), this.expandAccordionItem(t))
		}, this.updatePanelHeights = function() {
			var e = ":visible:not(." + this.attr.isAccordionPanelAnimatingClass + ")";
			this.select("accordionPanelSelector").filter(e).each(function(e, t) {
				var i = (0, s.default)(t);
				i.css("height", ""), i.height(i.height()), this.trigger("uiAccordionTotalHeightChanged")
			}.bind(this))
		}, this.after("initialize", function() {
			this.on("click", {
				accordionToggleSelector: (0, n.default)(this.accordionToggle, 300).bind(this)
			}), this.on("uiAccordionUpdatePanelHeights", this.updatePanelHeights)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(360),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = {
		getRemainingCharCount: function(e, t) {
			var i = r.default.getLanguageWeight();
			return Math.floor((e - t) / i)
		},
		isWithinCharLimit: function(e, t) {
			return t <= e
		},
		isOverCharLimit: function(e, t) {
			return t > e
		}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(19);
	var o = i(5).component,
		l = i(66),
		c = i(529),
		u = i(6);
	e.exports = o(function() {
		this.attributes({
			selectionFormat: "user",
			focusOnInit: !0,
			clearOnSelect: !0,
			blurOnSelect: !0,
			templateName: "user_selector",
			placeholder: (0, r.default)("Enter Twitter username…"),
			selectButtonIconClass: "icon-plus",
			selectButtonSelector: ".js-select-button",
			inputSelector: ".js-username-input",
			withSelectButton: !0,
			withAutocompleteAboveInput: !1,
			withAutoRepositionInsideViewport: !0
		}), this.after("initialize", function() {
			var e = u.render(this.attr.templateName, {
				searchInputControlClass: "margin-tm",
				selectButtonIconClass: this.attr.selectButtonIconClass,
				placeholder: this.attr.placeholder,
				withSelectButton: this.attr.withSelectButton
			});
			this.$node.html(e), this.attachChild(c, this.$node), this.on("click", {
				selectButtonSelector: this.handleInputSelection
			}), this.on("uiInputSubmit", {
				inputSelector: this.handleInputSelection
			}), this.autocomplete = new TD.components.Autocomplete(this.select("inputSelector"), {
				dmMode: !0,
				position: this.attr.withAutocompleteAboveInput ? "above" : "below",
				repositionInViewport: this.attr.withAutoRepositionInsideViewport
			}), this.on(this.autocomplete.$node, "td-autocomplete-select", this.handleTDAutocompleteSelect), this.attr.focusOnInit && this.select("inputSelector").focus()
		}), this.handleTDAutocompleteSelect = function(e, t) {
			this.select("inputSelector").val(t.screenName), this.handleInputSelection()
		}, this.handleInputSelection = function() {
			var e = this.select("inputSelector").val();
			if (e) {
				if ("screenName" === this.attr.selectionFormat) return this.triggerScreenNameSelection(e);
				this.trigger(this.attr.inputSelector, "uiWaitingForAsyncResponse");
				var t = TD.cache.twitterUsers.getByScreenName(e);
				t.addCallbacks(this.triggerUserSelection.bind(this), this.handleError.bind(this)), t.addBoth(this.trigger.bind(this, this.attr.inputSelector, "uiReceivedAsyncResponse"))
			}
		}, this.triggerScreenNameSelection = function(e) {
			this.trigger("uiScreenNameSelected", {
				screenName: e
			}), this.clear()
		}, this.triggerUserSelection = function(e) {
			this.trigger("uiUserSelected", {
				user: e
			}), this.clear()
		}, this.clear = function() {
			this.attr.clearOnSelect && this.select("inputSelector").val(""), this.attr.blurOnSelect && this.select("inputSelector").blur()
		}, this.handleError = function(e) {
			var t;
			try {
				t = e.req.errors[0].message
			} finally {
				t && (0, a.showErrorNotification)({
					message: t
				})
			}
		}
	}, l)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(4),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	t.default = function() {
		var e = TD.ui.template.render("column_loading_placeholder");
		return r.default.createElement("div", {
			dangerouslySetInnerHTML: {
				__html: e
			}
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(163)),
		s = r(i(276));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = {},
		o = 1,
		l = {
			linear: function(e) {
				return e
			},
			inQuad: function(e) {
				return e * e
			},
			outQuad: function(e) {
				return e * (2 - e)
			},
			inOutQuad: function(e) {
				return e < .5 ? 2 * e * e : (4 - 2 * e) * e - 1
			},
			inCubic: function(e) {
				return e * e * e
			},
			outCubic: function(e) {
				return --e * e * e + 1
			},
			inOutCubic: function(e) {
				return e < .5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1
			},
			inQuart: function(e) {
				return e * e * e * e
			},
			outQuart: function(e) {
				return 1 - --e * e * e * e
			},
			inOutQuart: function(e) {
				return e < .5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e
			},
			inQuint: function(e) {
				return e * e * e * e * e
			},
			outQuint: function(e) {
				return 1 + --e * e * e * e * e
			},
			inOutQuint: function(e) {
				return e < .5 ? 16 * e * e * e * e * e : 1 + 16 * --e * e * e * e * e
			}
		};

	function c(e) {
		var t = l[e];
		if (!t) throw new Error("No such method");
		return function(e, i, n) {
			return i + n * t(e)
		}
	}
	e.exports = {
		easeFn: c,
		ease: function(e) {
			if (e = e || {}, [(0, n.default)(e.from), (0, n.default)(e.time), (0, n.default)(e.applicator)].indexOf("undefined") > -1) throw new Error("animate requires from, time and applicator.");
			var t = parseFloat(e.from);
			if (!(0, s.default)(t)) throw new Error("A numeric from value is required.");
			if (void 0 === e.to && void 0 === e.delta) throw new Error("animate either a to amount or a delta.");
			var i = parseFloat(e.to);
			if (void 0 !== e.delta && (i = t + parseFloat(e.delta)), !(0, s.default)(i)) throw new Error("A numeric to value is required.");
			var r = e.time;
			(0, s.default)(r) || (r = parseFloat(r));
			var l = e.easing;
			"function" != typeof l && (l = c("linear"));
			var u = e.applicator;
			if ("function" != typeof u) throw new Error("applicator must be a function.");
			var d = e.name,
				h = e.done || function() {},
				m = Date.now(),
				f = i - t;
			0 !== f && (d && (a[d] = o), window.requestAnimationFrame(function e(i) {
				var n = Date.now() - m,
					s = n / r;
				return n >= r ? (u(l(1, t, f)), h(n)) : d && a[d] !== i ? h(n) : (window.requestAnimationFrame(e.bind(this, i)), void u(l(s, t, f), t, s))
			}.bind(this, o)), o += 1)
		}
	}
}, , function(e, t, i) {
	"use strict";
	var n, s = i(7),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = r.default.mixin(function() {
		this.attributes({
			characterCountInvalidClass: "color-twitter-red"
		}), this.render = function() {
			var e = this.props,
				t = e.hideCharacterCount,
				i = void 0 !== t && t,
				n = e.hasValidCharacterCount,
				s = void 0 !== n && n,
				r = e.displayedCharacterCount,
				a = void 0 === r ? 160 : r;
			this.$node.toggle(!i), this.$node.html(a), this.$node.toggleClass(this.attr.characterCountInvalidClass, !s)
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.isGif = function(e) {
		return "image/gif" === e.type
	}, t.isVideo = function(e) {
		return "video/mp4" === e.type
	}, t.getMaxAllowedFiles = function() {
		return 4
	}, t.getMaxAllowedSize = function() {
		return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).bytes ? 5 * n : 5
	}, t.getMaxAllowedGifSize = function() {
		return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).bytes ? 15 * n : 15
	}, t.getMaxAllowedVideoSize = function() {
		return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).bytes ? 512 * n : 512
	}, t.getFileType = function(e) {
		return e.type.split("/")[1]
	};
	var n = 1048576
}, function(e, t, i) {
	"use strict";
	var n = r(i(0)),
		s = r(i(6));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).compose,
		o = i(362);
	e.exports = function() {
		a.mixin(this, [o]), this.after("initialize", function() {
			this.mouseDown = !1, this.setupDragDrop({
				indicateDrop: !1,
				dragstart: this.mouseDownOff,
				dragend: function() {
					this.mouseDownOff(), this.destroyFlyover()
				}
			}), this.on(document, "mousedown", this.mouseDownOn), this.on(document, "mouseup", this.mouseDownOff)
		}), this.mouseDownOn = function(e) {
			this.mouseDown = !0
		}, this.mouseDownOff = function(e) {
			this.mouseDown = !1
		}, this.renderFlyover = function(e, t) {
			var i;
			if (!this.mouseDown && (i = t && t.content ? t.content : e.data("title"))) {
				this.$flyover = (0, n.default)(s.default.render("column_nav_flyout", {
					content: i
				})), (0, n.default)("body").append(this.$flyover);
				var r = e.height();
				this.$flyover.css({
					lineHeight: r + "px"
				}), this.$flyover.children().height(r), this.repositionFlyover(e)
			}
		}, this.destroyFlyover = function() {
			this.$flyover && (this.$flyover.remove(), this.$flyover = null)
		}, this.repositionFlyover = function(e) {
			var t;
			this.$flyover && (t = e.offset().top - (this.$flyover.height() - e.height()) / 2, this.$flyover.css("top", t))
		}
	}
}, , function(e, t, i) {
	"use strict";
	var n = a(i(2)),
		s = a(i(0)),
		r = a(i(18));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component,
		l = i(45),
		c = i(73);
	e.exports = o(r.default, function() {
		this.attributes({
			stateSource: null,
			typeTextSelector: ".js-account-safeguard-text"
		}), this.after("initialize", function() {
			this.observe(this.requestResource(this.attr.stateSource)).map(c.filterKeys(["tweetType", "scheduledDate", "isSelectedAccountSafeguarded", "selectedAccountKeys", "tweetText", "files"])).distinctUntilChanged(c.shallowEquals()).subscribe(this.render.bind(this)), this.on(this.$node.find("input"), "change", this.handleChange)
		}), this.getText = function(e) {
			return "message" === e.tweetType ? (0, n.default)("Ready to send?") : null !== e.scheduledDate ? (0, n.default)("Ready to schedule?") : (0, n.default)("Ready to Tweet?")
		}, this.render = function(e) {
			this.select("typeTextSelector").html(this.getText(e)), this.$node.toggleClass("is-hidden", !e.isSelectedAccountSafeguarded), this.$node.find("input").prop("checked", !1).change()
		}, this.handleChange = function(e) {
			this.trigger("uiAccountSafeguardCheckboxChange", {
				checked: (0, s.default)(e.target).prop("checked")
			})
		}
	}, l)
}, function(e, t, i) {
	"use strict";
	var n = r(i(18)),
		s = r(i(360));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(45),
		l = i(73);
	e.exports = a(n.default, function() {
		this.attributes({
			characterCountValidClass: "color-twitter-dark-gray",
			characterCountInvalidClass: "color-twitter-red",
			isHiddenClass: "is-hidden",
			stateSource: null
		}), this.after("initialize", function() {
			this.observe(this.requestResource(this.attr.stateSource)).map(l.filterKeys(["displayedCharacterCount", "hasValidCharacterCount", "hideCharacterCount"])).distinctUntilChanged().subscribe(this.render.bind(this))
		}), this.render = function(e) {
			var t = s.default.getAvailableCharacterPercent(e.displayedCharacterCount);
			this.$node.toggle(!e.hideCharacterCount), e.displayedCharacterCount !== this.displayedCharacterCount && (this.displayedCharacterCount = e.displayedCharacterCount, this.$node.text(e.displayedCharacterCount), this.$node.toggleClass(this.attr.characterCountInvalidClass, !e.hasValidCharacterCount || 0 === t), this.$node.toggleClass(this.attr.characterCountValidClass, e.hasValidCharacterCount && 0 !== t), e.hideCharacterCount || this.$node.toggleClass(this.attr.isHiddenClass, t > s.default.remainingPercentageThreshold))
		}
	}, o)
}, function(e, t, i) {
	"use strict";
	var n = a(i(360)),
		s = a(i(2587)),
		r = a(i(7));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			progressCircleSelector: ".js-progress-circle"
		}), this.shouldComponentUpdate = function(e) {
			return this.props.characterCount !== e.characterCount
		}, this.componentDidInitialize = function() {
			this.initialRender()
		}, this.initialRender = function() {
			var e = this.select("progressCircleSelector");
			this.progressIndicator = new s.default(e[0])
		}, this.getStrokeClass = function(e) {
			return e <= 0 ? "stroke-twitter-red" : e <= n.default.remainingPercentageThreshold ? "stroke-twitter-yellow" : "stroke-twitter-blue"
		}, this.shouldHideProgress = function() {
			return "message" === this.props.tweetType
		}, this.toggleVisibility = function() {
			var e = this.$node.get(0);
			this.shouldHideProgress() ? e.classList.add("is-hidden") : e.classList.remove("is-hidden")
		}, this.getProgress = function() {
			var e = n.default.getAvailableCharacterPercent(this.props.characterCount),
				t = Math.max(0, e),
				i = this.getStrokeClass(e);
			return {
				newProgress: t,
				strokeClass: i
			}
		}, this.render = function() {
			if (this.toggleVisibility(), !this.shouldHideProgress()) {
				var e = this.getProgress();
				this.progressIndicator.updateProgress(100 - Math.min(e.newProgress, 100)).updateClassList([e.strokeClass])
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(77)),
		s = a(i(0)),
		r = a(i(18));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component,
		l = i(45),
		c = i(890);
	e.exports = o(r.default, function() {
		this.attributes({
			stateSource: null,
			sendButtonSelector: ".js-send-button",
			composeSuccess: ".js-compose-sending-success",
			spinnerButtonSelector: ".js-spinner-button",
			spinnerButtonActiveSelector: ".js-spinner-button-active",
			spinnerButtonActiveClass: "spinner-button-is-active",
			spinnerButtonHiddenClass: "is-hidden",
			spinnerButtonWithProgressClass: "spinner-button-with-progress",
			spinnerButtonWithProgressIconClass: "spinner-button-icon-with-progress",
			spinnerButtonTextHiddenClass: "text-hidden"
		}), this.after("initialize", function() {
			this.$sendButton = this.select("sendButtonSelector"), this.$spinnerBtn = this.select("spinnerButtonSelector"), this.$spinnerBtnActive = this.select("spinnerButtonActiveSelector"), this.on(this.$sendButton, "click keydown", this.handleClick);
			var e = this.observe(this.requestResource(this.attr.stateSource));
			e.pluck("sendButtonText").distinctUntilChanged().subscribe(this.renderButtonText.bind(this)), e.pluck("sendButtonTooltip").distinctUntilChanged().subscribe(this.renderTooltip.bind(this)), e.map(function(e) {
				return {
					tweetSentWhileVideoUploadInProgress: e.tweetSentWhileVideoUploadInProgress,
					sendingStatus: e.sendingStatus
				}
			}).distinctUntilChanged(n.default).subscribe(this.renderSendingStatus.bind(this)), e.pluck("canSend").distinctUntilChanged().subscribe(this.toggleEnabled.bind(this))
		}), this.renderButtonText = function(e) {
			this.$sendButton.text(e)
		}, this.renderTooltip = function(e) {
			var t = (0, s.default)("<div/>").html(e).text();
			this.$sendButton.attr("data-original-title", t)
		}, this.renderSendingStatus = function(e) {
			var t = e.tweetSentWhileVideoUploadInProgress,
				i = e.sendingStatus;
			t ? this.spinnerWithProgressButtonToggle("sending" === i) : this.spinnerButtonToggle("sending" === i), this.select("composeSuccess").toggleClass("is-hidden", "success" !== i), t || this.$sendButton.toggleClass("text-hidden", "ready" !== i).removeClass(this.attr.spinnerButtonWithProgressClass + " " + this.attr.spinnerButtonWithProgressIconClass)
		}, this.toggleEnabled = function(e) {
			this.$sendButton.toggleClass("is-disabled", !e)
		}, this.handleClick = function(e) {
			(!c.eventIsKey(e) || c.isEnter(e) || c.isSpacebar(e)) && this.trigger("uiComposeSendTweet", {})
		}, this.spinnerButtonToggle = function(e) {
			this.$spinnerBtn.toggleClass(this.attr.spinnerButtonActiveClass, e), this.$spinnerBtnActive.toggleClass(this.attr.spinnerButtonHiddenClass, !e)
		}, this.spinnerWithProgressButtonToggle = function(e) {
			this.$spinnerBtn.toggleClass(this.attr.spinnerButtonWithProgressClass, e), this.$spinnerBtn.toggleClass(this.attr.spinnerButtonTextHiddenClass, !e), this.$spinnerBtnActive.toggleClass(this.attr.spinnerButtonWithProgressIconClass, e), this.$spinnerBtnActive.toggleClass(this.attr.spinnerButtonHiddenClass, !e)
		}
	}, l)
}, function(e, t, i) {
	"use strict";
	var n = {
		eventIsKey: function(e) {
			return e.which > 3
		},
		isEnter: function(e) {
			return e.which === TD.constants.keyCodes.enter
		},
		isSpacebar: function(e) {
			return e.which === TD.constants.keyCodes.spacebar
		}
	};
	e.exports = n
}, function(e, t, i) {
	"use strict";
	var n = d(i(9)),
		s = d(i(77)),
		r = d(i(2)),
		a = d(i(7)),
		o = d(i(514)),
		l = d(i(208)),
		c = d(i(6)),
		u = d(i(279));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			otherRepliesLinkSelector: ".js-other-replies-link"
		}), this.componentDidInitialize = function() {
			this.on("click", {
				otherRepliesLinkSelector: this.handleOthersLinkClick
			}), this.on(document, "dataTwitterUsers", this.handleTwitterUsers)
		}, this.shouldComponentUpdate = function(e) {
			return !1 === (0, s.default)(this.props, e)
		}, this.render = function() {
			var e = this.props.batchMode,
				t = this.props.recipients || [],
				i = this.props.excludedRecipientsIds || [];
			if (0 !== t.length && "subsequent" !== e) {
				var n = c.default.render("compose/reply_info", {
					recipients: u.default.getRecipientsToDisplay(t, i)
				});
				this.$node.removeClass("is-hidden").html(n)
			} else this.$node.addClass("is-hidden").empty()
		}, this.handleOthersLinkClick = function() {
			this.requestId = u.default.requestUsers(this.props.recipients)
		}, this.handleTwitterUsers = function(e, t) {
			if (t.requestId === this.requestId) {
				var i = u.default.getDefaultModalOptions();
				this.showModal(o.default, {
					replies: t.users,
					excludedRecipientsIds: this.props.excludedRecipientsIds,
					withComposeContext: !0
				}, (0, n.default)({}, i, {
					title: (0, r.default)("Replying to")
				}))
			}
		}
	}, l.default)
}, function(e, t, i) {
	"use strict";
	var n, s = i(18),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(45);
	e.exports = a(r.default, function() {
		this.attributes({
			stateSource: null,
			defaultHeight: 130,
			expandedHeight: 180,
			minimumHeightCharacters: 180
		}), this.after("initialize", function() {
			var e = this.observe(this.requestResource(this.attr.stateSource)),
				t = e.pluck("tweetText").distinctUntilChanged();
			this.observe(t).filter(function(e) {
				return this.$node.val() !== e
			}, this).subscribe(function(e) {
				this.$node.val(e)
			}.bind(this)), this.observe(e).pluck("sendingStatus").map(this.shouldDisable, this).distinctUntilChanged().subscribe(this.toggleDisable.bind(this)), this.observe(e).pluck("selectionIndices").distinctUntilChanged().subscribe(this.setSelection.bind(this)), this.observe(e).pluck("tweetTextFocused").distinctUntilChanged().filter(this.isNotTouch).subscribe(this.toggleFocus.bind(this)), this.observe(t).map(this.calculateHeight, this).distinctUntilChanged().subscribe(this.setHeight.bind(this)), this.on("input propertychange change", this.handleChange), this.on("focus", this.triggerFocusChange.bind(this, !0)), this.on("blur", this.triggerFocusChange.bind(this, !1)), this.textAutoComplete = new TD.components.Autocomplete(this.$node)
		}), this.after("teardown", function() {
			this.textAutoComplete.destroy()
		}), this.handleChange = function(e) {
			this.trigger("uiComposeTextChanged", {
				value: this.node.value
			})
		}, this.triggerFocusChange = function(e) {
			this.trigger("uiComposeTextFocus", {
				focused: e
			})
		}, this.toggleFocus = function(e) {
			e ? this.node.focus() : this.node.blur()
		}, this.shouldDisable = function(e) {
			return "ready" !== e
		}, this.toggleDisable = function(e) {
			this.$node.prop("disabled", e)
		}, this.setSelection = function(e) {
			var t = e[0],
				i = e[1];
			this.node.selectionStart = t, this.node.selectionEnd = i, setTimeout(function() {
				this.node.selectionStart = t, this.node.selectionEnd = i
			}.bind(this), 70), this.triggerFocusChange(!0)
		}, this.calculateHeight = function(e) {
			return e.length > this.attr.minimumHeightCharacters ? this.attr.expandedHeight : this.attr.defaultHeight
		}, this.setHeight = function(e) {
			this.$node.css({
				height: e
			})
		}, this.isNotTouch = function() {
			return !TD.util.isiOSDevice() || !TD.decider.get("touchdeck_compose_v2")
		}
	}, o)
}, function(e, t, i) {
	"use strict";
	var n = c(i(9)),
		s = c(i(2)),
		r = c(i(0)),
		a = i(19),
		o = i(47),
		l = i(2588);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function u(e, t) {
		if (e.scheduledDate) {
			var i = t.map(function(t) {
				return (0, n.default)({}, t, {
					tweetData: e
				})
			});
			this.trigger("uiSendScheduledTweets", {
				requestId: e.requestId,
				requests: i,
				scheduledDate: e.scheduledDate,
				tokenToDelete: e.scheduledId,
				metadata: e.metadata
			})
		} else {
			var s = "message" === e.type ? "uiSendDm" : "uiSendTweet";
			this.trigger("metric", {
				type: "metric",
				key: "tweet:data:selected-accounts",
				value: [t.length]
			}), t.forEach(function(t) {
				this.trigger(s, (0, n.default)({}, t, {
					tweetData: e
				}))
			}, this), this.trigger("uiSendScheduledTweets", {
				requestId: e.requestId,
				requests: [],
				scheduledDate: e.scheduledDate,
				tokenToDelete: e.scheduledId,
				metadata: e.metadata
			})
		}
	}
	e.exports = function() {
		var e = [],
			t = null,
			i = [];
		this.after("initialize", function() {
			this.on(document, "dataTweetSent", this.forCurrentRequest(this.handleDataTweetSent)), this.on(document, "dataTweetError", this.forCurrentRequest(this.handleDataTweetError)), this.on(document, "dataDmSent", this.forCurrentRequest(this.handleDataDmSent)), this.on(document, "dataDmError", this.forCurrentRequest(this.handleDataDmError)), this.on(document, "dataScheduledTweetsSent", this.forCurrentRequest(this.handleDataScheduledTweetsSent)), this.on(document, "dataScheduledTweetsError", this.forCurrentRequest(this.handleDataScheduledTweetsError))
		}), this.forCurrentRequest = function(e) {
			return function(i, n) {
				t && n.request && n.request.requestId === t.requestId && e.call(this, i, n)
			}
		}, this.resetSendTweet = function() {
			e = [], i = [], t = null
		}, this.maybeShortenTextLinks = function(e) {
			return "bitly" === TD.settings.getLinkShortener() ? TD.services.bitly.shortenTextLinks(e) : TD.core.defer.succeed(e)
		}, this.sendTweet = function(e) {
			var i = this;
			this.trigger("uiComposeTweetSending"), this.resetSendTweet(), t = e, this.maybeShortenTextLinks(e.text).addCallback(function(t) {
				e.text = t, i.actuallySendTweet(e)
			})
		}, this.actuallySendTweet = function(e) {
			var t = [],
				i = e.from.map(function(i) {
					var n = {
						accountKey: i
					};
					return e.accountsMediaIds && (n.mediaIds = e.accountsMediaIds[i], t.push(n.mediaIds)), r.default.extend({}, e, n)
				});
			t.length ? new TD.core.defer.DeferredList(t).addCallback(u.bind(this, e, i)) : u.call(this, e, i)
		}, this.handleTweetResponse = function(n) {
			i.push(n.request), i.length === t.from.length && (0 === e.length ? this.triggerTweetSuccess() : this.triggerTweetError())
		}, this.handleDataTweetSent = function(e, t) {
			this.handleTweetResponse(t)
		}, this.handleDataDmSent = function(e, t) {
			this.handleTweetResponse(t)
		}, this.handleDataScheduledTweetsSent = function(e, t) {
			this.triggerTweetSuccess()
		}, this.handleDataTweetError = function(t, i) {
			e.push(i), this.handleTweetResponse(i)
		}, this.handleDataDmError = function(e, t) {
			this.handleDataTweetError(e, t)
		}, this.handleDataScheduledTweetsError = function(e, t) {
			var i, n, r;
			if (t.response.humanReadableMessage) i = t.response.humanReadableMessage;
			else {
				try {
					n = JSON.parse(t.response.req.responseText)
				} catch (e) {}
				r = n && n.error ? n.error : t.response.req.status, i = (0, s.default)("Scheduling failed. Please try again. ({{message}})", {
					message: r
				})
			}(0, a.showErrorNotification)({
				message: i
			}), this.triggerTweetError()
		}, this.showTweetErrors = function(e) {
			if (0 !== e.length) {
				var i = e.map(function(e) {
					var i = {};
					try {
						i = JSON.parse(e.response.responseText).errors[0]
					} catch (t) {
						e && e.response && TD.util.isNetworkFailure(e.response) && (i.code = "0")
					}
					var n = (0, l.getApiErrorMessage)(i);
					e.response && e.response.message && (n = e.response.message);
					var r = (0, o.getAccountData)(e.request.accountKey),
						a = r ? r.screenName : "unknown account";
					switch (t.type) {
						case "message":
							return (0, s.default)("Message from @{{screenName}} failed: " + n, {
								screenName: a
							});
						default:
							return (0, s.default)("Tweet from @{{screenName}} failed: " + n, {
								screenName: a
							})
					}
				}, this);
				(0, a.showErrorNotification)({
					message: i.join("\n")
				})
			}
		}, this.triggerTweetSuccess = function() {
			this.trigger("uiComposeTweetSent")
		}, this.triggerTweetError = function() {
			this.showTweetErrors(e), this.trigger("uiComposeTweetError", {
				errors: t.scheduledDate ? null : e
			})
		}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(88),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(2589));
	var o = i(230),
		l = i(877),
		c = i(360),
		u = i(2590),
		d = i(2591),
		h = i(2595),
		m = i(2596);
	e.exports = function(e) {
		var t = (0, r.default)(e);
		t.configuration = t.configuration || {}, t.settings = t.settings || {}, t.hasMediaAttached = !!t.files && t.files.length > 0, t.hasQuotedTweet = !!t.quotedTweet;
		var i = c.getConfiguration(),
			n = "message" === t.tweetType,
			s = i.maxWeightedTweetLength,
			f = o.getTweetLength(t.tweetText.trim(), c.getConfiguration()),
			p = t.configuration.characters_reserved_per_media + (t.scheduledDate ? 1 : 0),
			g = t.hasMediaAttached && !TD.decider.get("compose_character_limit_do_not_count_attachments") ? p : 0,
			v = t.hasQuotedTweet && !TD.decider.get("compose_character_limit_do_not_count_attachments") ? t.configuration.transformedURLLength + 1 : 0;
		return t.characterCountLimit = n ? t.configuration.dm_text_character_limit : s, t.characterCount = f + g + v, t.hasValidCharacterCount = l.isWithinCharLimit(t.characterCountLimit, t.characterCount), t.remainingCharCount = l.getRemainingCharCount(t.characterCountLimit, t.characterCount), t.isJustWhitespace = 0 === t.characterCount, t.displayedCharacterCount = t.remainingCharCount, t.hideCharacterCount = n && t.remainingCharCount >= 0, TD.decider.get("compose_quoted_tweet_as_attachment") || (t.rawTweetText = t.tweetText + (t.quotedTweet ? " " + t.quotedTweet.getChirpURL() : "")), t.hasSelectedAccounts = t.selectedAccountKeys.length > 0, t.isSelectedAccountSafeguarded = u.isSelectedAccountSafeguarded(t), t.safeguardingOk = u.isSafeguardingOk(t), t.hasMessageRecipients = t.messageRecipients.length > 0 || t.messageConversation, t.hasValidScheduledDate = t.scheduledDate && t.scheduledDate > t.currentTime, t.schedulingOk = !t.scheduledDate || t.hasValidScheduledDate, t.sendButtonText = d.getButtonText(t), t.sendButtonTooltip = d.getTooltipText(t), t.canAddMedia = h.canAddMedia(t), t.addImageButtonTooltip = h.getTooltipText(t), t.addImageButtonText = h.getButtonText(t), t.canSchedule = a.canSchedule(t), t.scheduleButtonTooltip = a.getTooltipText(t), t.scheduleButtonText = a.getButtonText(t), t.canSwitchTweetType = m.canSwitchTweetType(t), t.tweetTypeButtonTooltip = m.getTooltipText(t), t.canSend = function(e) {
			if ("sending" === e.sendingStatus) return !1;
			if ("message" === e.tweetType) {
				if (!e.hasMessageRecipients) return !1;
				if (e.hasQuotedTweet || e.hasMediaAttached) return !0
			}
			return !(!e.hasValidCharacterCount || !e.hasSelectedAccounts) && (!(e.isJustWhitespace && !e.hasMediaAttached) && (!!e.safeguardingOk && (!!e.schedulingOk && (!e.hasQuotedTweet || !e.hasMediaAttached))))
		}(t), t
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(44)),
		s = r(i(2592));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.isSending = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		if (!e.sendingStatus) return !1;
		return "sending" === e.sendingStatus
	}, t.isProcessing = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		if (!e.uploadsInProgress) return !1;
		return (0, n.default)(e.uploadsInProgress).every(function(t) {
			var i = e.uploadsInProgress[t].mode;
			return "waiting" === i || "processing" === i
		})
	}, t.isUploading = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		if (!e.uploadsInProgress) return !1;
		return (0, n.default)(e.uploadsInProgress).some(function(t) {
			return "uploading" === e.uploadsInProgress[t].mode
		})
	}, t.getMinimumProgress = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		if (!e.uploadsInProgress) return 0;
		var t = (0, n.default)(e.uploadsInProgress).filter(function(t) {
			return "uploading" === e.uploadsInProgress[t].mode
		}).map(function(t) {
			return Math.floor(e.uploadsInProgress[t].percent)
		});
		return (0, s.default)(t)
	}
}, function(e, t, i) {
	"use strict";
	var n = a(i(112)),
		s = a(i(281)),
		r = a(i(170));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(230),
		l = {
			prependRecipients: function(e) {
				return e.messageRecipients.map(function(e) {
					return o.atMentionify(e.screenName)
				}).join(" ") + " " + e.tweetText
			},
			appendText: function(e, t) {
				return (t.tweetText && t.tweetText.trim()) + " " + e
			},
			stripNamesFromText: function(e, t) {
				return (0, r.default)(e.split(" "), t).join(" ").trim()
			},
			mergeRepliesAndMentions: function(e, t, i, r, a) {
				var c = a.map(function(e) {
						return o.atMentionify(e.screenName)
					}),
					u = (0, s.default)(e, [i.user.screenName].map(o.atMentionify)),
					d = (0, s.default)(t, (0, n.default)(r, "screenName").map(o.atMentionify));
				return {
					replies: l.stripRepliesFromMentions(u, c),
					mentions: l.stripRepliesFromMentions(d, c.concat(u))
				}
			},
			stripRepliesFromMentions: function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
					t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
				return e.filter(function(e) {
					return t.map(function(e) {
						return e.toLowerCase()
					}).indexOf(e.toLowerCase()) < 0
				})
			},
			getSelectionIndices: function(e, t, i) {
				return 0 === i.length ? 0 === t.length ? [] : [t[0].length + 1, t[0].length + 1] : [i.map(e.indexOf.bind(e)).reduce(function(e, t) {
					return Math.min(e, t)
				}), i.map(function(t) {
					return e.indexOf(t) + t.length + 1
				}).reduce(function(e, t) {
					return Math.max(e, t)
				})]
			},
			getStackedRepliesText: function(e, t, i) {
				var n = l.stripNamesFromText(e, t.concat(i)),
					s = [].concat(t).concat(n.length ? n : []).concat(i).join(" ");
				return s.length ? s + " " : ""
			}
		};
	e.exports = l
}, , , function(e, t, i) {
	i(900), e.exports = i(1102)
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	i(1103), i(1104), i(1105), i(1106), i(1466), i(2337), i(2338)
}, function(e, t, i) {}, function(e, t, i) {}, function(e, t, i) {}, function(e, t, i) {
	"use strict";
	var n = function(e) {
		if (e && e.__esModule) return e;
		var t = {};
		if (null != e)
			for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
		return t.default = e, t
	}(i(17));
	window.ga = window.ga || function() {
		(ga.q = ga.q || []).push(arguments)
	}, ga.l = Date.now(), ga("create", "UA-4790629-1", "auto"), ga("set", "appVersion", "4.0.220811153004"), ga("set", "appName", n.getAppEnv()), ga("send", "pageview")
}, , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = {};
	e.exports = n, n.getMessage = function(e) {
		if ("undefined" != typeof TD_locale_messages) {
			var t = TD_locale_messages[e];
			return t && t.message ? t.message : void 0
		}
	}
}function(e, t, i) {
	var n = {
		"./en-au": 639,
		"./en-au.js": 639,
		"./en-ca": 640,
		"./en-ca.js": 640,
		"./en-gb": 641,
		"./en-gb.js": 641,
		"./en-ie": 642,
		"./en-ie.js": 642,
		"./en-nz": 643,
		"./en-nz.js": 643
	};

	function s(e) {
		var t = r(e);
		return i(t)
	}

	function r(e) {
		var t = n[e];
		if (!(t + 1)) {
			var i = new Error("Cannot find module '" + e + "'");
			throw i.code = "MODULE_NOT_FOUND", i
		}
		return t
	}
	s.keys = function() {
		return Object.keys(n)
	}, s.resolve = r, e.exports = s, s.id = 1453
}, , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	i(1467), i(1811), i(458), i(460), i(1817), i(1820), i(1843), i(725), i(1856), i(1857), i(1858), i(2061), i(2062), i(2063), i(2064), i(2065), i(2066), i(2070), i(2071), i(2072), i(2075), i(2076), i(2077), i(2078), i(2079), i(2080), i(2081), i(2082), i(2089), i(2090), i(2091), i(2092), i(2093), i(2094), i(2096), i(2097), i(2098), i(2100), i(2101), i(2117), i(2118), i(2119), i(2120), i(2124), i(2125), i(2126), i(2128), i(2132), i(2133), i(2135), i(2139), i(2140), i(817), i(818), i(2141), i(2142), i(2143), i(822), i(2150), i(804), i(2151), i(2152), i(2153), i(2157), i(2158), i(2165), i(33), i(2166), TD.decider = i(2172), TD.storage = i(827), i(2176), i(2177), i(2178), i(2179), i(2180), i(2184), i(2185), i(2186), i(829), i(2187), i(2188), i(2189), i(2190), i(2191), i(232), i(2192), TD.ui.template = i(6), i(832), TD.controller.init = i(2197), i(2199), i(2200), i(2207), i(2208), i(2209), i(261), i(813), i(2210), i(2228), i(2229), i(2230), i(2231), i(2232), i(2233), i(2234), i(2235), i(2236), i(2237), i(2240), i(2241), i(842), i(523), i(2242), i(2243), i(2244), i(2248), i(2249), i(2250), i(2251), i(2252), i(2253), i(2254), i(2255), i(2256), i(2257), i(2258), i(2259), i(2260), i(2261), i(2262), i(2263), i(2264), i(2268), i(2269), i(2270), i(2271), i(2334), TD.net.ajax = i(131), i(722), i(2335), i(2336)
}, function(e, t, i) {
	"use strict";
	window.TD_mustaches = i(1468), window.Hogan = i(638), window.StateMachine = i(1788), window.twttrTxt = i(646), i(714)
}, function(e, t, i) {
	"use strict";
	var n, s = {};
	(n = i(1469)).keys().forEach(function(e) {
		return s[e.substr(2)] = n(e).default
	}), e.exports = s
}, function(e, t, i) {
	var n = {
		"./account_selector_avatar.mustache": 1470,
		"./account_settings_account_summary.mustache": 1471,
		"./account_summary.mustache": 1472,
		"./account_summary_inline.mustache": 1473,
		"./action_header.mustache": 1474,
		"./actions/action_dialog.mustache": 1475,
		"./actions/add_to_customtimeline_dialog.mustache": 1476,
		"./actions/add_to_list_dialog.mustache": 1477,
		"./actions/add_to_list_footer.mustache": 1478,
		"./actions/copy_text_modal.mustache": 1479,
		"./actions/follow_from.mustache": 1480,
		"./add_account_info.mustache": 1481,
		"./add_column_search_input.mustache": 1482,
		"./add_image_description.mustache": 1483,
		"./app_container.mustache": 1484,
		"./app_links.mustache": 1485,
		"./buttons/favorite.mustache": 1486,
		"./buttons/load_more.mustache": 1487,
		"./chart_with_controls.mustache": 1488,
		"./column.mustache": 1489,
		"./column/add_to_custom_timeline.mustache": 1490,
		"./column/add_to_customtimeline_drop_indicator.mustache": 1491,
		"./column/add_to_customtimeline_drop_indicator_spinner.mustache": 1492,
		"./column/chirp_container.mustache": 1493,
		"./column/column_dm_participants.mustache": 1494,
		"./column/column_filter_error.mustache": 1495,
		"./column/column_header.mustache": 1496,
		"./column/column_header_detail.mustache": 1497,
		"./column/column_options.mustache": 1498,
		"./column/column_options_header.mustache": 1499,
		"./column/custom_timeline_description.mustache": 1500,
		"./column/dm_rename_conversation.mustache": 1501,
		"./column/filter_callout.mustache": 1502,
		"./column/preferences.mustache": 1503,
		"./column/trend_select_item.mustache": 1504,
		"./column/trends_options.mustache": 1505,
		"./column_loading_placeholder.mustache": 1506,
		"./column_nav_flyout.mustache": 1507,
		"./column_title.mustache": 1508,
		"./column_title_editable.mustache": 1509,
		"./command_palette/base.mustache": 1510,
		"./command_palette/command_list.mustache": 1511,
		"./compose/account_selector.mustache": 1512,
		"./compose/account_selector_grid_toggle.mustache": 1513,
		"./compose/accounts.mustache": 1514,
		"./compose/autocomplete_hashtag.mustache": 1515,
		"./compose/autocomplete_twitter_user.mustache": 1516,
		"./compose/character_count_with_circle.mustache": 1517,
		"./compose/close_button.mustache": 1518,
		"./compose/compose_inline_reply.mustache": 1519,
		"./compose/custom_video_controls.mustache": 1520,
		"./compose/docked_compose.mustache": 1521,
		"./compose/image_description_field.mustache": 1522,
		"./compose/in_reply_to.mustache": 1523,
		"./compose/media_bar_image.mustache": 1524,
		"./compose/media_bar_infobar.mustache": 1525,
		"./compose/message_conversation.mustache": 1526,
		"./compose/message_recipients.mustache": 1527,
		"./compose/reply_info.mustache": 1528,
		"./compose/reply_list.mustache": 1529,
		"./compose/schedule.mustache": 1530,
		"./contributor_list_account_summary.mustache": 1531,
		"./contributors/contributor_list.mustache": 1532,
		"./contributors/contributor_list_error.mustache": 1533,
		"./contributors/contributor_list_row.mustache": 1534,
		"./contributors/contributor_manager.mustache": 1535,
		"./contributors/contributors_loading.mustache": 1536,
		"./customtimeline/edit_customtimeline.mustache": 1537,
		"./data_drawer.mustache": 1538,
		"./delete_dm_conversation.mustache": 1539,
		"./delete_dm_message.mustache": 1540,
		"./drawer.mustache": 1541,
		"./embed_tweet.mustache": 1542,
		"./favorite_from_options.mustache": 1543,
		"./feather-component-card-video.mustache": 1544,
		"./follow_button.mustache": 1545,
		"./heartsprite.mustache": 1546,
		"./important_update.mustache": 1547,
		"./inline_confirmation.mustache": 1548,
		"./insights/demographics.mustache": 1549,
		"./insights/insights_panel.mustache": 1550,
		"./insights/no_data.mustache": 1551,
		"./insights/related_words.mustache": 1552,
		"./item_box.mustache": 1553,
		"./keyboard_shortcut_list.mustache": 1554,
		"./large_modal.mustache": 1555,
		"./learn_more_about_reporting.mustache": 1556,
		"./list_module_account_item.mustache": 1557,
		"./list_module_dataminr_watchlist.mustache": 1558,
		"./list_module_events.mustache": 1559,
		"./list_module_list_item.mustache": 1560,
		"./list_module_livevideos.mustache": 1561,
		"./list_module_subtitle_item.mustache": 1562,
		"./list_module_trend_header.mustache": 1563,
		"./list_module_trends.mustache": 1564,
		"./list_module_twitter_customtimeline_item.mustache": 1565,
		"./list_module_twitter_list_item.mustache": 1566,
		"./list_option_dropdown.mustache": 1567,
		"./list_trend_item.mustache": 1568,
		"./list_trend_promoted_item.mustache": 1569,
		"./lists/add_users_to_list_button.mustache": 1570,
		"./lists/edit_footer.mustache": 1571,
		"./lists/edit_list_details.mustache": 1572,
		"./lists/edit_members_footer.mustache": 1573,
		"./lists/member.mustache": 1574,
		"./lists/member_export.mustache": 1575,
		"./lists/member_import.mustache": 1576,
		"./lists/member_list.mustache": 1577,
		"./live_video.mustache": 1578,
		"./login/login_form.mustache": 1579,
		"./login/login_form_message.mustache": 1580,
		"./login/promo_for_login_form.mustache": 1581,
		"./login/twitter_account_login_form.mustache": 1582,
		"./media/animated_gif.mustache": 1583,
		"./media/media_gallery.mustache": 1584,
		"./media/media_upload.mustache": 1585,
		"./media/native_video.mustache": 1586,
		"./media/scheduled_video.mustache": 1587,
		"./media/tagged_users.mustache": 1588,
		"./media/video_overlay.mustache": 1589,
		"./media/vine.mustache": 1590,
		"./media/youtube.mustache": 1591,
		"./menus/accordion_header.mustache": 1592,
		"./menus/actions.mustache": 1593,
		"./menus/actions_directmessage.mustache": 1594,
		"./menus/column_nav_menu.mustache": 1595,
		"./menus/column_share.mustache": 1596,
		"./menus/datetime_footer.mustache": 1597,
		"./menus/datetime_input.mustache": 1598,
		"./menus/dm_conversations_menu.mustache": 1599,
		"./menus/dropdown.mustache": 1600,
		"./menus/filter_info_generic.mustache": 1601,
		"./menus/flagged_media.mustache": 1602,
		"./menus/follow_menuitem.mustache": 1603,
		"./menus/notifications_info.mustache": 1604,
		"./menus/quality_filter_info.mustache": 1605,
		"./menus/search_accordion.mustache": 1606,
		"./menus/search_action_form.mustache": 1607,
		"./menus/search_content_form.mustache": 1608,
		"./menus/search_datetime_form.mustache": 1609,
		"./menus/search_engagement_form.mustache": 1610,
		"./menus/search_user_form.mustache": 1611,
		"./menus/topbar_menu.mustache": 1612,
		"./menus/user_results.mustache": 1613,
		"./modal.mustache": 1614,
		"./modal/modal_context.mustache": 1615,
		"./modal/modal_context_footer.mustache": 1616,
		"./modal/modal_context_header.mustache": 1617,
		"./modal_header.mustache": 1618,
		"./new_custom_timeline_button.mustache": 1619,
		"./number_ticker.mustache": 1620,
		"./open_column_footer.mustache": 1621,
		"./open_column_home.mustache": 1622,
		"./open_column_list_group.mustache": 1623,
		"./open_column_list_multi_group.mustache": 1624,
		"./open_column_list_with_header.mustache": 1625,
		"./open_column_modal.mustache": 1626,
		"./open_column_temp_help.mustache": 1627,
		"./open_split_menu.mustache": 1628,
		"./overlay.mustache": 1629,
		"./participants_tooltip.mustache": 1630,
		"./popover.mustache": 1631,
		"./profile/profile_full.mustache": 1632,
		"./profile_card_bio.mustache": 1633,
		"./profile_card_stats.mustache": 1634,
		"./report_flow.mustache": 1635,
		"./report_message_options.mustache": 1636,
		"./report_tweet_options.mustache": 1637,
		"./report_tweet_options_abusive.mustache": 1638,
		"./scheduled_hint.mustache": 1639,
		"./search/search_in_popover.mustache": 1640,
		"./search/search_results.mustache": 1641,
		"./search_input.mustache": 1642,
		"./search_no_tweets_placeholder.mustache": 1643,
		"./search_no_users_placeholder.mustache": 1644,
		"./search_operator_list.mustache": 1645,
		"./search_operator_list_item.mustache": 1646,
		"./search_operator_list_item_group.mustache": 1647,
		"./settings/account_settings.mustache": 1648,
		"./settings/account_settings_detail.mustache": 1649,
		"./settings/account_settings_join_team.mustache": 1650,
		"./settings/account_settings_login_account.mustache": 1651,
		"./settings/account_settings_remove_account.mustache": 1652,
		"./settings/account_settings_row.mustache": 1653,
		"./settings/global_setting_filter.mustache": 1654,
		"./settings/global_setting_filter_add_btn.mustache": 1655,
		"./settings/global_setting_filter_list.mustache": 1656,
		"./settings/global_setting_filter_row.mustache": 1657,
		"./settings/global_setting_general.mustache": 1658,
		"./settings/global_setting_link_shortening.mustache": 1659,
		"./settings/global_settings_modal.mustache": 1660,
		"./settings/invitations_panel.mustache": 1661,
		"./settings/link_shortening_bitly_form.mustache": 1662,
		"./short_modal.mustache": 1663,
		"./spinner.mustache": 1664,
		"./spinner_large.mustache": 1665,
		"./spinner_large_white.mustache": 1666,
		"./splash/whats_new.mustache": 1667,
		"./startflow_wrapper.mustache": 1668,
		"./status/attachment_image.mustache": 1669,
		"./status/attachment_tweet.mustache": 1670,
		"./status/conversation.mustache": 1671,
		"./status/conversation_cursor_top.mustache": 1672,
		"./status/conversation_failed_participants.mustache": 1673,
		"./status/conversation_failed_participants_preview.mustache": 1674,
		"./status/conversation_header.mustache": 1675,
		"./status/conversation_join.mustache": 1676,
		"./status/conversation_join_preview.mustache": 1677,
		"./status/conversation_name_update.mustache": 1678,
		"./status/conversation_name_update_preview.mustache": 1679,
		"./status/conversation_participants_join.mustache": 1680,
		"./status/conversation_participants_join_preview.mustache": 1681,
		"./status/conversation_participants_leave.mustache": 1682,
		"./status/conversation_participants_leave_preview.mustache": 1683,
		"./status/conversation_show_more.mustache": 1684,
		"./status/conversation_timestamp.mustache": 1685,
		"./status/dataminr.mustache": 1686,
		"./status/dataminr_footer.mustache": 1687,
		"./status/dataminr_header.mustache": 1688,
		"./status/dataminr_in_stream.mustache": 1689,
		"./status/dataminr_single_footer.mustache": 1690,
		"./status/follow_activity.mustache": 1691,
		"./status/follow_activity_in_stream.mustache": 1692,
		"./status/gap_in_stream.mustache": 1693,
		"./status/list_activity.mustache": 1694,
		"./status/media_image_container.mustache": 1695,
		"./status/media_large_preview.mustache": 1696,
		"./status/media_preview.mustache": 1697,
		"./status/media_sensitive.mustache": 1698,
		"./status/media_thumb.mustache": 1699,
		"./status/media_unique_preview.mustache": 1700,
		"./status/message.mustache": 1701,
		"./status/message_in_box.mustache": 1702,
		"./status/message_in_stream.mustache": 1703,
		"./status/message_thread.mustache": 1704,
		"./status/message_timestamp.mustache": 1705,
		"./status/message_wrapper.mustache": 1706,
		"./status/quoted_tweet.mustache": 1707,
		"./status/quoted_tweet_missing.mustache": 1708,
		"./status/scheduled_tweet.mustache": 1709,
		"./status/scheduled_tweet_single.mustache": 1710,
		"./status/scheduled_tweet_single_header.mustache": 1711,
		"./status/social_proof_for_tweet.mustache": 1712,
		"./status/trend_item.mustache": 1713,
		"./status/tweet_activity.mustache": 1714,
		"./status/tweet_activity_header.mustache": 1715,
		"./status/tweet_activity_in_box.mustache": 1716,
		"./status/tweet_activity_in_stream.mustache": 1717,
		"./status/tweet_activity_timestamp.mustache": 1718,
		"./status/tweet_detail.mustache": 1719,
		"./status/tweet_detail_actions.mustache": 1720,
		"./status/tweet_detail_inreplyto.mustache": 1721,
		"./status/tweet_detail_media.mustache": 1722,
		"./status/tweet_detail_repliesto.mustache": 1723,
		"./status/tweet_detail_replybar.mustache": 1724,
		"./status/tweet_detail_socialstats.mustache": 1725,
		"./status/tweet_detail_wrapper.mustache": 1726,
		"./status/tweet_in_box.mustache": 1727,
		"./status/tweet_in_stream.mustache": 1728,
		"./status/tweet_media_indications.mustache": 1729,
		"./status/tweet_media_wrapper.mustache": 1730,
		"./status/tweet_single.mustache": 1731,
		"./status/tweet_single_actions.mustache": 1732,
		"./status/tweet_single_footer.mustache": 1733,
		"./status/tweet_single_header.mustache": 1734,
		"./status/tweet_timestamp.mustache": 1735,
		"./status/tweet_translation.mustache": 1736,
		"./stream_item.mustache": 1737,
		"./suggest_refresh.mustache": 1738,
		"./team_invitations.mustache": 1739,
		"./terms_privacy_update.mustache": 1740,
		"./text/already_registered.mustache": 1741,
		"./text/b.mustache": 1742,
		"./text/br.mustache": 1743,
		"./text/close_em.mustache": 1744,
		"./text/close_strong.mustache": 1745,
		"./text/em.mustache": 1746,
		"./text/favorite_action.mustache": 1747,
		"./text/followers_you_follow_link.mustache": 1748,
		"./text/gallery_flag_media.mustache": 1749,
		"./text/gallery_original_link.mustache": 1750,
		"./text/global_filter_value.mustache": 1751,
		"./text/hashflag.mustache": 1752,
		"./text/legal_footer.mustache": 1753,
		"./text/list_link_real_name.mustache": 1754,
		"./text/list_link_slug.mustache": 1755,
		"./text/login_verification_link.mustache": 1756,
		"./text/microsoft_translator_link.mustache": 1757,
		"./text/open_strong.mustache": 1758,
		"./text/profile_link.mustache": 1759,
		"./text/retweet_by_link.mustache": 1760,
		"./text/screenname_txt.mustache": 1761,
		"./text/search_link.mustache": 1762,
		"./text/social_proof_link.mustache": 1763,
		"./text/strong.mustache": 1764,
		"./text/user_link_fullname.mustache": 1765,
		"./text/user_link_screenname.mustache": 1766,
		"./topbar/app_header.mustache": 1767,
		"./topbar/app_title.mustache": 1768,
		"./topbar/app_title_beta.mustache": 1769,
		"./topbar/message_banner.mustache": 1770,
		"./topbar/navbar_account_summary.mustache": 1771,
		"./try_search_query_button.mustache": 1772,
		"./twitter_profile.mustache": 1773,
		"./twitter_profile_social_proof.mustache": 1774,
		"./typeahead/typeahead_conversations.mustache": 1775,
		"./typeahead/typeahead_dropdown.mustache": 1776,
		"./typeahead/typeahead_lists.mustache": 1777,
		"./typeahead/typeahead_locations.mustache": 1778,
		"./typeahead/typeahead_recent_searches.mustache": 1779,
		"./typeahead/typeahead_saved_searches.mustache": 1780,
		"./typeahead/typeahead_topics.mustache": 1781,
		"./typeahead/typeahead_users.mustache": 1782,
		"./typeahead/typeahead_users_compose.mustache": 1783,
		"./user_actions_btn_inv.mustache": 1784,
		"./user_selector.mustache": 1785,
		"./version.mustache": 1786,
		"./video_preview.mustache": 1787
	};

	function s(e) {
		var t = r(e);
		return i(t)
	}

	function r(e) {
		var t = n[e];
		if (!(t + 1)) {
			var i = new Error("Cannot find module '" + e + "'");
			throw i.code = "MODULE_NOT_FOUND", i
		}
		return t
	}
	s.keys = function() {
		return Object.keys(n)
	}, s.resolve = r, e.exports = s, s.id = 1469
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<img src="{{profileImageURL}}" alt="{{_i}}{{screenName}}\'s avatar{{/i}}" width="{{avatarSize}}" height="{{avatarSize}}" class="avatar compose-account-img size{{avatarSize}}" /> <div class="compose-account-selected"> <i class="icon icon-check txt-size--12 color-twitter-white"></i> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="account-summary flex flex-row flex-align--center"> <a href="{{getProfileURL}}" class="js-accordion-toggle-view-prevent txt-size--0 flex" rel="user" target="_blank"> <img class="avatar size flex-shrink--0" src="{{profileImageURL}}" alt="{{screenName}}\'s avatar"> {{#cookieProfileImageURL}} <img class="avatar size16 avatar-border--2 margin-l---16 margin-t--20" src="{{cookieProfileImageURL}}" alt="{{screenName}}\'s avatar"> {{/cookieProfileImageURL}} </a> <div class="account-link margin-l--10 flex-auto"> <div class="margin-b--2 {{#isBadged}}fullname-badged-container{{/isBadged}}"> <b class="fullname txt-ellipsis inline-block link-complex-target txt-size--14 {{#isBadged}}fullname-badged{{/isBadged}} {{#isTranslator}}badge-translator{{/isTranslator}} {{#isVerified}}badge-verified{{/isVerified}}"> {{{emojifiedName}}} </b> </div> <div> <span class="username color-twitter-darker-gray txt-size--13 inline-block txt-ellipsis">@{{screenName}} {{#isProtected}}<i class="icon icon-protected icon-match-context icon-tt"></i>{{/isProtected}}</span> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="account-summary cf"> <a class="obj-left item-img" href="{{getProfileURL}}" data-user-name="{{screenName}}" rel="user" target="_blank" tabindex="-1"> {{^withoutAvatar}} <img class="tweet-avatar avatar pull-right" src="{{profileImageURL}}" alt="{{screenName}}\'s avatar"> {{/withoutAvatar}} </a> {{#withUserMenu}} <div class="obj-right with-dropdown position-rel"> <button class="js-user-actions-menu btn btn-on-dark btn-round" rel="actionsMenu" data-user-id="{{id}}"> <i class="icon icon-user-dd"></i> </button> </div> {{/withUserMenu}} <div class="account-summary-text nbfc {{^withUserBio}}{{/withUserBio}}"> <a class="account-link link-complex block" href="{{getProfileURL}}" data-user-name="{{screenName}}" rel="user" target="_blank"> <span class="{{#isInline}}account-inline {{#isProtected}}is-protected{{/isProtected}}{{/isInline}} txt-ellipsis {{#isBadged}}fullname-badged-container{{/isBadged}}"> <b class="fullname inline-block link-complex-target {{#isBadged}}fullname-badged{{/isBadged}} {{#isTranslator}}badge-translator{{/isTranslator}} {{#isVerified}}badge-verified{{/isVerified}} position-rel txt-ellipsis"> {{{emojifiedName}}} </b> {{#isInline}} <span class="username txt-mute">@{{screenName}}</span> {{#isProtected}}<i class="icon icon-protected txt-mute txt-size--14"></i>{{/isProtected}} {{/isInline}} </span> {{^isInline}} <div class="{{#isProtected}}is-protected{{/isProtected}}"> <a href="{{getProfileURL}}" class="account-link link-complex" target="_blank" data-user-name="{{screenName}}" rel="user"> <span class="username txt-mute">@{{screenName}}</span> {{#isProtected}}<i class="icon icon-protected txt-mute txt-size--14 align-top"></i>{{/isProtected}} </a> </div> {{/isInline}} </a> {{#withUserBio}} <p class="account-bio txt-sub-antialiased color-twitter-darker-gray txt-size-variable--13 padding-t--5">{{{bio}}}</p> {{/withUserBio}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<img class="avatar size16 avatar-inline neg-margin-bxs" src="{{profileImageURL}}" alt="{{screenName}}\'s avatar"> @{{screenName}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<h4 class="js-action-header-user-list">{{_i}}From{{/i}}</h4> <div class="js-account-selector-container"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="mdl-inner mdl-accent padding-h--20 mdl-header-divider"></div> <div class="js-inreply cmp-replyto item-box cf padding-a--20"></div> <div class="cf padding-b--20 padding-r--20 padding-t--5"> <div class="pull-right"> {{^isProtected}} <button data-action="quote" class="js-action-button btn btn-on-dark margin-r--8">{{_i}}Retweet with comment{{/i}}</button> <button data-action="retweet" class="js-action-button js-retweet-button Button--primary">{{_i}}Retweet{{/i}}</button> {{/isProtected}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<section> <form class="frm"> <fieldset> <ul class="control-group padding-bn"> {{#myCustomTimelines}} <li class="margin-b--10"> <label class="checkbox"> <input type="checkbox" name="{{name}}" data-id="{{id}}" data-account="{{#account}}{{getKey}}{{/account}}"/> <span>{{>text/strong}}</span> </label> </li> {{/myCustomTimelines}} </ul> </fieldset> </form> </section>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<section> <form class="frm"> <fieldset> <ul class="control-group padding-bs"> {{#myLists}} <li class="margin-b--10"> <label class="checkbox"> <input type="checkbox" name="{{name}}" id="{{id}}" data-account="{{#account}}{{getKey}}{{/account}}" class="margin-t--5"/> <span class="txt-size--14"> {{>text/strong}} {{#isPrivate}}<i class="icon icon-protected icon-small txt-mute txt-size--14"></i>{{/isPrivate}} </span> <span class="txt-size--14 txt-mute">{{_i}}by{{/i}} @{{#user}}{{screenName}}{{/user}}</span> </label> </li> {{/myLists}} </ul> </fieldset> <a href="#" class="js-create-list">+ {{_i}}Create new List{{/i}}</a> </form> </section>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<button class="btn js-create-list">{{_i}}Create List{{/i}}</button>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-t--15 padding-h--15 width--490"> <p class="txt-size--13">{{{explanatoryText}}}</p> <div class="flex margin-t--10 margin-b--15"> <input class="js-text-field margin-r--15 min-height--30 flex-auto" name="copy-text" type="text" {{#readonly}}readonly="readonly" {{/readonly}}placeholder="{{placeholderText}}"> {{#showButton}} <button class="js-copy-button Button--primary no-wrap flex-shrink--0" type="button"> {{buttonText}} </button> {{/showButton}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-follow-from l-table padding-al"> <div class="l-cell follow-from-accounts-button margin-r--10"> {{>follow_button}} </div> {{^hideFromAccountName}} <div class="js-from-username l-cell padding-lm follow-from-accounts-username"> {{#account}} <img class="avatar size32 pull-left" src={{getProfileImageURL}} /> <span class="from-handle padding-l--6">from @{{getUsername}}</span> {{/account}} </div> {{/hideFromAccountName}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-t--15 txt-center"> <img class="avatar size64" src="{{#asset}}/global/backgrounds/default_profile.png{{/asset}}" alt="Default avatar"> <img class="avatar size30 avatar-border--2 margin-l---30 margin-t--21" src="{{profileImageURL}}" alt="{{screenName}}\'s avatar"> </div> <p class="padding-t--10"> {{_i}}Linking another account here will add{{/i}} <span class="txt-bold">@{{screenName}}</span> {{_i}}as a contributor to that account, with admin privileges.{{/i}} </p> <p class="padding-t--10"> {{_i}}This means that when you or anyone else logs in to TweetDeck, Twitter for iOS or Twitter for Android as{{/i}} <span class="txt-bold">@{{screenName}}</span> {{_i}}in the future, they will be able to take actions on behalf of the account you link here, as well as view and manage other team members.{{/i}} </p> <p class="padding-t--10"> {{_i}}If you are trying to join a shared account as a team member, ask an admin for the account to invite you as a team member instead of completing this action.{{/i}} <a href="https://support.twitter.com/articles/20171753" target="_blank">{{_i}}Learn more about teams{{/i}}</a> </p> <div class="pull-right padding-v--16 margin-r---14"> <button class="js-add-account-continue Button--primary"> {{_i}}Continue{{/i}} </button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<form action="#" class="search-input-list padding-a--10"> {{> search_input}} </form>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="width--490"> <img class="width--490" alt="{{_i}}Your uploaded image for description{{/i}}" src="{{src}}"> <div class="flex flex-align--center"> <input type="text" class="js-input-image-description js-input js-submittable-input js-escapable-input height--36 br--6 margin-a--10" maxlength="{{altTextMaxLength}}" placeholder="{{_i}}Describe this photo for the visually impaired{{/i}}" value="{{initialDescription}}" autofocus data-testid="inputImageDescription"> <span> <button class="js-submit-image-description Button--primary margin-a--10 {{^canSubmit}}is-disabled{{/canSubmit}}" data-testid="submitImageDescription">{{_i}}Apply{{/i}}</button> </span> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-progress-indicator"></div> <div class="js-app-content app-content"> {{>drawer}} <div class="js-app-columns-container app-columns-container scroll-h needs-scroll-bottom-offset {{#styledScrollbar}}scroll-styled-h{{/styledScrollbar}}" id="container"> <div class="js-app-columns app-columns horizontal-flow-container"> </div> </div> <div class="js-send-feedback"></div> <div class="js-gryphon-beta-btn gryphon-beta-btn-container" /> </div> <div id="compose-modal" class="js-modal ovl scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"></div> <div id="open-modal" class="js-modal open-modal ovl scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"></div> <div id="actions-modal" class="js-modal ovl scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"></div> <div id="lists-modal" class="js-modal lists-modal ovl scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"></div> <div id="splash-modal" class="js-modal ovl scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"></div> <div id="settings-modal" class="js-modal settings-modal ovl scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<span class="inline-block">Using OldTweetDeck by <a href="https://dimden.dev/" target="_blank">dimden</a></span> <span class="aria-hidden">&middot;</span> <a href="https://dimden.dev/donate" target="_blank">{{_i}}Please Donate!{{/i}}</a> <span class="aria-hidden">&middot;</span> <span class="inline-block">{{version}}</span>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-btn-fav js-show-tip pull-left btn-fav margin-r--5" data-account-key="{{getKey}}"> <button class="btn-loader"> <span> <img src="{{#asset}}/global/backgrounds/spinner_small_trans.gif{{/asset}}" alt="{{_i}}Loading…{{/i}}"> </span> </button> <button class="btn-fav-fav-text Button--tertiary btn-on-dark"> <i class="icon icon-favorite icon-favorite-color"></i> <span class="label">{{_i}}Like{{/i}}</span> </button> <button class="btn-fav-faved-text Button--primary"> <span class="label">{{_i}}Liked{{/i}}</span> </button> <button class="btn-fav-unfav-text btn-on-dark"> <span class="label">{{_i}}Unlike{{/i}}</span> </button> <button class="btn-fav-protected-text btn-on-dark"> <i class="icon icon-protected"></i> <span class="label">{{_i}}Protected{{/i}}</span> </button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<input type="button" name="remove-account" value="Load more" class="js-load-more small btn btn-alt margin-vl obj-center">'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="flex flex-justify-content--space-between flex-align--center margin-b--20"> <h1 class="txt-size--16 txt-bold max-width-p--60">{{title}}</h1> <div class="js-insights-date-picker"></div> </div> <div class="js-chart-terms margin-b--20"></div> <div class="js-insights-grid-chart"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-column-holder column-holder"> <div class="column-panel flex flex-column height-p--100"> {{> column/column_header}} {{#isSearch}} <div class="js-search-filter-callout"></div> {{/isSearch}} <div class="js-column-content column-content flex-auto position-rel flex flex-column height-p--100"> <div class="js-column-options-container column-options flex-shrink--0 z-index--2"> <div class="js-column-options {{#isTouchColumnOptions}}with-touch-txt-base{{/isTouchColumnOptions}}"></div> <div class="js-customtimeline-description scroll-none with-column-divider-bottom is-hidden"></div> </div> <div class="js-insights-entry-point"></div> {{^isTemporary}} <div> <div class="js-column-message scroll-none"></div> </div> {{/isTemporary}} <div class="js-live-video"></div> {{> column/chirp_container}} <div class="js-column-drag-drop-overlay column-drag-drop-overlay drag-drop-indicator pin-all"> <div class="l-table column-drag-drop-overlay-inner drag-drop-indicator"> <div class="l-cell js-drag-drop-overlay-text"> {{_i}}Add here{{/i}} </div> <div class="l-cell js-drag-drop-overlay-spinner is-hidden"> {{> column/add_to_customtimeline_drop_indicator_spinner}} </div> </div> </div> <div class="js-more-tweets-btn-container more-tweets-btn-container pin-top-full-width more-tweets-btn-container--hidden"> <div class="js-more-tweets-glow more-tweets-glow obj-center is-hidden"></div> <button class="js-more-tweets-btn Button--primary more-tweets-btn txt-size--12"> <div class="more-tweets-btn-inner-default"> <i class="icon icon-pointer-u icon-match-context icon-tt"></i> <span class="js-more-tweets-btn-text"></span> </div> <div class="more-tweets-btn-inner-mouse-release"> {{_i}}Release to refresh{{/i}} </div> <div class="more-tweets-btn-inner-loading">{{_i}}Loading...{{/i}}</div> </button> </div> </div> <div class="js-add-to-customtimeline add-by-url padding-hm is-hidden flex-shrink--0"></div> </div> <div class="js-column-detail column-detail column-panel flex flex-column height-p--100"></div> <div class="js-column-social-proof column-detail-level-2 column-panel flex flex-column height-p--100"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="InputGroup margin-t--8"> <input class="js-add-to-customtimeline-input js-submittable-input" type="text" placeholder="{{_i}}Enter Tweet URL{{/i}}" value="" data-account-key="{{accountKey}}" data-customtimeline-id="{{customTimelineId}}" > <button class="js-add-to-customtimeline-button js-spinner-button btn-round"> <i class="icon icon-arrow-r"></i> <i class="js-spinner-button-active icon spinner-small-trans icon-center-16 is-hidden"></i> </button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div id="{{dropIndicatorIdName}}" class="{{dropIndicatorClassName}} drag-drop-indicator color-twitter-white padding-v--16 txt-center is-animating"> {{dropIndicatorText}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="spinner-small spinner-small-blue-bg spinner-centered-auto"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-column-scroller js-dropdown-container column-scroller position-rel scroll-v flex-auto height-p--100 {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} {{#isTemporary}}column-background-fill scroll-alt{{/isTemporary}}"> <div class="js-chirp-container chirp-container" data-column="{{columnkey}}"> {{>column_loading_placeholder}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{> column/column_header_detail}} <div class="js-conversation-adder add-participant padding-a--10"></div> <div class="column-content flex-auto position-rel"> <div class="column-scroller pin-all scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"> {{#users}} {{<stream_item}} {{$content}} {{>account_summary}} {{/content}} {{/stream_item}} {{/users}} {{^users}} {{>column_loading_placeholder}} {{/users}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<p class="is-actionable txt-uppercase txt-center padding-as" data-action="action-filter"> {{_i}}Filter error{{/i}} </p>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<header class="js-column-header js-action-header flex-shrink--0 {{^isTemporary}}column-header{{/isTemporary}} {{#isTemporary}}column-header-temp{{/isTemporary}}" data-action="resetToTopColumn"> {{^isTemporary}} <i class="js-column-drag-handle is-movable column-drag-handle pull-left sprite sprite-drag-vertical"></i> {{/isTemporary}} <i class="pull-left margin-l--10 margin-r--2 column-type-icon icon {{columniconclass}}"> {{#withMarkAllRead}} <span class="js-unread-count msg-unread-count numbered-badge bg-color-twitter-blue numbered-badge-onheader anim anim-slower {{#unreadCount}}is-visible{{/unreadCount}}">{{unreadCount}}</span> {{/withMarkAllRead}} </i> {{#isTemporary}} <button class="js-action-header-button pull-right btn Button--tertiary btn-on-dark margin-t--10 margin-r--10 is-hidden" data-action="editList"></button> {{/isTemporary}} {{^isTemporary}} <span class="column-number"></span> {{/isTemporary}} <div class="column-title flex flex-justify-content--space-between{{#withEditableTitle}} column-title-editable {{^isSearch}}with-image-attribution{{/isSearch}}{{/withEditableTitle}}"> <div class="column-header-title flex flex-align--center {{^withDMComposeButton}}flex-wrap--wrap{{/withDMComposeButton}}{{#withDMComposeButton}}flex-wrap--no-wrap max-width-p--57{{/withDMComposeButton}} flex-grow--2"> {{{columntitle}}} </div> <div class="column-header-links"> {{#withDMComposeButton}} <a class="js-action-header-button column-header-link open-compose-dm-link" href="#" data-action="compose-dm"> <i class="js-show-tip icon icon-compose-dm" data-placement="bottom" title="{{_i}}Compose new message{{/i}}"></i> </a> {{/withDMComposeButton}} {{#withMarkAllRead}} <a class="js-action-header-button column-header-link mark-all-read-link" href="#" data-action="mark-all-read"> <i class="js-show-tip icon icon-mark-read" data-placement="bottom" title="{{_i}}Mark all as read{{/i}}"></i> </a> {{/withMarkAllRead}} {{^isTemporary}} <a data-testid="optionsToggle" class="js-action-header-button column-header-link column-settings-link" href="#" data-action="options"> <i class="icon icon-sliders"></i> </a> {{/isTemporary}} </div> </div> </header>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<header class="{{headerClass}} visible-overflow--important column-header flex flex-justify-content--space-between padding-h--10" data-action="{{headerAction}}"> <a class="{{headerLinkClass}} link-complex flex-auto" href="#"> {{^getConversationTitleInformation}} <div class="column-title-back txt-ellipsis"> <i class="icon icon-arrow-l"></i> <span class="js-tooltip-target link-complex-target">{{_i}}Back to {{{columntitle}}}{{/i}}</span> </div> {{/getConversationTitleInformation}} {{#getConversationTitleInformation}} <div class="flex txt-size--14 txt-bold column-title-container"> <i class="icon icon-arrow-l margin-l---5"></i> {{! if there is a conversation name, show it as it is }} <div class="margin-l--2 height-4 txt-ellipsis column-title-items max-width-p--90"> {{#name}} <span class="js-tooltip-target">{{{name}}}</span> {{/name}} {{^name}} {{! currently showing name and screenName for one to one }} {{#isOneToOne}} {{#participants.0}} <span class="js-tooltip-target"> <b>{{{emojifiedName}}}</b> {{^isDeleted}} <span class="username txt-mute txt-size-variable--12 margin-l--5">@{{screenName}}</span> {{/isDeleted}} </span> {{/participants.0}} {{/isOneToOne}} {{! other two participants, need to wrap around names }} {{#isThreeway}} <span class="js-tooltip-target title-content"> {{#participants.0}} <span class="no-wrap">{{{emojifiedName}}}</span>, {{/participants.0}} {{#participants.1}} <span class="no-wrap">{{{emojifiedName}}}</span> {{/participants.1}} </span> {{/isThreeway}} {{! first participant name + the amount of participants }} {{#isOneToMany}} <span class="js-tooltip-target title-content"> {{#participants.0}}{{{emojifiedName}}}{{/participants.0}} +{{numberOfOtherParticipants}} </span> {{/isOneToMany}} {{/name}} </div> </div> {{/getConversationTitleInformation}} {{#withConversationMenu}} {{^isTemporary}} <a class="js-action-header-button column-header-link column-settings-link link-no-focus" href="#" data-action="message-menu" data-conversation-id="{{conversationId}}" data-account-key="{{accountKey}}"> <i class="js-menu-target icon icon-more"></i> </a> {{/isTemporary}} {{> column/dm_rename_conversation }} {{/withConversationMenu}} </a> </header>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<form data-testid="columnOptions" class="with-column-divider-bottom"> {{! Previously this was a fieldset and had to change it to a div because the map loading the first time would attempt to go wider than the column width and then quickly back to the right width, causing a UI bounce, which was not nice. This is because of the behavior of fieldsets that default to take as much width as their content, not taking into account how much width they have available in their parent. Other elements such as divs don\'t have this behavior, and only take as much width as they are allowed by their parent. If you want to change this back to a fieldset, make sure the map in the location filter appears correctly after your change the first time it loads. More info here: https://stackoverflow.com/questions/17408815/fieldset-resizes-wrong-appears-to-have-unremovable-min-width-min-content }} <div class="js-search-filter"> <div class="js-accordion accordion"></div> </div> {{#isOwnList}} <button class="full-width Button--link btn-bg-positive" type="button" data-action="edit-list"> <i class="icon icon-edit txt-size--14"></i> <span class="label margin-ln">{{_i}}Edit List{{/i}}</span> </button> {{/isOwnList}} {{#isOwnCustomTimeline}} <button class="full-width Button--link btn-bg-positive" type="button" data-action="edit-customtimeline"> <i class="icon icon-edit txt-size--14"></i> <span class="label margin-ln">{{_i}}Edit Collection{{/i}}</span> </button> {{/isOwnCustomTimeline}} {{#isDataminr}} <a class="full-width Button--link btn-bg-positive url-ext" type="button" href="https://news.dataminr.com/app/core/news/settings.html" rel="url noopener noreferrer" target="_blank" data-scribe-element="dataminr_settings"> <i class="icon icon-dataminr icon-small-valigned"></i> <span class="label margin-ln">{{_i}}Dataminr settings{{/i}}</span> </a> {{/isDataminr}} <fieldset class="button-tray padding-a--6"> <div class="button-group"> <button type="button" class="Button--link btn-options-tray pull-left padding-hn" data-action="left"> <i class="icon icon-arrow-l icon-small-valigned"></i> <span class="is-vishidden">{{_i}}Left{{/i}}</span> </button> <button type="button" class="Button--link btn-options-tray pull-left padding-hn" data-action="right"> <i class="icon icon-arrow-r icon-small-valigned"></i> <span class="is-vishidden">{{_i}}Right{{/i}}</span> </button> </div> <div class="button-group position-rel"> <button type="button" class="js-share-column Button--link btn-options-tray padding-hn{{^isShareableOrEmbeddable}} is-invisible{{/isShareableOrEmbeddable}}"> <i class="icon icon-share"></i> <span class="label">{{_i}}Share{{/i}}</span> </button> </div> <div class="button-group"> <button type="button" class="Button--link btn-options-tray padding-hn {{^isClearable}}is-invisible{{/isClearable}}" data-action="clear"> <i class="icon icon-clear-timeline"></i> <span class="label">{{_i}}Clear{{/i}}</span> </button> </div> <div class="button-group"> <button type="button" class="Button--link btn-options-tray padding-hn padding-rs" data-action="remove"> <i class="icon icon-close"></i> <span class="label">Remove</span> </button> </div> </fieldset> \x3c!-- Revisit IF needed for touch --\x3e \x3c!-- {{#isTouchColumnOptions}} <fieldset class="margin-hs padding-tm padding-bm column-options-divider"> <div class="button-group"> <a class="column-action-link is-actionable pull-left" data-action="left"> <i class="icon icon-chevron-left"></i> <span class="is-vishidden">{{_i}}Left{{/i}}</span> </a> <a class="column-action-link is-actionable pull-left" data-action="right"> <i class="icon icon-chevron-left"></i> <span class="is-vishidden">{{_i}}Right{{/i}}</span> </a> </div> <div class="pull-right"> {{#isEmbeddable}} <a class="column-action-link is-actionable" data-action="embed"><i class="icon icon-share"></i></a> {{/isEmbeddable}} {{#isClearable}} <a class="column-action-link is-actionable" data-action="clear">{{_i}}Clear column{{/i}}</a> {{/isClearable}} {{#isOwnCustomTimeline}} <a class="column-action-link is-actionable" data-action="delete-customtimeline">{{_i}}Delete Collection{{/i}}</a> {{/isOwnCustomTimeline}} <button type="button" class="Button--danger" data-action="remove"><i class="icon icon-trash"></i></button> </div> </fieldset> {{/isTouchColumnOptions}} --\x3e </form>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = ""
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#description}} {{#editable}} <button class="js-edit pull-right padding-a--0 width--30 Button--link margin-txs"> <i class="icon icon-edit txt-mute txt-size--14 padding-txs"></i> </button> {{/editable}} <div class="nbfc"> <p class="padding-v--10 padding-l--10 txt-mute txt-size--13">{{{description}}}</p> </div> {{/description}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-edit-conversation-name edit-conversation-name cf" data-conversation-id="{{conversationId}}" data-account-key="{{accountKey}}" > <div class="obj-right"> <button class="btn-round bg-color-transparent" data-action="confirm-edit-conversation"> <i class="icon icon-check color-twitter-blue"></i> </button> <button class="btn-round bg-color-transparent" data-action="close-edit-conversation"> <i class="icon icon-close color-twitter-blue"></i> </button> </div> <div class="nbfc"> <input class="js-conversation-name js-submittable-input js-escapable-input" maxlength="20"> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div data-testid="filterCallout"> <div class="search-filter-callout-triangle pin-right margin-r--13 margin-t---14"></div> <div class="bg-color-twitter-blue flex flex-align--center padding-a--5 color-twitter-white full-width min-height--30 padding-l--10 txt-size--12 txt-bold is-actionable"> {{content}} </div> <div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-accordion-item facet-type facet-type-preferences"> {{>menus/accordion_header}} <div class="js-accordion-panel accordion-panel {{#columnWithTweets}}height--225{{/columnWithTweets}}{{^columnWithTweets}}height--60{{/columnWithTweets}} padding-b--5"> <div class="padding-hl control-s"> <div class="margin-v--6 txt-mute txt-size--13"> <span class="txt-size--11 txt-uppercase txt-bold">{{_i}}Notifications{{/i}}</span> </div> <div class="control-group"> {{#notificationOptions}} <div class="controls margin-l--0"> <label class="txt-mute"> <input type="checkbox" {{#on}}checked{{/on}} data-action="{{action}}"> {{option}} </label> </div> {{/notificationOptions}} </div> </div> {{#columnWithTweets}} <div class="padding-hl control-s"> <div class="margin-v--6 txt-mute txt-size--13"> <span class="txt-size--11 txt-uppercase txt-bold">{{_i}}Media preview size{{/i}}</span> </div> <div> {{#mediaPreviewSizeOptions}} <div class="js-toggle-item toggle-item pull-left padding-r--8" data-value="{{dataValue}}"> <span class="toggle-item-text txt-size--11 txt-mute">{{text}}</span> <img class="media-size-image js-unselected-media block margin-t--5" src="{{unselectedSrc}}" /> <img class="media-size-image js-selected-media block margin-t--5 is-hidden" src="{{selectedSrc}}" /> </div> {{/mediaPreviewSizeOptions}} </div> </div> {{/columnWithTweets}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<option value="{{value}}" {{#isSelected}}selected{{/isSelected}}>{{title}}</option>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-a--8"> <div class="position-rel"> <label for="select-trend-for" class="vertical-center pull-left txt-mute">Trends for</label> <select name="select-trend-for" class="js-trend-select trend-select"> </select> </div> <div class="js-city-select-panel position-rel margin-t--5 "> <label for="select-trend-for" class="vertical-center pull-left txt-mute">City</label> <select name="select-trend-for" class="js-cities-select trend-select"> </select> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div data-testid="columnLoadingPlaceholder" class="js-column-loading-placeholder list-placeholder column-loading-placeholder"> <p><span class="spinner-small"></span> {{^isUpdating}}Loading&#8230;{{/isUpdating}}{{#isUpdating}}Updating&#8230;{{/isUpdating}}</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-column-nav-menu-flyover column-nav-flyout"> <div class="column-nav-item padding-lm padding-rl txt-ellipsis">{{{content}}}</div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<span class="column-heading">{{{emojifiedTitle}}}</span> {{#needsUserAttribution}} <span class="attribution txt-mute txt-sub-antialiased txt-ellipsis vertical-align--baseline">{{screenName}}</span> {{/needsUserAttribution}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<input type="text" class="js-submittable-input js-column-title-edit-box column-title-edit-box Button--large txt-size--14 {{editableFieldClass}}" maxlength="{{maxLength}}" value="{{title}}">'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="width--490 max-height--400 padding-a--10 br--6 bg-color-twitter-lightest-gray flex flex-column"> <input type="text" class="js-input js-submittable-input js-escapable-input height--36 br--6 flex-shrink--0 light-on-dark" placeholder="{{_i}}Type a command…{{/i}}"> <div class="js-command-list full-width scroll-v margin-t--10 flex-auto"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul> {{#commands}} <li class="js-command {{classes}} padding-a--8 br--6 is-actionable txt-size--13 txt-line-height--13" data-index="{{index}}"> <div class="flex flex-row"> <div class="flex-auto padding-r--8">{{{html}}}</div> {{#shortcut}} <div class="flex-shrink--0 txt-capitalize"> <kbd class="text-like-keyboard-key color-twitter-darker-gray">{{modifier}} {{key}}</kbd> </div> {{/shortcut}} </div> </li> {{/commands}} {{^commands.length}} <li class="padding-a--8">{{_i}}No matches found{{/i}}</li> {{/commands.length}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="margin-b--11 compose-accounts flex flex-wrap--wrap {{gridModeClass}}"> {{#accounts}} <a class="js-account-item {{^isListGridMode}}js-show-tip{{/isListGridMode}} compose-account is-actionable {{#isSelected}}is-selected{{/isSelected}} {{#isListGridMode}}cf{{/isListGridMode}} link-clean" tabindex="0" title="@{{screenName}}" data-account-key="{{accountKey}}"> {{#isListGridMode}} <div class="position-rel obj-left"> <img src="{{profileImageURL}}" alt="" width="{{avatarSize}}" height="{{avatarSize}}" class="avatar compose-account-img size{{avatarSize}}" /> <div class="compose-account-selected"><i class="icon icon-check txt-size--12"></i></div> </div> <div class="nbfc compose-account-names link-clean"> <b class="txt-size--14 txt-ellipsis inline-block">{{{emojifiedName}}}</b> <p class="txt-size--13 txt-ellipsis">@{{screenName}}</p> </div> {{/isListGridMode}} {{^isListGridMode}} {{> account_selector_avatar}} {{/isListGridMode}} </a> {{/accounts}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a class="pull-left margin-r--6 is-actionable account-selector-grid-mode {{#grid}}is-selected{{/grid}}" data-grid-mode="grid"><i class="color-twitter-white icon icon-compose-grid"></i><span class="is-vishidden">grid</span></a> <a class="pull-left margin-r--6 is-actionable account-selector-grid-mode {{#minigrid}}is-selected{{/minigrid}}" data-grid-mode="minigrid"><i class="color-twitter-white icon icon-compose-minigrid"></i><span class="is-vishidden">grid</span></a> <a class="pull-left is-actionable account-selector-grid-mode {{#list}}is-selected{{/list}}" data-grid-mode="list"><i class="color-twitter-white icon icon-compose-list"></i><span class="is-vishidden">grid</span></a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#accounts}} <a class="js-account-item js-show-tip compose-account is-actionable link-clean" tabindex="0" title="@{{screenName}}" data-account-key="{{accountKey}}" data-id="{{accountKey}}"> {{> account_selector_avatar}}</a> {{/accounts}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#results}} <li class="typeahead-item padding-am cf is-actionable"> <p class="js-hashtag txt-ellipsis">{{{value}}}{{>text/hashflag}}</p> </li> {{/results}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#results}} <li class="typeahead-item padding-am cf is-actionable" data-id="{{id}}"> <img src="{{pic}}" class="avatar obj-left size24"> <div class="nbfc txt-ellipsis padding-ts"> <strong class="fullname">{{{emojifiedName}}}</strong> {{#isVerified}}<i class="js-show-tip sprite sprite-verified-mini" title="{{_i}}Verified account{{/i}}"></i>{{/isVerified}} <span class="username"><span>@</span><span class="js-screenname">{{{screenName}}}</span></span> </div> </li> {{/results}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="txt-right height--16 margin-t--4 {{#inline}}margin-r--7 margin-b--11{{/inline}} {{^inline}}margin-r---3 margin-b--1{{/inline}}"> <span class="js-character-count txt-size--12 color-twitter-dark-gray bg-color-transparent no-border txt-line-height--20 margin-r--6"></span> <span class="js-progress-svg"> <svg class="pull-right height--20 width--20 rotate---90"> <circle class="stroke-twitter-light-gray" cx="50%" cy="50%" r="8" fill="none" stroke-width="2"></circle> <circle class="js-progress-circle" cx="50%" cy="50%" r="8" fill="none" stroke-width="2"></circle> </svg> </span> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<i class="icon icon-close color-twitter-white bg-color-twitter-deep-black txt-size--16 padding-a--3 br-100 opacity--70 opacity-hover--100 lh--14"></i>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-inline-reply inline-reply item-box-full-bleed is-inline-inactive is-inline-active position-rel"> <div class="padding-t--10 padding-lxl padding-rxl padding-b--10"> <div class="position-rel compose-text-container margin-v--6 br--4"> <div class="js-reply-info-container txt-size-variable--12 is-hidden padding-h--10 padding-t--10" /> <textarea class="js-compose-text compose-text bg-color-twitter-white txt-size-variable--14 scroll-v scroll-styled-v scroll-styled-h scroll-alt" placeholder="{{#addSubsequentTweet}}{{_i}}Add another Tweet{{/i}}{{/addSubsequentTweet}}{{^addSubsequentTweet}}{{_i}}Tweet your reply{{/i}}{{/addSubsequentTweet}}" tabindex="100"></textarea> {{> compose/character_count_with_circle}} </div> \x3c!-- safeguard checkbox --\x3e <div class="js-account-safeguard-checkbox cf"> <label for="inline-account-safeguard-checkbox" class="pull-right txt-size-variable--12">Ready to Tweet? <input id="inline-account-safeguard-checkbox" class="on-blue" type="checkbox" tabindex="100" /></label> </div> <div class="cf margin-t--4 full-width"> <div class="pull-right"> <a class="js-account-item js-show-tip compose-account pull-left is-actionable is-selected" tabindex="101" data-account-key="{{account.accountKey}}" title="@{{account.screenName}}"> <img src="{{account.profileImageURL}}" alt="" width="30" height="30" class="avatar compose-account-img size30" /> </a> <div class="js-send-button-container spinner-button-container padding-l--10"> <button class="js-send-button js-spinner-button js-show-tip Button--primary" tabindex="100"> {{_i}}Tweet{{/i}} </button> <i class="js-compose-sending-success icon-center-16 compose-send-button-success icon icon-check is-hidden"></i> <i class="js-spinner-button-active icon-center-16 spinner-button-icon-spinner is-hidden"></i> </div> </div> <div class="pull-left neg-margin-lm"> <button class="js-inline-compose-close padding-a--0 width--30 Button--link" tabindex="103"> <i class="icon icon-close icon-medium color-twitter-white"></i> </button> <button class="js-inline-compose-pop js-show-tip padding-a--0 width--30 Button--link" tabindex="102" title="{{_i}}Popout{{/i}}"> <i class="icon icon-popout icon-medium color-twitter-white"></i> </button> </div> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="video-controls br--4 full-width padding-a--5 pin-bottom border-box"> <progress class="js-video-progress opacity--80 opacity-hover--100 ProgressBar ProgressBar--white width-p--95" role="progressbar" value="0" max="1" aria-valuenow="0" aria-valuemin="0" aria-valuemax="1"></progress> <div class="margin-t--8 margin-b--6 flex flex-align--center"> <i class="js-play-pause opacity--80 opacity-hover--100 icon icon-pause is-actionable"></i> <div class="flex flex-justify-content--flex-end flex-grow--1 flex-align--center"> <span class="js-video-time-duration video-duration opacity--80 txt-size--12 padding-r--5 is-default"></span> <i class="js-mute-unmute opacity--80 opacity-hover--100 icon icon-sound is-actionable"></i> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-docked-compose compose txt-size--14"> <div class="js-compose-scroller compose-content antiscroll-wrap pin-all"> <div class="antiscroll-inner scroll-v scroll-styled-v padding-h--15"> <header class="js-compose-header compose-header"> <div class="position-rel compose-title inline-block"> <h1 class="js-compose-title compose-title-text txt-ellipsis inline-block">{{_i}}New Tweet{{/i}}</h1> </div> <i class="js-compose-close is-actionable icon icon-close margin-v--20 pull-right{{#rwebComposerEnabled}} is-hidden{{/rwebComposerEnabled}}"></i> </header> <div class="js-inline-confirmation margin-bxl"></div> <div class="margin-v--14 cf"> <div class="pull-left compose-text-title"> {{_i}}From{{/i}} </div> <div class="js-account-selector-grid-toggle pull-right account-selector-grid-toggle"> </div> </div> \x3c!-- Accounts --\x3e <div class="js-account-list"> {{>compose/account_selector}} </div> \x3c!-- end Accounts --\x3e \x3c!-- Direct Message --\x3e <div class="js-compose-message-recipient-container compose-message-recipient-container margin-bxl position-rel cf"> <p class="padding-b--9 compose-text-title">{{_i}}To{{/i}}</p> <div class="js-compose-message-recipient-input-container compose-message-recipient-input-container scroll-v position-rel bg-color-twitter-white br--4"> <div class="js-compose-message-recipient-list flex flex-wrap--wrap compose-message-recipient-list position-rel is-hidden cf border-box padding-r--4 padding-b--4 br--4 padding-l--4"> </div> \x3c!-- message recipient input --\x3e <input type="text" class="js-compose-message-account js-non-escapable-input compose-message-account light-on-dark"> <a href="#" class="js-clear-input txt-size--14 input-clear-control" tabindex="-1"> <i class="icon icon-close icon-small txt-size--18"></i> </a> </div> <div class="js-typeahead-dropdown border-box typeahead-dropdown dropdown-menu br--6 bs-1 is-hidden scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} padding-v--0"> <ul class="js-typeahead-conversation-list is-hidden"></ul> <ul class="js-typeahead-user-list is-hidden"></ul> </div> </div> \x3c!-- end Direct Message --\x3e <div class="js-compose-message-header margin-b--9 compose-text-title"></div> \x3c!-- reply to tweet --\x3e <div class="js-in-reply-to compose-reply-tweet padding-al margin-b---4 br-top--4 is-hidden"></div> \x3c!-- end reply to tweet --\x3e \x3c!-- Compose box --\x3e <div class="position-rel compose-text-container padding-a--10 br--4"> \x3c!-- Simplified replies container --\x3e <div class="js-reply-info-container is-hidden txt-size--12 padding-b--6"></div> <textarea class="js-compose-text compose-text bg-color-twitter-white txt-size--14 scroll-v scroll-styled-v scroll-styled-h scroll-alt padding-a--0" placeholder="{{_i}}What\'s happening?{{/i}}"></textarea> {{> compose/character_count_with_circle}} </div> \x3c!-- Media bar --\x3e <div class="js-media-added is-hidden"></div> \x3c!-- Quote Tweet --\x3e <div class="js-quote-tweet-holder padding-a--10 bg-color-twitter-white is-inverted-dark margin-t---4 br-bottom--4"></div> \x3c!-- End compose box --\x3e \x3c!-- Hint bar --\x3e <div class="js-compose-hint margin-vl"> </div> \x3c!-- safeguard checkbox --\x3e <div class="js-account-safeguard-checkbox cf margin-v--7"> <label for="account-safeguard-checkbox" class="pull-right txt-size-variable--12"><span class="js-account-safeguard-text">Ready to Tweet?</span> <input id="account-safeguard-checkbox" class="on-blue" type="checkbox" /></label> </div> \x3c!-- Send tweet button  & character count --\x3e <div class="cf margin-t--12 margin-b--30"> <div class="pull-right"> <div class="js-send-button-container spinner-button-container"> <button class="js-send-button js-spinner-button js-show-tip Button--primary btn-extra-height padding-v--6 padding-h--12 is-disabled"> {{_i}}Tweet{{/i}}> </button> <i class="js-compose-sending-success icon-center-16 compose-send-button-success icon icon-check is-hidden"></i> <span class="js-media-upload-progress media-upload-progress is-hidden"></span> <i class="js-spinner-button-active icon-center-16 spinner-button-icon-spinner is-hidden"></i> </div> </div> </div> \x3c!-- Option buttons --\x3e <button class="js-add-image-button js-show-tip needsclick btn btn-on-blue full-width txt-left margin-b--12 padding-v--6 padding-h--12 is-disabled"> <i class="Icon icon-camera txt-size--18"></i> <span class="js-add-image-button-label label padding-ls">{{_i}}Add image{{/i}}</span> </button> <div class="js-scheduler"> <button class="js-schedule-button js-show-tip btn btn-on-blue full-width txt-left margin-b--12 padding-v--6 padding-h--12 is-disabled"> <i class="Icon icon-schedule txt-size--18"></i> <span class="js-schedule-button-label label padding-ls">{{_i}}Schedule Tweet{{/i}}</span> </button> <span class="js-schedule-datepicker-holder"/> </div> <div class="js-tweet-type-button"> <button class="js-tweet-button btn btn-on-blue full-width txt-left margin-b--12 padding-v--6 padding-h--12"> <i class="Icon icon-twitter-bird txt-size--18"></i> <span class="label padding-ls">{{_i}}New Tweet{{/i}}</span> </button> <button class="js-dm-button js-show-tip btn btn-on-blue full-width txt-left padding-v--6 padding-h--12 margin-b--12"> <i class="Icon icon-message txt-size--18"></i> <span class="label padding-ls">{{_i}}Direct message{{/i}}</span> </button> </div> <div class="js-new-composer-upsell-padding {{#showUpsellButton}}height--125{{/showUpsellButton}}{{^showUpsellButton}}height--40{{/showUpsellButton}}"></div> \x3c!-- end option buttons --\x3e </div> </div> <footer class="pin-bottom-full-width old-composer-footer"> {{#rwebComposerEnabled}} <button class="js-new-composer-opt-in flex flex-align--center flex-row full-width padding-v--14 new-composer-opt-in no-radius{{^showUpsellButton}} is-hidden{{/showUpsellButton}}"> <i class="Icon icon-compose txt-size--22 color-twitter-white margin-r--14"></i> <span class="full-width flex flex-column"> <span class="js-new-composer-opt-in-msg txt-size-variable--16 color-twitter-white txt-left"> {{_i}}New ways to Tweet{{/i}} </span> <span class="txt-size-variable--14 txt-left txt-weight-normal color-twitter-white opacity--50"> {{_i}}Threads, emojis, GIFs, polls and more{{/i}} </span> </span> </button> {{/rwebComposerEnabled}} <label class="checkbox checkbox-reversed compose-remember-state margin-a--15 txt-right"> {{_i}}Stay open{{/i}} <input class="js-compose-stay-open on-blue" type="checkbox"/> </label> </footer> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-add-image-description color-twitter-white bg-color-twitter-deep-black {{#isMediaGridContent}}padding-a--4 pin-left pin-bottom txt-size--11{{/isMediaGridContent}}{{^isMediaGridContent}}txt-size--12 padding-a--10 pin-left--15 pin-bottom--17{{/isMediaGridContent}} br--14 opacity--70 opacity-hover--100 is-actionable margin-t---20 z-index--1 txt-ellipsis max-width-p--70"> {{#description}}{{description}}{{/description}}{{^description}}{{_i}}Add description{{/i}}{{/description}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#user}} <header class="tweet-header padding-bm position-rel"> <a href="#" class="js-in-reply-to-remove pull-right compose-reply-tweet-remove margin-axs"><i class="icon icon-close"></i></a> <a class="account-link link-complex block txt-ellipsis margin-r--10" href="https://twitter.com/{{screenName}}" rel="user" target="_blank"> <img class="compose-reply-avatar avatar size24" src="{{profileImageURL}}" width="24" height="24"> <b class="fullname link-complex-target">{{name}}</b> {{#isVerified}}<i class="js-show-tip sprite sprite-verified-mini" title="{{_i}}Verified account{{/i}}"></i>{{/isVerified}} <span class="username txt-mute {{#isVerified}}block{{/isVerified}}">@{{screenName}}</span> </a> </header> {{/user}} <div class="tweet-body"> <p class="js-tweet-text tweet-text with-linebreaks">{{{htmlText}}}</p> </div> <div class="replyto-caret"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#isMediaGridContent}} <div class="compose-media-grid-holder bg-color-twitter-white padding-am margin-t---4"> <div class="media-grid-container"> <div class="media-grid-{{mediaLength}}"> {{#mediaInfo}} <div class="media-image-container block position-rel"> <div class="pin-all media-image br--4" style="background-image: url({{src}});" > <a class="js-media-bar-remove compose-media-grid-remove is-actionable" data-file-index="{{fileIndex}}"> {{>compose/close_button}} </a> {{>compose/image_description_field}} </div> </div> {{/mediaInfo}} </div> </div> </div> {{/isMediaGridContent}} {{^isMediaGridContent}} <div class="compose-media-bar-holder padding-al br-bottom br-bottom--4 margin-t---4"> <div class="compose-media-bar br--4"> <a class="js-media-bar-remove compose-media-bar-remove is-actionable z-index--1"> {{>compose/close_button}} </a> {{#isVideo}} {{#mediaInfo}} <div class="js-video"></div> {{/mediaInfo}} {{/isVideo}} {{^isVideo}} {{#mediaInfo}} <img class="js-media-bar-thumb compose-media-bar-thumb full-width br--14" alt="" src="{{src}}" data-file-index="{{fileIndex}}"> {{^isGif}} {{>compose/image_description_field}} {{/isGif}} {{/mediaInfo}} {{/isVideo}} </div> </div> {{/isMediaGridContent}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="compose-media-info-bar-holder padding-al"> <div class="compose-media-info-bar cf padding-as"> <div class="obj-left"> <i class="icon icon-camera align-middle"></i> <span class="align-middle">{{_i}}Image added{{/i}}</span> </div> <div class="obj-right"> <a href="#" class="js-media-bar-remove align-middle">{{_i}}Remove{{/i}}</a> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} <div class="js-compose-message-recipient compose-message-recipient margin-t--4 margin-l--4 color-twitter-darker-gray flex flex-row flex-align--center max-full-width br--14" data-conversation-id="{{conversationId}}"> {{^withMultipleAvatars}} {{#avatars.0}} <img class="flex-shrink--0 margin-a--1 br-100" src="{{profileImageURL}}" width="24" height="24" alt="{{screenName}}\'s avatar"> {{/avatars.0}} {{/withMultipleAvatars}} {{#withMultipleAvatars}} <div class="flex-shrink--0 margin-a--1 media-grid-container multiple-avatar-grid-mini "> <div class="{{avatarsClass}}"> {{#avatars}} <div class="media-image-container media-image-container-mini"> <div class="media-image block position-rel" style="background-image: url({{profileImageURL}});" ></div> </div> {{/avatars}} </div> </div> {{/withMultipleAvatars}} <span class="flex-shrink--1 txt-ellipsis margin-l--4"> {{#getConversationTitleInformation}} {{#name}} {{{name}}} {{/name}} {{^name}} {{#isOneToOne}} {{#participants.0}} {{name}} </a> {{/participants.0}} {{/isOneToOne}} {{#isThreeway}} {{#participants.0}} {{name}}, {{/participants.0}} {{#participants.1}} {{name}} {{/participants.1}} {{/isThreeway}} {{#isOneToMany}} {{#participants.0}} {{name}} + {{numberOfOtherParticipants}} {{/participants.0}} {{/isOneToMany}} {{/name}} {{/getConversationTitleInformation}} </span> <a class="js-remove-conversation is-actionable txt-mute flex-shrink--0 padding-l--4 padding-r--5 padding-t--2"><i class="icon icon-close txt-size--12"></i></a> </div> {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#users}} <div class="js-compose-message-recipient compose-message-recipient margin-t--4 color-twitter-darker-gray flex flex-row flex-align--center max-full-width br--14 border-box" data-user-id="{{id}}" data-screen-name="{{screenName}}"> <img class="flex-shrink--0 padding-a--1 br-100" src="{{profileImageURL}}" width="24" height="24" /> <span class="flex-shrink--1 txt-ellipsis margin-l--4">{{name}}</span> <a class="js-remove-recipient is-actionable txt-mute flex-shrink--0 padding-l--4 padding-r--5 padding-t--2" data-user-id="{{id}}"><i class="icon icon-close txt-size--12"></i></a> </div> {{/users}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{_i}} <div class="other-replies txt-ellipsis"> Replying {{#recipients}} to <a href="#" class="js-other-replies-link other-replies-link" data-recipient-ids="{{userIds}}"> {{#users}} @{{screenName}} {{/users}} {{#remainder}} and {{remainder}} others {{/remainder}} </a> {{/recipients}} </div> {{/i}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul class="lst"> <li class="padding-axl"> <p class="txt-size--14 color-twitter-dark-gray"> {{#withComposeContext}} {{_i}}Your Tweet will go to the people in this conversation.{{/i}} {{/withComposeContext}} {{^withComposeContext}} {{_i}}This conversation includes these people.{{/i}} {{/withComposeContext}} </p> </li> {{#replies}} <li class="padding-axl flex flex-row flex-align--center"> <div class="flex-auto margin-rxl">{{> account_summary}}</div> {{#withComposeContext}} <input type="checkbox" {{#isChecked}}checked{{/isChecked}} {{#isDisabled}}disabled{{/isDisabled}} class="js-reply-checkbox flex-shrink--0 txt-size--16" data-id="{{id}}"> {{/withComposeContext}} </li> {{/replies}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="popover popover-position-t bg-color-twitter-white margin-ll padding-a--3" style="display:block"> <div class="caret"> <span class="caret-outer"></span> <span class="caret-inner"></span> </div> <div class="cal"> <header> <input id="scheduled-hour" type="text" pattern="\\d*" inputmode="numeric" tabindex="2" class="light-on-dark"> <span>:</span> <input id="scheduled-minute" type="text" pattern="\\d*" inputmode="numeric" tabindex="3" class="light-on-dark"> <button id="amPm" class="Button Button--small" data-value="{{isPM}}"> <span class="label">{{meridiemText}}</span> </button> </header> <div id="calendar" class="form-calendar"> <div class="nav-group button-group"> <button id="prev-month" class="btn-round"> <i class="Icon icon-arrow-l icon-center-16"></i> </button> <button id="next-month" class="btn-round"> <i class="Icon icon-arrow-r icon-center-16"></i> </button> </div> <input type="date" name="datepicker" id="datepicker"> </div> </div> <div class="padding-as"> <button class="js-remove Button--danger full-width"> <i class="Icon icon-trash Icon--large"></i> <span>{{_i}}Remove{{/i}}</span> </button> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="account-summary cf flex"> <div class="obj-left item-img flex-align-self--center"> <img class="avatar size36 avatar pull-right" src="{{profileImageURL}}" width="36" height="36" alt="{{screenName}}\'s avatar"> </div> <div class="account-summary-text nbfc account-link"> <span class="account-inline txt-ellipsis {{#isProtected}}is-protected{{/isProtected}}"> <b class="fullname link-complex-target txt-size--14 {{#isBadged}}fullname-badged badge-size--14 padding-r--14 margin-r--2{{/isBadged}} {{#isTranslator}}badge-translator{{/isTranslator}} {{#isVerified}}badge-verified{{/isVerified}} position-rel"> {{{emojifiedName}}} </b> <span class="username color-twitter-dark-gray txt-size--12"> @{{screenName}} {{#isProtected}}<i class="icon icon-protected"></i>{{/isProtected}} </span> </span> <div class="contributor-detail padding-t--5 cf txt-size--13 color-twitter-dark-gray" data-show-when-state="closed"> <span data-show-when-contributor-role="admin"> {{_i}}Admin{{/i}} </span> <span data-show-when-contributor-role="contributor"> {{_i}}Contributor{{/i}} </span> &middot; <a href="#" class="js-contributor-open-settings" data-user-id="{{user.id}}"> {{_i}}Change role{{/i}} </a> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "{{#contributors}} {{>contributors/contributor_list_row}} {{/contributors}}"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-axl margin-tl color-twitter-red"> {{_i}}Could not retrieve team members.{{/i}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#contributor}} <div class="js-contributor-row contributor-row position-rel padding-axl account-settings-bb" data-state="{{initialState}}" data-state-error data-user-id="{{user.id}}" data-name="{{user.name}}" data-contributor-role="{{#isAdmin}}admin{{/isAdmin}}{{^isAdmin}}contributor{{/isAdmin}}"> {{#user}} {{>contributor_list_account_summary}} {{/user}} <div class="contributor-settings control-s margin-txl cf" data-show-when-state="settings confirmRemove"> <div class="contributor-settings-role margin-bl padding-bl margin-" data-hide-when-state="confirmRemove"> <div class="radio"> <label class="contributor-option cf block"> <input type="radio" name="contributor-role-{{user.id}}" class="js-contributor-role margin-tm block obj-left" data-user-id="{{user.id}}" data-contributor-role="contributor" {{^isAdmin}}checked="checked"{{/isAdmin}}> <div class="nbfc"> <strong class="block">{{_i}}Contributor{{/i}}</strong> <span class="color-twitter-dark-gray">{{_i}}Can Tweet as @{{contributee.getUsername}}{{/i}}</span> </div> </label> <label class="contributor-option cf block"> <input type="radio" name="contributor-role-{{user.id}}" class="js-contributor-role margin-tm block obj-left" data-user-id="{{user.id}}" data-contributor-role="admin" {{#isAdmin}}checked="checked"{{/isAdmin}}> <div class="nbfc"> <strong class="block">{{_i}}Admin{{/i}}</strong> <span class="color-twitter-dark-gray">{{_i}}Can Tweet and manage team{{/i}}</span> </div> </label> </div> <div class="contributor-confirm-change cf margin-txl"> <button class="js-contributor-action-confirm Button--primary pull-left margin-r--10" data-user-id="{{user.id}}"> <span class="label">{{_i}}Confirm{{/i}}</span> </button> <button class="js-contributor-action-cancel btn btn-on-dark cf pull-left" data-user-id="{{user.id}}"> {{_i}}Cancel{{/i}} </button> </div> </div> <div class="contributor-remove" data-hide-when-state="confirmRemove"> <button class="js-contributor-remove Button--danger pull-left" data-user-id="{{user.id}}"> <span class="label">{{_i}}Remove from team{{/i}}</span> </button> </div> <div class="contributor-confirm-remove padding-bl color-twitter-darker-gray" data-show-when-state="confirmRemove"> {{^isSigninAccount}} {{_i}}Remove @{{user.screenName}} from the team?{{/i}} {{/isSigninAccount}} {{#isSigninAccount}} {{_i}}You are signed in as @{{user.screenName}}, so this will remove @{{contributee.getUsername}} from your TweetDeck and you will no longer be able to manage the team.{{/i}} {{/isSigninAccount}} </div> <div class="contributor-confirm-remove cf" data-show-when-state="confirmRemove"> <button class="js-contributor-action-confirm Button--danger pull-left margin-r--10" data-user-id="{{user.id}}"> <span class="label">{{_i}}Remove{{/i}}</span> </button> <button class="js-contributor-action-cancel btn btn-on-dark cf pull-left" data-user-id="{{user.id}}"> {{_i}}Cancel{{/i}} </button> </div> </div> <div class="contributor-confirm-add padding-vl txt-size--13 color-twitter-dark-gray" data-show-when-state="confirmAdd confirmAdd-added"> {{_i}}This user will be able to use Twitter as @{{contributee.getUsername}}, including:{{/i}} <ul class="padding-tl ul"> <li>{{_i}}Posting Tweets{{/i}}</li> <li>{{_i}}Accessing direct messages{{/i}}</li> <li>{{_i}}Liking and Retweeting{{/i}}</li> </ul> </div> <div class="contributor-confirm-add" data-show-when-state="confirmAdd confirmAdd-added"> <div class="cf"> <button class="js-contributor-action-confirm Button--primary pull-left" data-user-id="{{user.id}}"> {{_i}}Authorize{{/i}} </button> <button class="js-contributor-action-cancel btn btn-on-dark cf margin-hm pull-left" data-user-id="{{user.id}}"> {{_i}}Cancel{{/i}} </button> </div> </div> <div class="contributor-confirm-deadmin padding-hs padding-vm color-twitter-darker-gray" data-show-when-state="confirmDeadmin"> {{_i}}Warning: You will no longer be able to manage the team from this TweetDeck{{/i}} </div> <div class="contributor-confirm-deadmin" data-show-when-state="confirmDeadmin"> <button class="js-contributor-action-confirm Button--primary pull-left margin-r--10 padding-h--20" data-user-id="{{user.id}}"> <span class="label">{{_i}}Continue{{/i}}</span> </button> <button class="js-contributor-action-cancel cf btn btn-on-dark padding-h--20 pull-left" data-user-id="{{user.id}}"> {{_i}}Cancel{{/i}} </button> </div> <div class="js-contributor-error-message margin-txl color-twitter-deep-red" data-show-when-state-error></div> <div class="txt-size--13 color-twitter-dark-gray margin-txl" data-show-when-state="confirmAdd confirmAdd-added"> <a href="https://support.twitter.com/articles/20171753-using-team-accounts-on-tweetdeck" target="_blank" rel="url noopener noreferrer">{{_i}}Read more about teams.{{/i}}</a> </div> </div> {{/contributor}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="drawer-header padding-lxl flex-shrink--0"> <h1 class="js-contributor-manager-back is-actionable pull-left txt-weight-normal"> <span class="drawer-header-title block drawer-column-header-title"> <i class="icon icon-arrow-l icon-tt"></i> {{_i}}Manage team{{/i}} </span> </h1> <a class="js-drawer-close column-close-link color-twitter-darker-gray" href="#"> <i class="icon icon-close icon-center-24"></i> </a> </div> <div class="js-contributor-manager contributor-manager drawer-content scroll-v margin-b---1"> <div class="padding-txl padding-lxl padding-rxl padding-bn account-settings-bb"> {{! Account summary }} {{#account}} <a class="account-link link-complex block br--3" href="{{getProfileURL}}" data-user-name="{{screenName}}" rel="user" target="_blank"> <div class="padding-al manage-team-summary br--3"> {{> account_settings_account_summary }} </div> </a> {{/account}} <p class="padding-txl color-twitter-gray txt-size--13 margin-bxxl"> {{_i}}Members of this team can use Twitter as @{{account.screenName}} without knowing the password.{{/i}} <a href="https://support.twitter.com/articles/20171753-using-team-accounts-on-tweetdeck" target="_blank" rel="url noopener noreferrer">{{_i}}Learn more{{/i}}</a> </p> </div> <span class="js-contributors"> <div class="padding-v--12 account-settings-bb"> <h1 class="txt-size--13 color-twitter-darker-gray padding-hxl"> {{_i}}Team members{{/i}} </h1> </div> <div class="js-contributor-list"></div> </span> <span class="js-pending"> <div class="padding-v--12 account-settings-bb"> <h1 class="txt-size--13 color-twitter-darker-gray padding-hxl"> {{_i}}Pending requests{{/i}} </h1> </div> <div class="js-contributor-list-pending"></div> </span> </div> <div class="padding-b--16 padding-h--16 flex-shrink--0 account-settings-bt account-settings-bb"> <h1 class="txt-size--13 color-twitter-darker-gray padding-l--2 padding-v--12">{{_i}}Add a team member{{/i}}</h1> <div class="js-contributor-adder height--30"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-hxl"> {{_i}}Loading team...{{/i}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="customtimeline-details margin-b--15 padding-t--25 padding-h--15 width--490"> <fieldset> <div class="control-group padding-b--15"> <label for="customtimeline-account" class="control-label">{{_i}}Account{{/i}}</label> <div class="controls"> <select{{#timelineId}} disabled{{/timelineId}} name="customtimeline-account" id="customtimeline-account" class="js-customtimeline-account width--300"> {{#accounts}}<option value="{{getKey}}">@{{getUsername}}</option>{{/accounts}} </select> </div> </div> <div class="control-group padding-b--15"> <label for="customtimeline-name" class="control-label">{{_i}}Name{{/i}}</label> <div class="controls"> <input class="width--300 js-customtimeline-name js-submittable-input" id="customtimeline-name" name="customtimeline-name" maxlength="25" required="required" type="text" placeholder="{{_i}}New Collection{{/i}}"> </div> </div> <div class="control-group"> <label for="customtimeline-description" class="control-label padding-t--6"> {{_i}}Description{{/i}} </label> <div class="controls"> <textarea class="width--300 js-customtimeline-description height--55" id="customtimeline-description" name="customtimeline-description" rows="10"></textarea> </div> <div class="controls margin-t--6 color-twitter-darker-gray width--300 txt-size--12"> <span>Under 160 characters, optional</span> <span class="js-character-count obj-right"></span> </div> </div> <div class="pull-right padding-t--10"> {{#timelineId}} <button class="js-delete-customtimeline js-submittable-input Button--danger margin-r--12" type="button"> {{_i}}Delete{{/i}} </button> {{/timelineId}} <button class="js-save-customtimeline js-submittable-input Button--primary" type="submit"> {{_i}}Save{{/i}} </button> </div> </fieldset> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-drawer-body"> <div class="js-insights-panel"> </div> </div> <div class="js-drawer-footer"> <button class="js-drawer-action Button--primary pull-right">Tweet {{insightTerm}}</button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-a--20"> <p>{{_i}}This conversation will be deleted from your inbox. Other people in the conversation will still be able to see it.{{/i}}</p> <div class="pull-right padding-v--16"> <button class="Button--tertiary js-cancel-delete"> {{_i}}Cancel{{/i}} </button> <button class="Button--danger js-delete"> {{#group}}{{_i}}Leave{{/i}}{{/group}}{{^group}}{{_i}}Delete{{/i}}{{/group}} </button> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-a--20"> <p>{{_i}}This message will be deleted for you. Other people in the conversation will still be able to see it.{{/i}}</p> <div class="pull-right padding-v--16"> <button class="Button--tertiary js-cancel-delete"> {{_i}}Cancel{{/i}} </button> <button class="Button--danger js-delete"> {{_i}}Delete{{/i}} </button> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-drawer drawer" data-drawer="compose"> </div> <div class="js-drawer drawer" data-drawer="accountSettings"> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div> {{$content}} <div class="margin-h--15 margin-b--20"> <span class="block margin-bl">{{_i}}Add this Tweet to your website by copying the code below. If your CMS supports it, you can just paste in the link.{{/i}} <a class="url" target="_blank" href="https://dev.twitter.com/docs/embedded-tweets">{{_i}}Learn more{{/i}}</a> {{_i}}about embedded Tweets.{{/i}}</span> <textarea class="js-embed-textarea block margin-bl" rows="2" readonly>{{html}}</textarea> {{#isReply}} <label class="checkbox is-actionable block">{{_i}}Include parent Tweet{{/i}} <input type="checkbox" {{#includeParentTweet}}checked{{/includeParentTweet}} class="js-embed-include-parent"> </label> {{/isReply}} <p class="color-twitter-darker-gray">{{_i}}By embedding Twitter content in your website or app, you are agreeing to the{{/i}} <a class="url" target="_blank" href="https://dev.twitter.com/overview/terms/agreement">{{_i}}Developer Agreement{{/i}}</a> {{_i}}and{{/i}} <a class="url" target="_blank" href="https://dev.twitter.com/overview/terms/policy">{{_i}}Developer Policy{{/i}}</a>.</p> {{#hasMedia}} <label class="checkbox is-actionable block">{{_i}}Include media{{/i}} <input type="checkbox" {{#includeMedia}}checked{{/includeMedia}} class="js-embed-include-media"> </label> {{/hasMedia}} </div> <b class="block margin-ll color-twitter-darker-gray margin-h--15">{{_i}}Preview{{/i}}</b> <div class="js-embed-loading-container embed-loading-container margin-h--15"> <img src="{{#asset}}/global/backgrounds/spinner_large_white.gif{{/asset}}" class="embed-loading" alt="{{_i}}Loading…{{/i}}" /> </div> <div class="js-embed-iframe-container embed-iframe-container margin-h--7"> <iframe class="js-embed-iframe embed-iframe"> </iframe> </div> {{/content}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#accounts}} <div class="l-table padding-al"> <div class="l-cell"> {{>buttons/favorite}} <div class="inline-block"> <img class="avatar size32 pull-left" src={{getProfileImageURL}} /> <span class="from-handle padding-l--6">@{{getUsername}}</span> </div> </div> </div> {{/accounts}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="Card-video"> {{#cardUsePublishedVideo}} <iframe class="Card-videoIframe" src="https://twitter.com/i/videos/{{tweetId}}?square_corners=1"></iframe> {{/cardUsePublishedVideo}} {{^cardUsePublishedVideo}} {{! This component currently doesn\'t need cross-frame communication. The `json_rpc=1` param silences XDM setup errors. In the URL below, the inline Mustache comments allow for slightly more readable code formatting with line breaks, rather than one enormous line. }} <iframe class="Card-videoIframe" {{#cardVideoPosterImageOnly}}data-{{/cardVideoPosterImageOnly}}src="https://twitter.com/i/videos/static?{{! }}json_rpc=1&square_corners=1{{! }}{{#cardVideoPosterImageOnly}}&autoplay=1{{/cardVideoPosterImageOnly}}{{! }}{{#posterImageUrl}}&image_src={{posterImageUrl}}{{/posterImageUrl}}{{! }}{{#videoUrl}}&video_url={{videoUrl}}{{/videoUrl}}{{! }}{{#visitCallToActionUrl}}&visit_cta_url={{visitCallToActionUrl}}{{/visitCallToActionUrl}}{{! }}{{#vmapUrl}}&vmap_url={{vmapUrl}}{{/vmapUrl}}{{! }}{{#watchNowCallToActionUrl}}&watch_now_cta_url={{watchNowCallToActionUrl}}{{/watchNowCallToActionUrl}}{{! }}"></iframe> <button class="Card-videoPosterImageContainer"> <img alt="" class="Card-videoPosterImage" src="{{rawPosterImageUrl}}" /> <span class="Card-videoPosterImagePlayButton Icon Icon--playButton"></span> </button> {{/cardUsePublishedVideo}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-action-follow btn-relation-group"> <div class="js-follow-button pull-left {{^isSingleAccount}}js-show-tip{{/isSingleAccount}} follow-btn margin-r--4{{^showAccountMenu}} Button--tertiary{{/showAccountMenu}} is-disabled" {{^isSingleAccount}}title="{{_i}}From {{#account}}@{{getUsername}}{{/account}}{{/i}}"{{/isSingleAccount}}> <button class="btn-loader"> <span> <img src="{{#asset}}/global/backgrounds/spinner_small_trans.gif{{/asset}}" alt="{{_i}}Loading…{{/i}}"> </span> </button> <button class="action-text follow-text btn-on-dark"> <i class="Icon icon-follow"></i> <span class="label">{{_i}}Follow{{/i}}</span> </button> <button class="action-text Button--primary following-text"> {{_i}}Following{{/i}} </button> <button class="js-action-unfollow action-text unfollow-text"> {{_i}}Unfollow{{/i}} </button> <button class="action-text block-text btn-on-dark"> {{_i}}Blocked{{/i}} </button> <button class="js-action-unblock action-text unblock-text action-text btn-on-dark"> {{_i}}Unblock{{/i}} </button> <button class="pending-text action-text btn-on-dark"> {{_i}}Pending{{/i}} </button> <button class="js-action-unfollow action-text cancel-req-text btn-on-dark"> {{_i}}Cancel{{/i}} </button> <button class="js-action-profile action-text thats-you-text btn-on-dark"> {{_i}}Edit profile{{/i}} </button> </div> {{#showAccountMenu}} {{> user_actions_btn_inv}} {{/showAccountMenu}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<i class="heartsprite heart-anim"></i>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div data-testid="gdprImportantUpdateModal" class="txt-center padding-v--30 padding-h--50 width--523"> <i class="padding-v--30 icon icon-twitter-bird color-twitter-blue txt-size--30"></i> <h1 class="padding-v--20 txt-size--22 txt-bold">{{_i}}Updates to the Twitter Terms of Service and Privacy Policy{{/i}}</h1> <p class="padding-t--5 padding-b--20 color-twitter-dark-gray txt-size--14">{{_i}}Twitter is updating its Terms of Service and Privacy Policy to provide you with even more transparency into the data Twitter collects about you, how it\'s used, and the controls you have over your personal data. These updates will take effect on May 25, 2018.{{/i}} <a href="https://help.twitter.com/en/rules-and-policies/update-privacy-policy">{{_i}}Learn more{{/i}}</a></p> <button class="js-dismiss margin-t--10 margin-b--20 Button Button--primary">{{_i}}Got it{{/i}}</button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="inline-confirmation-container padding-axl {{backgroundColorClass}} br--4"> <div class="inline-confirmation-text {{textColorClass}}"> {{confirmationText}} </div> <div class="margin-txl cf"> <button class="js-btn-primary {{^buttonPrimaryIsNegative}}Button--primary{{/buttonPrimaryIsNegative}} {{#buttonPrimaryIsNegative}}Button--danger{{/buttonPrimaryIsNegative}} pull-left margin-r--10"> <span class="label">{{primaryButtonText}}</span> </button> <button class="js-btn-secondary btn pull-left"> {{secondaryButtonText}} </button> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="margin-v--26"> <h4 class="txt-size--16 txt-bold margin-b--8">{{title}}</h4> <div class="txt-right txt-size--12">{{_i}}% of audience{{/i}}</div> <ol class="border-separated"> {{#ageInsights}} <li class="flex txt-size--14 margin-t--4 padding-v--20"> <div class="width-p--5"> {{ordinal}} </div> <div class="width-p--50"> {{name}} </div> <div class="width-p--45 flex"> <div class="width-5 margin-h--10 txt-right">{{percentage}}%</div> <div class="block flex-grow--1 flex-align-self--center height-0 margin-l--10 bg-color-twitter-lightest-gray"> <div class="height-p--100 bg-color-twitter-blue" style="width: {{percentage}}%"></div> </div> </div> </li> {{/ageInsights}} </ol> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="color-twitter-black"> <div class="js-insights-main-chart"></div> <div class="js-no-data"></div> <div class="js-top-related"></div> <div class="js-demographics"> <div class="js-demographics-age"></div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="txt-center color-twitter-dark-gray margin-t--50"> <p class="txt-size--18 padding-b--8">{{_i}}Nothing to see here &mdash; yet{{/i}}</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="margin-v--26"> <h4 class="txt-size--16 txt-bold margin-b--8">{{_i}}Related terms{{/i}}</h4> <ol class="border-separated"> {{#rows}} <li class="flex flex-align--center txt-size--14 margin-t--4 padding-v--15"> <div class="width-p--5"> {{ordinal}} </div> <div class="width-p--50"> {{word}}<br/> <span class="color-twitter-dark-gray">{{volume}}{{_i}} Tweets{{/i}}</span> </div> <div class="width-p--45"> <div id="js-sparkline-{{key}}"> </div> <span class="txt-mute txt-size--12 margin-v--2 pull-right">{{_i}}Past week{{/i}}</span> </div> </li> {{/rows}} </ol> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="item-box {{$item_box_classes}}{{/item_box_classes}}" {{$item_box_data}}{{/item_box_data}}> {{$content}}{{/content}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div> {{$content}} <dl class="keyboard-shortcut-list mdl-column"> <dt class="keyboard-shortcut-title"><b>Actions</b></dt> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">R</kbd>  Reply</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">T</kbd>  Retweet</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">F</kbd> {{_i}}Like{{/i}} </dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">N</kbd>  New Tweet</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">D</kbd>  Direct Message</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">P</kbd>  View user profile</dd> <dd class="keyboard-shortcut-definition"> <kbd class="text-like-keyboard-key">{{#isMac}}Return{{/isMac}}{{^isMac}}Enter{{/isMac}}</kbd> View Tweet details </dd> <dd class="keyboard-shortcut-definition"> <kbd class="text-like-keyboard-key">Backspace</kbd> Close Tweet details </dd> <dd class="keyboard-shortcut-definition"> <kbd class="text-like-keyboard-key">{{#isMac}}Cmd &#8984;{{/isMac}}{{^isMac}}Ctrl{{/isMac}}</kbd> + <kbd class="text-like-keyboard-key">{{#isMac}}Return{{/isMac}}{{^isMac}}Enter{{/isMac}}</kbd> Send Tweet </dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">A</kbd>  Add column</dd> {{#withCommandPalette}} <dd class="keyboard-shortcut-definition"> <kbd class="text-like-keyboard-key">;</kbd> {{_i}}Command palette — <b>NEW!</b>{{/i}} <img class="emoji" draggable="false" alt="✨" src="https://abs.twimg.com/emoji/v2/72x72/2728.png"> </dd> {{/withCommandPalette}} </dl> <dl class="keyboard-shortcut-list mdl-column"> <dt class="keyboard-shortcut-title"><b>Navigation</b></dt> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">?</kbd>  This menu</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">&#8594;</kbd>  Right</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">&#8592;</kbd>  Left</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">&#8595;</kbd>  Down</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">&#8593;</kbd>  Up</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">1</kbd> … <kbd class="text-like-keyboard-key">9</kbd>  Column 1－9</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">0</kbd>  Final column</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">X</kbd>  Expand/Collapse navigation</dd> <dd class="keyboard-shortcut-definition"><kbd class="text-like-keyboard-key">S</kbd>  Search</dd> </dl> {{/content}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-modal-panel mdl s-tall-fixed"> {{> modal_header}} <div class="mdl-inner"> <div class="mdl-content js-mdl-content horizontal-flow-container"> </div> <footer class="mdl-buttonbar"></footer> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<p class="padding-axl color-twitter-deep-black">{{_i}} <a href="https://support.twitter.com/articles/15794-online-abuse" target="_blank" rel="url">Learn more</a> about reporting violations of our rules.{{/i}} </p>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li> <a href="#" class="list-account s-justify cf"> <img src="{{profileImageURL}}" alt="@{{username}}" class="avatar obj-left"> <div class="nbfc"> <strong class="fullname"> {{{emojifiedName}}}{{^emojifiedName}}{{fullname}}{{/emojifiedName}}{{#isVerified}}<i title="{{_i}}Verified account{{/i}}" class="sprite sprite-verified-mini js-show-tip margin-l--0 margin-t--0"></i>{{/isVerified}} </strong> <span class="username">@{{username}}</span> </div> </a> </li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li> <a href="#" class="list-twitter-list" data-id="{{id}}"> <div class="inner" > <strong>{{name}}</strong> </div> <p>{{description}}</p> </a> </li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="lst-group"> <ul class="js-events-list"></ul> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li class="{{#selected}}selected{{/selected}} {{classes}}"><a href="#" class="list-link" data-action="{{action}}"><strong>{{title}}</strong><i class="chev-right"></i></a></li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="lst-group"> <ul class="js-live-videos-list"></ul> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li><a href="#" class="list-subtitle">{{title}}<span>{{subtitle}}</span><i class="chev-right"></i></a></li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<header class="margin-am"> <div class="js-trends control-group is-hidden"> <label class="padding-ts pull-left txt-mute cont">{{_i}}Trends{{/i}}</label> <div class="controls-space-58"> <select class="js-trends-select"></select> </div> </div> <div class="js-cities control-group is-hidden margin-ts"> <label class="padding-ts pull-left txt-mute cont">{{_i}}City{{/i}}</label> <div class="controls-space-58"> <select class="js-cities-select"></select> </div> </div> </header>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="lst-group"> {{^withLocationSelector}} <h3>{{_i}}Worldwide{{/i}}</h3> {{/withLocationSelector}} {{> list_module_trend_header}} <ul class="js-trend-list"></ul> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li> <a href="#" class="list-twitter-list"> <div class="inner" > <strong>{{{title}}}</strong> </div> <p>{{{description}}}</p> </a> </li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li> <a href="#" class="list-twitter-list"> <div class="inner"> <div class="txt-ellipsis"> {{#isPrivate}}<i class="icon icon-protected icon-small inline"></i>{{/isPrivate}} <strong>{{{title}}}</strong> <span class="bytext">{{by}}</span> </div> </div> <p class="txt-ellipsis">{{{description}}}</p> <span class="subtitle">{{subtitle}}</span> <img src="{{miniProfileURL}}" alt="avatar" class="avatar size24"> </a> </li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<span class="btn-dropdown-group"> <a href="#" class="btn-dropdown"> <span class="js-menu-selected-item">{{choice}}</span> <i class="carrot-down"></i> </a> <ul class="options-dropdown dropdown-menu" style="display:block"> <li><a href="#">{{_i}}Ping{{/i}}</a></li> <li><a href="#">{{_i}}Ping 2{{/i}}</a></li> <li><a href="#">{{_i}}Ping 3{{/i}}</a></li> <li><a href="#">{{_i}}Ping 4{{/i}}</a></li> </ul> </span>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li><a href="#" data-action="search" data-query="{{name}}">{{name}}</a></li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li><a class="promoted" href="#" data-action="search" data-query="{{name}}">{{name}}<i class="badge-promoted"></i><span>promoted</span></a></li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<button class="js-add-multiple Button--primary margin-t--10" {{^canAddMembers}}disabled{{/canAddMembers}}> {{_i}}Add users to List{{/i}} </button>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<span class="pull-right"> <button class="js-save Button--primary"><i class="add"></i>{{_i}}Save{{/i}}</button> </span>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="margin-b--15 padding-t--25 padding-h--15 width--490"> <fieldset> <legend class="frm-legend">{{_i}}List Details{{/i}}</legend> <div class="control-group padding-b--15"> <label for="list-account" class="control-label">{{_i}}Account{{/i}}</label> <div class="controls"> <select{{#listId}} disabled{{/listId}} name="list-account" id="list-account" class="js-list-account width--300"> {{#accounts}}<option value="{{getKey}}">@{{getUsername}}</option>{{/accounts}} </select> </div> </div> <div class="control-group padding-b--15"> <label for="list-name" class="control-label">{{_i}}Name{{/i}}</label> <div class="controls"> <input class="width--300 js-list-name js-submittable-input" id="list-name" name="list-name" maxlength="25" required="required" type="text" placeholder="{{_i}}New List{{/i}}"> </div> </div> <div class="control-group"> <label for="list-description" class="control-label padding-t--6"> {{_i}}Description{{/i}} </label> <div class="controls"> <textarea class="width--300 js-list-description height--55" id="list-description" name="list-description" rows="10"></textarea> </div> <div class="controls margin-t--6 color-twitter-darker-gray width--300 txt-size--12"> <span>Under 100 characters, optional</span> <span class="js-character-count obj-right"></span> </div> </div> <div class="control-group"> <label for="list-mode"  class="control-label">{{_i}}Privacy{{/i}}</label> <div class="controls frm-inputs-list padding-t--5"> <label class="radio"> <input type="radio" value="public" id="list-mode-public" name="list-mode" checked="checked"> <span>{{_i}}Public{{/i}}</span> <span class="color-twitter-gray txt-size--12">&#8226 {{_i}}anyone can view{{/i}}</span> </label> <label class="radio"> <input type="radio" value="private" id="list-mode-private" name="list-mode"> <span>{{_i}}Private{{/i}}</span> <span class="color-twitter-gray txt-size--12">&#8226 {{_i}}only visible to the owner{{/i}}</span> </label> </div> </div> <div class="pull-right padding-t--10"> <button class="js-save-list js-submittable-input Button--primary" type="submit"> {{_i}}Save{{/i}} </button> </div> </fieldset> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<button class="js-delete Button--danger"> <span class="label">{{_i}}Delete List{{/i}}</span> </button> <span class="pull-right"> <label class="js-add-column-option is-hidden pull-left checkbox frm-add-col"> <input type="checkbox" class="js-add-column-checkbox" name="add-column-checkbox"/> <span>{{_i}}Add column{{/i}}</span> </label> <button class="js-edit btn Button--tertiary btn-on-dark margin-r--6">{{_i}}Edit details{{/i}}</button> <button class="js-done Button--primary"></i>{{_i}}Done{{/i}}</button> </span>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li class="list-listmember cf"> <img src="{{profileImageURL}}" alt="@{{username}}" class="avatar"> <button class="js-add-remove btn btn-on-dark btn-round Button--tertiary"> <div class="working action-btn"> <span> <img src="{{#asset}}/global/backgrounds/spinner_small_trans.gif{{/asset}}" alt="{{_i}}Loading…{{/i}}"> </span> </div> <div class="member action-btn"><i class="icon icon-trash"></i></div> <div class="checked action-btn"><i class="icon icon-check icon-small"></i></div> <div class="nonmember action-btn"><i class="icon icon-plus icon-small"></i></div> </button> <div class="content "> <strong class="fullname txt-ellipsis inline-block">{{fullname}}</strong> <span class="username">@{{username}} {{#isProtected}}<i class="icon icon-protected icon-small"></i>{{/isProtected}}{{#isVerified}}<i title="{{_i}}Verified account{{/i}}" class="sprite sprite-verified-mini js-show-tip"></i>{{/isVerified}}</span> <p class="bio">{{description}}</p> </div> </li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="lst-group"> <div class="margin-a--16"> <p class="padding-b--8 color-twitter-dark-gray">{{_i}}These are the accounts in {{/i}}{{{name}}}{{_i}}. You can copy them to share.{{/i}}</p> <textarea class="height--415 js-copy-users-input" readonly>{{members}}</textarea> <div> <button class="js-dismiss-top-modal btn margin-t--10 pull-left btn-on-dark"> {{_i}}← Back{{/i}} </button> {{#showCopyButton}} <div class="pull-right"> <button class="js-copy-members Button--primary margin-t--10"> {{_i}}Copy List{{/i}} </button> </div> {{/showCopyButton}} </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="lst-group"> <div class="margin-a--16 color-twitter-dark-gray"> <p class="padding-b--8">{{_i}}Enter the @usernames of the people you would like to add to this List.{{/i}}</p> <p class="padding-b--16 txt-size-variable--12 pull-left width-p--90">{{_i}}You can add up to 100 members to a List at a time.{{/i}}</p> <i class="js-show-tip icon icon-info pull-right" data-title="{{_i}}You can add the @usernames one per line, or they can be separated by spaces, commas or tabs.{{/i}}"/> <textarea class="height--415 js-multiple-users-input placeholder-text" autofocus placeholder="{{placeholderText}}"></textarea> <div> <button class="js-dismiss-top-modal btn margin-t--10 pull-left btn-on-dark"> {{_i}}← Back{{/i}} </button> <div class="js-add-users-to-list-btn pull-right"> {{> lists/add_users_to_list_button}} </div> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<section id="{{columnkey}}" data-column="{{columnkey}}" class="flex flex-column height-p--100"> <header class="column-header column-header-temp flex-shrink--0"> <h1 class="pull-left padding-h--10"><strong>{{_i}}Members{{/i}}</strong> (<span class="js-member-count"></span>)</h1> <button class="js-action-header-export-button pull-right btn Button--tertiary btn-on-dark margin-t--10 is-hidden" data-action="exportList">{{_i}}Export List{{/i}}</button> </header> <div class="scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-alt column-content flex-auto"> <ul class="js-member-list"></ul> </div> </section>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-live-video-container live-video-container position-rel"></div> {{^isTemporaryColumn}} {{#hasMultipleTimelines}} <div class="live-video-timelines height--30 {{^decider.live_video_timelines}}is-hidden{{/decider.live_video_timelines}}"> <button class="Button Button--small js-live-video-timelines"> <span class="Button-label js-live-video-timelines-label">{{primaryTimeline.title}}</span> <span class="Button-adornment"> <span class="Icon Icon--caretDown"></span> </span> </button> <ul class="Dropdown js-live-video-timelines-list margin-t--0 margin-l--10" role="menu"> {{#timelines}} <li class="Dropdown-menuItem"> <label class="Dropdown-menuItemContent margin-v--5 margin-h--0" role="menuitemradio"> <input type="radio" name="timeline" value="{{timeline_id}}"> {{title}} </label> </li> {{/timelines}} </ul> </div> {{/hasMultipleTimelines}} {{/isTemporaryColumn}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="app-signin-wrap"> {{> login/promo_for_login_form}} <div class="js-signin-ui app-signin-form pin-top pin-right txt-weight-normal"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-login-error form-message form-error-message error txt-center padding-al margin-bxl {{^message}}is-hidden{{/message}}"> <p class="js-login-error-message">{{message}}</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="app-info txt-size-variable--18 margin-txxl"> <div class="app-info-panel cf"> <div class="app-info-text pull-left"> <h2 class="app-info-title" data-test-id="app-info-title">Tweet like a pro.</h2> <p>{{_i}}The most powerful Twitter tool for real-time tracking, organizing, and engagement. Reach your audiences and discover the best of Twitter.{{/i}}</p> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<section class="js-login-form form-login startflow-panel-rounded" data-auth-type="twitter" aria-labelledby="login-form-title"> <h2 class="form-legend padding-axl" id="login-form-title"> {{_i}}Log in with your Twitter account{{/i}} </h2> <div class="margin-a--16"> {{> login/login_form_message}} <a href="{{twitterLoginUrl}}" class="Button Button--primary block txt-size--18 txt-center"> Log in </a> </div> <div class="divider-bar margin-v--0 margin-h--16"></div> <div class="padding-axl"> {{_i}}New to Twitter?{{/i}} <a href="https://twitter.com/signup" class="startflow-link" rel="url" target="_blank">{{_i}}Sign up now{{/i}} &raquo;</a></p> </div> </section>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-media-gif-container media-item nbfc {{thumbSizeClass}}" style="background-image: url({{imageSrc}})"> {{#isGifActive}} <video class="js-media-gif media-item-gif full-width block {{#isPossiblySensitive}}is-invisible{{/isPossiblySensitive}}" {{#withAutoplay}}autoplay{{/withAutoplay}}  loop src="{{src}}"> <source video-src="{{src}}" type="{{contentType}}" src="{{src}}"> </video> <div class="gif-badge"><i class="sprite sprite-gif"></i></div> <a class="js-gif-pause is-actionable gif-pause" rel="pause"><i class="sprite sprite-gif-pause"></i></a> <a class="js-gif-play pin-all gif-play" rel="play">{{> media/video_overlay}}</a> {{/isGifActive}} {{^isGifActive}} <div class="media-item-gif full-width block" /> {{/isGifActive}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-mediatable ovl-block is-inverted-light" tabindex="-1"> <div class="s-padded"> <div class="js-modal-panel mdl s-full med-fullpanel"> <a href="#" class="mdl-dismiss js-dismiss mdl-dismiss-media mdl-btn-media" rel="dismiss"><i class="icon txt-size--24 icon-close"></i></a> <div class="js-embeditem med-embeditem"> <div class="l-table"> <div class="l-cell"> <div class="med-tray js-mediaembed"></div> </div> </div> <a href="#" class="js-media-gallery-prev link-no-focus mdl-btn-media mdl-media-prev is-hidden"> <i class="icon txt-size--26 icon-arrow-l"></i> </a> <a href="#" class="js-media-gallery-next link-no-focus mdl-btn-media mdl-media-next is-hidden"> <i class="icon txt-size--26 icon-arrow-r"></i> </a> </div> <div id="media-gallery-tray"></div> <div class="js-med-tweet med-tweet"></div> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<input class="js-media-upload" type="file" accept="{{acceptedMedia}}" multiple />'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="position-rel"> {{#useNativePlayer}} <video class="js-media-native-video" controlslist="nodownload" preload="auto" class="br--4" width="{{width}}" height="{{height}}" src="{{videoUrl}}" controls></video> {{/useNativePlayer}} {{^useNativePlayer}} <iframe src="https://twitter.com/i/videos/{{#isDM}}dm{{/isDM}}{{^isDM}}tweet{{/isDM}}/{{chirpId}}?image_src={{imageSrc}}&amp;media_id={{mediaId}}&amp;video_url={{videoUrl}}&amp;content_type={{contentType}}&amp;owner_id={{ownerId}}&amp;auto_buffer=1&amp;autoplay={{autoplay}}" class="js-media-native-video {{#isPossiblySensitive}}is-invisible{{/isPossiblySensitive}}" height="{{height}}" width="{{width}}" frameborder="0" scrolling="no" allowfullscreen style="margin: 0px; padding: 0px; border: 0px;"> </iframe> {{/useNativePlayer}} {{> status/media_sensitive}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-scheduled-video"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#taggedUsers.length}} <div class="margin-v--4 txt-mute txt-size-variable--12"> <i class="icon icon-user icon-xsmall icon-base-valigned "></i> {{#taggedUsers}} {{{userLink}}}{{^isBeforeLast}}{{^isLast}}, {{/isLast}}{{/isBeforeLast}} {{#hasTwoOrMoreUsers}} {{#isBeforeLast}} {{_i}}and{{/i}} {{/isBeforeLast}} {{/hasTwoOrMoreUsers}} {{/taggedUsers}} </div> {{/taggedUsers.length}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="video-overlay icon-with-bg-round"> <i class="icon icon-bg-dot icon-twitter-blue-color"></i> <i class="icon icon-play-video"></i> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<iframe class="vine-player" width="{{width}}" height="{{height}}" src="https://vine.co/v/{{id}}/card" frameborder="0"> </iframe>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<iframe class="youtube-player" type="text/html" width="{{width}}" height="{{height}}" src="https://www.youtube.com/embed/{{id}}?autoplay={{autoplay}}{{#startTime}}&start={{startTime}}{{/startTime}}" allowfullscreen frameborder="0"> </iframe>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-accordion-toggle-view accordion-header is-actionable link-clean block cf txt-size--14"> <div class="facet-title padding-l--36"> <i class="icon {{iconClass}} facet-type-icon"></i> <span class="txt-size--13">{{title}}</span> </div> <i class="icon icon-arrow-d pull-right txt-size--10"></i> <i class="icon icon-arrow-u pull-right txt-size--10"></i> <div class="{{jsClass}} facet-subtitle padding-t--3 padding-r--12 padding-l--36 nbfc"> {{summaryText}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul> {{#chirp}} {{#user}}{{^isProtected}} <li class="is-selectable"><a href="#" data-action="embed">{{_i}}Embed this Tweet{{/i}}</a></li> <li class="is-selectable"><a href="#" data-action="reference-to">{{_i}}Copy link to this Tweet{{/i}}</a></li> <li class="is-selectable"><a href="#" data-action="message-to">{{_i}}Share via Direct Message{{/i}}</a></li> <li class="is-selectable"><a href="#" data-action="email">{{_i}}Share via Email{{/i}}</a></li> <li class="drp-h-divider"></li> {{/isProtected}}{{/user}} {{/chirp}} {{#user}} <li class="is-selectable"><a href="#" data-action="mention" class="txt-ellipsis">{{_i}}Tweet to @{{screenName}}{{/i}}</a></li> {{> menus/follow_menuitem }} {{#showFavorite}} <li class="is-selectable"> <a href="#" data-action="favoriteOrUnfavorite"> {{_i}}Like from accounts…{{/i}} </a> </li> {{/showFavorite}} <li class="is-selectable"><a href="#" data-action="message">{{_i}}Send a Direct Message{{/i}}</a></li> <li class="is-selectable"><a href="#" data-action="lists">{{_i}}Add or remove from Lists…{{/i}}</a></li> {{#chirp}}{{#user}}{{^isProtected}} <li class="feature-customtimelines is-selectable"><a href="#" data-action="customtimelines">{{_i}}Add to Collection…{{/i}}</a></li> {{/isProtected}}{{/user}}{{/chirp}} {{#chirp}}{{#user}}{{^isProtected}} <li class="feature-bookmark is-selectable"><a href="#" data-action="bookmark" data-tweet-id="{{chirp.id}}" class="tweet-bookmark-menu-option">{{_i}}Bookmark tweet{{/i}}</a></li> {{/isProtected}}{{/user}}{{/chirp}} {{#chirp}}<li class="is-selectable"><a href="#" data-action="search-for-quoted">{{_i}}See who quoted this Tweet{{/i}}</a></li>{{/chirp}} {{/user}} {{#user}} {{^isMe}} <li class="drp-h-divider"></li> {{#chirp}} {{#hasMedia}} <li class="is-selectable"> <a class="js-flag-media-link {{#isFlagged}}is-hidden{{/isFlagged}}" href="#" data-action="flag-media">{{_i}}Flag media{{/i}}</a> <a class="js-flag-more-info-link {{^isFlagged}}is-hidden{{/isFlagged}}" href="https://support.twitter.com/articles/20069937" data-action target="_blank" rel="url">{{_i}}Flagged (learn more){{/i}}</a> </li> {{/hasMedia}} {{/chirp}} {{^isMuted}} <li class="is-selectable"><a href="#" data-action="mute" class="txt-ellipsis">{{_i}}Mute @{{screenName}}{{/i}}</a></li> {{/isMuted}} {{#isMuted}} <li class="is-selectable"><a href="#" data-action="unmute" class="txt-ellipsis">{{_i}}Unmute @{{screenName}}{{/i}}</a></li> {{/isMuted}} {{#chirp}} {{#isTweetDetailAction}} {{^isMutedConversation}} <li class="is-selectable"><a href="#" data-action="muteConversation" class="txt-ellipsis">{{_i}}Mute this conversation{{/i}}</a></li> {{/isMutedConversation}} {{#isMutedConversation}} <li class="is-selectable"><a href="#" data-action="unmuteConversation" class="txt-ellipsis">{{_i}}Unmute this conversation{{/i}}</a></li> {{/isMutedConversation}} {{/isTweetDetailAction}} {{/chirp}} <li class="is-selectable"><a href="#" data-action="block" class="txt-ellipsis">{{_i}}Block @{{screenName}}{{/i}}</a></li> {{#chirp}} <li class="is-selectable"><a href="#" data-action="report-tweet" class="txt-ellipsis">{{_i}}Report Tweet{{/i}}</a></li> {{/chirp}} {{^chirp}} <li class="is-selectable"><a href="#" class="txt-ellipsis" data-action="report-spam">{{_i}}Report @{{screenName}}{{/i}}</a></li> {{/chirp}} {{/isMe}} {{/user}} {{#chirp}} {{#isTranslatable}} <li class="drp-h-divider"></li> <li class="is-selectable"><a href="#" data-action="translate">{{_i}}Translate this Tweet{{/i}}</a></li> {{/isTranslatable}} {{#isRetweeted}} <li class="drp-h-divider"></li> <li class="is-selectable"><a href="#" data-action="undo-retweet">{{_i}}Undo Retweet{{/i}}</a></li> {{/isRetweeted}} {{#isOwnChirp}} {{^isRetweeted}} <li class="drp-h-divider"></li> <li class="is-selectable"><a href="#" data-action="destroy">{{_i}}Delete{{/i}}</a></li> {{/isRetweeted}} {{/isOwnChirp}} {{/chirp}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul> {{#user}} {{> menus/follow_menuitem }} <li class="is-selectable"><a href="#" data-action="lists">{{_i}}Add or remove from Lists…{{/i}}</a></li> {{^isMe}} <li class="drp-h-divider"></li> {{^isMuted}} <li class="is-selectable"><a href="#" data-action="mute">{{_i}}Mute @{{screenName}}{{/i}}</a></li> {{/isMuted}} {{#isMuted}} <li class="is-selectable"><a href="#" data-action="unmute">{{_i}}Unmute @{{screenName}}{{/i}}</a></li> {{/isMuted}} <li class="is-selectable"><a href="#" data-action="block">{{_i}}Block @{{screenName}}{{/i}}</a></li> <li class="is-selectable"><a href="#" data-action="report-tweet">{{_i}}Flag message{{/i}}</a></li> {{/isMe}} {{/user}} {{#chirp}} <li class="drp-h-divider"></li> <li class="is-selectable"><a href="#" data-action="destroy">{{_i}}Delete for you{{/i}}</a></li> {{/chirp}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-column-nav-list"> <ul class="js-int-scroller"> {{#columns}} <li class="js-column-nav-menu-item column-nav-item {{#isNew}}is-new{{/isNew}} {{#customTimelineId}}js-droptarget{{/customTimelineId}}" data-column="{{key}}" data-customtimeline-id="{{customTimelineId}}" data-customtimeline-account="{{customTimelineAccount}}" > <i class="icon icon-xsmall icon-dot column-nav-updates"></i> <a class="js-header-action js-drag-handle drag-handle link-clean cf padding-h--16 column-nav-link txt-size--14" data-action="jumpto" data-column="{{key}}"> <div class="obj-left"> <i class="icon {{iconclass}} icon-medium position-rel" data-action="drag"> {{#isMessageColumn}} <span class="js-unread-count msg-unread-count numbered-badge bg-color-twitter-blue numbered-badge-onnav anim anim-slower {{#unreadCount}}is-visible{{/unreadCount}}">{{unreadCount}}</span> {{/isMessageColumn}} </i> </div> <div class="js-column-title nbfc hide-condensed">{{{title}}}</div> </a> </li> {{/columns}} </ul> <a class="js-header-action js-header-add-column link-clean cf app-nav-link padding-h--16 margin-tm with-nav-border-t" data-action="add-column" data-title="{{_i}}Add column{{/i}}"> <div class="obj-left margin-l--2"> <i class="icon icon-plus icon-medium"></i> </div> <div class="nbfc padding-ts hide-condensed txt-size--14 app-nav-link-text">{{_i}}Add column{{/i}}</div> </a> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul class="dropdown-text-large"> {{#isEmbeddable}} <li class="is-selectable"> <a href="#" data-action="embed"> <i class="icon icon-dropdown-context icon-share margin-rs"></i> {{_i}} {{>text/open_strong}}Embed{{>text/close_strong}} {{#isCustomTimeline}} Collection {{/isCustomTimeline}} {{^isCustomTimeline}} timeline {{/isCustomTimeline}} {{/i}} </a> </li> {{/isEmbeddable}} {{#isSearchColumn}} <li class="is-selectable"> <a href="#" data-action="copy-search-query"> <i class="icon icon-dropdown-context icon-share margin-rs"></i> {{_i}}{{>text/open_strong}}Copy{{>text/close_strong}} search query{{/i}} </a> </li> {{/isSearchColumn}} {{#isViewable}} <li class="is-selectable"> <a href="#" data-action="view-on-web"> <i class="icon icon-dropdown-context icon-twitter-bird margin-rs"></i> {{_i}}{{>text/open_strong}}View{{>text/close_strong}} on twitter.com{{/i}} </a> </li> {{/isViewable}} {{^isSearchColumn}} {{#isShareable}} <li class="is-selectable"> <a href="#" data-action="reference-to"> <i class="icon icon-dropdown-context icon-compose margin-rs"></i> {{_i}} {{>text/open_strong}}Tweet{{>text/close_strong}} about this {{#isCustomTimeline}} Collection {{/isCustomTimeline}} {{^isCustomTimeline}} timeline {{/isCustomTimeline}} {{/i}} </a> </li> {{/isShareable}} {{/isSearchColumn}} {{#canCreateMoment}} <li class="is-selectable"> <a href="#" data-action="moment"> <i class="icon icon-dropdown-context icon-lightning margin-rs"></i> {{_i}} {{>text/open_strong}}Create Moment{{>text/close_strong}} {{/i}} </a> </li> {{/canCreateMoment}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div> <button type="button" class="btn Button--tertiary js-clear-date">Clear</button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="search-input-control"> <input type="text" class="js-datetime-input txt-left width-p--100" placeholder="{{placeHolderText}}" readonly /> <a href="#" class="js-select-date search-input-perform-search" tabindex="-1"> <i class="icon icon-calendar icon-small"></i> </a> <a href="#" class="js-clear-date search-input-clear-search" tabindex="-1"> <i class="icon icon-close icon-small"></i> </a> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul> <li class="is-selectable"><a href="#" data-action="view-people">{{_i}}Add / view people{{/i}}</a></li> {{#group}} <li class="is-selectable"><a href="#" data-action="rename-conversation">{{_i}}Edit group name{{/i}}</a></li> {{/group}} {{#loginAccount}} <li class="is-selectable"><a href="#" data-action="notify-conversation"> {{^notificationsDisabled}}{{_i}}Turn off notifications{{/i}}{{/notificationsDisabled}} {{#notificationsDisabled}}{{_i}}Turn on notifications{{/i}}{{/notificationsDisabled}} </a></li> {{/loginAccount}} <li class="is-selectable"><a href="#" data-action="leave-conversation">{{#group}}{{_i}}Leave conversation{{/i}}{{/group}}{{^group}}{{_i}}Delete conversation{{/i}}{{/group}}</a></li> <li class="is-selectable"><a href="#" data-action="flag-conversation">{{_i}}Flag conversation{{/i}}</a></li> </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-dropdown dropdown-menu br--6 padding-v--9 {{position}}"> <div class="caret"> <span class="caret-outer"></span> <span class="caret-inner"></span> </div> <div class="js-dropdown-content"> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="txt-size--11 padding-b--10 flex flex-row"> <div class="flex-shrink--0 margin-r--6"> <i class="icon icon-info icon-small"/> </div> <div> {{_i}} Your notification settings on <a rel="url noopener noreferrer" target="_blank" href="https://twitter.com/settings/notifications_timeline">Twitter.com</a> may be affecting the mentions you see here {{/i}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = ""
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#isSingleAccount}} {{^isMe}} {{#following}} <li class="is-selectable"><a href="#" data-action="unfollow" class="txt-ellipsis">{{_i}}Unfollow @{{screenName}}{{/i}}</a></li> {{/following}} {{^following}} <li class="is-selectable"><a href="#" data-action="follow" class="txt-ellipsis">{{_i}}Follow @{{screenName}}{{/i}}</a></li> {{/following}} {{/isMe}} {{/isSingleAccount}} {{^isSingleAccount}} <li class="is-selectable"><a href="#" data-action="followOrUnfollow">{{_i}}Follow from accounts…{{/i}}</a></li> {{/isSingleAccount}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#filters.length}} <div class="txt-size--13 padding-b--5"> <div class="txt-bold padding-b--3">{{_i}}Hiding notifications from users:{{/i}}</div> <ul> {{#filters}} <li class="padding-b--3"> <i class="icon icon-check notifications-info-icon"/> {{text}} </li> {{/filters}} </ul> </div> <div class="txt-size--11 padding-b--12"> {{_i}}These filters will not affect notifications from people you follow.{{/i}} <a rel="url noopener noreferrer" target="_blank" href="https://twitter.com/settings/notifications_timeline"> {{_i}}Update your preferences on Twitter.com{{/i}} </a> </div> {{/filters.length}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="txt-size--11 padding-b--10 flex flex-row"> <div class="flex-shrink--0 margin-r--6"> <i class="icon icon-info icon-small"/> </div> <div> <div class="txt-size--13">Quality filter {{qualityFilterText}}</div> {{_i}}Improves the quality of Tweets you\'ll see.{{/i}} <a rel="url noopener noreferrer" target="_blank" href="https://twitter.com/settings/notifications_timeline"> {{_i}}Update your preferences on Twitter.com{{/i}} </a> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#action}} <div class="js-accordion-item facet-type facet-type-action {{#isExpanded}}is-expanded is-active{{/isExpanded}}"> {{>menus/accordion_header}} <div class="js-action-filter js-accordion-panel accordion-panel"> </div> </div> {{/action}} {{#content}} <div class="js-accordion-item facet-type facet-type-content {{#isExpanded}}is-expanded is-active{{/isExpanded}}"> {{>menus/accordion_header}} <div class="js-content-filter js-accordion-panel accordion-panel"> </div> </div> {{/content}} {{#location}} <div class="js-accordion-item facet-type facet-type-location {{#isExpanded}}is-expanded is-active{{/isExpanded}}"> {{>menus/accordion_header}} <div class="js-accordion-panel accordion-panel m-b--10"> <div class="js-location-filter"></div> </div> </div> {{/location}} {{#user}} <div class="js-accordion-item facet-type facet-type-user {{#isExpanded}}is-expanded is-active{{/isExpanded}}"> {{>menus/accordion_header}} <div class="js-user-filter js-accordion-panel accordion-panel"> </div> </div> {{/user}} {{#engagement}} <div class="js-accordion-item facet-type facet-type-engagement {{#isExpanded}}is-expanded is-active{{/isExpanded}}"> {{>menus/accordion_header}} <div class="js-engagement-filter js-accordion-panel accordion-panel"> </div> </div> {{/engagement}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-l--10 control-s"> <div class="control-group"> {{#available.showMentions}} <div class="controls margin-l--0 {{^available.showMentions}}is-hidden{{/available.showMentions}}"> <label class="txt-mute"> <input class="js-show-mentions" type="checkbox" value="mentions" {{#checked.showMentions}}checked="checked"{{/checked.showMentions}} /> <i class="icon icon-small-valigned icon-mention icon-mention-color"></i> {{_i}}Mentions{{/i}} </label> </div> {{/available.showMentions}} {{#available.showQuoted}} <div class="controls margin-l--0"> <label class="txt-mute"> <input class="js-show-quoted" type="checkbox" value="quoted" {{#checked.showQuoted}}checked="checked"{{/checked.showQuoted}} /> <i class="icon icon-small-valigned icon-content color-twitter-darker-gray"></i> {{_i}}Quoted Tweets{{/i}} </label> </div> {{/available.showQuoted}} {{#available.showRetweets}} <div class="controls margin-l--0"> <label class="txt-mute"> <input class="js-show-retweets" type="checkbox" value="retweets" {{#checked.showRetweets}}checked="checked"{{/checked.showRetweets}} /> <i class="icon icon-small-valigned icon-retweet-filled icon-retweet-color"></i> {{_i}}Retweets{{/i}} </label> </div> {{/available.showRetweets}} {{#available.showFavorites}} <div class="controls margin-l--0"> <label class="txt-mute"> <input class="js-show-favorites" type="checkbox" value="favorites" {{#checked.showFavorites}}checked="checked"{{/checked.showFavorites}} /> <i class="icon icon-small-valigned icon-heart-filled icon-favorite-color"></i> {{_i}}Likes{{/i}} </label> </div> {{/available.showFavorites}} {{#available.showFollowers}} <div class="controls margin-l--0"> <label class="txt-mute"> <input class="js-show-followers" type="checkbox" value="followers" {{#checked.showFollowers}}checked="checked"{{/checked.showFollowers}} /> <i class="icon icon-small-valigned icon-user-filled icon-follow-color"></i> {{_i}}Followers{{/i}} </label> </div> {{/available.showFollowers}} {{#available.showLists}} <div class="controls margin-l--0"> <label class="txt-mute"> <input class="js-show-lists" type="checkbox" value="lists" {{#checked.showLists}}checked="checked"{{/checked.showLists}} /> <i class="icon icon-small-valigned icon-list icon-list-color"></i> {{_i}}Lists{{/i}} </label> </div> {{/available.showLists}} {{#available.showActionsOnRetweets}} <div class="controls margin-l--0 padding-t--3"> <label class="txt-mute"> <input class="js-show-actions-on-retweets margin-r--1" type="checkbox" value="actionsOnRTs" {{#checked.showActionsOnRetweets}}checked="checked"{{/checked.showActionsOnRetweets}} /> <i class="icon icon-small-valigned icon-retweet-filled icon-retweet-color"></i> {{_i}}Actions on my Retweets{{/i}} </label> </div> {{/available.showActionsOnRetweets}} {{#available.showInteractionsOnMentioned}} <div class="controls margin-l--0 padding-t--3"> <label class="txt-mute"> <input class="js-show-interactions-on-mentioned margin-r--1" type="checkbox" value="actionsOnMentioned" {{#checked.showInteractionsOnMentioned}}checked="checked"{{/checked.showInteractionsOnMentioned}} /> <i class="icon icon-small-valigned icon-mention icon-mention-color"></i> {{_i}}Actions on Tweets I\'m mentioned in{{/i}} </label> </div> {{/available.showInteractionsOnMentioned}} {{#available.showInteractionsOnTagged}} <div class="controls margin-l--0 padding-t--3"> <label class="txt-mute"> <input class="js-show-interactions-on-tagged margin-r--1" type="checkbox" value="actionsOnTagged" {{#checked.showInteractionsOnTagged}}checked="checked"{{/checked.showInteractionsOnTagged}} /> <i class="icon icon-small-valigned icon-image icon-image-color"></i> {{_i}}Actions on Tweets I\'m tagged in{{/i}} </label> </div> {{/available.showInteractionsOnTagged}} </div> <div class="js-action-filter-error txt-center srt-error-msg margin-bm {{^showError}}is-hidden{{/showError}}"> {{_i}}Please select at least one interaction type{{/i}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-hl control-s"> <div class="control-group"> <label class="control-label txt-mute">{{_i}}Showing{{/i}}</label> <div class="controls"> <select class="js-containing" data-title="type"> {{#containingOptions}} {{^hidden}} <option value="{{value}}">{{title}}</option> {{/hidden}} {{/containingOptions}} </select> </div> </div> {{#withMatching}} <div class="control-group"> <label class="control-label txt-mute">{{_i}}Matching{{/i}}</label> {{>search_input}} </div> {{/withMatching}} {{#withExcluding}} <div class="control-group"> <label class="control-label txt-mute">{{_i}}Excluding{{/i}}</label> {{>search_input}} </div> {{/withExcluding}} {{#withDateTime}} <div class="js-datetime-filter" /> {{/withDateTime}} {{#withLanguage}} <div class="control-group"> <label class="control-label txt-mute">{{_i}}Written in{{/i}}</label> <div class="controls"> <select class="js-written-in" data-title="lang"> <option value="any" >{{_i}}any language{{/i}}</option> <option value="0" disabled="disabled">---</option> {{#userLanguage}} <option value="{{code}}">{{name}}</option> <option value="0" disabled="disabled">---</option> {{/userLanguage}} {{#allLanguages}} <option value="{{code}}">{{localized_name}} ({{name}})</option> {{/allLanguages}} </select> </div> </div> {{/withLanguage}} {{#withRetweetsToggle}} <div class="control-group"> <label class="control-label txt-mute">{{_i}}Retweets{{/i}}</label> <div class="controls"> <select class="js-retweets" data-title="includeRTs"> {{#retweetOptions}} <option value="{{value}}">{{title}}</option> {{/retweetOptions}} </select> </div> </div> {{/withRetweetsToggle}} <div class="js-quality-filter-info txt-mute-text-only"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="control-group"> <label class="control-label txt-mute">{{_i}}From{{/i}}</label> <div class="controls"> <div class="js-from-datepicker-holder search-input-control" /> </div> </div> <div class="control-group"> <label class="control-label txt-mute">{{_i}}To{{/i}}</label> <div class="controls"> <div class="js-to-datepicker-holder search-input-control" /> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-hl control-m"> <div class="control-group"> <label> <div class="control-label">{{_i}}At least{{/i}}</div> <div class="controls"> <input type="text" data-title="retweets" class="js-min-retweets frm-input-3-digit" value="{{minRetweets}}" inputmode="numeric" /> <i class="icon icon-small-valigned icon-retweet padding-h--2"></i> {{_i}}Retweets{{/i}} </div> </label> <label> <div class="control-label">{{_i}}at least{{/i}}</div> <div class="controls"> <input type="text" data-title="favorites" class="js-min-favorites frm-input-3-digit" value="{{minFavorites}}" inputmode="numeric" /> <i class="icon icon-small-valigned icon-favorite padding-h--2"></i> {{_i}}likes{{/i}} </div> </label> <label> <div class="control-label">{{_i}}and at least{{/i}}</div> <div class="controls"> <input type="text" data-title="replies" class="js-min-replies frm-input-3-digit" value="{{minReplies}}" inputmode="numeric" /> <i class="icon icon-small-valigned icon-reply padding-h--2"></i> {{_i}}replies{{/i}} </div> </label> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-hl control-s"> <div class="control-group"> <label class="control-label txt-mute">{{_i}}By{{/i}}</label> <div class="controls"> <select class="js-tweets-from" data-title="tweets_from"> {{#tweetsFromOptions}} <option value="{{value}}">{{title}}</option> {{/tweetsFromOptions}} </select> </div> <div class="controls"> {{#tweetsFromUser}} {{>search_input}} {{/tweetsFromUser}} {{#tweetsFromList}} {{>search_input}} {{/tweetsFromList}} <select class="js-tweets-from-me margin-txs" data-title="from_me"> {{#myAccounts}} <option value="{{value}}" {{#isDefault}}selected="selected"{{/isDefault}}>{{title}}</option> {{/myAccounts}} </select> </div> </div> <div class="control-group"> <label class="control-label txt-mute">{{_i}}Mentioning{{/i}}</label> <div class="controls"> <select class="js-mentioning" data-title="mentioning"> {{#mentioningOptions}} <option value="{{value}}">{{title}}</option> {{/mentioningOptions}} </select> </div> <div class="controls"> {{#mentioningUser}} {{>search_input}} {{/mentioningUser}} <select class="js-mentioning-me margin-txs" data-title="mentioning_me"> {{#myAccounts}} <option value="{{value}}" {{#isDefault}}selected="selected"{{/isDefault}}>{{title}}</option> {{/myAccounts}} </select> </div> </div> <div class="js-notification-filter-info txt-mute-text-only"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul> <li><b class="non-selectable-item txt-ellipsis"> @{{account}} </b></li> <li class="drp-h-divider"></li> {{#showReleaseNotesLink}} <li class="is-selectable"> <a href="https://github.com/dimdenGD/OldTweetDeck/releases" rel="url noopener noreferrer" class="release-notes-item" target="_blank">{{_i}}Release page{{/i}}</a> </li> {{/showReleaseNotesLink}} {{^isTouchDevice}} <li class="is-selectable"> <a href="#" data-action="keyboardShortcutList">{{_i}}Keyboard shortcuts{{/i}}</a> </li> {{/isTouchDevice}} <li class="is-selectable"> <a href="#" data-action="searchOperatorList">{{_i}}Search tips{{/i}}</a> </li> <li class="is-selectable"> <a href="#" data-action="globalSettings">{{_i}}Settings{{/i}}</a> </li> {{#showUpdateAvailable}} <li class="drp-h-divider"></li> <li class="is-selectable margin-v---6"> <a href="#" data-action="updateAvailable" class="update-available-item padding-v--10"> {{_i}}Update TweetDeck{{/i}} </a> </li> {{/showUpdateAvailable}} {{#showDisableDogfood}} <li class="drp-h-divider"></li> <li class="is-selectable margin-v---6"> <a href="#" data-action="disableDogfood" class="update-available-item padding-v--10"> {{_i}}Disable dev/dogfood features{{/i}} </a> </li> {{/showDisableDogfood}} <li class="drp-h-divider"></li> <li class="is-selectable"> <a href="#" data-action="signOut">{{_i}}Log out{{/i}}</a> </li> </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-dropdown-container scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-alt column-scroller column-background-fill margin-bs height-p--100 br--6"> {{#users}} {{<stream_item}} {{$content}} {{> account_summary }} {{/content}} {{/stream_item}} {{/users}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-modal-panel mdl s-tall-fixed {{$modal_class}}{{/modal_class}} {{#loading}}is-loading{{/loading}}"> {{#loading}} <img src="{{#asset}}/global/backgrounds/spinner_large_white.gif{{/asset}}" alt="{{_i}}Loading…{{/i}}" /> {{/loading}} {{^loading}} {{> modal_header}} <div class="mdl-inner"> <div class="mdl-content js-mdl-content {{^no_horiz_flow_container}}horizontal-flow-container{{/no_horiz_flow_container}}"> {{$content}}default content{{/content}} </div> <footer class="mdl-buttonbar"> {{$footer_content}}{{/footer_content}} </footer> </div> {{/loading}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-modal-context {{#withClickTrap}}js-click-trap{{/withClickTrap}} {{#withNonDismissible}}js-non-dismissible{{/withNonDismissible}} overlay overlay-super scroll-v"> <div class="js-modal-inner mdl margin-v--20 s-fluid"> {{#withHeader}} {{> modal/modal_context_header}} {{/withHeader}} {{#withDismissButton}} <a href="#" class="js-dismiss mdl-dismiss link-normal-dark"><i class="icon icon-close txt-size--18"></i></a> {{/withDismissButton}} <div class="js-modal-content modal-content {{#withBorder}}modal-content-with-border{{/withBorder}} position-rel"></div> {{#withFooter}} {{> modal/modal_context_footer}} {{/withFooter}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<footer class="padding-axl no-collapse {{#withCenteredFooter}}txt-center{{/withCenteredFooter}}"> {{#withDoneButton}} <button class="js-dismiss Button--primary"> <i class="icon icon-check icon-small padding-rs"></i> <span class="label">{{_i}}Done{{/i}}</span> </button> {{/withDoneButton}} </footer>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<header class="js-drag-handle padding-a--12 no-collapse mdl-header is-movable {{#withHeaderDivider}}mdl-header-divider{{/withHeaderDivider}}"> {{#title}} <h3 class="mdl-header-title">{{{title}}}</h3> {{/title}} </header>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<header class="js-drag-handle padding-a--12 no-collapse mdl-header is-movable mdl-header-divider"> <h3 class="mdl-header-title js-header-title">{{{title}}}</h3> <a href="#" class="mdl-dismiss js-dismiss link-normal-dark"><i class="{{$close_class}}icon icon-close{{/close_class}}"></i></a> </header>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<button class="Button--primary margin-al"> <i class="icon icon-plus icon-small-valigned"></i> <span class="label padding-ls">{{{buttonText}}}</span> </button>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="ticker-outer"> <span class="js-ticker-inner ticker-inner"> {{#values}}<span class="js-ticker-value">{{value}}</span><br>{{/values}} </span> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<button class="js-back btn btn-on-dark btn-back">&larr; {{_i}}Back{{/i}}</button> <span class="pull-right"> <button class="js-add-column Button--primary"><i class="add"></i>{{_i}}Add column{{/i}}</button> </span>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul class="lst-launcher cf"> {{#options}} <li class="js-item-launch {{class}}{{#isDisabled}} is-disabled{{/isDisabled}}{{#isHidden}} is-hidden{{/isHidden}}" data-type="{{type}}"> <a href="#" class="btn{{#isDisabled}} js-show-tip is-disabled{{/isDisabled}}"{{#isDisabled}}title="{{_i}}You have already added this column{{/i}}"{{/isDisabled}}> <i class="block column-type-icon icon color-twitter-blue {{columnIconClass}}"></i> <span class="txt-size--14 with-linebreaks txt-weight--500">{{title}}</span> {{#newColumnType}} <div class="margin-t--4"> <span class="bg-color-twitter-yellow color-twitter-white txt-size--9 txt-uppercase letter-spacing--1 padding-v--3 padding-h--7 br--14">{{_i}}New{{/i}}</span> </div> {{/newColumnType}} {{#premiumColumnType}} <div class="margin-t--4"> <span class="bg-color-twitter-deep-blue color-twitter-white txt-size--9 txt-uppercase letter-spacing--1 padding-v--3 padding-h--7 br--14">{{_i}}Beta{{/i}}</span> </div> {{/premiumColumnType}} {{#attribution}} <span class="txt-size--11 color-twitter-gray attribution block">{{attribution}}</span> {{/attribution}} </a> </li> {{/options}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#isFilterable}} <input type="search" class="js-search-filter width-p--85 margin-b--8 margin-h--8 padding-v--0 padding-h--8" placeholder="{{_i}}Search{{/i}}" /> {{/isFilterable}} <p class="js-no-match padding-v--11 padding-h--12 txt-mute is-hidden">{{_i}}No{{/i}} {{itemType}} {{_i}}match that name{{/i}}</p> {{#title}}<h3 class="js-title {{#isHidden}}is-hidden{{/isHidden}}">{{title}}</h3>{{/title}} <ul class="js-list-container {{className}}"></ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="lst-group"> {{#groups}} {{>open_column_list_group}} {{/groups}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="lst-group"> {{>open_column_list_group}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-modal-panel mdl s-tall-fixed "> {{> modal_header}} <div class="mdl-inner"> <div class="mdl-content js-mdl-content"> </div> <footer class="mdl-buttonbar"> </footer> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="l-table"> <div class="l-cell mdl-placeholder txt-size--16"> <p>{{helpText}}</p> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="l-column mdl-column mdl-column-med"> <div class="js-left-pinned pin-top-full-width {{#hasAddMultipleUsersButton}}width-p--85{{/hasAddMultipleUsersButton}}"></div> {{#hasAddMultipleUsersButton}} <button class="js-add-multiple js-show-tip add-multiple btn Button--tertiary btn-round btn-on-dark" data-title="Add multiple users"><i class="icon icon-small icon-user-team-mgr"></i></button> {{/hasAddMultipleUsersButton}} <div class="l-column-scrollv scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-alt js-left-column"></div> <div class="js-left-pinned-bottom pin-bottom-full-width"></div> </div> <div class="l-column mdl-column mdl-column-med mdl-column-rhs"> <div class="js-right-column scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-alt l-fullheight"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="overlay is-hidden"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-tooltip margin-b--5 padding-h--5"> {{#title}}<b class="txt-size--14 block padding-v--10 conversation-tooltip-title">{{{title}}}</b>{{/title}} {{#participants}} <p class="txt-left txt-ellipsis padding-v--3"> <b class="txt-size--14">{{{emojifiedName}}}</b> <span class="txt-size--13">@{{screenName}}</span> </p> {{/participants}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-popover popover br-1 bs-1 is-hidden"> <div class="caret"> <span class="caret-outer"></span> <span class="caret-inner"></span> </div> <div class="js-popover-content scroll-none"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="media-item profile-bg-strip" style="background-image: url({{profileBannerURL}})"></div> <div class="profile-full padding-hxl padding-bl"> <div class="profile-full-header cf pin-top"> <a class="prf-img profile-full-avatar obj-left link-clean" href="{{getProfileURL}}" target="_blank" data-user-name="{{screenName}}" rel="user"> <img src="{{biggerProfileImageURL}}" class="avatar size48 avatar-border--2"> </a> <div class="nbfc"> <div class="profile-follow-button"> {{>follow_button}} </div> </div> </div> <div class="{{#isBadged}}fullname-badged-container{{/isBadged}}"> <a href="{{getProfileURL}}" class="account-link link-complex" target="_blank" data-user-name="{{screenName}}" rel="user"> <b class="fullname txt-ellipsis inline-block link-complex-target {{#isBadged}}fullname-badged{{/isBadged}} {{#isTranslator}}badge-translator{{/isTranslator}} {{#isVerified}}badge-verified{{/isVerified}} position-rel txt-size-variable--18"> {{name}} </b></a> </div> <div class=" color-twitter-darker-gray"> <a href="{{getProfileURL}}" class="account-link link-complex" target="_blank" data-user-name="{{screenName}}" rel="user"> <span class="username txt-mute">@{{screenName}} {{#isProtected}}<i class="icon icon-protected icon-match-context icon-tt"></i>{{/isProtected}}</span> </a> </div> <p class="profile-bio padding-tm padding-bs">{{{bio}}}</p> <div class="padding-vm"> <a href="{{getFriendURL}}" rel="url" target="_blank" class="link-hover-override txt-uppercase txt-size-variable--12 txt-mute inline-block margin-rm" data-scribe-element="show_following">{{_i}}Following{{/i}}&nbsp;<b class="link-hover-target profile-full-bio-count">{{prettyFriendsCount}}</b></a> <a href="{{getFollowerURL}}" rel="url" target="_blank" class="link-hover-override txt-uppercase txt-size-variable--12 txt-mute inline-block" data-scribe-element="show_followers">{{_i}}Followers{{/i}}&nbsp;<b class="link-hover-target profile-full-bio-count">{{prettyFollowersCount}}</b></a> </div> {{#location}}<p class="profile-location txt-ellipsis padding-ts"><i class="profile-icon icon icon-small-valigned icon-geo icon-tt"></i>&nbsp;{{location}}</p>{{/location}} {{#getDisplayURL}}<p class="profile-url txt-ellipsis padding-ts"><i class="profile-icon icon icon-small-valigned icon-link icon-tt"></i>&nbsp;<a href="{{url}}" class="prf-siteurl js-action-url" target="_blank" data-scribe-element="website">{{getDisplayURL}}</a></p> <p class="js-show-tip profile-joined-date padding-ts inline-block" data-original-title="{{prettyTimeDateJoinedDate}}"><i class="profile-icon icon icon-small-valigned icon-schedule icon-tt" ></i>&nbsp;{{_i}}Joined{{/i}}&nbsp;{{prettyJoinedDate}}</p>{{/getDisplayURL}} <p class="profile-media padding-ts"><i class="profile-icon icon icon-small-valigned icon-camera icon-tt"></i>&nbsp;<a href="{{getMediaURL}}" rel="search" data-search-term="{{getMediaSearchQuery}}" data-scribe-element="user_media">{{_i}}Photos &amp; videos{{/i}}</a></p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="prf-bio"> <p class="bio">{{{bio}}}</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="prf-meta cf"> <div class="prf-follow-state padding-al"> {{> follow_button}} </div> {{#profile}} <ul class="prf-stats"> <li> <a href="https://twitter.com/{{screenName}}" data-action="open" data-type="tweets" class="js-action-url" target="_blank"> {{_i}}Tweets{{/i}} <strong>{{prettyStatusesCount}}</strong> </a> </li> <li> <a href="{{getFriendURL}}" class="js-action-url" target="_blank"> {{_i}}Following{{/i}} <strong>{{prettyFriendsCount}}</strong> </a> </li> <li> <a href="{{getFollowerURL}}" class="js-action-url" target="_blank"> {{_i}}Followers{{/i}} <strong>{{prettyFollowersCount}}</strong> </a> </li> <li> <a href="{{getListedURL}}" class="js-action-url" target="_blank"> {{_i}}Listed{{/i}} <strong>{{prettyListedCount}}</strong> </a> </li> </ul> {{/profile}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<iframe class="report-flow" src="{{url}}"></iframe>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{^isFinished}} {{^isGroupConversation}} <p class="txt-size--16 padding-axl mdl-header-divider">{{_i}}Are you sure? The {{reportSource}} will be deleted from your inbox, and @{{screenName}} cannot message you until you message them first.{{/i}}</p> {{/isGroupConversation}} {{#isGroupConversation}} <p class="txt-size--16 padding-axl mdl-header-divider">{{_i}}Are you sure? The {{reportSource}} will be deleted from your inbox and you cannot be added to this group again.{{/i}}</p> {{/isGroupConversation}} <ul class="txt-size--14 txt-bold"> <li class="js-report-spam height--60 flex flex-align--center padding-axl mdl-header-divider border-box hover-bg-color-twitter-lightest-gray">{{_i}}Yes, it\'s spam{{/i}}</li> <li class="js-mark-abusive height--60 flex flex-align--center padding-axl mdl-header-divider border-box hover-bg-color-twitter-lightest-gray">{{_i}}Yes, it\'s abusive{{/i}}</li> </ul> {{>learn_more_about_reporting}} {{/isFinished}} {{#isFinished}} <p class="txt-size--16 padding-axl mdl-header-divider">{{_i}}The report has been sent and the {{reportSource}} has been deleted.{{/i}}</p> {{>learn_more_about_reporting}} {{/isFinished}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<fieldset> <legend>{{_i}}Report Tweet options{{/i}}</legend> <div class="padding-hl padding-tl"> <label class="radio margin-bl"> <input checked type="radio" name="report-options" value="spam" class="js-report-option"> <b class="txt-size--14">{{_i}}Spam{{/i}}</b> <p>{{_i}}This Tweet may be spam or from a spam account{{/i}}</p> </label> <label class="radio margin-bl"> <input type="radio" name="report-options" value="compromised" class="js-report-option"> <b class="txt-size--14">{{_i}}Compromised{{/i}}</b> <p>{{_i}}This user may not be in control of their account{{/i}}</p> </label> <label class="radio margin-bl"> <input type="radio" name="report-options" value="abusive" class="js-report-option"> <b class="txt-size--14">{{_i}}Abusive{{/i}}</b> <p>{{_i}}This Tweet may be in violation of the <a href="https://support.twitter.com/articles/18311-the-twitter-rules" target="_blank">Twitter Rules</a>. In order to file a report, you must still choose and complete a form. Select this option to continue.{{/i}}</p> </label> </div> <div class="divider-bar"></div> <div class="padding-hl"> <label class="checkbox"> <input type="checkbox" name="report-block" value="block" class="js-report-block"> <b class="txt-size--14">{{_i}}Block and unfollow{{/i}} @{{screenName}}</b> <p>Blocking will hide @{{screenName}} Tweets. Learn more about what <a href="https://support.twitter.com/articles/117063-blocking-people-on-twitter" target="_blank">blocking</a> means.</p> </label> </div> </fieldset> <div class="padding-vl padding-l--27"> <button class="js-report-submit Button--primary" disabled></i>{{_i}}Submit{{/i}}</button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<p>{{_i}}Please choose the topic that best defines your issue. Once you complete and the submit the form your report will be filed with Twitter.{{/i}}</p> <ul class="margin-txl margin-lxl"> <li class="margin-bm"> <a href="https://support.twitter.com/forms/impersonation?reported_username={{screenName}}&amp;reported_tweet_id={{tweetId}}" target="_blank" data-scribe="impersonation" class="abuse-link">Impersonation</a> </li> <li class="margin-bm"> <a href="https://support.twitter.com/forms/trademark?reported_username={{screenName}}&amp;reported_tweet_id={{tweetId}}" target="_blank" data-scribe="trademarks" class="abuse-link">Trademarks</a> </li> <li class="margin-bm"> <a href="https://support.twitter.com/forms/abusiveuser?reported_username={{screenName}}&amp;reported_tweet_id={{tweetId}}" target="_blank" data-scribe="harassment" class="abuse-link">Harassment</a> </li> <li class="margin-bm"> <a href="https://support.twitter.com/forms/general?subtopic=self_harm&amp;reported_username={{screenName}}&amp;reported_tweet_id={{tweetId}}" target="_blank" data-scribe="report_self_harm" class="abuse-link">Report self harm</a> </li> <li class="margin-bm"> <a href="https://support.twitter.com/forms/ad?reported_username={{screenName}}&amp;reported_tweet_id={{tweetId}}" target="_blank" data-scribe="report_an_ad" class="abuse-link">Report an ad</a> </li> </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="{{#showHint}}anim anim-fade-in{{/showHint}}{{^showHint}} is-hidden{{/showHint}}"> {{#showHint}}{{_i}}Your scheduled Tweet will send even if TweetDeck is not running at the time.{{/i}}{{/showHint}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '\x3c!-- app search --\x3e <form class="js-search-form app-search app-search-in-popover margin-a--10"> <label class="is-vishidden">{{_i}}Search{{/i}}</label> {{>search_input}} </form> \x3c!-- typeahead --\x3e {{>typeahead/typeahead_dropdown}} \x3c!-- search results --\x3e {{>search/search_results}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-search-results-container search-results-container is-hidden height-vh--100"> <div class="js-user-results user-results"></div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-search-input-control search-input-control {{searchInputControlClass}} {{#isControl}}controls{{/isControl}}"> <input type="text" class="{{searchInputClassName}} search-input" data-title="{{searchInputTitle}}" placeholder="{{searchInputPlaceholder}}" value="{{searchInputValue}}"> <a href="#" class="js-perform-search txt-size--14 search-input-perform-search" tabindex="-1"> <i class="icon icon-search txt-size--16"></i> </a> <a href="#" class="js-clear-search txt-size--14 search-input-clear-search" tabindex="-1"> <i class="icon icon-close icon-small"></i> </a> <span class="js-spinner txt-size--14 spinner-small spinner-small-trans search-input-spinner"></span> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="list-placeholder l-table pin-all"> <div class="l-cell"> {{#isDropTarget}} <p class="txt-size--16"><i class="icon icon-move icon-tb"></i> <span>{{_i}}Drag Tweets into this Collection{{/i}}</span></p> {{/isDropTarget}} {{^isDropTarget}} <p class="txt-size--16">{{_i}}No recent Tweets.{{/i}}<br />{{_i}}New Tweets will appear here.{{/i}}</p> {{/isDropTarget}} </div> {{#withAddByUrl}} <p class="pin-bottom-full-width txt-center">{{_i}}Or add by URL{{/i}}</p> {{/withAddByUrl}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="list-placeholder"> <p>{{_i}}No users found.{{/i}}</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-v--20"> <table class="search-operator-list l-table"> <thead> <tr> <th class="{{tblLeftItemClass}}">{{_i}}Operator{{/i}}</th> <th class="{{tblRightItemClass}}">{{_i}}Find Tweets...{{/i}}</th> </tr> </thead> <tbody> {{#searchOperators}} {{>search_operator_list_item_group}} {{/searchOperators}} </tbody> </table> <div> {{#advancedSearches}} <div> <h4 class="{{sectionHeaderClass}}">{{sectionTitle}}</h4> <p class="{{advancedSearchContentClass}} txt-italic">{{sectionExplanation}}</p> {{#sectionExamples}} <p class="{{advancedSearchContentClass}} padding-t--20 txt-italic">{{example}}</p> <div class="{{advancedSearchContentClass}} query search-tip-item-hover flex flex-row flex-align--center"> <p class="inline-block flex-auto">{{query}}</p> {{>try_search_query_button}} </div> {{/sectionExamples}} </div> {{/advancedSearches}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<tr class="search-tip-item-hover txt-size--12"> <td class="{{tblLeftItemClass}}">{{query}}</td> <td class="{{tblRightItemClass}} query flex flex-row flex-align--center"> <p class="inline-block flex-auto">{{description}}</p> {{>try_search_query_button}} </td> </tr>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#sectionTitle}} <tr> <th colspan="2" class="{{sectionHeaderClass}}">{{sectionTitle}}</th> </tr> {{#sectionOperators}} {{>search_operator_list_item}} {{/sectionOperators}} {{/sectionTitle}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-accounts-column-holder column-holder txt-size--14"> <div class="js-account-manager-container column-panel accounts-drawer border-box flex flex-column"> <header class="drawer-header padding-lxl flex-shrink--0"> <h1 class="column-title"> <span class="drawer-header-title block drawer-column-header-title">{{_i}}Accounts{{/i}}</span> </h1> <a class="js-drawer-close column-close-link color-twitter-darker-gray" href="#" data-action="options"> <i class="icon icon-close icon-center-24"></i> </a> </header> <div class="js-account-settings-scroll-container scroll-v margin-b---1"> <div class="accordion is-active"> <div class="js-account-settings-login-account is-active"></div> <div class="js-invitations-panel"></div> <div class="js-account-settings-team-info padding-v--12 txt-size--13 color-twitter-darker-gray txt-bold padding-hxl position-rel account-row-separator-b is-hidden"> {{_i}}Accounts you can act as{{/i}} </div> <div class="js-account-settings-accounts"></div> </div> <div class="js-account-invited-accounts"></div> {{#decider.add_account}} <div class="join-team margin-t--10 width-p--100"> {{>settings/account_settings_join_team}} </div> {{/decider.add_account}} </div> </div> <div class="js-contributor-manager-container column-panel border-box bg-color-twitter-lightest-gray flex flex-column"></div> <div class="js-team-invitations-container column-panel border-box bg-color-twitter-lightest-gray"> <div class="drawer-header padding-lxl"> <h1 class="js-team-invitations-back is-actionable pull-left txt-weight-normal"> <span class="drawer-header-title block drawer-column-header-title"> <i class="icon icon-arrow-l icon-tt"></i> {{_i}}Team invitations{{/i}} </span> </h1> <a class="js-drawer-close column-close-link color-twitter-darker-gray" href="#"> <i class="icon icon-close icon-center-24"></i> </a> </div> <div class="js-team-invitations team-invitations drawer-content pin-all scroll-v"></div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#requireConsent}} <div data-testid="gdprConsentMessage" class="border-a--2 br--4 border-color-twitter-blue color-twitter-deep-black padding-a--15 txt-size--12"> <h2 class="color-twitter-blue txt-size--14 txt-bold">{{_i}}Updates to the Twitter Terms of Service and Privacy Policy{{/i}}</h2> <p class="nbfc txt-size--13 padding-tm"> {{_i}}Twitter is updating its{{/i}} <a href="https://twitter.com/tos#new" target="_blank"> {{_i}}Terms{{/i}} </a> {{_i}}and{{/i}} <a href="https://twitter.com/privacy" target="_blank">{{_i}}Privacy Policy{{/i}}</a>. {{_i}}To continue contributing to this team account in TweetDeck, you or the team account’s owner need to visit Twitter’s website and agree to the updated Terms and Privacy Policy.{{/i}} </p> <p class="nbfc txt-size--13 padding-tm"> {{_i}}For more information, visit the{{/i}} <a href="https://help.twitter.com/rules-and-policies/update-privacy-policy" target="_blank">{{_i}}Help Center{{/i}}</a>. </p> </div> {{/requireConsent}} {{#withManageTeam}} <div class="js-manage-team-disabled txt-size-variable--16 color-twitter-darker-gray margin-vm cf"> <div class="obj-left"> <i class="icon icon-small icon-user-team-mgr pull-right"></i> </div> <div class="nbfc"> <p class="nbfc txt-size--13 padding-txs">{{_i}}Team @{{screenName}}{{/i}}</p> <p class="nbfc txt-size--13 padding-ts"> {{_i}}You\'re on the team! Only admins of this account can manage the team.{{/i}} <a href="https://support.twitter.com/articles/20171753-using-team-accounts-on-tweetdeck" target="_blank" rel="url">{{_i}}Learn more{{/i}}</a>. </p> </div> <div class="margin-l--23 margin-t--5"> {{>settings/account_settings_remove_account}} </div> </div> <div class="js-manage-team link-complex txt-size-variable--16 margin-vm cf is-hidden"> <div class="obj-left"> <i class="icon icon-small icon-user-team-mgr pull-right"></i> </div> <div class="nbfc"> <p class="nbfc txt-size--13 padding-txs">{{_i}}Team @{{screenName}}{{/i}}</p> <p class="nbfc color-twitter-darker-gray txt-size--13 padding-ts"> {{_i}}Invite colleagues to use Twitter as @{{screenName}} without sharing the password with them.{{/i}} </p> </div> <div class="margin-l--23 margin-t--5"> <button href="#" class="btn btn-primary js-account-action btn-on-dark txt-size--12" data-action="manageContributors" data-account-key="{{accountKey}}">{{_i}}Manage team{{/i}}</button> {{>settings/account_settings_remove_account}} </div> </div> {{/withManageTeam}} <a class="js-account-action link-complex txt-size-variable--16 margin-vm cf" href="#" data-action="setAccountSafeguard" data-account-key="{{accountKey}}"> <div class="obj-left"> <i class="icon icon-small icon-toggle-{{#isSafeguarded}}on{{/isSafeguarded}}{{^isSafeguarded}}off{{/isSafeguarded}} pull-right color-twitter-blue js-account-safeguard-switch" id="account-safeguard-{{accountKey}}"></i> </div> <div class="nbfc"> <p class="nbfc link-complex-target txt-size--13 padding-txs link-complex-target">{{_i}}Confirmation step{{/i}}</p> <p class="nbfc color-twitter-darker-gray txt-size--13 padding-ts">{{_i}}Add a confirmation step before Tweeting as{{/i}} @{{screenName}}</p> </div> </a> {{#isDefault}} <div class="txt-size-variable--16 margin-vm cf"> <div class="obj-left"> <i class="icon icon-small icon-toggle-on pull-right color-twitter-blue"></i> </div> <div class="nbfc padding-t--4"> <p class="nbfc txt-size--13">{{_i}}Default account{{/i}}</p> <p class="nbfc color-twitter-darker-gray txt-size--13 padding-ts">{{_i}}@{{screenName}} is your default account for new Tweets and searches{{/i}}</p> </div> </div> {{/isDefault}} {{^isDefault}} <a class="js-account-action link-complex txt-size-variable--16 margin-vm cf" href="#" data-action="setDefault" data-account-key="{{accountKey}}"> <div class="obj-left"> <i class="icon icon-small icon-toggle-{{#isDefault}}on{{/isDefault}}{{^isDefault}}off{{/isDefault}} pull-right color-twitter-blue"></i> </div> <div class="nbfc padding-t--4"> <p class="nbfc link-complex-target txt-size--13 link-complex-target">{{_i}}Default account{{/i}}</p> <p class="nbfc color-twitter-darker-gray txt-size--13 padding-ts">{{_i}}Set @{{screenName}} as your default account for new Tweets and searches{{/i}}</p> </div> </a> {{/isDefault}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="#" class="js-log-in-account txt-size--13 padding-hxl txt-line-height--40">{{_i}}Link another account you own{{/i}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-accordion-item js-account-settings-row js-account-settings-summary account-settings-row account-settings-row {{#isSoleAccount}}is-expanded{{/isSoleAccount}}" data-account-key="{{accountKey}}" data-user-id="{{userId}}"> <div class="js-account-profile-header account-profile-header"></div> <div class="padding-h--16 padding-b--16 margin-t---24 account-settings-bb hyphenate"> <div class="flex flex-row"> <a href="{{getProfileURL}}" class="txt-size--0 " rel="user" target="_blank"> <img class="avatar size64 avatar-border--2" src="{{profileImageURL}}" width="64" height="64" alt="{{screenName}}\'s avatar"> </a> <a href="{{getProfileURL}}" class="link-complex margin-t--16 margin-l--10" rel="user" target="_blank"> <div class="margin-t--14"> <span class="txt-size--16 txt-bold"> <span class="link-complex-target">{{{emojifiedName}}}</span> {{#isProtected}}<i class="icon icon-protected icon-match-context icon-tt"></i>{{/isProtected}} {{#isVerified}}<i class="sprite sprite-verified"></i>{{/isVerified}} {{#isTranslator}}<i class="sprite sprite-translator"></i>{{/isTranslator}} </span> <span class="txt-size--14 color-twitter-dark-gray block"> @{{screenName}} </span> </div> </a> </div> <div class="js-accordion-panel padding-a--0 margin-t--10"> {{>settings/account_settings_detail}} </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#isRemovable}} <button {{#notRemovable}}title="{{notRemovableMessage}}"{{/notRemovable}} class="js-account-action js-show-tip btn Button--tertiary btn-on-dark txt-size--12{{#notRemovable}} is-disabled{{/notRemovable}}" data-action="removeCheck" data-account-key="{{accountKey}}"> <span class="label">{{_i}}Leave team{{/i}}</span> </button> <div class="js-account-remove-check account-remove-check cf margin-tm padding-axl br--4 padding-l--20 margin-l---20"> <div class="account-remove-check-message padding-bxl color-twitter-darker-gray txt-size--13"> Leave this team? You will no longer have access to the @{{screenName}} account. </div> <button class="js-account-action Button--danger pull-left" data-action="remove" data-account-key="{{accountKey}}"> <span class="label">{{_i}}Leave{{/i}}</span> </button> <button class="js-account-action cf btn pull-left margin-hm btn-on-dark" data-action="removeCancel" data-account-key="{{accountKey}}"> {{_i}}Cancel{{/i}} </button> </div> {{/isRemovable}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div data-testid="accountRow" class="js-accordion-item js-account-settings-row padding-vxl cf account-row-separator-b account-settings-row position-rel" data-account-key="{{accountKey}}" data-user-id="{{userId}}"> <div data-testid="accountSummary" class="js-accordion-toggle-view position-rel padding-hxl is-actionable flex flex-row flex-align--center"> <div class="js-account-settings-summary nbfc flex-auto margin-r--3"> {{>account_settings_account_summary}} </div> {{#requireConsent}} <div data-testid="requireConsentBadgeContainer" class="js-consent-badge flex-shrink--0 margin-l--7"> <div data-testid="requireConsentBadge" class="color-twitter-white bg-color-twitter-blue br-100 min-width--10 height--10 txt-bold txt-center txt-size--10 txt-line-height--10 padding-a--4">1</div> </div> {{/requireConsent}} <div class="flex-shrink--0 margin-l--7"> <i class="icon icon-small icon-arrow-u color-twitter-dark-gray"></i> <i class="icon icon-small icon-arrow-d color-twitter-dark-gray"></i> </div> </div> <div class="js-accordion-panel accordion-panel padding-an"> <div class="padding-tm padding-hxl"> {{>settings/account_settings_detail}} </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<fieldset id="global_filter_settings"> <legend class="frm-legend">{{_i}}Mute Settings{{/i}}</legend> <div class="control-group"> <label for="filter-types" class="control-label">{{_i}}Mute{{/i}}</label> <div class="controls"> <select name="filter" class="js-filter-types"> <option value="phrase">{{_i}}Words or phrases{{/i}}</option> <option value="source">{{_i}}Tweet Source{{/i}}</option> </select> </div> </div> <div class="control-group"> <label for="filter-input" class="control-label">{{_i}}Matching{{/i}}</label> <div class="controls"> <input class="js-filter-input" name="filter-input" size="30" type="text" placeholder="{{placeholderText}}"> </div> </div> <div class="control-group"> <div class="controls js-add-filter-container"></div> </div> <div class="js-filter-list"></div> <div class="divider-bar"></div> <div class="txt-size--12"> <i class="icon icon-info icon-large obj-left color-twitter-gray margin-t---5"></i> <p class="nbfc margin-t--2"> {{_i}}User mutes work across TweetDeck & Twitter. To review your list of user mutes visit <a href="https://twitter.com/settings/muted" target="_blank" rel="url">twitter.com/settings/muted</a>.{{/i}} </p> </div> </fieldset>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<button name="add-filter" class="js-add-filter btn-on-dark" {{^addFilterButtonEnabled}}disabled{{/addFilterButtonEnabled}}>{{_i}}Mute{{/i}}</button>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul class="min-height--90"> {{#filters}} {{>settings/global_setting_filter_row}} {{/filters}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<li class="list-filter cf"> {{_i}}Muting {{getDisplayType}} {{>text/global_filter_value}}{{/i}} <input type="button" name="remove-filter" value="{{_i}}Remove{{/i}}" data-id="{{id}}" class="js-remove-filter small Button--danger"> </li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<fieldset id="general_settings"> <legend>{{_i}}General Settings{{/i}}</legend> <div class="control-group"> <div> <i class="js-streaming-updates icon icon-small icon-toggle-off color-twitter-blue js-toggle-switch is-actionable align-top" id="streaming-updates"></i> <span class="margin-l--4">{{_i}}Stream Tweets in realtime{{/i}}</span> </div> <div> <i class="js-show-startup-notifications icon icon-small icon-toggle-off color-twitter-blue js-toggle-switch is-actionable align-top" id="show-startup-notifications"></i> <span class="margin-l--4">{{_i}}Show notifications on startup{{/i}}</span> </div> <div> <i class="js-display-sensitive-media icon icon-small icon-toggle-off color-twitter-blue js-toggle-switch is-actionable align-top" id="display-sensitive-media"></i> <span class="margin-l--4">{{_i}}Display media that may contain sensitive content{{/i}}</span> </div> <div> <i class="js-auto-play-gifs icon icon-small icon-toggle-off color-twitter-blue js-toggle-switch is-actionable align-top" id="auto-play-gifs"></i> <span class="margin-l--4">{{_i}}Autoplay GIFs{{/i}}</span> </div> <div> <i class="js-enable-rate-limit-bypass icon icon-small icon-toggle-off color-twitter-blue js-toggle-switch is-actionable align-top" id="enable-rate-limit-bypass"></i> <span class="margin-l--4">{{_i}}Enable rate limit bypass (OldTweetDeck){{/i}}</span> </div> <div class="divider-bar"></div> <div class="cf"> <div class="obj-left js-theme"> <label class="fixed-width-label txt-uppercase touch-larger-label"><b>{{_i}}Theme{{/i}}</b></label> <label class="fixed-width-label radio"> <input type="radio" class="js-settings-radio js-theme-radio touch-larger-label" name="theme" value="dark"> {{_i}}Dark{{/i}} </label> <label class="fixed-width-label radio"> <input type="radio" class="js-settings-radio js-theme-radio touch-larger-label" name="theme" value="light"> {{_i}}Light{{/i}} </label> </div> <div class="obj-left js-column-size"> <label class="fixed-width-label txt-uppercase touch-larger-label"><b>{{_i}}Columns{{/i}}</b></label> <label class="fixed-width-label radio"> <input type="radio" class="js-settings-radio js-column-size-radio touch-larger-label" name="column-size" value="narrow"> {{_i}}Narrow{{/i}} </label> <label class="fixed-width-label radio"> <input type="radio" class="js-settings-radio js-column-size-radio touch-larger-label" name="column-size" value="medium"> {{_i}}Medium{{/i}} </label> <label class="fixed-width-label radio"> <input type="radio" class="js-settings-radio js-column-size-radio touch-larger-label" name="column-size" value="wide"> {{_i}}Wide{{/i}} </label> </div> <div class="obj-left js-font-size"> <label class="fixed-width-label txt-uppercase touch-larger-label"><b>{{_i}}Font size{{/i}}</b></label> <label class="txt-size--12 fixed-width-label radio"> <input type="radio" class="js-settings-radio js-font-size-radio" name="font-size" value="smallest"> {{_i}}Smallest{{/i}} </label> <label class="txt-size--13 fixed-width-label radio"> <input type="radio" class="js-settings-radio js-font-size-radio" name="font-size" value="small"> {{_i}}Small{{/i}} </label> <label class="txt-size--14 fixed-width-label radio"> <input type="radio" class="js-settings-radio js-font-size-radio" name="font-size" value="medium"> {{_i}}Medium{{/i}} </label> <label class="txt-size--15 fixed-width-label radio"> <input type="radio" class="js-settings-radio js-font-size-radio" name="font-size" value="large"> {{_i}}Large{{/i}} </label> <label class="txt-size--16 fixed-width-label radio"> <input type="radio" class="js-settings-radio js-font-size-radio" name="font-size" value="largest"> {{_i}}Largest{{/i}} </label> </div> </div> </div> <div class="mdl-links"> {{> app_links}} </div> </fieldset>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '\x3c!-- Services --\x3e <fieldset id="services_settings" > <legend>{{_i}}Services Settings{{/i}}</legend> <div id="streaming-form" class="control-group"> <label for="link-shortening" class="control-label">{{_i}}Link Shortening{{/i}}</label> <div class="controls"> <select name="link-shortening" class="js-link-shortening"> <option value="twitter">Twitter</option> <option value="bitly">Bit.ly</option> </select> </div> </div> <div id="bitly-form" class="js-bitly-form"></div> </fieldset>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="l-column mdl-column mdl-column-sml"> <div class="l-column-scrollv scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-alt"> <ul class="lst-group js-setting-list"> {{#tabs}} {{> list_module_list_item}} {{/tabs}} </ul> </div> </div> <div class="l-column mdl-column mdl-column-lrg"> <div class="l-column-scrollv scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-alt mdl-col-settings"> <form action="#" id="global-settings" accept-charset="utf-8" class="js-global-settings frm"></form> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#showInvitationPanel}} <div class="js-account-action js-account-settings-team-invitations padding-hxl padding-v--12 txt-size--13 color-twitter-darker-gray txt-bold position-rel account-row-separator-b flex flex-row flex-align--center is-actionable" data-action="showInvitations"> <span class="flex-grow--1">{{_i}}Team invitations{{/i}}</span> <div class="account-invitation-badge-container"> <span class="js-invitation-count numbered-badge bg-color-twitter-blue numbered-badge-account-invites" data-count={{invitationCount}}>{{invitationCount}} </span> </div> <i class="icon icon-arrow-r icon-small-valigned padding-l--5 padding-b--2"></i> </div> {{/showInvitationPanel}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="control-group"> <label for="bitly-email" class="control-label">{{_i}}Bit.ly Username{{/i}}</label> <div class="controls"> <input id="bitly-email" class="js-bitly-email" name="bitly-email" size="30" type="text" value="{{#bitlyAccount}}{{login}}{{/bitlyAccount}}"> </div> </div> <div class="control-group"> <label for="bitly-key" class="control-label">{{_i}}Bit.ly API Key{{/i}}</label> <div class="controls"> <input id="bitly-key" class="js-bitly-key" name="bitly-key" size="40" type="text" value="{{#bitlyAccount}}{{apiKey}}{{/bitlyAccount}}"> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-modal-panel mdl s-short"> {{> modal_header}} <div class="mdl-inner{{#modalClasses}} {{{modalClasses}}}{{/modalClasses}}"> <div class="mdl-content js-mdl-content horizontal-flow-container"> {{{content}}} </div> <footer class="{{^centeredFooter}}mdl-buttonbar{{/centeredFooter}}{{#centeredFooter}}padding-vxl txt-center{{/centeredFooter}}"> {{#hasDoneButton}} <button class="js-dismiss Button--primary pull-right"> <span class="label">{{_i}}Done{{/i}}</span> </button> {{/hasDoneButton}} </footer> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="disp-table"> <div class="disp-cell"> <div class="spinner"></div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-infinitespinner spinner-large"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="{{spinnerClasses}}"> <img src="{{#asset}}/global/backgrounds/spinner_large_white.gif{{/asset}}" alt="{{_i}}Loading…{{/i}}"/> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="release-notes-header nbfc"> <img class="release-notes-image pull-left" src="{{#asset}}/logos/64.png{{/asset}}" alt="{{_i}}TweetDeck logo{{/i}}"> <h1 class="release-notes-header-title">{{_i}}Welcome to TweetDeck{{/i}}</h1> </div> <div class="release-notes"> <div class="release-notes-section nbfc"> <img class="release-notes-image-bullet pull-left" src="{{#asset}}/global/backgrounds/td_whatsnew_01.png{{/asset}}" alt="{{_i}}Create Collections{{/i}}"> <h2>{{_i}}Create a custom Twitter experience{{/i}}</h2> <p>{{_i}}Organize and build Collections, keep track of Lists, searches, activity and more. Click the + in the sidebar.{{/i}}</p> </div> <div class="release-notes-section nbfc"> <img class="release-notes-image-bullet pull-left" src="{{#asset}}/global/backgrounds/td_whatsnew_02.png{{/asset}}" alt="{{_i}}Create filters{{/i}}"> <h2>{{_i}}Find exactly what you&rsquo;re looking for{{/i}}</h2> <p>{{_i}}Create searches to track topics, events and hashtags. Refine the results with filters at the top of each timeline.{{/i}}</p> </div> <div class="release-notes-section margin-bn nbfc"> <img class="release-notes-image-bullet pull-left" src="{{#asset}}/global/backgrounds/td_whatsnew_03.png{{/asset}}" alt="{{_i}}Multiple accounts{{/i}}"> <h2>{{_i}}Manage multiple accounts{{/i}}</h2> <p>{{_i}}Tweet, monitor and follow new accounts from all &mdash; or just one of your accounts. Add another account in <a href="#" data-action="openSettings"><i class="icon icon-user-switch icon-bot"></i> Accounts</a>.{{/i}}</p> </div> </div> <button class="js-done Button--primary obj-center margin-tl"><i class="add"></i>{{_i}}Get started{{/i}}</button>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="startflow-background pin-all anim anim-slower anim-fade-in"></div> <div class="js-startflow-chrome app-masthead anim anim-slow anim-delayed anim-fade-in {{#withLoading}}is-hidden{{/withLoading}}"> <div class="app-signin-wrap"> <h1 class="sprite sprite-logo" aria-label="TweetDeck"></h1> </div> </div> <div class="js-startflow-content startflow anim anim-slow anim-fade-in"> {{$content}}{{/content}} </div> <footer class="js-startflow-chrome txt-center privacy-info pin-bottom-full-width padding-v--6 anim anim-slow anim-delayed anim-fade-in {{#withLoading}}is-hidden{{/withLoading}}"> <p> {{> app_links}} </p> </footer>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<p class="txt-italic txt-size-variable--12 txt-mute"><i class="icon icon-image txt-size-variable--12 align-top"></i> {{_i}}Image attached{{/i}}</p>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<p class="txt-ellipsis txt-size-variable--12">{{_i}}{{getLightChirpURL}}{{/i}}</p>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}is-actionable {{#unread}}is-unread {{/unread}} {{/stream_item_classes}} {{$stream_item_content_classes}}js-show-detail {{/stream_item_content_classes}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/stream_item_data}} {{$content}} <div class="tweet tweet-message js-chirp"> <header class="tweet-header"> {{>status/conversation_timestamp}} {{#hasValidParticipant}} <div class="js-conversation-header"> {{> status/conversation_header }} </div> {{/hasValidParticipant}} </header> <div class="l-table"> <div class="l-cell"> <div class="l-table"> <div class="l-cell tweet-body align-top full-width"> {{#showSenderName}} {{#sender}} <p class="tweet-text txt-mute">{{{sender.emojifiedName}}}: </p> {{/sender}} {{/showSenderName}} {{#htmlText}} <p class="js-tweet-text tweet-text with-linebreaks">{{{htmlText}}}</p> {{/htmlText}} {{#previewText}} <p class="js-tweet-text tweet-text">{{{previewText}}}</p> {{/previewText}} {{#attachmentOnly}} {{>status/attachment_image}} {{/attachmentOnly}} {{#decider.tweet_hide_suffix}} {{#hasQuotedTweet}} {{>status/attachment_tweet}} {{/hasQuotedTweet}} {{/decider.tweet_hide_suffix}} </div> {{#hasMedia}} <div class="l-cell align-top padding-t--3 padding-r--8"> {{#getMedia}} <div class="tweet-message-attachment position-rel"> <div class="js-media-image-link media-item {{#isPossiblySensitive}}is-invisible{{/isPossiblySensitive}} {{#needsSecureUrl}}js-needs-secure-url{{/needsSecureUrl}} is-zoomable" {{#needsSecureUrl}}data-original-url="{{mediaPreviewSrc}}{{imageSrc}}"{{/needsSecureUrl}} {{^needsSecureUrl}}{{^imageSrc}}style="background-image:url({{mediaPreviewSrc}})"{{/imageSrc}}{{/needsSecureUrl}}> </div> </div> {{/getMedia}} </div> {{/hasMedia}} </div> </div> <div class="pull-right txt-right"> <i class="icon {{#replied}}icon-reply{{/replied}} txt-mute txt-size--14"></i> </div> </div> </div> {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-stream-item js-cursor-top conversation-more stream-item is-actionable txt-link padding-v--10"> {{_i}}Show more{{/i}} </div> <div class="thread cursor-top-thread"></div> <div class="thread dot-thread dot-thread-top"></div> <div class="thread dot-thread dot-thread-top middle"></div> <div class="thread dot-thread dot-thread-top top"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}conversation-event txt-mute padding-h--10{{/stream_item_classes}} {{$content}} {{#failedParticipants}} {{#participant}} <a href="{{profileURL}}" rel="user" target="_blank">{{name}}</a> {{/participant}} {{^isLastItem}}and{{/isLastItem}} {{/failedParticipants}} {{_i}}could not be added{{/i}} {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<span class="txt-mute"> {{_i}}Some users could not be added.{{/i}} </span>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="account-link"> <div class="obj-left item-img tweet-img"> {{^withMultipleAvatars}} {{#avatars.0}} <a class="account-inline account-link txt-ellipsis link-complex" rel="user" href="{{profileURL}}"> <img class="tweet-avatar avatar pull-right" src="{{profileImageURL}}" alt="{{screenName}}\'s avatar"> </a> {{/avatars.0}} {{/withMultipleAvatars}} {{#withMultipleAvatars}} <div class="tweet-avatar media-grid-container multiple-avatar-grid"> <div class="{{avatarsClass}}"> {{#avatars}} <div class="media-image-container media-image-container-compact"> <div class="media-image block position-rel" style="background-image: url({{profileImageURL}});" ></div> </div> {{/avatars}} </div> </div> {{/withMultipleAvatars}} </div> <div class="nbfc"> {{#getConversationTitleInformation}} {{#name}} <b class="inline-block txt-ellipsis">{{{name}}}</b> {{/name}} {{^name}} {{#isOneToOne}} {{#participants.0}} <a class="account-inline account-link txt-ellipsis link-complex" rel="user" href="{{profileURL}}"> <b class="link-complex-target">{{{emojifiedName}}}</b> <span class="attribution username txt-mute txt-size-variable--12">@{{screenName}}</span> </a> {{/participants.0}} {{/isOneToOne}} {{#isThreeway}} <span class="account-inline txt-ellipsis"> {{#participants.0}} <a class="account-link" rel="user" href="{{profileURL}}"><b>{{{emojifiedName}}}</b></a><b>, </b> {{/participants.0}} {{#participants.1}} <a class="account-link" rel="user" href="{{profileURL}}"><b>{{{emojifiedName}}}</b></a> {{/participants.1}} </span> {{/isThreeway}} {{#isOneToMany}} {{#participants.0}} <div class="conversation-title-container"> <span class="conversation-title txt-ellipsis inline-block position-rel"><a class="txt-ellipsis account-link" rel="user" href="{{profileURL}}"><b>{{{emojifiedName}}}</b></a> <b>+ {{numberOfOtherParticipants}}</b> </span> </div> {{/participants.0}} {{/isOneToMany}} {{/name}} {{/getConversationTitleInformation}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}conversation-event txt-mute padding-h--10{{/stream_item_classes}} {{$stream_item_data}} data-key="{{conversation.id}}" {{/stream_item_data}} {{$content}} <p class="margin-b--5"> {{#getParticipants}} {{#participant}} <a href="{{profileURL}}" rel="user" target="_blank"><img class="avatar size24" src="{{miniProfileImageURL}}" width="24" height="24" alt="{{name}} {{screenName}}" /></a> {{/participant}} {{#isEndOfRow}}<br />{{/isEndOfRow}} {{/getParticipants}} </p> <p class="margin-b--5"> {{_i}}There are{{/i}} <a href="#" rel="viewConversationParticipants">{{numberOfParticipants}} {{_i}}other people{{/i}}</a> {{_i}}in this group{{/i}} </p> {{#sender}} <a href="{{profileURL}}" rel="user" target="_blank">{{name}}</a> {{/sender}} {{_i}}added you{{/i}} {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} <span class="txt-mute"> {{sender.name}} {{_i}}added you{{/i}} </span> {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}conversation-event txt-mute padding-h--10{{/stream_item_classes}} {{$content}} {{#isOwnChirp}} {{_i}}You{{/i}} {{/isOwnChirp}} {{^isOwnChirp}} <a class="txt-mute conversation-participants-name-list" href="{{sender.profileURL}}" rel="user" target="_blank">{{sender.name}}</a> {{/isOwnChirp}} {{#sanitizedConversationName}} {{_i}}changed the group name to{{/i}} {{{sanitizedConversationName}}} {{/sanitizedConversationName}} {{^sanitizedConversationName}} {{_i}}removed the group name{{/i}} {{/sanitizedConversationName}} {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} <span class="txt-mute"> {{#isOwnChirp}} {{_i}}You{{/i}} {{/isOwnChirp}} {{^isOwnChirp}} {{sender.name}} {{/isOwnChirp}} {{#sanitizedConversationName}} {{_i}}changed the group name to{{/i}} {{{sanitizedConversationName}}} {{/sanitizedConversationName}} {{^sanitizedConversationName}} {{_i}}removed the group name{{/i}} {{/sanitizedConversationName}} </span> {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}conversation-event txt-mute padding-h--10{{/stream_item_classes}} {{$content}} {{#isOwnChirp}} {{_i}}You{{/i}} {{/isOwnChirp}} {{^isOwnChirp}} {{#sender}} <a href="{{profileURL}}" rel="user" target="_blank">{{{emojifiedName}}}</a> {{/sender}} {{/isOwnChirp}} {{_i}}added{{/i}} {{#addedParticipants}} <a class="txt-mute conversation-participants-name-list" href="{{profileURL}}" rel="user" target="_blank">{{{emojifiedName}}}</a> {{/addedParticipants}} {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} <span class="txt-mute"> {{#isOwnChirp}} {{_i}}You added{{/i}} {{/isOwnChirp}} {{^isOwnChirp}} {{{sender.emojifiedName}}} {{_i}}added{{/i}} {{/isOwnChirp}} \x3c!-- one new participant --\x3e {{^addedParticipants.1}} {{{addedParticipants.0.emojifiedName}}} {{/addedParticipants.1}} {{#addedParticipants.1}} \x3c!-- two new participants --\x3e {{^addedParticipants.2}} {{{addedParticipants.0.emojifiedName}}} {{_i}}&amp;{{/i}} {{{addedParticipants.1.emojifiedName}}} {{/addedParticipants.2}} \x3c!-- more than 2 new participants --\x3e {{#addedParticipants.2}} {{{addedParticipants.0.emojifiedName}}} {{_i}}+{{/i}} {{numberOfOtherParticipants}} {{/addedParticipants.2}} {{/addedParticipants.1}} </span> {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}conversation-event txt-mute padding-h--10{{/stream_item_classes}} {{$content}} {{#leftParticipants}} <a class="txt-mute conversation-participants-name-list" href="{{profileURL}}" rel="user" target="_blank">{{{emojifiedName}}}</a> {{/leftParticipants}} {{_i}}left{{/i}} {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} <span class="txt-mute"> {{$content}} {{#leftParticipants}} {{{emojifiedName}}} {{/leftParticipants}} {{_i}}left{{/i}} {{/content}} </span> {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="thread show-more-thread"></div> <div class="thread dot-thread dot-thread-more"></div> <div class="thread dot-thread middle dot-thread-more"></div> <div class="thread dot-thread top dot-thread-more"></div> <div class="js-conversation-show-more conversation-more stream-item is-actionable txt-link padding-v--10"> {{actionText}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#created}} <time class="tweet-timestamp js-timestamp pull-right margin-t--2" data-time="{{getTime}}"> {{/created}} <span class="txt-size-variable--12 txt-mute"> {{createdPretty}} </span> {{#created}} </time> {{/created}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#dataminr}} {{> status/dataminr_header}} {{/dataminr}} <div class="is-dataminr-tweet"> {{> status/tweet_single}} {{> status/media_large_preview }} </div> {{#dataminr}} {{> status/dataminr_single_footer}} {{/dataminr}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-axl dataminr-external-link"> <a class="btn full-width padding-hn url-ext hidden-in-dark" href="{{expandAlertURL}}" rel="external noopener noreferrer" data-scribe-element="dataminr"> <i class="icon icon-dataminr"></i> <span class="label">{{_i}}Open in Dataminr{{/i}}</span> </a> <a class="btn full-width padding-hn url-ext hidden-in-light" href="{{expandAlertURL}}" rel="external noopener noreferrer" data-scribe-element="dataminr"> <i class="icon icon-dataminr"></i> <span class="label">{{_i}}Open in Dataminr{{/i}}</span> </a> </div> {{#eventLocation}} <p class="dataminr-title padding-al padding-hxl txt-size--12 txt-bold">{{_i}}Event Location{{/i}}{{#eventLocation.name}}: {{eventLocation.name}}{{/eventLocation.name}}</p> <div class="cf"> <a href="{{expandMapURL}}" target="_blank" rel="url noopener noreferrer" class="media-item block dataminr-map-img-full" style=\'background-image:url("{{eventMapLargeImageURL}}")\' data-scribe-element="map"></a> </div> {{/eventLocation}} <p class="dataminr-title padding-al padding-hxl txt-size--12 txt-bold">{{_i}}Event Keywords{{/i}}</p> <ul class="padding-vl padding-hxl block dataminr-search-terms-detail"> {{#relatedTerms}} <li class="inline-block dataminr-term"><a href="{{twitterUrl}}" data-search-term="{{query}}" target="_blank" rel="search" data-scribe-element="search">{{text}}</a></li> {{/relatedTerms}} <li class="dataminr-search-terms txt-size--13 padding-ts txt-bold"> <a href="{{anyRelatedTermsTwitterUrl}}" target="_blank" class="link-complex" rel="search" data-search-term="{{anyRelatedTermsQuery}}" data-scribe-element="search_any"> <i class="icon icon-search icon-match-context icon-tt"></i> <span class="link-complex-target">{{_i}}Search any{{/i}}</span> </a> or <a href="{{allRelatedTermsTwitterUrl}}" target="_blank" rel="search" data-search-term="{{allRelatedTermsQuery}}" data-scribe-element="search_all"> {{_i}}search all{{/i}} </a> </li> </ul> <p class="dataminr-title padding-al padding-hxl txt-size--12 txt-bold">{{_i}}Original Source{{/i}}</p> <div class="js-source-profile position-rel"></div> <div class="dataminr-user-profile padding-hxl padding-bl"> {{#userTopHashtags.length}} <p class="padding-tm"><i class="icon icon-small-valigned icon-hashtag profile-icon icon-tt"></i>&nbsp;{{_i}}Top Hashtags{{/i}}</p> <ul class="padding-vm"> {{#userTopHashtags}} <li class="padding-vs"> <a href="{{twitterUrl}}" class="txt-capitalize txt-size--13" target="_blank" rel="hashtag" data-scribe-element="hashtag">{{text}}</a> </li> {{/userTopHashtags}} </ul> {{/userTopHashtags.length}} </div> <p class="js-replies-header is-hidden dataminr-title padding-al padding-hxl txt-size--12 txt-bold">{{_i}}Replies{{/i}}</p>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="dataminr-header cf txt-size-variable--12 padding-bm"> <div class="txt-ellipsis"> {{#publisherCategory.name}} <span class="dataminr-category-pill dataminr-category-{{publisherCategory.shortName}} inline-block txt-capitalize pull-left"> <span class="dataminr-category-full">{{publisherCategory.name}}</span><span class="dataminr-category-short txt-uppercase"><abbr title="{{publisherCategory.name}}">{{publisherCategory.shortName}}</abbr></span></span> {{/publisherCategory.name}} <span class="pull-right padding-txs txt-dataminr"> <span class="dataminr-volume margin-rs"><i class="icon icon-small icon-user icon-match-context icon-tt"></i> {{eventVolume}}</span> {{#alertType}} <span class="dataminr-label dataminr-label-{{id}} margin-rs txt-dataminr">{{name}}<i class="sprite {{alertTypeSprite}} margin-ls"></i></span> {{/alertType}} {{createdAt}} </span> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}is-actionable dataminr dataminr-separator{{/stream_item_classes}} {{$stream_item_content_classes}}js-show-detail{{/stream_item_content_classes}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/stream_item_data}} {{$content}} {{> status/dataminr }} {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="margin-tm cf"> <div class="padding-bxxl"> {{#eventLocation}} <div class="obj-right txt-center dataminr-location"> <div class="cf"> {{#eventMapSmallImageURL}} <a href="{{expandMapURL}}" target="_blank" rel="url noopener noreferrer" class="media-item block dataminr-map-img pull-right" style=\'background-image:url("{{eventMapSmallImageURL}}")\' data-scribe-element="map"></a> {{/eventMapSmallImageURL}} </div> {{#name}} <div class="js-show-tip txt-ellipsis" data-original-title="{{name}}"> <a href="{{expandMapURL}}" target="_blank" rel="url noopener noreferrer" class="txt-size-variable--12" data-scribe-element="map" >{{name}}</a> </div> {{/name}} </div> {{/eventLocation}} <div class="nbfc"> <ul class="dataminr-related-terms"> {{#relatedTerms}} <li class="inline-block dataminr-term"><a href="{{twitterUrl}}" class="txt-size--13" data-search-term="{{query}}" target="_blank" rel="search"data-scribe-element="search">{{text}}</a></li> {{/relatedTerms}} </ul> {{#user}} <div class="margin-ts"> <span class="txt-size--12 txt-dataminr inline-block margin-rm">{{_i}}Joined{{/i}}&nbsp;<b class="dataminr-bio-count">{{prettyJoinedDate}}</b></span> <a href="{{getFollowerURL}}" rel="url" target="_blank" class="txt-size--12 inline-block" data-scribe-element="show_followers">{{_i}}Followers{{/i}}&nbsp;<b>{{prettyFollowersCount}}</b></a>&nbsp; </div> {{/user}} </div> </div> <a href="{{{expandAlertURL}}}" class="txt-size--13 dataminr-openin-link txt-dataminr" target="_blank" rel="url noopener noreferrer" data-scribe-element="dataminr">{{_i}}Open in Dataminr{{/i}}<i class="icon icon-match-context icon-dataminr icon-tt link-clean padding-ls"></i></a> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "{{#withActivityHeader}} {{> status/tweet_activity_header }} {{/withActivityHeader}} {{#getRelatedUser}} {{> account_summary }} {{/getRelatedUser}}"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#data}} {{<stream_item}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/stream_item_data}} {{$content}} {{> status/follow_activity }} {{/content}} {{/stream_item}} {{/data}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{<stream_item}} {{$stream_item_classes}}is-actionable gap-chirp{{/stream_item_classes}} {{$stream_item_content_classes}}js-expand-gap padding-v--18{{/stream_item_content_classes}} {{$stream_item_data}} data-key="{{id}}" {{/stream_item_data}} {{$content}} <div class="gap-chirp-text {{#showSize}}gap-chirp-text--with-size{{/showSize}} padding-v--4 padding-h--16"> {{^showSize}}{{_i}}Show more{{/i}}{{/showSize}} {{#showSize}}{{size}}+ {{_i}}more{{/i}}{{/showSize}} </div> <div class="gap-chirp-spinner margin-v--5"></div> {{/content}} {{/stream_item}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/stream_item_data}} {{$content}} <div class="activity-header flex flex-row flex-align--baseline"> <div class="margin-h--5 margin-t---8 item-img flex-shrink--0 txt-right"> <i class="pull-right icon icon-list-filled txt-size--16 color-twitter-darker-gray"></i> </div> <div class="nbfc txt-line-height--20 flex-auto padding-b--2"> {{#sourceAvatar}}<img class="avatar size24" src="{{sourceAvatar}}">{{/sourceAvatar}} {{{htmlText}}} </div> </div> {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="media-image-container {{#isMediaPreviewCompact}}media-image-container-compact{{/isMediaPreviewCompact}} block position-rel"> <a class="js-media-image-link {{#needsSecureUrl}}js-needs-secure-url{{/needsSecureUrl}} pin-all media-image block {{#isPossiblySensitive}}is-invisible{{/isPossiblySensitive}}" {{#needsSecureUrl}}data-original-url="{{mediaPreviewSrc}}{{imageSrc}}"{{/needsSecureUrl}} {{^needsSecureUrl}}style="background-image:url({{mediaPreviewSrc}}{{imageSrc}})"{{/needsSecureUrl}} href="{{url}}" rel="mediaPreview" target="_blank" data-media-entity-id="{{mediaId}}" title="{{altText}}" ></a> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#withMediaPreview}} {{#hasMedia}} {{#isMediaPreviewLarge}} <div class="js-media position-rel item-box-full-bleed margin-tm {{#isMediaGridContent}}media-size-large-height{{/isMediaGridContent}} {{#dataminr}}dataminr-large-preview{{/dataminr}}" data-key="{{id}}"> {{#isMediaGridContent}} <div class="media-caret"></div> <div class="media-grid-{{mediaLength}}"> {{#getMedia}} {{> status/media_image_container}} {{/getMedia}} </div> {{#isPossiblySensitive}} {{> status/media_sensitive}} {{/isPossiblySensitive}} {{/isMediaGridContent}} {{^isMediaGridContent}} {{#getMedia}} {{>status/media_thumb}} {{/getMedia}} {{/isMediaGridContent}} </div> {{/isMediaPreviewLarge}} {{/hasMedia}} {{/withMediaPreview}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#isMediaGridContent}} <div class="media-grid-{{mediaLength}}"> {{#getMedia}} {{> status/media_image_container}} {{/getMedia}} </div> {{#isPossiblySensitive}} {{> status/media_sensitive}} {{/isPossiblySensitive}} {{/isMediaGridContent}} {{^isMediaGridContent}} {{#getMedia}} {{> status/media_thumb}} {{/getMedia}} {{/isMediaGridContent}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#isPossiblySensitive}} <div class="js-media-sensitive-overlay media-sensitive color-twitter-darker-gray {{^isMediaPreviewLarge}}br--14{{/isMediaPreviewLarge}} {{#isMediaPreviewLarge}}is-large{{/isMediaPreviewLarge}} pin-top flex flex-column flex-justify-content--center"> <div class="padding-am"> <b class="media-sensitive-title">{{_i}}The following media may contain sensitive material.{{/i}}</b> <p>{{_i}}Your <a href="#" rel="globalSettings">Tweet media display settings</a> are configured to inform you when media may be sensitive.{{/i}}</p> <a href="#" target="_blank" rel="showSensitiveMedia">{{_i}}View{{/i}}</a>&nbsp;&middot; <a href="#" target="_blank" rel="alwaysShowSensitiveMedia">{{_i}}Always show me sensitive media{{/i}}</a> </div> </div> {{/isPossiblySensitive}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class=" js-media-preview-container media-preview-container position-rel width-p--100 {{^isMediaPreviewLarge}}{{^isMediaPreviewCompact}}{{^isMediaPreviewInQuoted}}margin-vm{{/isMediaPreviewInQuoted}}{{/isMediaPreviewCompact}}{{/isMediaPreviewLarge}} {{#isMediaPreviewSmall}}{{#isPossiblySensitive}}media-size-small{{/isPossiblySensitive}}{{/isMediaPreviewSmall}} {{#isMediaPreviewCompact}}media-size-medium margin-t--8{{/isMediaPreviewCompact}} {{#isMediaPreviewInQuoted}}margin-tm{{/isMediaPreviewInQuoted}} {{#isMediaPreviewLarge}}margin-t--20{{/isMediaPreviewLarge}} {{#isAnimatedGif}}is-gif{{/isAnimatedGif}} {{#isVideo}}is-video{{/isVideo}} {{^withAutoPlay}}{{^detailView}}is-paused{{/detailView}}{{/withAutoPlay}} {{#isPossiblySensitive}}media-sensitive-detail{{/isPossiblySensitive}} "> {{#isMediaPreviewLarge}} <div class="media-caret"></div> {{/isMediaPreviewLarge}} {{#isAnimatedGif}} {{> media/animated_gif}} {{/isAnimatedGif}} {{^isAnimatedGif}} <a class="js-media-image-link block med-link media-item {{thumbSizeClass}} {{#isPossiblySensitive}}is-invisible{{/isPossiblySensitive}} {{#needsSecureUrl}}js-needs-secure-url{{/needsSecureUrl}} {{^isGalleryView}}is-zoomable{{/isGalleryView}}" {{#needsSecureUrl}}data-original-url="{{mediaPreviewSrc}}{{imageSrc}}"{{/needsSecureUrl}} href="{{url}}" rel="mediaPreview" target="_blank" {{^needsSecureUrl}}{{^imageSrc}}style="background-image:url({{mediaPreviewSrc}})"{{/imageSrc}}{{/needsSecureUrl}} data-media-entity-id="{{mediaId}}" title="{{getAltText}}"> {{#isVideo}} {{> media/video_overlay}} {{/isVideo}} {{#imageSrc}} <img class="{{thumbClass}}" src="{{^needsSecureUrl}}{{imageSrc}}{{/needsSecureUrl}}" alt="{{altText}}"> {{/imageSrc}} </a> {{#showTaggedUsers}} {{{ renderTaggedUsers }}} {{/showTaggedUsers}} {{/isAnimatedGif}} {{> status/media_sensitive}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="media-grid-{{mediaLength}}"> {{#getUniqueMedia}} {{{renderMediaGridView}}} {{/getUniqueMedia}} {{> status/media_sensitive}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="tweet js-chirp {{#quotedTweet}}is-quote-tweet{{/quotedTweet}}"> <header class="tweet-header"> {{> status/message_timestamp}} {{#sender}} {{^isDeleted}} {{> status/tweet_single_header }} {{/isDeleted}} {{/sender}} </header> <div class="tweet-body"> <p class="js-tweet-text tweet-text with-linebreaks full-width">{{{htmlText}}}</p> {{#quotedTweet}} {{{ renderQuoted }}} {{/quotedTweet}} {{#quotedTweetMissing}} {{>status/quoted_tweet_missing}} {{/quotedTweetMissing}} {{>status/tweet_media_wrapper}} {{#withFooter}} <footer class="tweet-footer cf"> <ul class="tweet-actions"> <li class="position-rel"> {{#getMainUser}} <a class="tweet-action" href="#" rel="actionsMenu" data-user-id="{{id}}" data-chirp-id="{{message.id}}" data-actions-menu-position="pos-l" data-account-key="{{accountKey}}"> <i class="icon icon-more"></i> <span class="is-vishidden">{{_i}}More options{{/i}}</span> </a> {{/getMainUser}} </li> </ul> </footer> {{/withFooter}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#message}} {{<item_box}} {{$item_box_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/item_box_data}} {{$content}} {{> status/message}} {{/content}} {{/item_box}} {{/message}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#message}} {{<stream_item}} {{$stream_item_content_classes}}message-stream-item{{/stream_item_content_classes}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/stream_item_data}} {{$content}} {{>status/message}} {{/content}} {{/stream_item}} {{/message}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}is-actionable {{#unread}}is-unread {{/unread}}{{/stream_item_classes}} {{$stream_item_content_classes}}js-show-detail {{/stream_item_content_classes}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/stream_item_data}} {{$content}} <div class="tweet tweet-message js-chirp"> <header class="tweet-header"> {{>status/message_timestamp}} {{#getMainUser}} {{> status/tweet_single_header }} {{/getMainUser}} </header> <div class="l-table"> <div class="tweet-body l-cell"> <div class="l-table"> <p class="l-cell align-top"> {{#replied}} <i class="txt-size--14 txt-mute icon icon-reply"></i> {{/replied}} <span class="js-tweet-text tweet-text with-linebreaks">{{{htmlText}}}</span> {{#attachmentOnly}} <em>Attachment: image</em> {{/attachmentOnly}} </p> {{#hasMedia}} <div class="l-cell"> {{#getMedia}} <div class="tweet-message-attachment obj-right position-rel"> <div class="js-media-image-link media-item {{#isPossiblySensitive}}is-invisible{{/isPossiblySensitive}} {{#needsSecureUrl}}js-needs-secure-url{{/needsSecureUrl}} is-zoomable" {{#needsSecureUrl}}data-original-url="{{mediaPreviewSrc}}{{imageSrc}}"{{/needsSecureUrl}} {{^needsSecureUrl}}{{^imageSrc}}style="background-image:url({{mediaPreviewSrc}})"{{/imageSrc}}{{/needsSecureUrl}}> </div> </div> {{/getMedia}} </div> {{/hasMedia}} </div> </div> <div class="conversation-indicator l-cell"> <i class="icon icon-arrow-r"></i> </div> </div> </div> {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#created}} <time class="tweet-timestamp pull-right margin-t--2" datetime="{{toISOString}}" data-time="{{getTime}}"> {{/created}} <span class="txt-size-variable--12 txt-mute"> {{createdPrettyTimeOrDate}} </span> {{#created}} </time> {{/created}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{> column/column_header_detail}} <div class="column-content flex-auto position-rel"> <div class="js-detail-container js-dropdown-container column-scroller scroll-v pin-all {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"> <div> <div class="js-message-box"></div> <div class="js-message-detail chirp-container"> {{> spinner_large}} </div> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#tweet}} <div class="js-quote-detail quoted-tweet nbfc br--14 padding-al margin-b--8 position-rel {{^inCompose}}margin-tm is-actionable {{/inCompose}}" data-tweet-id="{{id}}" data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" rel="viewDetails"> <div> <header class="tweet-header"> {{#user}} {{>status/tweet_single_header}} {{/user}} </header> <div class="js-reply-info-container"> <div class="nbfc txt-ellipsis txt-mute"> {{{ getReplyContext }}} </div> </div> <p class="js-quoted-tweet-text with-linebreaks">{{{htmlText}}}</p> {{>status/tweet_media_wrapper}} {{#isQuoteStatus}} {{>status/attachment_tweet}} {{/isQuoteStatus}} {{#isInThread}} <p class="margin-t--4 margin-b---3 txt-mute">{{_i}}Show this thread{{/i}}</p> {{/isInThread}} </div> {{#inCompose}} <a class="js-quote-tweet-remove compose-media-grid-remove is-actionable"> {{>compose/close_button}} </a> {{/inCompose}} </div> {{/tweet}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="quoted-tweet nbfc br--4 padding-al margin-t--5 quoted-tweet-unavailable{{#hideTweetUnavailableMsg}} is-vishidden{{/hideTweetUnavailableMsg}}"> <p class="txt-mute">{{_i}}This Tweet is unavailable{{/i}}</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#inStream}} {{<stream_item}} {{$stream_item_data}} data-key="{{chirp.key}}{{chirp.id}}" data-account-key="{{chirp.account.getKey}}" {{/stream_item_data}} {{$content}}{{> status/scheduled_tweet_single }}{{/content}} {{/stream_item}} {{/inStream}} {{#inBox}} {{<item_box}} {{$item_box_classes}}js-tweet-box{{/item_box_classes}} {{$item_box_data}} data-key="{{chirp.key}}{{chirp.id}}" data-account-key="{{chirp.account.getKey}}" {{/item_box_data}} {{$content}}{{> status/scheduled_tweet_single }}{{/content}} {{/item_box}} {{/inBox}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{#reasonText}} <div class="margin-bl padding-as srt-error-msg"> {{reasonText}} </div> {{/reasonText}} <div class="padding-b--5 flex flex-row flex-align--center"> <span class="no-wrap flex-grow--1 txt-size--13">{{ formattedTime }}</span> {{#canEdit}} <a href="#" rel="edit"><i class="icon icon-edit padding-r--10"></i></a> {{/canEdit}} <a href="#" rel="destroy"><i class="icon icon-trash"></i></a> </div> <div class="padding-al br--4 scheduled-tweet"> {{#updates}} {{>status/scheduled_tweet_single_header}} {{/updates}} <div class="txt-size-variable--12">{{{getReplyContext}}}</div> {{#hasText}} <p class="with-linebreaks">{{{htmlText}}} {{#attachmentUrl}}{{attachmentUrl}}{{/attachmentUrl}}</p> {{/hasText}} {{#hasMedia}} <div class="js-media media-preview position-rel media-size-medium {{#isMediaGridContent}}media-grid-container{{/isMediaGridContent}} {{#inBox}}is-hidden{{/inBox}}" data-key="{{id}}"> {{#isMediaGridContent}} <div class="media-grid-{{mediaLength}}"> {{#getMedia}} {{> status/media_image_container}} {{/getMedia}} </div> {{/isMediaGridContent}} {{^isMediaGridContent}} {{#getMedia}} {{>status/media_thumb}} {{/getMedia}} {{/isMediaGridContent}} </div> {{/hasMedia}} </div> {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a class="account-link link-complex flex flex-row flex-align--center padding-bl" href="{{user.profileURL}}" rel="user" target="_blank"> <img class="avatar size24" src="{{user.avatar}}" width="24" height="24" alt="{{user.screenName}}\'s avatar"> <span class="account-inline txt-ellipsis{{#user.isProtected}} is-protected{{/user.isProtected}}  padding-l--8"> <b class="fullname link-complex-target">{{{user.emojifiedName}}}</b> {{#user.isVerified}}<i class="js-show-tip sprite sprite-verified-mini" title="{{_i}}Verified account{{/i}}"></i>{{/user.isVerified}} <span class="username txt-mute">@{{user.screenName}}</span> {{#user.isProtected}}<i class="icon icon-protected txt-mute txt-size--14"></i>{{/user.isProtected}} </span> </a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{> column/column_header_detail}} <div class="column-content flex-auto position-rel"> <div class="column-scroller scroll-v pin-all {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"> <div class="social-proof-for-tweet-title padding-vl txt-center txt-size--14"> <b>{{title}}</b> </div> {{#users}} {{<stream_item}} {{$content}} {{>account_summary}} {{/content}} {{/stream_item}} {{/users}} {{^users}} {{>column_loading_placeholder}} {{/users}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#trends}}{{#trend}} <li class="padding-b--10"> <a href="#" class="js-trend-item trend-item link-complex txt-size-variable--13" data-action="search" data-query="{{target.query}}"> <b class="trend-item-name link-complex-target ">{{{name}}}</b> <span class="trend-item-context">{{{description}}}</span> <div class="trend-item-stats txt-mute">{{{meta_description}}}</div> </a> </li> {{/trend}}{{/trends}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "{{#withActivityHeader}} {{> status/tweet_activity_header }} {{/withActivityHeader}} {{#getRelatedTweet}} {{> status/tweet_single}} {{/getRelatedTweet}}"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="activity-header {{#sourceAvatar}}has-source-avatar{{/sourceAvatar}} flex flex-align--baseline"> <div class="margin-h--5 margin-t---8 item-img flex-shrink--0 txt-right"> <i class="icon {{iconClass}} txt-size--16"></i> </div> <div class="nbfc {{#withSourceMute}}txt-mute txt-size-variable--12 {{/withSourceMute}}txt-line-height--20 flex-auto padding-b--2"> {{#sourceAvatar}}<img class="avatar size24" src="{{sourceAvatar}}">{{/sourceAvatar}} {{{htmlText}}} </div> {{#isAboutYou}} {{>status/tweet_activity_timestamp}} {{/isAboutYou}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<item_box}} {{$item_box_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/item_box_data}} {{$content}} {{> status/tweet_activity }} {{/content}} {{/item_box}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} {{<stream_item}} {{$stream_item_classes}}is-actionable {{chirpClassnames}}{{/stream_item_classes}} {{$stream_item_content_classes}}js-show-detail {{/stream_item_content_classes}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" data-tweet-id="{{#targetTweet}}{{id}}{{/targetTweet}}" {{/stream_item_data}} {{$content}} {{> status/tweet_activity }} {{> status/media_large_preview }} {{/content}} {{/stream_item}} {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#created}} <time class="js-timestamp tweet-timestamp txt-mute flex-shrink--0 txt-size-variable--12" datetime="{{toISOString}}" data-time="{{getTime}}"> {{/created}} <span class="txt-size-variable--12 txt-mute">{{createdPretty}}</span> {{#created}} </time> {{/created}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{<stream_item}} {{$stream_item_data}} {{#chirp}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" data-tweet-id="{{#getMainTweet}}{{id}}{{/getMainTweet}}" {{/chirp}} {{/stream_item_data}} {{$content}} {{#chirp}} <div class="js-tweet tweet-detail {{#isFavorite}}is-favorite{{/isFavorite}} {{#isRetweeted}}is-retweet{{/isRetweeted}} {{#quotedTweet}}is-quote-tweet{{/quotedTweet}} {{#isInThread}}{{#hasReplies}}js-has-replies {{#indentedChirp}}margin-l--46{{/indentedChirp}}{{/hasReplies}}{{/isInThread}}"> <div class="{{^indentedChirp}}margin-b--10{{/indentedChirp}} {{#indentedChirp}}margin-l---46{{/indentedChirp}}"> {{#getMainUser}} {{> account_summary }} {{/getMainUser}} </div> {{^isInThread}} <div class="txt-size-variable--12 margin-b--2"> {{{getReplyContext}}} </div> {{/isInThread}} {{#indentedChirp}} <div class="thread margin-t--4"></div> {{/indentedChirp}} <p class="js-tweet-text tweet-text txt-size-variable--18 margin-b--10 with-linebreaks{{#translation}} tweet-translation-original-text margin-bn{{/translation}}{{#indentedChirp}} padding-t--10{{/indentedChirp}}" lang="{{lang}}">{{{htmlText}}}</p> {{#translation}}{{>status/tweet_translation}}{{/translation}} {{#isTranslatable}}{{^translation}}<a class="js-translate-call-to-action txt-mute" href="#" rel="translateTweet">{{_i}}Translate Tweet{{/i}}</a>{{/translation}}{{/isTranslatable}} {{#getMainTweet}} <div class="js-tweet-media tweet-detail-media margin-v--15 margin-h--0 is-hidden {{#user}}{{#isProtected}}is-protected{{/isProtected}}{{/user}}"></div> {{^hasMedia}} {{#quotedTweet}} {{{ renderQuoted }}} {{/quotedTweet}} {{/hasMedia}} {{#quotedTweetMissing}} {{! placeholder to be replaced when quoted tweet is fetched}} <div class="js-attachment-tweet"> {{>status/attachment_tweet}} </div> {{/quotedTweetMissing}} <div class="js-card-container"></div> <div class="margin-tl txt-mute txt-size-variable--12"> <a href="{{getChirpURL}}" rel="url" target="_blank">{{createdPrettyFull}}</a> &middot; <a href="{{sourceUrl}}" rel="url" target="_blank">{{sourceNoHTML}}</a> </div> {{#hasLocationData}} <div class="margin-bl txt-mute txt-size-variable--12 tweet-location"> <a href="{{getLocationURL}}" rel="url" target="_blank"><i class="icon icon-base-valigned icon-geo"></i>{{getLocationFullName}}</a> </div> {{/hasLocationData}} <footer> <div class="js-tweet-stats"></div> {{> status/tweet_detail_actions}} </footer> {{/getMainTweet}} </div> <div class="js-detail-view-inline detail-view-inline item-box-full-bleed padding-axl scroll-conversation {{^isInThread}}dark-border-top{{/isInThread}} {{#indentedChirp}}dark-border margin-l--46{{/indentedChirp}}"> <div rel="reply" class="js-detail-view-inline-text detail-view-inline-text padding-h--15 padding-v--10 inline-block full-width txt-ellipsis br--20">{{_i}}Reply to{{/i}} {{mentions}}</div> </div> {{#dataminr}} <a class="js-skip-to-replies is-hidden is-actionable link-complex block item-box-full-bleed padding-hxl padding-bl scroll-conversation" rel="skipToReplies"> &#8595; <span class="link-complex-target align-middle">{{_i}}Skip to replies{{/i}}</span> </a> {{/dataminr}} {{/chirp}} {{/content}} {{/stream_item}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul class="tweet-detail-actions {{^withRemove}}{{^withDragHandle}}without-tweet-drag-handles{{/withDragHandle}}{{/withRemove}}"> <li class="tweet-detail-action-item margin-ln"> <a class="js-reply-action tweet-detail-action position-rel" href="#" rel="reply"> <i class="icon icon-reply"></i><span class="is-vishidden">{{_i}}Reply{{/i}}</span> <span class="reply-triangle"></span> </a> </li> {{#getMainUser}} <li class="tweet-detail-action-item {{#isProtected}}is-protected-action{{/isProtected}}"> <a class="tweet-detail-action {{#isProtected}}no-pointer-events{{/isProtected}}" href="#" rel="retweet"> <i class="js-icon-retweet icon icon-retweet{{#isRetweeted}}-filled{{/isRetweeted}} icon-retweet-toggle"></i> <span class="is-vishidden">{{_i}}Retweet{{/i}}</span> </a> </li> {{/getMainUser}} <li class="tweet-detail-action-item"> {{#account}} <a class="js-show-tip tweet-detail-action position-rel" href="#" rel="favorite" title="{{>text/favorite_action}}"> <i class="js-icon-favorite icon {{^isFavorited}}icon-favorite{{/isFavorited}}{{#isFavorited}}icon-heart-filled{{/isFavorited}} icon-favorite-toggle txt-center"></i>            <span class="is-vishidden"> {{_i}}Like{{/i}} </span> </a> {{/account}} </li> <li class="tweet-detail-action-item position-rel"> <a class="js-tweet-detail-action tweet-detail-action" href="#" rel="actionsMenu" data-user-id="{{#getMainUser}}{{id}}{{/getMainUser}}" data-chirp-id="{{#getMainTweet}}{{id}}{{/getMainTweet}}" data-account-key="{{account.getKey}}"> <i class="icon icon-more"></i><span class="is-vishidden">{{_i}}Options{{/i}}</span> </a> </li> {{#withDragHandle}} <li class="feature-customtimelines tweet-drag-handle tweet-detail-action-item"> <span class="tweet-detail-action is-actionable" href="{{getChirpURL}}"> <i class="icon icon-move"></i><span class="is-vishidden">{{_i}}Drag to Collection{{/i}}</span> </span> </li> {{/withDragHandle}} {{#withRemove}} <li class="feature-customtimelines tweet-detail-action-item"> <a class="js-show-tip tweet-detail-action tweet-detail-action" href="{{getChirpURL}}" rel="removeFromCustomTimeline" data-tweet-id="{{#getMainTweet}}{{id}}{{/getMainTweet}}" title="{{_i}}Remove from collection{{/i}}" data-placement="bottom"> <i class="icon icon-close"></i> </a> </li> {{/withRemove}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-replies-before tweet-detail-reply"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#hasMedia}} {{#isMediaGridContent}} <div class="js-media media-preview detail-preview media-size-large"> {{> status/media_unique_preview}} </div> {{/isMediaGridContent}} {{^isMediaGridContent}} <div class="js-media media-preview detail-preview"> {{#getUniqueMedia}} {{{renderMediaDetailView}}} {{/getUniqueMedia}} </div> {{/isMediaGridContent}} {{/hasMedia}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-replies-to replies-after"></div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="rpl"> <textarea name="inreplyto" class="js-reply-tweetbox scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-alt"></textarea> <div class="rpl-actions cf"> <button class="js-reply-popout js-show-tip Button--link padding-a--0 width--30 dm-action" title="{{_i}}Popout{{/i}}"> <i class="icon icon-popout icon-medium"></i> </button> <button class="js-reply-add-image js-show-tip Button--link padding-a--0 width--30 dm-action" title="{{_i}}Add image{{/i}}"> <i class="icon icon-camera icon-medium"></i> </button> <div class="pull-right"> <input type="text" readonly="readonly" class="js-reply-charcount pull-left"/> {{#avatarURL}} <img src="{{avatarURL}}" title="@{{from}}" class="js-show-tip avatar size30 neg-margin-bl obj-left"/> {{/avatarURL}} <button class="Button--primary js-send">{{_i}}Reply{{/i}}</button> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#analytics}} <div class="tweet-stats tweet-stat txt-size-variable--12 txt-mute padding-t--5"> <a href="{{url}}" target="_blank" rel="url noopener noreferrer" class="js-open-analytics js-show-tip full-width" title="{{_i}}View on analytics.twitter.com{{/i}}" data-placement="bottom"> <i class="icon icon-analytics icon-tb"></i> <span class="txt-size-variable--10">{{text}}</span> </a> </div> {{/analytics}} {{#stats.length}} <div class="js-stats-list tweet-stats flex flex-row flex-align--baseline flex-wrap--wrap"> {{#stats}} <div data-type="{{type}}" class="{{^noLink}}js-tweet-stat is-actionable{{/noLink}} tweet-stat txt-size-variable--12 flex flex-row flex-align--baseline"> <b class="js-value margin-r--5"></b> <span class="js-label stat-word txt-size-variable--12">{{label}}</span> </div> {{/stats}} </div> {{/stats.length}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{> column/column_header_detail}} <div class="column-content flex-auto position-rel"> <div class="js-detail-container js-dropdown-container column-scroller scroll-v pin-all {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}} scroll-conversation"> <div class="js-detail-content"> <div class="js-inreplyto"></div> {{#withDataminr}}<div class="js-dataminr-header dataminr padding-tm padding-hl padding-bn">Dataminr header</div>{{/withDataminr}} <div class="js-tweet-detail tweet-detail-wrapper"> {{> spinner_large}} </div> {{#withDataminr}}<div class="js-dataminr-footer dataminr">Dataminr footer</div>{{/withDataminr}} <div class="js-tweet-replies tweet-detail-reply"></div> </div> </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#tweet}} {{<item_box}} {{$item_box_classes}}js-tweet-box{{/item_box_classes}} {{$item_box_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/item_box_data}} {{$content}} {{> status/tweet_single }} {{/content}} {{/item_box}} {{/tweet}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#tweet}} {{<stream_item}} {{$stream_item_classes}}is-actionable {{chirpClassnames}}{{/stream_item_classes}} {{$stream_item_content_classes}}js-show-detail {{/stream_item_content_classes}} {{$stream_item_data}} data-key="{{key}}{{id}}" data-account-key="{{#account}}{{getKey}}{{/account}}" {{/stream_item_data}} {{$content}} {{> status/tweet_single }} {{> status/media_large_preview }} {{/content}} {{/stream_item}} {{/tweet}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#isMediaPreviewOff}} {{#hasAnimatedGif}} <div class="media-badge txt-size-variable--12 txt-mute"><i class="icon icon-gif-badge txt-size-variable--15 align-top"></i> {{_i}}GIF{{/i}}</div> {{/hasAnimatedGif}} {{#hasImage}}{{^hasAnimatedGif}} <div class="media-badge txt-size-variable--12 txt-mute"><i class="icon icon-image txt-size-variable--15 align-top"></i> {{#isMediaGridContent}}{{_i}}Images{{/i}}{{/isMediaGridContent}} {{^isMediaGridContent}}{{_i}}Image{{/i}}{{/isMediaGridContent}} </div> {{/hasAnimatedGif}}{{/hasImage}} {{#hasVideo}} <div class="media-badge txt-size-variable--12 txt-mute"><i class="icon icon-play-badge txt-size-variable--15 align-top"></i> {{_i}}Video{{/i}}</div> {{/hasVideo}} {{/isMediaPreviewOff}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{>status/tweet_media_indications}} {{#withMediaPreview}} {{#hasMedia}} {{^isMediaPreviewLarge}} {{^isMediaPreviewOff}} {{#isMediaGridContent}} <div class="js-media media-preview media-grid-container {{^isMediaPreviewCompact}} media-size-medium  margin-vm{{/isMediaPreviewCompact}} {{#isMediaPreviewCompact}} media-size-medium no-radius margin-t--8{{/isMediaPreviewCompact}}" data-key="{{id}}"> {{> status/media_preview}} </div> {{/isMediaGridContent}} {{^isMediaGridContent}} <div class="js-media media-preview {{#showThumbs}}detail-preview{{/showThumbs}} {{#isMediaPreviewCompact}} no-radius{{/isMediaPreviewCompact}} position-rel" data-key="{{id}}"> {{> status/media_preview}} </div> {{/isMediaGridContent}} {{/isMediaPreviewOff}} {{/isMediaPreviewLarge}} {{/hasMedia}} {{/withMediaPreview}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-tweet tweet {{#isFavorite}}is-favorite{{/isFavorite}} {{#isRetweeted}}is-retweet{{/isRetweeted}} {{#isInConvo}}is-conversation{{/isInConvo}} {{#isMinimalist}}is-minimalist{{/isMinimalist}} {{#quotedTweet}}is-quote-tweet{{/quotedTweet}} {{#quotedTweetMissing}}is-quote-tweet{{/quotedTweetMissing}} {{#withContentMute}}txt-mute{{/withContentMute}} {{#hasReplies}}js-has-replies{{/hasReplies}}"> {{#isRetweetedStatus}} <div class="tweet-context txt-size-variable--12 txt-mute padding-bs"> <div class="obj-left item-img"> <i class="pull-right icon icon-retweet-filled icon-small-context icon-retweet-color txt-size--16"></i> </div> <div class="nbfc"> {{#user}} <a href="{{getProfileURL}}" rel="user" target="_blank">{{{emojifiedName}}}</a>{{_i}} Retweeted{{/i}} {{/user}} </div> </div> {{/isRetweetedStatus}} <header class="tweet-header js-tweet-header flex flex-row flex-align--baseline"> {{#getMainUser}} {{>status/tweet_single_header}} {{/getMainUser}} {{#getMainTweet}} {{>status/tweet_timestamp}} {{/getMainTweet}} </header> {{#isInConvo}} {{#hasReplies}} <div class="thread"></div> {{/hasReplies}} {{/isInConvo}} <div class="tweet-body js-tweet-body"> {{^isInThread}} {{#getMainTweet}} <div class="nbfc txt-size-variable--12 txt-ellipsis"> {{{ getReplyContext }}} </div> {{/getMainTweet}} {{/isInThread}} <p class="js-tweet-text tweet-text {{#withLinebreaks}}with-linebreaks{{/withLinebreaks}} {{#translation}}tweet-translation-original-text margin-bn{{/translation}}" lang="{{lang}}">{{{htmlText}}}</p> <div class="js-card-container"></div> {{^hasMedia}} {{#quotedTweet}} {{{ renderQuoted }}} {{/quotedTweet}} {{#isInThread}} <div class="margin-b--5"></div> {{/isInThread}} {{/hasMedia}} {{#quotedTweetMissing}} {{>status/quoted_tweet_missing}} {{/quotedTweetMissing}} {{#translation}}{{>status/tweet_translation}}{{/translation}} {{>status/tweet_media_wrapper}} </div> {{>status/tweet_single_footer}} <div class="js-show-this-thread"> {{^isInConvo}} {{#isInThread}} {{^inDialog}} <p class="color-twitter-blue txt-link txt-ellipsis link-complex-target margin-t--5">{{_i}}Show this thread{{/i}}</p> {{/inDialog}} {{#inDialog}} <p class="txt-mute">{{_i}}Show this thread{{/i}}</p> {{/inDialog}} {{/isInThread}} {{/isInConvo}} </div> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<ul class="js-tweet-actions tweet-actions full-width {{#withTweetActionsVisible}}is-visible{{/withTweetActionsVisible}}"> <li class="tweet-action-item pull-left margin-r--10"> <a class="js-reply-action tweet-action position-rel" href="#" rel="reply"> <i class="icon icon-reply txt-center {{#withPrettyEngagements}}pull-left{{/withPrettyEngagements}}"></i> {{#withPrettyEngagements}} <span class="pull-right icon-reply-toggle margin-l--2 margin-t--1 txt-size--12 js-reply-count reply-count">{{#prettyReplyCount}}{{prettyReplyCount}}{{/prettyReplyCount}}</span> {{/withPrettyEngagements}} <span class="is-vishidden">{{_i}}Reply{{/i}}</span> <span class="reply-triangle"></span> </a> </li> {{#getMainUser}} <li class="tweet-action-item pull-left margin-r--10 {{#isProtected}}is-protected-action{{/isProtected}}"> <a class="tweet-action {{#isProtected}}no-pointer-events{{/isProtected}}" href="#" rel="retweet"> <i class="js-icon-retweet icon icon-retweet{{#isRetweeted}}-filled{{/isRetweeted}} icon-retweet-toggle txt-center {{#withPrettyEngagements}}pull-left{{/withPrettyEngagements}}"></i> {{#withPrettyEngagements}} <span class="pull-right icon-retweet-toggle margin-l--3 margin-t--1 txt-size--12 js-retweet-count retweet-count">{{#prettyRetweetCount}}{{prettyRetweetCount}}{{/prettyRetweetCount}}</span> {{/withPrettyEngagements}} <span class="is-vishidden">{{_i}}Retweet{{/i}}</span> </a> </li> {{/getMainUser}} <li class="tweet-action-item pull-left margin-r--10"> <a class="js-show-tip tweet-action position-rel" href="#" rel="favorite" title="{{>text/favorite_action}}"> <i class="js-icon-favorite icon {{^isFavorited}}icon-favorite{{/isFavorited}}{{#isFavorited}}icon-heart-filled{{/isFavorited}} icon-favorite-toggle txt-center {{#withPrettyEngagements}}pull-left{{/withPrettyEngagements}}"></i> {{#withPrettyEngagements}} <span class="pull-right icon-favorite-toggle margin-l--2 margin-t--1 txt-size--12 js-like-count like-count">{{#prettyLikeCount}}{{prettyLikeCount}}{{/prettyLikeCount}}</span> {{/withPrettyEngagements}} <span class="is-vishidden"> {{_i}}Like{{/i}} </span> </a> </li> <li class="tweet-action-item position-rel pull-left margin-r--10"> <a class="tweet-action" href="#" rel="actionsMenu" data-user-id="{{getMainUser.id}}" data-chirp-id="{{id}}" data-account-key="{{account.getKey}}" data-actions-menu-position="{{actionsMenuPosition}}" data-parent-chirp-id="{{chirp.id}}"> <i class="icon icon-more txt-right"></i> <span class="is-vishidden">{{_i}}More options{{/i}}</span> </a> </li> {{#withDragHandle}} <li class="feature-customtimelines tweet-drag-handle tweet-action-item pull-right margin-l--7"> <span class="tweet-action" href="{{getChirpURL}}"> <i class="icon icon-move txt-right txt-right"></i> <span class="is-vishidden">{{_i}}Drag to Collection{{/i}}</span> </span> </li> {{/withDragHandle}} {{#withRemove}} <li class="feature-customtimelines tweet-action-item pull-right margin-l--13"> <a class="js-show-tip tweet-action" href="{{getChirpURL}}" rel="removeFromCustomTimeline" data-tweet-id="{{#getMainTweet}}{{id}}{{/getMainTweet}}" title="{{_i}}Remove from Collection{{/i}}" data-placement="bottom"> <i class="icon icon-close txt-right"></i> </a> </li> {{/withRemove}} </ul>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#withFooter}} <footer class="tweet-footer cf"> {{^decider.in_reply_to_indicator}} {{#getMainTweet}} {{#inReplyToID}} <a class="pull-left margin-v--2 txt-mute txt-size--12 link-complex" href="#" rel="viewDetails"> <span class="link-complex-target"> {{_i}}View Conversation{{/i}} </span> </a> {{/inReplyToID}} {{/getMainTweet}} {{/decider.in_reply_to_indicator}} {{#withTweetActions}} {{> status/tweet_single_actions}} {{/withTweetActions}} </footer> {{/withFooter}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a class="account-link link-complex {{#withInlinedUsername}}inline{{/withInlinedUsername}}{{^withInlinedUsername}}block{{/withInlinedUsername}} flex-auto" href="{{getProfileURL}}" rel="user" target="_blank"> <div class="obj-left item-img tweet-img position-rel"> {{#withAvatar}} <img class="tweet-avatar avatar pin-top-full-width" src="{{profileImageURL}}" alt="{{screenName}}\'s avatar"> {{/withAvatar}} </div> <div class="nbfc {{#withInlinedUsername}}inline{{/withInlinedUsername}}"> <span class="account-inline txt-ellipsis{{#isProtected}} is-protected{{/isProtected}}"> <b class="fullname link-complex-target">{{{emojifiedName}}}</b> {{#isVerified}}<i class="js-show-tip sprite sprite-verified-mini" title="{{_i}}Verified account{{/i}}"></i>{{/isVerified}} <span class="username txt-mute">@{{screenName}}</span> {{#isProtected}}<i class="icon icon-protected txt-mute txt-size--14"></i>{{/isProtected}} </span> </div> </a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#created}} <time class="tweet-timestamp js-timestamp txt-mute flex-shrink--0" datetime="{{toISOString}}" data-time="{{getTime}}"> {{/created}} <a class="txt-size-variable--12 no-wrap" href="{{getChirpURL}}" rel="url" target="_blank">{{createdPretty}}</a> {{#created}} </time> {{/created}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-tweet-translation in-tweet-divider"> <p class="tweet-translation-attribution-text block txt-uppercase padding-vl txt-mute"> {{#localizedLanguageName}}{{_i}}Translated from {{localizedLanguageName}} by {{>text/microsoft_translator_link}}{{/i}}{{/localizedLanguageName}} {{^localizedLanguageName}}{{_i}}Translated by {{>text/microsoft_translator_link}}{{/i}}{{/localizedLanguageName}} </p> <p class="js-tweet-translation-text tweet-translation-text">{{#translation}}{{{htmltext}}}{{/translation}}</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<article class="stream-item js-stream-item {{#withDragHandle}} is-draggable {{/withDragHandle}} {{$stream_item_classes}}{{/stream_item_classes}}" {{$stream_item_data}}{{/stream_item_data}} {{#withDragHandle}} data-drag-type="tweet"{{/withDragHandle}} data-tweet-id="{{#getMainTweet}}{{id}}{{/getMainTweet}}"> <div class="js-stream-item-content item-box {{$stream_item_content_classes}}{{/stream_item_content_classes}}"> {{$content}}{{/content}} </div> </article>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="pin-right pin-bottom margin-r--20 margin-b--20 padding-v--6 padding-r--10 padding-l--12 bg-color-twitter-lightest-gray color-twitter-dark-black z-index--1 br-1 bs-1"> {{_i}}A new version of TweetDeck is available!{{/i}} <button class="js-suggest-refresh--refresh Button--primary margin-l--6">{{_i}}Refresh{{/i}}</button> <a href="#" class="js-suggest-refresh--dismiss link-normal-dark margin-l--6"><i class="icon icon-close icon-tb color-twitter-gray"></i></a> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="padding-vxl"> <p class="color-twitter-gray txt-size--13 padding-hxl padding-bxl account-settings-bb"> {{_i}}You\'ve been invited to contribute to these Twitter accounts.{{/i}} <a href="https://support.twitter.com/articles/20171753-using-team-accounts-on-tweetdeck" target="_blank" rel="url noopener noreferrer">{{_i}}Learn more{{/i}}</a>. </p> {{#invitations}} <div class="js-account-settings-invited-row padding-vl padding-hxl position-rel account-settings-bb" data-account-key="{{accountKey}}" {{#isAdmin}}data-user-is-admin{{/isAdmin}} data-user-id="{{userId}}"> <div class="js-account-settings-summary nbfc flex-auto"> <a href="{{profileURL}}" class="link-complex" rel="user" target="_blank"> {{>account_settings_account_summary}} </a> </div> <div class="flex-row flex margin-t--12"> <button class="js-account-action Button--primary flex-grow--1 margin-r--5" data-action="inviteAccept" data-account-key="{{accountKey}}">Accept</button> <button class="js-account-action Button--danger flex-grow--1 margin-l--5" data-action="inviteCancel" data-account-key="{{accountKey}}">Decline</button> </div> </div> {{/invitations}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div data-testid="gdprConsentModal" class="txt-center padding-v--30 padding-h--50 width--523"> <i class="padding-v--30 icon icon-twitter-bird color-twitter-blue txt-size--30"></i> <h1 class="padding-v--20 txt-size--22 txt-bold">{{_i}}Updates to the Twitter Terms of Service and Privacy Policy{{/i}}</h1> <p class="padding-t--5 padding-b--20 color-twitter-dark-gray txt-size--14">{{_i}}Twitter is updating its Terms and Privacy Policy. To continue using TweetDeck, you’ll need to visit Twitter’s website and agree to the updated Terms and Privacy Policy.{{/i}}</p> <button class="js-next margin-t--10 margin-b--20 Button Button--primary">Next</button> <p class="padding-v--30 color-twitter-dark-gray txt-size--14">{{_i}}For more information, visit the{{/i}} <a href="https://help.twitter.com">{{_i}}Help Center{{/i}}</a>.</p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{_i}}There\'s already a TweetDeck account for that email address.{{/i}} <a href="#" data-action="forgotPassword">{{_i}}Want to recover your password?{{/i}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "<b>{{{content}}}</b>"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "<br>"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "</em>"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "</strong>"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "<em>"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "{{#account}} {{^isFavorite}} {{_i}}Like from {{getUsername}}{{/i}} {{/isFavorite}} {{#isFavorite}} {{_i}}Unlike from {{getUsername}}{{/i}} {{/isFavorite}} {{/account}}"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="https://www.twitter.com/{{screenName}}/followers_you_follow" target="_blank">{{_i}}more{{/i}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a class="js-media-flag-nsfw med-flaglink {{#flagged}}is-hidden{{/flagged}}" href="#">{{_i}}Flag media{{/i}}</a> <a class="js-media-flagged-nsfw med-flaglink {{^flagged}}is-hidden{{/flagged}}" href="https://support.twitter.com/articles/20069937" rel="url" target="_blank">{{_i}}Flagged (learn more){{/i}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="{{url}}" class="med-origlink" rel="url noopener noreferrer" target="_blank">{{_i}}View original{{/i}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "&ldquo;<em>{{value}}</em>&rdquo;"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#hashFlagUrl}}<img class="hashflag" draggable="false" src="{{hashFlagUrl}}">{{/hashFlagUrl}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="color-twitter-darker-gray txt-size--12 width--430 margin-a-auto padding-t--5 padding-b--10"> <p> {{_i}}By clicking “Try it now”, you agree to the {{/i}}<a href="https://help.twitter.com/en/rules-and-policies/tweetdeck-preview-terms" target="_blank">{{_i}}TweetDeck Preview Terms{{/i}}</a>{{_i}}, which incorporate our {{/i}}<a href="https://twitter.com/tos" target="_blank">{{_i}}Twitter Terms of Service{{/i}}</a>{{_i}}, as well as our {{/i}}<a href="https://twitter.com/privacy" target="_blank">{{_i}}Privacy Policy{{/i}}</a>. </p> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="https://twitter.com/{{#user}}{{screenName}}{{/user}}/lists/{{slug}}" rel="list" data-screen-name="{{#user}}{{screenName}}{{/user}}" data-slug="{{slug}}" target="_blank">{{name}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="https://twitter.com/{{#user}}{{screenName}}{{/user}}/lists/{{slug}}" rel="list" data-screen-name="{{#user}}{{screenName}}{{/user}}" data-slug="{{slug}}" target="_blank">{{fullName}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="http://support.twitter.com/articles/20170388-using-login-verification" rel="url" target="_blank" class="startflow-link">{{_i}}login verification{{/i}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="http://aka.ms/MicrosoftTranslatorAttribution" rel="url noopener noreferrer" target="_blank" class="inline-block align-middle sprite microsoft-logo margin-t--2"></a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "<strong>"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="https://twitter.com/{{#user}}{{screenName}}{{/user}}/{{slug}}" rel="user" data-user-name="{{#user}}{{screenName}}{{/user}}" class="link-complex" target="_blank"><span>@</span><span class="link-complex-target">{{#user}}{{screenName}}{{/user}}</span></a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="{{getProfileURL}}" rel="user" target="_blank">{{name}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "@{{inReplyToScreenName}}"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="https://twitter.com/search?q={{escapedSymbol}}{{searchTerm}}" rel="hashtag" target="_blank" class="link-complex"><span class="hash">{{symbol}}</span><span class="link-complex-target">{{searchTerm}}</span>{{>text/hashflag}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="https://twitter.com/{{screenName}}" rel="user" target="_blank">{{{emojifiedName}}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "<strong> {{#text}} {{text}} {{/text}} {{^text}} {{#name}} {{name}} {{/name}} {{/text}} {{{html}}} </strong>"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a class="account-link {{#withBold}}txt-bold{{/withBold}}" href="{{profileUrl}}" rel="user" target="_blank">{{#unsafe}}{{{name}}}{{/unsafe}}{{^unsafe}}{{{name}}}{{/unsafe}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a href="{{getProfileURL}}" rel="user" class="pretty-link" target="_blank">@{{screenName}}</a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<header class="js-app-header pin-all app-header"> <div class="js-app-header-inner pin-v app-header-inner"> <button class="js-show-drawer js-show-tip Button Button--primary Button--large tweet-button margin-t--8 margin-b--10" title="{{_i}}New Tweet{{/i}}" data-tooltip-position="right" data-drawer="compose"> <i class="Icon icon-compose"></i> <span class="label margin-an" data-test-id="tweet-call-to-action">{{_i}}Tweet{{/i}}</span> </button> \x3c!-- wrap close button as it has different padding --\x3e <div class="js-compose-controls attach-compose-buttons"></div> <div class="js-search js-overlay app-search"> <button class="js-header-action js-show-tip app-search-fake padding-al margin-bm" data-action="show-search" title="{{_i}}Search{{/i}}" data-tooltip-position="right"> <i class="icon icon-search"></i> </button> <form class="js-search-form app-search-form full-width"> <label class="is-vishidden">{{_i}}Search{{/i}}</label> {{>search_input}} </form> <div class="js-search-in-popover"></div> </div> <div class="js-column-nav-scroller column-navigator antiscroll-wrap"> <nav id="column-navigator" class="js-column-nav scroll-v antiscroll-inner"></nav> </div> <nav class="app-navigator margin-bm padding-tm"> <a class="js-header-action js-app-add-column link-clean cf app-nav-link padding-h--16 padding-v--2 txt-bold with-nav-border-t" data-action="add-column" data-title="{{_i}}Add column{{/i}}"> <div class="obj-left margin-l--2"> <i class="icon icon-plus icon-medium"></i> </div> <div class="nbfc padding-ts hide-condensed txt-size--14 txt-bold app-nav-link-text">{{_i}}Add column{{/i}}</div> </a> <a class="js-header-action link-clean cf app-nav-link padding-h--16 padding-v--2" data-action="change-sidebar-width" data-title="{{_i}}Expand{{/i}}"> <div class="obj-left margin-l--2"> <i class="icon icon-arrow-l-double icon-medium"></i> <i class="icon icon-arrow-r-double icon-medium"></i> </div> <div class="nbfc padding-ts hide-condensed txt-size--14 txt-bold app-nav-link-text">{{_i}}Collapse{{/i}}</div> </a> <a class="js-show-drawer js-header-action link-clean cf app-nav-tab padding-h--10 padding-v--2"  data-title="{{_i}}Accounts{{/i}}" data-drawer="accountSettings"> <div class="obj-left margin-l--2"> <i class="icon icon-user-switch icon-medium position-rel"> <span class="js-account-count msg-unread-count numbered-badge bg-color-twitter-blue numbered-badge-onnav"></span> </i> </div> <div class="nbfc padding-ts hide-condensed txt-size--14 txt-bold app-nav-tab-text">{{_i}}Accounts{{/i}}</div> </a> <a class="js-hide-drawer position-rel link-clean cf app-nav-tab is-hidden is-selected padding-h--10 padding-v--2"  data-title="{{_i}}Accounts{{/i}}" data-drawer="accountSettings"> <div class="obj-left margin-l--2"> <i class="icon icon-user-switch icon-medium"></i> </div> <div class="nbfc padding-ts hide-condensed txt-size--14 txt-bold app-nav-tab-text">{{_i}}Accounts{{/i}}</div> </a> <a class="js-header-action js-app-settings link-clean cf app-nav-link padding-h--16 padding-v--2" data-action="settings-menu" data-title="{{_i}}Settings{{/i}}"> <div class="obj-left margin-l--2"> <i class="icon icon-settings icon-medium"></i> </div> <div class="nbfc padding-ts hide-condensed txt-size--14 txt-bold app-nav-link-text">{{_i}}Settings{{/i}}</div> </a> </nav> <div class="js-account-summary"/> {{>topbar/app_title}} {{>topbar/app_title_beta}} </div> </header>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<h1 class="js-logo app-title height--53"> <div class="is-hidden visible-in-contracted-header height--53 full-width flex flex-align--center flex-justify-content--center"> <span class="tweetdeck-logo height--24 width--26 color-transparent txt-size--0">TweetDeck</span> </div> <div class="invisible-in-contracted-header height--53 full-width flex flex-align--center"> <img src="{{#asset}}/global/tweetdeck.svg{{/asset}}" class="margin-l--16 height--24" alt="{{_i}}TweetDeck{{/i}}"/> </div> </h1>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<h1 class="js-beta-logo app-title height--53 is-hidden"> <div class="is-hidden visible-in-contracted-header height--53 full-width flex flex-column flex-align--center flex-justify-content--space-between"> <span class="tweetdeck-logo height--24 width--26 color-transparent txt-size--0">TweetDeck</span> <div class="full-width bg-color-twitter-blue color-twitter-white txt-size--10 txt-uppercase txt-weight-normal letter-spacing--3 padding-v--2">Beta</div> </div> <div class="invisible-in-contracted-header height--53 full-width flex flex-align--center position-rel nbfc"> <img src="{{#asset}}/global/tweetdeck.svg{{/asset}}" class="margin-l--16 height--24" alt="{{_i}}TweetDeck{{/i}}"/> <div class="position-abs width--88 margin-a---10 bg-color-twitter-blue color-twitter-white txt-size--10 txt-uppercase txt-weight-normal letter-spacing--3 txt-line-height--14 padding-v--2 beta-ribbon">Beta</div> </div> </h1>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="message-content {{bannerClasses}}"> <div class="message-row"> <span class="message-text padding-r--20"> {{{text}}} {{^subtext}} {{#actions}} <a class="btn {{buttonClass}} margin-l--10" data-action-id="{{actionId}}" {{#isExternalUrl}} href="{{url}}" rel="url" target="_blank" {{/isExternalUrl}}> {{label}} </a> {{/actions}} {{/subtext}} </span> </div> <div class="message-row"> {{#subtext}} <span class="message-subtext padding-r--20"> {{{subtext}}} {{#actions}} <a class="btn {{buttonClass}} margin-l--10" data-action-id="{{actionId}}" {{#isExternalUrl}} href="{{url}}" rel="url" target="_blank" {{/isExternalUrl}}> {{label}} </a> {{/actions}} </span> {{/subtext}} </div> {{^isUndismissable}} <a href="#" class="js-dismiss dismiss"> <i class="icon icon-close color-twitter-white"></i> </a> {{/isUndismissable}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<a data-user-name="{{screenName}}" href="#" rel="user"> <div class="nav-user-info cf margin-h--4 txt-size--14"> <img class="obj-left tweet-avatar avatar size36 margin-l--8 margin-r--6" src="{{profileImageURL}}" width="36" height="36" alt="{{screenName}}\'s avatar"> <div class="nbfc hide-condensed"> <div class="{{#isBadged}}fullname-badged-container{{/isBadged}}"> <span class="fullname txt-ellipsis inline-block txt-size--14 {{#isBadged}}fullname-badged{{/isBadged}} {{#isTranslator}}badge-translator{{/isTranslator}} {{#isVerified}}badge-verified{{/isVerified}} position-rel txt-bold"> {{{emojifiedName}}} </span> </div> <span class="username txt-ellipsis inline-block txt-size--12"> @{{screenName}} {{#isProtected}} <i class="icon icon-protected icon-match-context icon-tt"></i> {{/isProtected}} </span> </div> </div> </a>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<button class="js-try-query try-query Button Button--xsmall is-invisible flex-shrink--0 margin-l--28" data-query="{{query}}"> {{_i}}Try{{/i}} </button>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="{{#loading}}is-loading{{/loading}}"> {{#loading}} <img src="{{#asset}}/global/backgrounds/spinner_large_white.gif{{/asset}}" alt="{{_i}}Loading…{{/i}}"> {{/loading}} {{^loading}} <a href="#" class="js-dismiss mdl-dismiss link-normal-dark"> <i class="icon icon-close color-twitter-white"></i> </a> {{/loading}} {{#twitterProfile}} <div class="s-profile prf {{#isWithHeld}}prf-withheld{{/isWithHeld}}"> {{#profile}} <div class="prf-header" style="background-image: url({{profileBannerURL}})"> <div class="prf-header-inner-overlay"></div> <div class="width-p--85 margin-a-auto position-rel padding-b--20"> <a class="js-action-url link-clean" href="{{getProfileURL}}" target="_blank"> <span class="prf-img"> {{#isWithHeld}} <div class="avatar size73 avatar-border--2"></div> {{/isWithHeld}} {{^isWithHeld}} <img src="{{biggerProfileImageURL}}" class="avatar size73 avatar-border--2"> {{/isWithHeld}} </span> <strong class="fullname txt-size--24 hyphenate">{{{emojifiedName}}} {{#isVerified}}<i title="{{_i}}Verified account{{/i}}" class="js-show-tip sprite sprite-verified"></i>{{/isVerified}}{{#isTranslator}}<i title="{{_i}}Translator{{/i}}" class="js-show-tip sprite sprite-translator"></i>{{/isTranslator}}</strong> <p class="username">@{{screenName}}{{#isProtected}}<i class="icon icon-protected"></i>{{/isProtected}}<span class="prf-follow-status">{{_i}}Follows @{{preferredAccount}}{{/i}}</span></p> </a> <p class="prf-bio">{{{bio}}}</p> {{^isWithHeld}} <p class="location txt-ellipsis"> {{location}}{{#getDisplayURL}}{{#location}}&nbsp;&nbsp;<strong>&middot;</strong>&nbsp;&nbsp;{{/location}}<a href="{{url}}" class="prf-siteurl js-action-url" target="_blank">{{getDisplayURL}}</a>{{/getDisplayURL}} </p> <p class="js-show-tip inline-block margin-t--10 is-default" title="{{prettyTimeDateJoinedDate}}"> {{_i}}Joined{{/i}}&nbsp;{{prettyJoinedDate}} </p> {{/isWithHeld}} </div> </div> {{/profile}} {{^isWithHeld}} <div class="prf-actions"> {{> profile_card_stats}} <div class="js-social-proof social-proof-container txt-size--13 cf padding-al is-hidden"></div> <div class="js-profile-columns"> <ul class="lst-profile cf"> {{#displayOrderProfile}} <li class="js-item-launch {{class}}" data-action="open" data-type="{{type}}"> <a href="#"> <i class="icon {{columnIconClass}}"></i> <span class="txt-ellipsis">{{title}}</span> </a> </li> {{/displayOrderProfile}} </ul> </div> </div> {{/isWithHeld}} </div> {{/twitterProfile}} </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<p class="pull-left">{{_i}}Followed by{{/i}} </p><p class="social-proof-names pull-right">{{{followedByString}}}{{#others}} and {{{others}}}{{/others}}.</p>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#chirp}} <li class="js-typeahead-item js-typeahead-conversation-item is-actionable item-box" data-search-type="conversation" data-search-query="{{title}}" data-conversation-id="{{conversationId}}" data-account-key="{{accountKey}}" data-profile-image-url="{{profile_image_url_https}} "> <div class="account-summary cf"> <div class="obj-left item-img-24"> {{^withMultipleAvatars}} {{#avatars.0}} <img class="pull-left" src="{{profileImageURL}}" width="24" height="24" alt="{{screenName}}\'s avatar"> {{/avatars.0}} {{/withMultipleAvatars}} {{#withMultipleAvatars}} <div class="pull-left media-grid-container multiple-avatar-grid-mini "> <div class="{{avatarsClass}}"> {{#avatars}} <div class="media-image-container media-image-container-mini"> <div class="media-image block position-rel" style="background-image: url({{profileImageURL}});" ></div> </div> {{/avatars}} </div> </div> {{/withMultipleAvatars}} </div> <div class="nbfc list-text link-complex inline-block padding-ts"> {{#getConversationTitleInformation}} {{#name}} <b class="fullname block txt-ellipsis">{{{name}}}</b> {{/name}} {{^name}} {{#isOneToOne}} {{#participants.0}} <b class="fullname block txt-ellipsis">{{name}}</b> @{{screenName}} {{/participants.0}} {{/isOneToOne}} {{#isThreeway}} <b class="fullname block txt-ellipsis"> {{#participants.0}} {{name}}, {{/participants.0}} {{#participants.1}} {{name}} {{/participants.1}} </b> {{/isThreeway}} {{#isOneToMany}} {{#participants.0}} <b class="fullname block txt-ellipsis">{{name}}</b> + {{numberOfOtherParticipants}} {{/participants.0}} {{/isOneToMany}} {{/name}} {{/getConversationTitleInformation}} </div> </div> </li> {{/chirp}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-typeahead-dropdown margin-t--6 scroll-v {{#styledScrollbar}}scroll-styled-v{{/styledScrollbar}}"> <div class="js-typeahead-recent-search-clear js-typeahead-item recent-search-clear is-actionable color-twitter-blue pull-right margin-r--12 margin-t--6 padding-t--2" data-search-type="recent-search-clear" data-search-query="recent-search-clear"> {{_i}}Clear all{{/i}} </div> <ul class="js-typeahead-recent-search-list is-hidden"></ul> <ul class="js-typeahead-saved-search-list is-hidden"></ul> <ul class="js-typeahead-topic-list is-hidden"></ul> <ul class="js-typeahead-user-list is-hidden"></ul> <ul class="js-typeahead-conversation-list is-hidden list-divider"></ul> <ul class="js-typeahead-lists-list is-hidden list-divider"></ul> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#lists}} <li class="js-typeahead-item js-typeahead-list-item list-item is-actionable item-box" data-search-type="list" data-search-query="{{query}}"> <div class="list-summary cf"> <div class="obj-left item-img-24"> <i class="icon icon-list icon-medium list-icon"></i> </div> <div class="nbfc"> <div class="list-text link-complex inline-block"> <b class="fullname block txt-ellipsis">{{name}}</b> <span class="username block txt-ellipsis txt-mute">@{{screenName}}</span> </div> </div> </div> </li> {{/lists}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#locations}} <li class="js-typeahead-item js-typeahead-location-item is-actionable list-item item-box" data-search-type="location" data-location-name="{{fullName}}" data-location-lat="{{lat}}" data-location-lng="{{lng}}"> {{fullName}} </li> {{/locations}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<h4 class="padding-h--12 padding-v--6 txt-bold color-twitter-darker-gray"> {{_i}}Recent searches{{/i}} </h4> {{#recentSearches}} <li class="js-typeahead-item js-typeahead-recent-search-item list-item padding-v--10 padding-h--12 is-actionable item-box" data-search-type="recent-search" data-search-query="{{query}}"> <div class="nfbc txt-ellipsis width-p--94">{{{name}}}</div> <i class="remove-recent-search-item icon icon-close icon-small pin-right margin-r--12 margin-t---17"></i> </li> {{/recentSearches}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#savedSearches}} <li class="js-typeahead-item js-typeahead-saved-search-item list-item is-actionable item-box" data-search-type="saved-search" data-search-query="{{query}}"> <div class="obj-left item-img-24"> <i class="icon icon-search icon-medium list-icon"></i> </div> <div class="nfbc list-text txt-ellipsis">{{{name}}}</div> </li> {{/savedSearches}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#topics}} <li class="js-typeahead-item js-typeahead-topic-item list-item is-actionable item-box padding-v--8 padding-h--12" data-search-type="topic" data-search-query="{{topic}}"> <div class="nfbc list-text txt-ellipsis">{{{name}}}</div> </li> {{/topics}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{! NB: this template assumes data is in format provided by typeahead, not standard user object}} {{#users}} <li class="js-typeahead-item js-typeahead-user-item is-actionable list-item item-box" data-search-type="user" data-search-query="{{screen_name}}" data-screen-name="{{screen_name}}" data-user-name="{{name}}" data-user-id="{{id}}" data-profile-image-url="{{profile_image_url_https}} "> <div class="account-summary cf"> <div class="obj-left item-img-32"> <img class="js-avatar tweet-avatar avatar size32 pull-right" src="{{profile_image_url_https}}" width="32" height="32" /> </div> <div class="nbfc"> <div class="list-text link-complex inline-block max-width-p--100"> <b class="fullname block txt-ellipsis">{{{emojifiedName}}} {{#verified}}<i class="sprite sprite-verified-mini"></i>{{/verified}} </b> <span class="username block txt-ellipsis txt-mute">@{{screen_name}}</span> </div> </div> </div> </li> {{/users}} <li class="js-typeahead-item js-typeahead-user-item is-actionable list-item item-box" data-search-query="{{query}}" data-search-type="topic" data-search-scope="users"> Search all people for <strong>{{query}}</strong> </li>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '{{#users}} <li class="js-typeahead-item js-typeahead-user-item typeahead-item padding-am cf is-actionable" data-search-type="user" data-search-query="{{screen_name}}" data-screen-name="{{screen_name}}" data-user-name="{{name}}" data-user-id="{{id_str}}" data-user-is-dm-able="{{is_dm_able}}" data-profile-image-url="{{profile_image_url_https}}" data-verified="{{verified}}"> <img src="{{profile_image_url_https}}" class="avatar obj-left size24"> <div class="nbfc txt-ellipsis padding-ts"> <strong class="fullname">{{{emojifiedName}}}</strong> {{#verified}}<i class="js-show-tip sprite sprite-verified-mini txt-bot" title="{{_i}}Verified account{{/i}}"></i>{{/verified}} <span class="username"><span>@</span><span class="js-screenname">{{screen_name}}</span></span> </div> </li> {{/users}}'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="pull-left position-rel"> <button class="js-user-actions-menu btn btn-round btn-on-dark" data-user-id="{{profile.id}}" data-menu-position="{{actionsMenuPosition}}"> <i class="Icon icon-more"></i> </button> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-search-input-control search-input-control"> <input class="js-username-input js-submittable-input" type="text" placeholder="{{placeholder}}" value="" > {{#withSelectButton}} <a href="#" class="js-select-button txt-size--14 search-input-perform-search" tabindex="-1"> <i class="icon icon-small {{selectButtonIconClass}}"></i> </a> {{/withSelectButton}} <a href="#" class="js-clear-search txt-size--14 search-input-clear-search" tabindex="-1"> <i class="icon icon-close icon-small"></i> </a> <span class="js-spinner txt-size--14 spinner-small spinner-small-trans search-input-spinner"></span> </div>'
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = "Version {{version}}{{#buildIDShort}}-{{buildIDShort}}{{/buildIDShort}} ({{#wrapperVersion}}{{wrapperVersion}}-{{/wrapperVersion}}{{appEnv}}{{#isTouchDevice}}-touch{{/isTouchDevice}})"
}, function(e, t, i) {
	"use strict";
	i.r(t), t.default = '<div class="js-video-container video-container is-hidden position-rel color-twitter-white"> <video {{#isScheduled}}autoplay="autoplay"{{/isScheduled}} preload="auto" class="br--4" width="{{videoWidth}}" height="{{videoHeight}}" src="{{videoUrl}}"></video> <div class="js-custom-video-controls"></div> </div> <div class="js-processing-video full-width height--125 br--4 bg-color-twitter-deep-black"> <div class="processing-video-spinner"></div> <div class="color-twitter-white padding-t--8">{{_i}}Loading preview{{/i}}</div> </div>'
}, , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	window.TD = {
		storage: {},
		core: {},
		net: {},
		mustaches: "undefined" == typeof TD_mustaches ? {} : TD_mustaches,
		templates: {},
		components: {},
		services: {},
		controller: {
			auth: {}
		},
		vo: {},
		ui: {},
		sync: {},
		cache: {}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(9),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(459);
	e.exports = (0, r.default)({}, a)
}, function(e, t, i) {
	"use strict";
	var n, s = i(9),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(459);
	e.exports = (0, r.default)({}, a, {
		decider_overlay: {}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(9),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(459);
	e.exports = (0, r.default)({}, a, {
		debug_level: 0,
		debug_checks: !0,
		scribe_debug_level: 0,
		flight_debug: !1,
		web_root: "https://tweetdeck.localhost.twitter.com",
		api_root: "https://tweetdeck.localhost.twitter.com",
		internal_build: !0,
		decider_overlay: {}
	})
}, , , function(e, t, i) {
	"use strict";
	var n = a(i(68)),
		s = a(i(44)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	window.TD = window.TD || {}, window.TD.config = window.TD.config || {}, window.TD.metrics = function() {
		var e = {};

		function t(e, t) {
			return e.concat(t)
		}
		return e.DEBUG = TD.config.debug_level >= 4, e.throttle = 8e3, e.flush = !0, e.restoreFromFlush = !0, e.flushKey = "metrics.realtimeData", e.types = {
			counter: {
				key: "counters",
				empty: 0,
				append: function(e, t) {
					return e + t
				},
				hasValue: function(e) {
					return !!e
				},
				defaultValue: 1,
				isValidValue: function(e) {
					return "number" == typeof e && !isNaN(e) && e > 0
				}
			},
			metric: {
				key: "metrics",
				empty: [],
				append: function(e, t) {
					return e.concat(t)
				},
				hasValue: function(e) {
					return !(!e || !e.length)
				},
				defaultValue: [],
				isValidValue: function(e) {
					return t = e, "[object Array]" === Object.prototype.toString.call(t) && e.length;
					var t
				}
			}
		}, e.env = function() {
			return TD.util && TD.util.getAppEnv ? TD.util.getAppEnv() : "unknown"
		}, e.namespaces = {
			raw: function() {
				return ""
			},
			by_id: function() {
				return [TD.version, TD.buildIDShort, e.env()].join("-")
			}
		}, e.inflateMetricTriple = function(t) {
			var i = t[0],
				n = t[1],
				r = t[2],
				a = e.makeKey(n).split(":"),
				o = a[0],
				l = a.slice(1);
			return (0, s.default)(e.namespaces).map(function(t) {
				var n = e.namespaces[t](),
					s = [o, t, n].filter(Boolean),
					a = e.makeKey.apply(null, s.concat(l));
				return [i, a, r]
			})
		}, e.inflate = function(i) {
			return (0, s.default)(i).map(function(n) {
				return (0, s.default)(i[n]).map(function(e) {
					return [n, e, i[n][e]]
				}).map(e.inflateMetricTriple).reduce(t, [])
			}).reduce(t, []).reduce(function(e, t) {
				var i = t[0],
					n = t[1],
					s = t[2];
				return e[i] = e[i] || {}, e[i][n] = s, e
			}, {})
		}, e.log = function() {
			var t, i = {};

			function s() {
				e.send(e.inflate(i)), i = {}, t = null
			}

			function a() {
				e.throttle ? t || (t = setTimeout(s, e.throttle)) : s()
			}
			try {
				var o = localStorage.getItem(e.flushKey);
				localStorage.removeItem(e.flushKey), o && (i = JSON.parse(o), a())
			} catch (e) {}
			return (0, r.default)(window).on("beforeunload", function() {
					if (e.flush) try {
						localStorage.setItem(e.flushKey, (0, n.default)(i))
					} catch (e) {}
				}), (0, r.default)(window).on("metricsFlush", function() {
					s()
				}),
				function(t) {
					t.key = e.makeKey(t.key), t.type = t.type || "counter";
					var n = e.types[t.type],
						s = i[n.key] || (i[n.key] = {}),
						r = void 0 !== t.value ? t.value : n.defaultValue;
					n.isValidValue(r) && (n.hasValue(s[t.key]) || (s[t.key] = n.empty), s[t.key] = n.append(s[t.key], r), a())
				}
		}(), e.send = function(e) {
			return;
			var t = TD.config.api_root + "/metrics",
				i = (0, n.default)(e);
			if ("navigator" in window && "sendBeacon" in window.navigator) navigator.sendBeacon(t, i);
			else {
				var s = new XMLHttpRequest;
				s.open("post", t), s.responseType = "text/plain";
				try {
					s.send(i)
				} catch (e) {}
			}
		}, e.makeKey = function() {
			var e = [].slice.call(arguments);
			return ["blackbird"].concat(e).join(":").toLowerCase().replace(/^((?:blackbird:){2,})/, "blackbird:")
		}, e
	}(), TD.metrics.error = function() {
		var e = {
			preventCallThrough: !1,
			original: function() {},
			handler: function(t, i, n, s, r) {
				var a = {
					action: "error",
					data: {}
				};
				return r ? (a.data.type = r.constructor.name, a.data.message = r.message, a.data.stack = r.stack) : (a.data.type = (t.match(/([a-z]+error)/i) || [])[1], a.data.message = (t.match(/:(.*)$/) || [])[1], a.data.message = (a.message || "").toString().trim()), a.data.file = i, a.data.line = n, a.data.column = s, a.key = TD.metrics.makeKey(a.action, a.data.type), TD.metrics.log(a), !0 === e.preventCallThrough || e.original.apply(null, arguments)
			},
			unhandledRejectionHandler: function(e) {
				if (e.reason && e.reason instanceof DOMException && "AbortError" === e.reason.name) {
					var t = {
						action: "error",
						data: {
							type: "unhandledPromiseRejection",
							message: (e.reason.message || e.reason || "").toString().trim()
						}
					};
					t.key = TD.metrics.makeKey(t.action, t.data.type), TD.metrics.log(t)
				}
			},
			attach: function() {
				e.attached || (e.attached = !0, e.original = window.onerror || e.original, window.onerror = e.handler, window.onunhandledrejection = e.unhandledRejectionHandler)
			}
		};
		return e
	}(), TD.metrics.event = function() {
		var e = {
			handler: function(t, i) {
				e.attached && i && i.key && TD.metrics.log(i)
			},
			attach: function() {
				e.attached || (e.attached = !0, (0, r.default)(window).on("metric", e.handler))
			},
			detatch: function() {
				e.attached && ((0, r.default)(window).off("metric", e.handler), e.attached = !1)
			}
		};
		return e
	}()
}, , , function(e, t, i) {
	"use strict";
	i(1821), i(1822), i(1823), TD.util = i(17), TD.core.defer = i(193), i(644), i(1824), i(717), i(21), TD.util.poller = i(1835), TD.sync.util = i(419), i(722)
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = i(0),
		o = (n = a) && n.__esModule ? n : {
			default: n
		};
	s = o.default, r = {}, s.publish = function(e, t) {
		var i = r[e];
		i && s.each(i, function() {
			this.apply(s, t || [])
		})
	}, s.subscribe = function(e, t) {
		return r[e] || (r[e] = []), r[e].push(t), [e, t]
	}, s.unsubscribe = function(e) {
		if (!(e && e instanceof Array)) throw new Error("unsubscribe(): handle must be an instance of Array.");
		var t = e[0];
		r[t] && s.each(r[t], function(i) {
			this == e[1] && r[t].splice(i, 1)
		})
	}, s.unsubscribeAll = function(e) {
		delete r[e]
	}
}, function(e, t, i) {
	"use strict";
	var n;
	window.TD = window.TD || {}, TD.core = TD.core || {}, TD.core.base64 = (n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", {
		encode: function(e) {
			var t, i, s, r, a, o, l, c = "",
				u = 0;
			for (e = function(e) {
					e = e.replace(/\r\n/g, "\n");
					for (var t = "", i = 0; i < e.length; i++) {
						var n = e.charCodeAt(i);
						n < 128 ? t += String.fromCharCode(n) : n > 127 && n < 2048 ? (t += String.fromCharCode(n >> 6 | 192), t += String.fromCharCode(63 & n | 128)) : (t += String.fromCharCode(n >> 12 | 224), t += String.fromCharCode(n >> 6 & 63 | 128), t += String.fromCharCode(63 & n | 128))
					}
					return t
				}(e); u < e.length;) r = (t = e.charCodeAt(u++)) >> 2, a = (3 & t) << 4 | (i = e.charCodeAt(u++)) >> 4, o = (15 & i) << 2 | (s = e.charCodeAt(u++)) >> 6, l = 63 & s, isNaN(i) ? o = l = 64 : isNaN(s) && (l = 64), c = c + n.charAt(r) + n.charAt(a) + n.charAt(o) + n.charAt(l);
			return c
		},
		decode: function(e) {
			var t, i, s, r, a, o, l = "",
				c = 0;
			for (e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); c < e.length;) t = n.indexOf(e.charAt(c++)) << 2 | (r = n.indexOf(e.charAt(c++))) >> 4, i = (15 & r) << 4 | (a = n.indexOf(e.charAt(c++))) >> 2, s = (3 & a) << 6 | (o = n.indexOf(e.charAt(c++))), l += String.fromCharCode(t), 64 != a && (l += String.fromCharCode(i)), 64 != o && (l += String.fromCharCode(s));
			return l = function(e) {
				for (var t = "", i = 0, n = 0, s = 0, r = 0; i < e.length;)(n = e.charCodeAt(i)) < 128 ? (t += String.fromCharCode(n), i++) : n > 191 && n < 224 ? (s = e.charCodeAt(i + 1), t += String.fromCharCode((31 & n) << 6 | 63 & s), i += 2) : (s = e.charCodeAt(i + 1), r = e.charCodeAt(i + 2), t += String.fromCharCode((15 & n) << 12 | (63 & s) << 6 | 63 & r), i += 3);
				return t
			}(l)
		}
	})
}, function(e, t, i) {
	"use strict";
	window.TD = window.TD || {}, TD.core = TD.core || {}, TD.core.sha1 = function(e) {
		function t(e, t) {
			return e << t | e >>> 32 - t
		}

		function i(e) {
			var t, i = "";
			for (t = 7; t >= 0; t--) i += (e >>> 4 * t & 15).toString(16);
			return i
		}
		var n, s, r, a, o, l, c, u, d, h = new Array(80),
			m = 1732584193,
			f = 4023233417,
			p = 2562383102,
			g = 271733878,
			v = 3285377520,
			T = (e = function(e) {
				e = e.replace(/\r\n/g, "\n");
				for (var t = "", i = 0; i < e.length; i++) {
					var n = e.charCodeAt(i);
					n < 128 ? t += String.fromCharCode(n) : n > 127 && n < 2048 ? (t += String.fromCharCode(n >> 6 | 192), t += String.fromCharCode(63 & n | 128)) : (t += String.fromCharCode(n >> 12 | 224), t += String.fromCharCode(n >> 6 & 63 | 128), t += String.fromCharCode(63 & n | 128))
				}
				return t
			}(e)).length,
			w = new Array;
		for (s = 0; s < T - 3; s += 4) r = e.charCodeAt(s) << 24 | e.charCodeAt(s + 1) << 16 | e.charCodeAt(s + 2) << 8 | e.charCodeAt(s + 3), w.push(r);
		switch (T % 4) {
			case 0:
				s = 2147483648;
				break;
			case 1:
				s = e.charCodeAt(T - 1) << 24 | 8388608;
				break;
			case 2:
				s = e.charCodeAt(T - 2) << 24 | e.charCodeAt(T - 1) << 16 | 32768;
				break;
			case 3:
				s = e.charCodeAt(T - 3) << 24 | e.charCodeAt(T - 2) << 16 | e.charCodeAt(T - 1) << 8 | 128
		}
		for (w.push(s); w.length % 16 != 14;) w.push(0);
		for (w.push(T >>> 29), w.push(T << 3 & 4294967295), n = 0; n < w.length; n += 16) {
			for (s = 0; s < 16; s++) h[s] = w[n + s];
			for (s = 16; s <= 79; s++) h[s] = t(h[s - 3] ^ h[s - 8] ^ h[s - 14] ^ h[s - 16], 1);
			for (a = m, o = f, l = p, c = g, u = v, s = 0; s <= 19; s++) d = t(a, 5) + (o & l | ~o & c) + u + h[s] + 1518500249 & 4294967295, u = c, c = l, l = t(o, 30), o = a, a = d;
			for (s = 20; s <= 39; s++) d = t(a, 5) + (o ^ l ^ c) + u + h[s] + 1859775393 & 4294967295, u = c, c = l, l = t(o, 30), o = a, a = d;
			for (s = 40; s <= 59; s++) d = t(a, 5) + (o & l | o & c | l & c) + u + h[s] + 2400959708 & 4294967295, u = c, c = l, l = t(o, 30), o = a, a = d;
			for (s = 60; s <= 79; s++) d = t(a, 5) + (o ^ l ^ c) + u + h[s] + 3395469782 & 4294967295, u = c, c = l, l = t(o, 30), o = a, a = d;
			m = m + a & 4294967295, f = f + o & 4294967295, p = p + l & 4294967295, g = g + c & 4294967295, v = v + u & 4294967295
		}
		return (d = i(m) + i(f) + i(p) + i(g) + i(v)).toLowerCase()
	}
}, function(e, t, i) {
	"use strict";
	TD.constants = {
		keyCodes: {
			enter: 13,
			shift: 16,
			escape: 27,
			tab: 9,
			del: 8,
			spacebar: 32,
			upArrow: 38,
			downArrow: 40,
			leftArrow: 37,
			rightArrow: 39
		},
		charCodes: {
			space: 32,
			questionMark: 63
		},
		regexps: {
			name: /\S+/,
			username: /^[@＠]?([a-zA-Z0-9_]{1,15})$/,
			usernameWithAt: /^[@＠]{1}([a-zA-Z0-9_]{1,15}) /,
			usernameWithSpace: /^[@＠]{1}(\w{1,15})\s*$/,
			email: /^[\w-]+([^@,\s\<\>\(\)]*[\w-]+)?\@[\w-]+(\.[\w-]+)*\.[a-z]{2,}$/i,
			tokenSeparator: /[\s-_]+/
		},
		time: {
			oneDay: 864e5,
			oneHour: 36e5
		},
		TDApi: {
			ERROR_ACCOUNT_DOESNT_EXIST: "Account does not exist.",
			ERROR_BAD_PASSWORD: "BadPassword",
			ERROR_SESSION_EXPIRED: "SessionExpired",
			ERROR_RATE_LIMIT_EXCEEDED: "RateLimitExceeded"
		}
	}
}, , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = a(i(48)),
		s = a(i(21)),
		r = a(i(261));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.isCacheHit = function(e) {
		return e.chirps.length || e.remainderCursor.interval.empty
	}, t.getRefreshCursor = function(e, i) {
		var n = s.default.reorderableFeedTypes[e.getType()];
		return {
			bounds: {
				lower: n ? void 0 : t.calculateLowerBound(e.getKey(), i, {
					isGapless: s.default.gaplessFeedTypes[e.getType()]
				})
			},
			interval: t.getRefreshCursorInterval(i, {
				isReorderable: n
			})
		}
	}, t.getRefreshCursorInterval = function(e) {
		var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).isReorderable,
			i = void 0 !== t && t ? void 0 : e.find(function(e) {
				return "rest" === e.apiSource
			});
		return new r.default(i ? r.default.excEnd(i) : r.default.negInf, r.default.posInf)
	}, t.getBottomChirp = function(e) {
		return e[e.length - 1]
	}, t.getTopChirp = function(e) {
		return e[0]
	}, t.makeChirpInterval = function(e) {
		return 0 === e.length ? r.default.empty : new r.default(r.default.incEnd(t.getBottomChirp(e)), r.default.incEnd(t.getTopChirp(e)))
	}, t.makeRequestResultInterval = function(e, i) {
		return 0 === e.length ? r.default.empty : new r.default(r.default.incEnd(t.getBottomChirp(e)), i.to)
	}, t.getBoundsForChirp = function(e, i) {
		return {
			lower: t.getLowerBoundForChirp(e, i),
			upper: t.getUpperBoundForChirp(e, i)
		}
	}, t.annotateChirpsWithApiBounds = function(e, t) {
		return t.map(function(t) {
			var i = TD.util.poller.getBoundsForChirp(e.getType(), t);
			return t.setApiBounds(e.getKey(), i)
		})
	}, t.calculateUpperBound = function(e, t) {
		for (var i, n = t.length - 1; n >= 0 && (void 0 === i || null === i);) i = t[n].getApiBounds(e).upper, n -= 1;
		return i
	}, t.getUpperBoundForChirp = function(e, t) {
		var i, n = TD.controller.FeedPoller.CURSORED_ON_TWEET_TIMESTAMP[e],
			s = e === TD.controller.FeedPoller.FEED_TYPES.search,
			r = TD.controller.FeedPoller.CURSORED_FEED_TYPES[e],
			a = TD.controller.FeedPoller.SCHEDULED_FEED_TYPES[e],
			o = e === TD.controller.FeedPoller.FEED_TYPES.dataminr,
			l = e === TD.controller.FeedPoller.FEED_TYPES.direct,
			c = t.id,
			u = TD.decider.get("universal_search_timelines"),
			d = function(e, t, i) {
				return t > e.length - 1 ? e : e.substr(0, t) + i + e.substr(t + 1)
			};
		if (a) c = t.created.getTime() / 1e3;
		else if (s && u) c = u && TD.decider.get("universal_search_timelines_by_id") ? t.id : t.created.getTime() / 1e3;
		else if (n) c = t.minPosition || t.created.getTime(), c -= 1;
		else if (r) c = t.cursor;
		else if (o) c = t.dataminr.created.getTime();
		else if (l) c = t.minEntryId;
		else if ("string" == typeof c)
			for (var h = c.length - 1; h >= 0; h--) {
				if ("0" !== (i = c.charAt(h))) {
					c = d(c, h, i = String(Number(i) - 1));
					break
				}
				c = d(c, h, 9)
			} else c--;
		return c
	}, t.calculateLowerBound = function(e, t, i) {
		for (var s, r = (i = (0, n.default)({}, i, {
				isGapless: !1
			})).isGapless ? 0 : 1; r < t.length && void 0 === s;) "rest" === t[r].apiSource && (s = t[r].getApiBounds(e).lower), r += 1;
		return s
	}, t.getLowerBoundForChirp = function(e, t) {
		var i = TD.controller.FeedPoller.CURSORED_ON_TWEET_TIMESTAMP[e],
			n = e === TD.controller.FeedPoller.FEED_TYPES.search,
			s = TD.controller.FeedPoller.CURSORED_FEED_TYPES[e],
			r = TD.controller.FeedPoller.SCHEDULED_FEED_TYPES[e],
			a = e === TD.controller.FeedPoller.FEED_TYPES.dataminr,
			o = e === TD.controller.FeedPoller.FEED_TYPES.direct,
			l = TD.decider.get("universal_search_timelines");
		return r ? t.created.getTime() / 1e3 : n && l ? l && TD.decider.get("universal_search_timelines_by_id") ? t.id : t.created.getTime() / 1e3 : i ? t.maxPosition || t.created.getTime().toString() : s ? t.cursor : a ? t.dataminr.created.getTime() : o ? t.cursor : t.getSinceId()
	}
}, function(e, t, i) {
	"use strict";
	i.r(t);
	var n = i(0);
	/**
	 * @license
	 * jQuery Tools 1.2.5 Dateinput - <input type="date" /> for humans
	 *
	 * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.
	 *
	 * http://flowplayer.org/tools/form/dateinput/
	 *
	 * Since: Mar 2010
	 * Date:    Wed Sep 22 06:02:10 2010 +0000
	 */
	! function(e) {
		e.tools = e.tools || {
			version: "1.2.5"
		};
		var t, i = [],
			n = [75, 76, 38, 39, 74, 72, 40, 37],
			s = {};

		function r(e, t) {
			return 32 - new Date(e, t, 32).getDate()
		}

		function a(e, t) {
			for (e = "" + e, t = t || 2; e.length < t;) e = "0" + e;
			return e
		}(t = e.tools.dateinput = {
			conf: {
				format: "mm/dd/yy",
				selectors: !1,
				yearRange: [-5, 5],
				lang: "en",
				offset: [0, 0],
				speed: 0,
				firstDay: 0,
				min: void 0,
				max: void 0,
				trigger: !1,
				css: {
					prefix: "cal",
					input: "date",
					root: 0,
					head: 0,
					title: 0,
					prev: 0,
					next: 0,
					month: 0,
					year: 0,
					days: 0,
					body: 0,
					weeks: 0,
					today: 0,
					current: 0,
					week: 0,
					off: 0,
					sunday: 0,
					focus: 0,
					disabled: 0,
					trigger: 0
				}
			},
			localize: function(t, i) {
				e.each(i, function(e, t) {
					i[e] = t.split(",")
				}), s[t] = i
			}
		}).localize("en", {
			months: "January,February,March,April,May,June,July,August,September,October,November,December",
			shortMonths: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec",
			days: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday",
			shortDays: "S,M,T,W,T,F,S"
		});
		var o = /d{1,4}|m{1,4}|yy(?:yy)?|"[^"]*"|'[^']*'/g,
			l = e("<a/>");

		function c(e, t, i) {
			var n = e.getDate(),
				r = e.getDay(),
				c = e.getMonth(),
				u = e.getFullYear(),
				d = {
					d: n,
					dd: a(n),
					ddd: s[i].shortDays[r],
					dddd: s[i].days[r],
					m: c + 1,
					mm: a(c + 1),
					mmm: s[i].shortMonths[c],
					mmmm: s[i].months[c],
					yy: String(u).slice(2),
					yyyy: u
				},
				h = t.replace(o, function(e) {
					return e in d ? d[e] : e.slice(1, e.length - 1)
				});
			return l.html(h).html()
		}

		function u(e) {
			return parseInt(e, 10)
		}

		function d(e, t) {
			return e.getFullYear() === t.getFullYear() && e.getMonth() == t.getMonth() && e.getDate() == t.getDate()
		}

		function h(e) {
			if (e) {
				if (e.constructor == Date) return e;
				if ("string" == typeof e) {
					var t = e.split("-");
					if (3 == t.length) return new Date(u(t[0]), u(t[1]) - 1, u(t[2]));
					if (!/^-?\d+$/.test(e)) return;
					e = u(e)
				}
				var i = new Date;
				return i.setDate(i.getDate() + e), i
			}
		}
		e.expr[":"].date = function(t) {
			var i = t.getAttribute("type");
			return i && "date" == i || !!e(t).data("dateinput")
		}, e.fn.dateinput = function(a) {
			return this.data("dateinput") ? this : (a = e.extend(!0, {}, t.conf, a), e.each(a.css, function(e, t) {
				t || "prefix" == e || (a.css[e] = (a.css.prefix || "") + (t || e))
			}), this.each(function() {
				var t = new function(t, a) {
					var o, l, m, f, p, g, v = this,
						T = new Date,
						w = a.css,
						b = s[a.lang],
						y = e("#" + w.root),
						_ = y.find("#" + w.title),
						C = t.attr("data-value") || a.value || t.val(),
						S = t.attr("min") || a.min,
						D = t.attr("max") || a.max;
					if (0 === S && (S = "0"), C = h(C) || T, S = h(S || 365 * a.yearRange[0]), D = h(D || 365 * a.yearRange[1]), !b) throw "Dateinput: invalid language: " + a.lang;
					if ("date" == t.attr("type")) {
						var k = e("<input/>");
						e.each("class,disabled,id,maxlength,name,readonly,required,size,style,tabindex,title,value".split(","), function(e, i) {
							k.attr(i, t.attr(i))
						}), t.replaceWith(k), t = k
					}
					t.addClass(w.input);
					var E = t.add(v);
					if (!y.length) {
						if ((y = e("<div><div><div/></div><div><div/><div/></div></div>").hide().css({
								position: "relative"
							}).attr("id", w.root)).children().eq(0).attr("id", w.head).end().eq(1).attr("id", w.body).children().eq(0).attr("id", w.days).end().eq(1).attr("id", w.weeks).end().end().end(), _ = y.find("#" + w.head).find("div").attr("id", w.title), a.selectors) {
							var I = e("<select/>").attr("id", w.month),
								A = e("<select/>").attr("id", w.year);
							_.html(I.add(A))
						}
						for (var x = y.find("#" + w.days), M = 0; M < 7; M++) x.append(e("<span/>").text(b.shortDays[(M + a.firstDay) % 7]));
						e("#calendar").append(y)
					}
					var R = y.find("#" + w.weeks);

					function F(i, n, s) {
						C = i, m = i.getFullYear(), f = i.getMonth(), p = i.getDate(), (s = s || e.Event("api")).type = "change", E.trigger(s, [i]), s.isDefaultPrevented() || (t.val(c(i, n.format, n.lang)), t.data("date", i), v.hide(s))
					}

					function O(e) {
						e.type = "onShow", E.trigger(e)
					}
					A = y.find("#" + w.year), I = y.find("#" + w.month), e.extend(v, {
						show: function(n) {
							if (!(t.attr("readonly") || t.attr("disabled") || g || ((n = n || e.Event()).type = "onBeforeShow", E.trigger(n), n.isDefaultPrevented()))) {
								e.each(i, function() {
									this.hide()
								}), g = !0, I.unbind("change").change(function() {
									v.setValue(A.val(), e(this).val())
								}), A.unbind("change").change(function() {
									v.setValue(e(this).val(), I.val())
								}), o = y.find("#" + w.prev).unbind("click").click(function(e) {
									return o.hasClass(w.disabled) || v.addMonth(-1), !1
								}), l = y.find("#" + w.next).unbind("click").click(function(e) {
									return l.hasClass(w.disabled) || v.addMonth(), !1
								}), v.setValue(C);
								var s = t.offset();
								return /iPad/i.test(navigator.userAgent) && (s.top -= e(window).scrollTop()), a.speed ? y.show(a.speed, function() {
									O(n)
								}) : (y.show(), O(n)), v
							}
						},
						setValue: function(t, i, n) {
							var s = u(i) >= -1 ? new Date(u(t), u(i), u(n || 1)) : t || C;
							if (s < S ? s = S : s > D && (s = D), t = s.getFullYear(), i = s.getMonth(), n = s.getDate(), -1 == i ? (i = 11, t--) : 12 == i && (i = 0, t++), !g) return F(s, a), v;
							f = i, m = t, p = n;
							var c, h = new Date(t, i, 1 - a.firstDay).getDay(),
								y = r(t, i),
								k = r(t, i - 1);
							if (a.selectors) {
								I.empty(), e.each(b.months, function(i, n) {
									S < new Date(t, i + 1, -1) && D > new Date(t, i, 0) && I.append(e("<option/>").html(n).attr("value", i))
								}), A.empty();
								for (var E = T.getFullYear(), x = E + a.yearRange[0]; x < E + a.yearRange[1]; x++) S <= new Date(x + 1, -1, 1) && D > new Date(x, 0, 0) && A.append(e("<option/>").text(x));
								I.val(i), A.val(t)
							} else _.html(b.months[i] + " " + t);
							R.empty(), o.add(l).removeClass(w.disabled);
							for (var M, O, P = h ? 0 : -7; P < (h ? 42 : 35); P++) M = e("<a/>"), P % 7 == 0 && (c = e("<div/>").addClass(w.week), R.append(c)), P < h ? (M.addClass(w.off), O = k - h + P + 1, s = new Date(t, i - 1, O)) : P >= h + y ? (M.addClass(w.off), O = P - y - h + 1, s = new Date(t, i + 1, O)) : (O = P - h + 1, s = new Date(t, i, O), d(C, s) ? M.attr("id", w.current).addClass(w.focus) : d(T, s) && M.attr("id", w.today)), S && s < S && M.add(o).addClass(w.disabled), D && s > D && M.add(l).addClass(w.disabled), M.attr("href", "#" + O).text(O).data("date", s), c.append(M);
							return R.find("a").click(function(t) {
								var i = e(this);
								return i.hasClass(w.disabled) || (e("#" + w.current).removeAttr("id"), i.attr("id", w.current), F(i.data("date"), a, t)), !1
							}), w.sunday && R.find(w.week).each(function() {
								var t = a.firstDay ? 7 - a.firstDay : 0;
								e(this).children().slice(t, t + 1).addClass(w.sunday)
							}), v
						},
						setMin: function(e, t) {
							return S = h(e), t && C < S && v.setValue(S), v
						},
						setMax: function(e, t) {
							return D = h(e), t && C > D && v.setValue(D), v
						},
						today: function() {
							return v.setValue(T)
						},
						addDay: function(e) {
							return this.setValue(m, f, p + (e || 1))
						},
						addMonth: function(e) {
							return this.setValue(m, f + (e || 1), p)
						},
						addYear: function(e) {
							return this.setValue(m + (e || 1), f, p)
						},
						hide: function(t) {
							if (g) {
								if ((t = e.Event()).type = "onHide", E.trigger(t), e(document).unbind("click.d").unbind("keydown.d"), t.isDefaultPrevented()) return;
								y.hide(), g = !1
							}
							return v
						},
						getConf: function() {
							return a
						},
						getInput: function() {
							return t
						},
						getCalendar: function() {
							return y
						},
						getValue: function(e) {
							return e ? c(C, e, a.lang) : C
						},
						isOpen: function() {
							return g
						}
					}), e.each(["onBeforeShow", "onShow", "change", "onHide"], function(t, i) {
						e.isFunction(a[i]) && e(v).bind(i, a[i]), v[i] = function(t) {
							return t && e(v).bind(i, t), v
						}
					}), t.bind("focus click", v.show).keydown(function(t) {
						var i = t.keyCode;
						return !g && e(n).index(i) >= 0 ? (v.show(t), t.preventDefault()) : !!(t.shiftKey || t.ctrlKey || t.altKey || 9 == i) || t.preventDefault()
					}), h(t.val()) && F(C, a)
				}(e(this), a);
				i.push(t);
				var l = t.getInput().data("dateinput", t);
				o = o ? o.add(l) : l
			}), o || this);
			var o
		}
	}(i.n(n).a)
}, function(e, t, i) {
	"use strict";
	i.r(t);
	var n, s = i(0);
	(n = i.n(s).a)(function() {
		var e;
		n.support.transition = (e = function() {
			var e, t = document.createElement("bootstrap"),
				i = {
					WebkitTransition: "webkitTransitionEnd",
					MozTransition: "transitionend",
					OTransition: "oTransitionEnd otransitionend",
					transition: "transitionend"
				};
			for (e in i)
				if (void 0 !== t.style[e]) return i[e]
		}()) && {
			end: e
		}
	})
}, function(e, t, i) {
	"use strict";
	i.r(t);
	var n = i(0);
	! function(e) {
		var t = function(e, t) {
			this.init("tooltip", e, t)
		};
		t.prototype = {
			constructor: t,
			init: function(t, i, n) {
				var s, r, a, o, l;
				for (this.type = t, this.$element = e(i), this.options = this.getOptions(n), this.enabled = !0, l = (a = this.options.trigger.split(" ")).length; l--;) "click" == (o = a[l]) ? this.$element.on("click." + this.type, this.options.selector, e.proxy(this.toggle, this)) : "manual" != o && (s = "hover" == o ? "mouseenter" : "focus", r = "hover" == o ? "mouseleave" : "blur", this.$element.on(s + "." + this.type, this.options.selector, e.proxy(this.enter, this)), this.$element.on(r + "." + this.type, this.options.selector, e.proxy(this.leave, this)));
				this.options.selector ? this._options = e.extend({}, this.options, {
					trigger: "manual",
					selector: ""
				}) : this.fixTitle()
			},
			getOptions: function(t) {
				return (t = e.extend({}, e.fn[this.type].defaults, t, this.$element.data())).delay && "number" == typeof t.delay && (t.delay = {
					show: t.delay,
					hide: t.delay
				}), t
			},
			enter: function(t) {
				var i = e(t.currentTarget)[this.type](this._options).data(this.type);
				if (!i.options.delay || !i.options.delay.show) return i.show();
				clearTimeout(this.timeout), i.hoverState = "in", this.timeout = setTimeout(function() {
					"in" == i.hoverState && i.show()
				}, i.options.delay.show)
			},
			leave: function(t) {
				var i = e(t.currentTarget)[this.type](this._options).data(this.type);
				if (this.timeout && clearTimeout(this.timeout), !i.options.delay || !i.options.delay.hide) return i.hide();
				i.hoverState = "out", this.timeout = setTimeout(function() {
					"out" == i.hoverState && i.hide()
				}, i.options.delay.hide)
			},
			show: function() {
				var t, i, n, s, r, a, o = e.Event("show");
				if (this.hasContent() && this.enabled) {
					if (this.$element.trigger(o), o.isDefaultPrevented()) return;
					t = this.tip(), this.setContent(), this.options.animation && t.addClass("fade"), t.detach(), this.options.container ? t.appendTo(this.options.container) : t.insertAfter(this.$element), r = this.getPlacement(), t.css({
						top: "object" == typeof r ? r.top : 0,
						left: "object" == typeof r ? r.left : 0,
						display: "block"
					}), i = this.getPosition(), n = t[0].offsetWidth, s = t[0].offsetHeight, this.elementOffset = this.$element.offset();
					switch (this.interval && clearTimeout(this.interval), this.interval = setInterval(function() {
							requestAnimationFrame(function() {
								var e = this.$element.closest("body").length > 0,
									t = this.$element.offset(),
									i = this.elementOffset && (this.elementOffset.top != t.top || this.elementOffset.left != t.left);
								e && !i || this.hide()
							}.bind(this))
						}.bind(this), 500), r) {
						case "bottom":
							a = {
								top: i.top + i.height,
								left: i.left + i.width / 2 - n / 2
							};
							break;
						case "top":
							a = {
								top: i.top - s,
								left: i.left + i.width / 2 - n / 2
							};
							break;
						case "left":
							a = {
								top: i.top + i.height / 2 - s / 2,
								left: i.left - n
							};
							break;
						case "right":
							a = {
								top: i.top + i.height / 2 - s / 2,
								left: i.left + i.width
							}
					}
					this.applyPlacement(a, r.className || r), this.$element.trigger("shown")
				}
			},
			applyPlacement: function(e, t) {
				var i, n, s, r, a = this.tip(),
					o = a[0].offsetWidth,
					l = a[0].offsetHeight;
				a.offset(e).addClass("string" == typeof t ? t : t.placement).addClass("in"), i = a[0].offsetWidth, n = a[0].offsetHeight, "top" == t && n != l && (e.top = e.top + l - n, r = !0), "bottom" == t || "top" == t ? (s = 0, e.left < 0 && (s = -2 * e.left, e.left = 0, a.offset(e), i = a[0].offsetWidth, n = a[0].offsetHeight), this.replaceArrow(s - o + i, i, "left")) : this.replaceArrow(n - l, n, "top"), r && a.offset(e)
			},
			replaceArrow: function(e, t, i) {
				this.arrow().css(i, e ? 50 * (1 - e / t) + "%" : "")
			},
			setContent: function() {
				var e = this.tip(),
					t = this.getTitle();
				e.find(".tooltip-inner")[this.options.html ? "html" : "text"](t), e.removeClass("fade in top bottom left right")
			},
			hide: function() {
				var t, i = this.tip(),
					n = e.Event("hide");
				if (this.$element.trigger(n), !n.isDefaultPrevented()) return i.removeClass("in"), !this.options.suppressFadeOut && e.support.transition && this.$tip.hasClass("fade") ? (t = setTimeout(function() {
					i.off(e.support.transition.end).detach()
				}, 500), i.one(e.support.transition.end, function() {
					clearTimeout(t), i.detach()
				})) : i.detach(), this.elementOffset = null, clearInterval(this.interval), this.$element.trigger("hidden"), this
			},
			fixTitle: function() {
				var e = this.$element;
				(e.attr("title") || "string" != typeof e.attr("data-original-title")) && e.attr("data-original-title", e.attr("title") || "").attr("title", "")
			},
			hasContent: function() {
				return this.getTitle()
			},
			getPlacement: function() {
				var e = this.$element.attr("data-tooltip-position");
				return e || (e = "function" == typeof this.options.placement ? this.options.placement.call(this, this.$tip[0], this.$element[0]) : this.options.placement), e
			},
			getPosition: function() {
				var t = this.$element[0];
				return e.extend({}, "function" == typeof t.getBoundingClientRect ? t.getBoundingClientRect() : {
					width: t.offsetWidth,
					height: t.offsetHeight
				}, this.$element.offset())
			},
			getTitle: function() {
				var e = this.$element,
					t = this.options;
				return e.attr("data-original-title") || ("function" == typeof t.title ? t.title.call(e[0]) : t.title)
			},
			tip: function() {
				return this.$tip = this.$tip || e(this.options.template)
			},
			arrow: function() {
				return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
			},
			validate: function() {
				this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null)
			},
			enable: function() {
				this.enabled = !0
			},
			disable: function() {
				this.enabled = !1
			},
			toggleEnabled: function() {
				this.enabled = !this.enabled
			},
			toggle: function(t) {
				var i = t ? e(t.currentTarget)[this.type](this._options).data(this.type) : this;
				i.tip().hasClass("in") ? i.hide() : i.show()
			},
			destroy: function() {
				this.hide().$element.off("." + this.type).removeData(this.type)
			}
		};
		var i = e.fn.tooltip;
		e.fn.tooltip = function(i) {
			return this.each(function() {
				var n = e(this),
					s = n.data("tooltip"),
					r = "object" == typeof i && i;
				s || n.data("tooltip", s = new t(this, r)), "string" == typeof i && s[i]()
			})
		}, e.fn.tooltip.Constructor = t, e.fn.tooltip.defaults = {
			animation: !0,
			placement: "top",
			selector: !1,
			template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
			trigger: "hover focus",
			title: "",
			delay: 0,
			html: !1,
			container: !1
		}, e.fn.tooltip.noConflict = function() {
			return e.fn.tooltip = i, this
		}
	}(i.n(n).a)
}, function(e, t, i) {
	"use strict";
	i.r(t);
	var n = i(0),
		s = i.n(n);
	s.a.easing.jswing = s.a.easing.swing, s.a.extend(s.a.easing, {
		def: "easeOutQuad",
		swing: function(e, t, i, n, r) {
			return s.a.easing[s.a.easing.def](e, t, i, n, r)
		},
		easeInQuad: function(e, t, i, n, s) {
			return n * (t /= s) * t + i
		},
		easeOutQuad: function(e, t, i, n, s) {
			return -n * (t /= s) * (t - 2) + i
		},
		easeInOutQuad: function(e, t, i, n, s) {
			return (t /= s / 2) < 1 ? n / 2 * t * t + i : -n / 2 * (--t * (t - 2) - 1) + i
		},
		easeInCubic: function(e, t, i, n, s) {
			return n * (t /= s) * t * t + i
		},
		easeOutCubic: function(e, t, i, n, s) {
			return n * ((t = t / s - 1) * t * t + 1) + i
		},
		easeInOutCubic: function(e, t, i, n, s) {
			return (t /= s / 2) < 1 ? n / 2 * t * t * t + i : n / 2 * ((t -= 2) * t * t + 2) + i
		},
		easeInQuart: function(e, t, i, n, s) {
			return n * (t /= s) * t * t * t + i
		},
		easeOutQuart: function(e, t, i, n, s) {
			return -n * ((t = t / s - 1) * t * t * t - 1) + i
		},
		easeInOutQuart: function(e, t, i, n, s) {
			return (t /= s / 2) < 1 ? n / 2 * t * t * t * t + i : -n / 2 * ((t -= 2) * t * t * t - 2) + i
		},
		easeInQuint: function(e, t, i, n, s) {
			return n * (t /= s) * t * t * t * t + i
		},
		easeOutQuint: function(e, t, i, n, s) {
			return n * ((t = t / s - 1) * t * t * t * t + 1) + i
		},
		easeInOutQuint: function(e, t, i, n, s) {
			return (t /= s / 2) < 1 ? n / 2 * t * t * t * t * t + i : n / 2 * ((t -= 2) * t * t * t * t + 2) + i
		},
		easeInSine: function(e, t, i, n, s) {
			return -n * Math.cos(t / s * (Math.PI / 2)) + n + i
		},
		easeOutSine: function(e, t, i, n, s) {
			return n * Math.sin(t / s * (Math.PI / 2)) + i
		},
		easeInOutSine: function(e, t, i, n, s) {
			return -n / 2 * (Math.cos(Math.PI * t / s) - 1) + i
		},
		easeInExpo: function(e, t, i, n, s) {
			return 0 == t ? i : n * Math.pow(2, 10 * (t / s - 1)) + i
		},
		easeOutExpo: function(e, t, i, n, s) {
			return t == s ? i + n : n * (1 - Math.pow(2, -10 * t / s)) + i
		},
		easeInOutExpo: function(e, t, i, n, s) {
			return 0 == t ? i : t == s ? i + n : (t /= s / 2) < 1 ? n / 2 * Math.pow(2, 10 * (t - 1)) + i : n / 2 * (2 - Math.pow(2, -10 * --t)) + i
		},
		easeInCirc: function(e, t, i, n, s) {
			return -n * (Math.sqrt(1 - (t /= s) * t) - 1) + i
		},
		easeOutCirc: function(e, t, i, n, s) {
			return n * Math.sqrt(1 - (t = t / s - 1) * t) + i
		},
		easeInOutCirc: function(e, t, i, n, s) {
			return (t /= s / 2) < 1 ? -n / 2 * (Math.sqrt(1 - t * t) - 1) + i : n / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + i
		},
		easeInElastic: function(e, t, i, n, s) {
			var r = 1.70158,
				a = 0,
				o = n;
			if (0 == t) return i;
			if (1 == (t /= s)) return i + n;
			if (a || (a = .3 * s), o < Math.abs(n)) {
				o = n;
				r = a / 4
			} else r = a / (2 * Math.PI) * Math.asin(n / o);
			return -o * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * s - r) * (2 * Math.PI) / a) + i
		},
		easeOutElastic: function(e, t, i, n, s) {
			var r = 1.70158,
				a = 0,
				o = n;
			if (0 == t) return i;
			if (1 == (t /= s)) return i + n;
			if (a || (a = .3 * s), o < Math.abs(n)) {
				o = n;
				r = a / 4
			} else r = a / (2 * Math.PI) * Math.asin(n / o);
			return o * Math.pow(2, -10 * t) * Math.sin((t * s - r) * (2 * Math.PI) / a) + n + i
		},
		easeInOutElastic: function(e, t, i, n, s) {
			var r = 1.70158,
				a = 0,
				o = n;
			if (0 == t) return i;
			if (2 == (t /= s / 2)) return i + n;
			if (a || (a = s * (.3 * 1.5)), o < Math.abs(n)) {
				o = n;
				r = a / 4
			} else r = a / (2 * Math.PI) * Math.asin(n / o);
			return t < 1 ? o * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * s - r) * (2 * Math.PI) / a) * -.5 + i : o * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * s - r) * (2 * Math.PI) / a) * .5 + n + i
		},
		easeInBack: function(e, t, i, n, s, r) {
			return void 0 == r && (r = 1.70158), n * (t /= s) * t * ((r + 1) * t - r) + i
		},
		easeOutBack: function(e, t, i, n, s, r) {
			return void 0 == r && (r = 1.70158), n * ((t = t / s - 1) * t * ((r + 1) * t + r) + 1) + i
		},
		easeInOutBack: function(e, t, i, n, s, r) {
			return void 0 == r && (r = 1.70158), (t /= s / 2) < 1 ? n / 2 * (t * t * ((1 + (r *= 1.525)) * t - r)) + i : n / 2 * ((t -= 2) * t * ((1 + (r *= 1.525)) * t + r) + 2) + i
		},
		easeInBounce: function(e, t, i, n, r) {
			return n - s.a.easing.easeOutBounce(e, r - t, 0, n, r) + i
		},
		easeOutBounce: function(e, t, i, n, s) {
			return (t /= s) < 1 / 2.75 ? n * (7.5625 * t * t) + i : t < 2 / 2.75 ? n * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + i : t < 2.5 / 2.75 ? n * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + i : n * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + i
		},
		easeInOutBounce: function(e, t, i, n, r) {
			return t < r / 2 ? .5 * s.a.easing.easeInBounce(e, 2 * t, 0, n, r) + i : .5 * s.a.easing.easeOutBounce(e, 2 * t - r, 0, n, r) + .5 * n + i
		}
	})
}, function(e, t, i) {
	"use strict";
	i.r(t);
	var n, s = i(0);
	(n = i.n(s).a).fn.draggable = function(e) {
		var t = {
			translateY: !0,
			translateX: !0,
			boundary: "body"
		};
		return n(this).each(function() {
			var i, s, r, a, o = n(this),
				l = !1;

			function c() {
				return s[0].scrollHeight
			}

			function u() {
				return s[0].scrollWidth
			}

			function d(e, t, i) {
				var n, r, a, l, d, h, m, f, p, g, v, T;
				"x" === i ? (t = t.x, a = o.outerWidth(), n = o.offset().left, l = s.offset().left, d = s.outerWidth(), m = e.pageX < n, f = e.pageX > n + a, v = "left", T = u()) : (t = t.y, a = o.outerHeight(), n = o.offset().top, l = s.offset().top, d = s.outerHeight(), m = e.pageY < n, f = e.pageY > n + a, v = "top", T = c()), p = t > 0, g = t < 0, r = parseInt(o.css(v), 10), m && p || f && g || n < l && g || n + a > l + d && p || (h = g ? r + t < 0 ? 0 : r + t : r + a + t > T ? T - a - 1 : r + t, o.css(v, h))
			}

			function h(e) {
				var t = {
						y: e.pageY - r,
						x: e.pageX - a
					},
					n = !1;
				r = e.pageY, a = e.pageX, e.preventDefault(), i.translateY && (d(e, t, "y"), n = !0), i.translateX && (d(e, t, "x"), n = !0), n && o.trigger("drag.draggable", [t, {
					y: e.pageY,
					x: e.pageX
				}])
			}

			function m() {
				n(document).unbind("mousemove", f).unbind("mousemove", h).unbind("mouseup", m), l && o.trigger("drop.draggable").removeClass("draggable-dragging"), l = !1
			}

			function f(e) {
				l = !0, n(document).unbind("mousemove", f).bind("mousemove", h), r = e.pageY, a = e.pageX, s && 0 !== s.length || (s = "function" == typeof i.boundary ? i.boundary() : n(i.boundary)), c(), u(), o.trigger("start.draggable", [e.offsetY, e.offsetX]).addClass("draggable-dragging")
			}

			function p(e) {
				e.preventDefault(), n(document).bind("mousemove", f).bind("mouseup", m)
			}
			void 0 === (i = o.data("draggable") ? n.extend({}, o.data("draggable").settings, e) : n.extend({}, t, e)).handle && (i.handle = o), "string" == typeof i.handle ? o.off("mousedown", i.handle, p).on("mousedown", i.handle, p) : i.handle.unbind("mousedown", p).bind("mousedown", p), o.data("draggable", {
				settings: i
			})
		}), this
	}
}, function(e, t, i) {
	"use strict";
	i.r(t);
	var n, s, r = i(0);
	n = i.n(r).a, s = function(e) {
		var t, i, s, r, a, o, l = e.$boundary,
			c = "up",
			u = "down",
			d = "left",
			h = "right",
			m = 30;

		function f() {
			var e = n(this).position().top + l.scrollTop(),
				t = n(this).position().left + l.scrollLeft(),
				s = n(this).innerWidth();
			i.top.unshift(e), i.left.unshift(t), n(this).css({
				position: "absolute",
				top: e,
				left: t,
				width: s
			})
		}

		function p(n, s) {
			var r, a, o = t.data("draggable-index"),
				l = n.data("draggable-index"),
				m = n.outerHeight() - t.outerHeight(),
				f = n.outerWidth() - t.outerWidth(),
				p = parseInt(t.css("margin-left"), 10),
				g = parseInt(t.css("margin-top"), 10),
				v = parseInt(n.css("margin-right"), 10),
				T = parseInt(n.css("margin-bottom"), 10);
			switch (s) {
				case c:
					r = i.top[o] - m;
					break;
				case u:
					r = i.top[o], i.top[l] = r + n.outerHeight() + T + g;
					break;
				case d:
					a = i.left[o] - f;
					break;
				case h:
					a = i.left[o], i.left[l] = a + n.outerWidth() + v + p
			}
			"vertical" === e.orientation ? n.stop().animate({
				top: r
			}, "fast") : n.stop().animate({
				left: a
			}, "fast"), t.data("draggable-index", l), n.data("draggable-index", o)
		}

		function g(i) {
			var n, s, r, a, o, l = t.position().top,
				m = t.outerHeight(),
				f = t.position().left,
				g = t.outerWidth();
			if ((n = i === c || i === d ? t.prev(e.selector) : t.next(e.selector)).length) switch (s = n.position().top, r = n.outerHeight(), a = n.position().left, o = n.outerWidth(), i) {
				case c:
					l < s + r / 2 && (t.insertBefore(n), p(n, i));
					break;
				case u:
					l + m > s + r / 2 && (t.insertAfter(n), p(n, i));
					break;
				case d:
					f < a + o / 2 && (t.insertBefore(n), p(n, i));
					break;
				case h:
					f + g > a + o / 2 && (t.insertAfter(n), p(n, i))
			}
		}

		function v(i) {
			r = (new Date).getTime(), T(), s = setInterval(function(i) {
				var n = (new Date).getTime() - r,
					s = l.scrollTop(),
					c = parseInt(t.css("top"), 10),
					d = c + t.outerHeight(),
					m = l.scrollLeft(),
					f = parseInt(t.css("left"), 10),
					p = f + t.outerWidth(),
					v = 1 + n / 1e3,
					w = Math.min(v * e.scroll_speed, 3 * e.scroll_speed);
				w = i === u || i === h ? w : -w, "vertical" === e.orientation ? s + w < 0 ? T() : s + w > a - l.innerHeight() ? T() : (l.scrollTop(l.scrollTop() + w), c + w > 0 && d + w < a && t.css({
					top: c + w
				}), g(i)) : m + w < 0 ? T() : m + w > o - l.innerWidth() ? T() : (l.scrollLeft(l.scrollLeft() + w), f + w > 0 && p + w < o && t.css({
					left: f + w
				}), g(i))
			}.bind(this, i), m)
		}

		function T() {
			clearInterval(s), s = null
		}

		function w() {
			n(this).find(".placeholder").remove(), l.css("height", "").find(e.selector).attr("style", ""), t.trigger("dropped.dragdroplist")
		}
		return {
			handleDragStart: function(s) {
				var r, c;
				i = {
					top: [],
					left: []
				}, n.fn.reverse = [].reverse, r = 0, l.find(e.contentSelector).each(function() {
					r += n(this).outerHeight()
				}), a = r, c = 0, l.find(e.contentSelector).each(function() {
					c += n(this).outerWidth()
				}), o = c, n(this).append(n("<" + e.tagName + "/>", {
					class: "placeholder",
					height: n(this).height(),
					width: n(this).width()
				})), l.css("z-index", 0).find(e.selector).each(function(e) {
					n(this).data("draggable-index", e)
				}).reverse().each(f), (t = n(s.target)).css({
					"z-index": 10
				})
			},
			handleDrop: function() {
				i && (T(), "vertical" === e.orientation ? t.animate({
					top: i.top[t.data("draggable-index")]
				}, "fast", w.bind(this)) : t.animate({
					left: i.left[t.data("draggable-index")]
				}, "fast", w.bind(this)), t.trigger("drop.dragdroplist"))
			},
			handleDrag: function(i, n, r) {
				if (t) {
					var a, o, m, f = parseInt(t.css("top"), 10),
						p = f + t.outerHeight(),
						w = parseInt(t.css("left"), 10),
						b = w + t.outerWidth(),
						y = l.scrollTop() + l.innerHeight(),
						_ = l.scrollLeft() + l.innerWidth();
					if (n)
						if ("vertical" === e.orientation) {
							for (a = n.y < 0 ? c : u, o = n.y; o < 0;) g(a), o += t.outerHeight();
							for (o = n.y; o > 0;) g(a), o -= t.outerHeight()
						} else {
							for (a = n.x < 0 ? d : h, m = n.x; m < 0;) g(a), m += t.outerWidth();
							for (m = n.x; m > 0;) g(a), m -= t.outerWidth()
						} r ? (r.y > l.offset().top || r.y < l.offset().top + l.outerHeight()) && T() : T(), s || ("vertical" === e.orientation ? p > y ? v(u) : f < l.scrollTop() ? v(c) : T() : b > _ ? v(h) : w < l.scrollLeft() ? v(d) : T())
				}
			}
		}
	}, n.fn.dragdroplist = function(e) {
		var t = {
			orientation: "vertical",
			tagName: "li",
			selector: ".draggable",
			contentSelector: "> *",
			scroll_speed: 8
		};
		return n(this).each(function() {
			var i, r, a = function(e) {
				e.draggable({
					translateX: "horizontal" === r.orientation,
					translateY: "vertical" === r.orientation,
					handle: r.handle ? r.handle : r.tagName,
					boundary: r.$boundary
				})
			};
			n(this).data("dragdroplist") || ((r = n.extend({}, t, e)).$boundary = r.$boundary || n(this), n(this).data("dragdroplist", {
				settings: r
			}), i = new s(r), n(this).find(r.tagName).each(function() {
				a(n(this))
			}), n(this).bind("start.draggable", i.handleDragStart).bind("drop.draggable", i.handleDrop).bind("drag.draggable", i.handleDrag)), n(this).on("itemadded.dragdroplist", function(e) {
				a(n(e.target))
			})
		}), n(this)
	}
}, function(e, t, i) {
	"use strict";
	i.r(t);
	var n = i(0);
	! function(e) {
		function t(t, i) {
			this.el = e(t), this.options = i || {}, this.x = !1 !== this.options.x || this.options.forceHorizontal, this.y = !1 !== this.options.y || this.options.forceVertical, this.autoHide = !1 !== this.options.autoHide, this.padding = void 0 == this.options.padding ? 2 : this.options.padding, this.position = this.options.position, this.showOnMouseOver = !1 !== this.options.showOnMouseOver, this.inner = this.el.find(".antiscroll-inner"), this.inner.css({
				right: this.y ? -r() + "px" : 0,
				bottom: this.x ? -r() + "px" : 0
			}), this.refresh()
		}

		function i(t) {
			this.pane = t, this.pane.el.append(this.el), this.innerEl = this.pane.inner.get(0), this.dragging = !1, this.enter = !1, this.shown = !1, this.pane.el.mouseenter(e.proxy(this, "mouseenter")), this.pane.el.mouseleave(e.proxy(this, "mouseleave")), this.el.mousedown(e.proxy(this, "mousedown")), this.innerPaneScrollListener = e.proxy(this, "scroll"), this.pane.inner.scroll(this.innerPaneScrollListener), this.innerPaneMouseWheelListener = e.proxy(this, "mousewheel"), this.pane.inner.bind("mousewheel", this.innerPaneMouseWheelListener);
			var i = this.pane.options.initialDisplay;
			!1 !== i && (this.show(), this.pane.autoHide && (this.hiding = setTimeout(e.proxy(this, "hide"), parseInt(i, 10) || 3e3)))
		}

		function n(e, t) {
			function i() {}
			i.prototype = t.prototype, e.prototype = new i
		}
		var s;

		function r() {
			if (void 0 === s) {
				var t = e('<div class="antiscroll-inner" style="width:50px;height:50px;overflow-y:scroll;position:absolute;top:-200px;left:-200px;"><div style="height:100px;width:100%"></div>');
				e("body").append(t);
				var i = e(t).innerWidth(),
					n = e("div", t).innerWidth();
				e(t).remove(), s = i - n
			}
			return s
		}
		e.fn.antiscroll = function(t) {
			return this.each(function() {
				e(this).data("antiscroll") && e(this).data("antiscroll").destroy(), e(this).data("antiscroll", new e.Antiscroll(this, t))
			})
		}, e.Antiscroll = t, t.prototype.refresh = function() {
			var e = this.inner.get(0).scrollWidth > this.el.width() + (this.y ? r() : 0),
				t = this.inner.get(0).scrollHeight > this.el.height() + (this.x ? r() : 0);
			this.x && (!this.horizontal && e ? this.horizontal = new i.Horizontal(this) : this.horizontal && !e ? (this.horizontal.destroy(), this.horizontal = null) : this.horizontal && this.horizontal.update()), this.y && (!this.vertical && t ? this.vertical = new i.Vertical(this) : this.vertical && !t ? (this.vertical.destroy(), this.vertical = null) : this.vertical && this.vertical.update())
		}, t.prototype.destroy = function() {
			return this.horizontal && (this.horizontal.destroy(), this.horizontal = null), this.vertical && (this.vertical.destroy(), this.vertical = null), this
		}, t.prototype.rebuild = function() {
			return this.destroy(), this.inner.attr("style", ""), t.call(this, this.el, this.options), this
		}, i.prototype.destroy = function() {
			return this.el.remove(), this.pane.inner.unbind("scroll", this.innerPaneScrollListener), this.pane.inner.unbind("mousewheel", this.innerPaneMouseWheelListener), this
		}, i.prototype.mouseenter = function() {
			this.enter = !0, this.pane.showOnMouseOver && this.show()
		}, i.prototype.mouseleave = function() {
			this.enter = !1, this.dragging || this.pane.autoHide && this.hide()
		}, i.prototype.scroll = function() {
			this.shown || (this.show(), !this.dragging && this.pane.autoHide && (this.hiding = setTimeout(e.proxy(this, "hide"), 1e3))), this.update()
		}, i.prototype.mousedown = function(t) {
			t.preventDefault(), this.dragging = !0, this.startPageY = t.pageY - parseInt(this.el.css("top"), 10), this.startPageX = t.pageX - parseInt(this.el.css("left"), 10), this.el[0].ownerDocument.onselectstart = function() {
				return !1
			};
			this.pane;
			var i = e.proxy(this, "mousemove"),
				n = this;
			e(this.el[0].ownerDocument).mousemove(i).mouseup(function() {
				n.dragging = !1, this.onselectstart = null, e(this).unbind("mousemove", i), n.enter || n.hide()
			})
		}, i.prototype.show = function(e) {
			this.hiding && (clearTimeout(this.hiding), this.hiding = null), !this.shown && this.update() && (this.el.addClass("antiscroll-scrollbar-shown"), this.shown = !0)
		}, i.prototype.hide = function() {
			!1 !== this.pane.autoHide && this.shown && (this.el.removeClass("antiscroll-scrollbar-shown"), this.shown = !1)
		}, i.Horizontal = function(t) {
			var n = document;
			t.el.length > 0 && (n = t.el[0].ownerDocument), this.el = e('<div class="antiscroll-scrollbar antiscroll-scrollbar-horizontal">', n), i.call(this, t)
		}, n(i.Horizontal, i), i.Horizontal.prototype.update = function() {
			var e = this.pane.el.width(),
				t = e - 2 * this.pane.padding,
				i = this.pane.inner.get(0);
			return this.el.css("width", t * e / i.scrollWidth).css("left", t * i.scrollLeft / i.scrollWidth), e < i.scrollWidth
		}, i.Horizontal.prototype.mousemove = function(e) {
			var t = this.pane.el.width() - 2 * this.pane.padding,
				i = e.pageX - this.startPageX,
				n = this.el.width(),
				s = this.pane.inner.get(0),
				r = Math.min(Math.max(i, 0), t - n);
			s.scrollLeft = (s.scrollWidth - this.pane.el.width()) * r / (t - n)
		}, i.Horizontal.prototype.mousewheel = function(e, t, i, n) {
			if (i < 0 && 0 == this.pane.inner.get(0).scrollLeft || i > 0 && this.innerEl.scrollLeft + Math.ceil(this.pane.el.width()) == this.innerEl.scrollWidth) return e.preventDefault(), !1
		}, i.Vertical = function(t) {
			var n = document;
			t.el.length > 0 && (n = t.el[0].ownerDocument), this.el = e('<div class="antiscroll-scrollbar antiscroll-scrollbar-vertical">', n), this.el.addClass("left" === t.position ? "antiscroll-scrollbar-position-left" : "antiscroll-scrollbar-position-right"), i.call(this, t)
		}, n(i.Vertical, i), i.Vertical.prototype.update = function() {
			var e = this.pane.el.height(),
				t = e - 2 * this.pane.padding,
				i = this.innerEl,
				n = t * e / i.scrollHeight;
			n = n < 20 ? 20 : n;
			var s = t * i.scrollTop / i.scrollHeight;
			s + n > t && (s = s - (s + n - t) - 3);
			return this.el.css("height", n).css("top", s), e < i.scrollHeight
		}, i.Vertical.prototype.mousemove = function(e) {
			var t = this.pane.el.height(),
				i = t - 2 * this.pane.padding,
				n = e.pageY - this.startPageY,
				s = this.el.height(),
				r = this.innerEl,
				a = Math.min(Math.max(n, 0), i - s);
			r.scrollTop = (r.scrollHeight - t) * a / (i - s)
		}, i.Vertical.prototype.mousewheel = function(e, t, i, n) {
			if (n > 0 && 0 == this.innerEl.scrollTop || n < 0 && this.innerEl.scrollTop + Math.ceil(this.pane.el.height()) == this.innerEl.scrollHeight) return e.preventDefault(), !1
		}
	}(i.n(n).a)
}, function(e, t, i) {
	"use strict";
	var n, s = o(i(332)),
		r = o(i(241)),
		a = i(33);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.bitly = ((n = {}).shorten = function(e) {
		var t, i = e;
		return (0, r.default)(e, "http://") || (0, r.default)(e, "https://") || (i = "http://" + e), (t = function(e, t) {
			var i = "https://api-ssl.bitly.com/v3/" + e;
			t.login = "tweetdeckapi", t.apiKey = "R_b8032856b71a14fabfe64f6845689ddf", t.format = "json";
			var s = n.getAccount();
			return s && (t.x_login = s.login, t.x_apiKey = s.apiKey), TD.net.ajax.jsonp(i, t)
		}("shorten", {
			longUrl: i
		})).addCallback(function(t) {
			var i = t.data;
			if (!i || !i.data || !i.data.url) throw (0, a.generic)({
				page: "compose",
				component: "bitly",
				action: "shortenfailed"
			}), new Error("Bit.ly shortening failed");
			return (0, a.generic)({
				page: "compose",
				component: "bitly",
				action: "shorten"
			}), i.data && (i.data.long_url = e), i.data
		}), t
	}, n.shortenTextLinks = function(e) {
		var t = twttrTxt.extractUrls(e).map(function(e) {
				return TD.util.isLinkToTwitterItem(e) ? TD.core.defer.succeed(e) : TD.services.bitly.shorten(e)
			}),
			i = new TD.core.defer.DeferredList(t);
		return i.addCallback(function(t) {
			return t.forEach(function(t) {
				var i = t[0],
					n = t[1];
				i && (e = e.replace(n.long_url, n.url))
			}), e
		}), i
	}, n.getAccount = function() {
		var e = TD.settings.getBitlyAccount();
		return e || (0, s.default)(n.getAccountsFromAccountController())
	}, n.updateAccount = function(e) {
		return TD.util.metric("settings:services:bitly:update"), TD.settings.setBitlyAccount(e)
	}, n.getAccountsFromAccountController = function() {
		return TD.storage.accountController.getAccountsForService("bitly").map(function(e) {
			return {
				login: e.getUserID(),
				apiKey: e.getOAuthToken(),
				accountKey: e.getKey()
			}
		})
	}, n)
}, function(e, t, i) {
	"use strict";
	var n = r(i(68)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function a(e) {
		this.SESSION_BUFFER_KEY = "ScribeTransport", this.SCRIBE_API_ENDPOINT = "/i/jot", this.options = {}, e && (this.updateOptions(e), this.registerEventHandlers(e))
	}
	e.exports = a, a.prototype = {
		flush: function(e, t) {
			if (e && e.length) {
				if (void 0 === t && (t = !!this.options.sync), this.options.useAjax) {
					var i = {
						url: this.options.url,
						data: s.default.extend(this.ajaxParams(e), this.options.requestParameters),
						type: "POST",
						dataType: "json",
						async: !t,
						headers: {
							"X-Twitter-Polling": !0
						}
					};
					this.options.debug && (this.options.debugHandler && (i.success = this.options.debugHandler), i.data.debug = "1"), s.default.ajax(i)
				} else {
					var n = this.options.debug ? "&debug=1" : "";
					(new Image).src = this.options.url + "?q=" + (+new Date).toString().slice(-4) + n + "&" + this.imageParams(e)
				}
				this.reset()
			}
		},
		ajaxParams: function(e) {
			if ("string" == typeof e) return {
				log: "[" + e + "]"
			};
			var t = this.options.encodeParameters;
			return t && "function" == typeof t ? t.apply(this, arguments) : {
				log: (0, n.default)(e)
			}
		},
		imageParams: function(e) {
			if ("string" == typeof e) return "log=%5B" + e + "%5D";
			var t = this.options.encodeParameters;
			return t && "function" == typeof t ? t.apply(this, arguments) : "log=" + encodeURIComponent((0, n.default)(e))
		},
		reset: function() {
			this.options.bufferEvents && (this.skipUnloadFlush = !1, sessionStorage.removeItem(this.options.bufferKey))
		},
		getBuffer: function() {
			return sessionStorage.getItem(this.options.bufferKey) || ""
		},
		logWithStorageException: function(e, t) {
			var i = {
				category: "client_scribe_storage_error",
				error: e.message,
				url: document.location.href,
				product_name: "swift",
				event_name: "storage_quota_exceeded",
				type: "js_error"
			};
			this.addCategoryField(i, i.category), this.flush(this.appendData(t, this.encodeEventData(i)))
		},
		storeData: function(e, t) {
			try {
				sessionStorage.setItem(e, t)
			} catch (e) {
				if ("QuotaExceededError" !== e.name && "QuotaExceededError" !== e.message && "NS_ERROR_DOM_QUOTA_REACHED" !== e.name && "QUOTA_EXCEEDED_ERR" !== e.name && -2147024882 !== e.number) throw e;
				this.logWithStorageException(e, t)
			}
		},
		encodeEventData: function(e) {
			var t = (0, n.default)(e);
			return this.options.useAjax || (t = encodeURIComponent(t)), t
		},
		appendData: function(e, t) {
			return e + (e ? this.SEPARATOR + t : t)
		},
		addToBuffer: function(e) {
			var t = this.getBuffer(),
				i = this.encodeEventData(e),
				n = this.appendData(t, i);
			this.options.bufferSize && this.fullBuffer(n) ? this.options.useAjax ? this.flush(n) : (this.flush(t), this.storeData(this.options.bufferKey, i)) : this.storeData(this.options.bufferKey, n)
		},
		addCategoryField: function(e, t) {
			e._category_ = t
		},
		send: function(e, t, i) {
			!t || !e || this.options.bufferSize < 0 || (this.addCategoryField(e, t), !i && this.options.bufferEvents && this.options.bufferSize ? this.addToBuffer(e) : this.flush([e], i), this.options.debug && (0, s.default)(document).trigger("scribedata." + this.options.bufferKey, e), this.options.metrics && "debug" != e.event_info && (0, s.default)(document).trigger("debugscribe", e))
		},
		fullBuffer: function(e) {
			return e.length >= (this.options.useAjax ? 2083 * this.options.bufferSize : 2050 - this.options.url.length)
		},
		updateOptions: function(e) {
			if (this.options = s.default.extend({}, this.options, e), this.options.requestParameters || (this.options.requestParameters = {}), void 0 === this.options.flushOnUnload && (this.options.flushOnUnload = !0), this.options.bufferKey || (this.options.bufferKey = this.SESSION_BUFFER_KEY), 0 === this.options.bufferSize && (this.options.bufferEvents = !1), void 0 === this.options.useAjax && (this.options.useAjax = !0), this.options.bufferEvents || void 0 == this.options.bufferEvents) try {
				sessionStorage.setItem(this.SESSION_BUFFER_KEY + ".init", "test");
				var t = "test" == sessionStorage.getItem(this.SESSION_BUFFER_KEY + ".init");
				sessionStorage.removeItem(this.SESSION_BUFFER_KEY + ".init"), this.options.bufferEvents = t
			} catch (e) {
				this.options.bufferEvents = !1
			}
			if (this.options.debug && !this.options.debugHandler) {
				var i = this;
				this.options.debugHandler = e.debugHandler || function(e) {
					(0, s.default)(document).trigger("handlescribe." + i.options.bufferKey, e)
				}
			}
			var n = "https:" === window.location.protocol ? "https:" : "http:";
			void 0 === this.options.url ? this.options.useAjax ? this.options.url = this.SCRIBE_API_ENDPOINT : this.options.url = "https://twitter.com" + this.SCRIBE_API_ENDPOINT : this.options.url = this.options.url.replace(/^[a-z]+:/g, n).replace(/\/$/, ""), this.options.bufferEvents && void 0 === this.options.bufferSize && (this.options.bufferSize = 20)
		},
		appHost: function() {
			return window.location.host
		},
		registerEventHandlers: function() {
			var e = this,
				t = (0, s.default)(document);
			if (this.options.bufferEvents && (t.on("flushscribe." + e.options.bufferKey, function(t) {
					e.flush(e.getBuffer(), !0)
				}), this.options.flushOnUnload)) {
				var i = function(t) {
					e.skipUnloadFlush = !t || !t.match(/http/) || !!t.match(new RegExp("^https?://" + e.appHost(), "gi")), e.skipUnloadFlush && window.setTimeout(function() {
						e.skipUnloadFlush = !1
					}, 3e3)
				};
				t.on("mouseup." + this.options.bufferKey, "a", function(e) {
					this.getAttribute("target") || e.button || e.metaKey || e.shiftKey || e.altKey || e.ctrlKey || i(this.getAttribute("href"))
				}), t.on("submit." + this.options.bufferKey, "form", function(e) {
					i(this.getAttribute("action"))
				}), t.on("uiNavigate." + this.options.bufferKey, function(e, t) {
					i(t.url)
				}), (0, s.default)(window).on("unload." + this.options.bufferKey, function() {
					e.skipUnloadFlush || e.flush(e.getBuffer(), !0), e.skipUnloadFlush = !1
				})
			}
			this.SEPARATOR = this.options.useAjax ? "," : encodeURIComponent(",")
		},
		destroy: function() {
			this.flush(this.getBuffer()), (0, s.default)(document).off("flushscribe." + this.options.bufferKey), (0, s.default)(window).off("unload." + this.options.bufferKey), (0, s.default)(document).off("mouseup." + this.options.bufferKey), (0, s.default)(document).off("submit." + this.options.bufferKey), (0, s.default)(document).off("uiNavigate." + this.options.bufferKey)
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = a(i(68)),
		s = a(i(163)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function(e) {
		this.scribeContext = {}, this.scribeData = {}, this.scribe = function(t, i) {
			var a = e || window.scribeTransport;
			if (!a) throw new Error("You must create a global scribeTransport variable or pass one into this constructor.");
			if (!t || "object" != (void 0 === t ? "undefined" : (0, s.default)(t)) || i && "object" != (void 0 === i ? "undefined" : (0, s.default)(i))) throw new Error("Invalid terms or data hash argument when calling ClientEvent.scribe().");
			if (this.scribeContext) {
				var o = "function" == typeof this.scribeContext ? this.scribeContext() : this.scribeContext;
				t = r.default.extend({}, o, t)
			}
			for (var l in t) t[l] = t[l] && ("" + t[l]).toLowerCase().replace(/_?[^a-z0-9_]+_?/g, "_");
			if (a.options.debug && r.default.each(["client", "action"], function(e, i) {
					if (!t[i]) throw new Error("You must specify a " + i + " term in your client_event.")
				}), i = r.default.extend({}, i), this.scribeData) {
				var c = "function" == typeof this.scribeData ? this.scribeData() : this.scribeData;
				i = r.default.extend({}, c, i)
			}
			i.event_namespace = t, i.triggered_on = i.triggered_on || +new Date, i.format_version = i.format_version || 2, void 0 !== i.custom_json_payload && (i.custom_json_payload = (0, n.default)(i.custom_json_payload)), a.send(i, "client_event")
		}
	}
}, , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = u(i(253)),
		s = u(i(55)),
		r = u(i(46)),
		a = u(i(110)),
		o = u(i(0)),
		l = i(324),
		c = u(i(17));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.Autocomplete = TD.components.Base.extend(function(e, t) {
		var i = {
			limit: 5,
			dmMode: !1,
			position: "below",
			repositionInViewport: !1
		};
		this.options = (0, a.default)(i, t), this.$input = e, this.isCompletionsOpen = !1, this.userIsInteracting = !1, this.dropdownId = (0, r.default)("autocomplete"), this.$node = o.default.createElement("ul").addClass("lst lst-modal typeahead").insertAfter(this.$input), this.$selectedItem = null, this._registerEvents(), this.usernameRegex = i.dmMode ? this.constructor.dmUsername : this.constructor.username, (0, o.default)(document).on("dataTypeaheadSuggestions", this.updateDropdown.bind(this))
	}).statics({
		username: /^[+\/\.<>()|\\=]?[@＠]([a-zA-Z0-9_]{1,20})$/,
		dmUsername: /(.*)/,
		hashtag: /^[#＃]([a-zA-Z0-9_]+)/,
		SELECT: "td-autocomplete-select",
		spaceBoundary: /\s|$/,
		wordEnd: /[^+\/.<>()|\\=\s]+$/
	}).methods({
		_registerEvents: function() {
			var e = this;
			this.$input.bind("keydown", (0, s.default)(this.keypress, this)), this.$input.bind("keyup click", (0, s.default)(this.keyup, this)), this.blurHandler = function() {
				(0, n.default)(function() {
					e.hide()
				}, 500)
			}, this.$input.bind("blur", this.blurHandler), this.$input.bind("mouseup", (0, s.default)(function(e) {
				setTimeout(this.getCaret.bind(this), 0)
			}, this)).bind("focus", (0, s.default)(this.getCaret, this)), this.$node.delegate("li", "mouseenter", function(t) {
				e.$node.find("li.s-selected").removeClass("s-selected"), (0, o.default)(this).addClass("s-selected")
			}).delegate("li", "click", (0, s.default)(function(t) {
				e.$selectedItem = (0, o.default)(t.target).closest("li").addClass("s-selected"), e.$selectedItem.siblings(".s-selected").removeClass("s-selected"), this.$input.focus(), this.select()
			}, this))
		},
		_unregisterEvents: function() {
			this.$input.unbind("keydown"), this.$input.unbind("keyup click keydown"), this.$input.unbind("bind", this.blurHandler)
		},
		keyup: function(e) {
			if (e.keyCode) {
				e.stopPropagation();
				var t = "",
					i = this.getCurrentText(),
					n = this.getCaret(),
					s = !1;
				if (this.options.dmMode ? t = i : (t = this.getCurrentWord(n), "@" === i.charAt(n) && (t = "")), t.match(this.usernameRegex) ? (t = RegExp.$1, this.autocompleteType = "username", s = !0) : t.match(this.constructor.hashtag) && (t = RegExp.$1, this.autocompleteType = "hashtag", s = !0), t.length && s) switch (e.keyCode) {
					case TD.constants.keyCodes.escape:
						this.hide(), e.stopPropagation();
						break;
					case TD.constants.keyCodes.shift:
					case TD.constants.keyCodes.upArrow:
					case TD.constants.keyCodes.downArrow:
						break;
					default:
						"hashtag" === this.autocompleteType ? this.lookUpHashtag(t) : this.lookUpUser(t)
				} else this.hide()
			}
		},
		keypress: function(e) {
			var t;
			switch (e.keyCode) {
				case TD.constants.keyCodes.tab:
				case TD.constants.keyCodes.enter:
					t = this.$selectedItem && this.isCompletionsOpen, !e.shiftKey && t && (this.select(), e.preventDefault(), e.stopPropagation());
					break;
				case TD.constants.keyCodes.escape:
					this.isCompletionsOpen && (e.preventDefault(), e.stopPropagation());
					break;
				case TD.constants.keyCodes.upArrow:
					this.isCompletionsOpen && !e.shiftKey && (this.moveSelection("prev"), e.preventDefault(), e.stopPropagation());
					break;
				case TD.constants.keyCodes.downArrow:
					this.isCompletionsOpen && !e.shiftKey && (this.moveSelection("next"), e.preventDefault(), e.stopPropagation());
					break;
				default:
					this.$selectedItem = null, this.userIsInteracting = !1
			}
		},
		sanitize: function(e) {
			return e.replace(/ /g, "")
		},
		moveSelection: function(e) {
			this.userIsInteracting = !0;
			var t = "next" === e ? "li:first" : "li:last",
				i = this.$selectedItem || this.$node.find("li.s-selected");
			i.length ? (i = i.removeClass("s-selected"), (i = "next" === e ? i.nextAll("li:first") : i.prevAll("li:first")).length ? this.$selectedItem = i.addClass("s-selected") : this.$selectedItem = this.$node.find(t).addClass("s-selected")) : this.$selectedItem = this.$node.find(t).addClass("s-selected")
		},
		select: function() {
			var e, t, i;
			this.$selectedItem && ("username" === this.autocompleteType ? (e = this.$selectedItem.find(".js-screenname").text(), this.options.dmMode || (e = "@" + e), t = this.$selectedItem.find("img").attr("src"), i = this.$selectedItem.attr("data-id")) : e = this.$selectedItem.find(".js-hashtag").text(), this.set(e, t, i))
		},
		set: function(e, t, i) {
			var n = this.replaceCurrentWord(e);
			this.$input.val(n.value), this.setCaretPosition(n.cursor), this.$input.change(), this.$node.trigger(this.constructor.SELECT, [{
				screenName: e,
				avatar: t,
				id: i
			}]), this.hide()
		},
		show: function() {
			this.$node.show(), this.isCompletionsOpen = !0
		},
		hide: function() {
			this.$node.hide(), this.isCompletionsOpen = !1, this.userIsInteracting = !1, this.$node.trigger("dataTypeaheadQueryReset")
		},
		lookUpHashtag: function(e) {
			var t = {
				datasources: ["topics"],
				query: "#" + (e = this.sanitize(e)),
				onlyLocalData: !0,
				dropdownId: this.dropdownId,
				type: "compose",
				limits: {
					topics: 5
				}
			};
			TD.decider.get("autocomplete_remote_sources") && (t.onlyLocalData = !1), this.$node.trigger("uiNeedsTypeaheadSuggestions", t)
		},
		lookUpUser: function(e) {
			var t = {
				datasources: ["users"],
				query: e,
				onlyLocalData: !0,
				dropdownId: this.dropdownId,
				type: "compose",
				limits: {
					users: 5
				}
			};
			TD.decider.get("autocomplete_remote_sources") && (t.onlyLocalData = !1), this.$node.trigger("uiNeedsTypeaheadSuggestions", t)
		},
		updateDropdown: function(e, t) {
			if (!this.userIsInteracting && t.dropdownId === this.dropdownId) {
				var i, n = [];
				"hashtag" === this.autocompleteType && t.suggestions.topics ? (n = t.suggestions.topics.slice(0, this.options.limit).map(function(e) {
					return {
						value: e.topic,
						hashFlagUrl: TD.decider.get("hashflags") ? l.hashflags.get(e.topic) : null
					}
				}, this), i = TD.ui.template.render("compose/autocomplete_hashtag", {
					results: n
				})) : "username" === this.autocompleteType && t.suggestions.users && (n = t.suggestions.users.slice(0, this.options.limit).map(function(e) {
					return {
						id: e.id,
						screenName: e.screen_name,
						name: e.name,
						emojifiedName: c.default.cleanWithEmoji(e.name),
						isVerified: e.verified,
						pic: TD.util.transformTwitterAvatar(e.profile_image_url_https, "mini")
					}
				}, this), i = TD.ui.template.render("compose/autocomplete_twitter_user", {
					results: n
				})), this.$node.html(i), n.length ? (this.isCompletionsOpen || this.show(), this.moveSelection("next"), this.reposition()) : this.isCompletionsOpen && this.hide()
			}
		},
		reposition: function() {
			if (this.setPosition(this.options.position), this.options.repositionInViewport) {
				var e = (0, o.default)(window),
					t = this.$node.offset().top - e.scrollTop(),
					i = t < 0,
					n = t + this.$node.outerHeight() > e.height();
				"above" === this.options.position && i ? this.setPosition("below") : "below" === this.options.position && n && this.setPosition("above")
			}
		},
		setPosition: function(e) {
			this.$node.css({
				bottom: "above" === e ? this.$input.outerHeight() : ""
			})
		},
		getCurrentText: function() {
			return this.$input.val()
		},
		setCaretPosition: function(e) {
			var t = this.$input[0];
			if (t.setSelectionRange) t.focus(), t.setSelectionRange(e, e);
			else if (t.createTextRange) {
				var i = t.createTextRange();
				i.collapse(!0), i.moveEnd("character", e), i.moveStart("character", e), i.select()
			}
			this.lastCaret = e
		},
		getCaret: function() {
			var e = this.$input[0],
				t = 0;
			if (document.selection) {
				try {
					e.focus()
				} catch (e) {}
				var i = document.selection.createRange();
				if (null == i) return this.lastCaret = 0, 0;
				var n = e.createTextRange(),
					s = n.duplicate();
				n.moveToBookmark(i.getBookmark()), s.setEndPoint("EndToStart", n), t = s.text.length
			} else(e.selectionStart || "0" == e.selectionStart) && (t = e.selectionStart);
			return this.lastCaret = t, t
		},
		insertOrReplaceSelection: function(e, t) {
			var i = this.$input[0],
				n = this.getCaret(),
				s = n + e.length;
			if (document.selection)
				if (i.focus(), document.selection.createRange().text = e, t) {
					var r = i.createTextRange();
					r.collapse(!0), r.moveEnd("character", s), r.moveStart("character", n), r.select()
				} else this.setCaretPosition(s);
			else if (i.selectionStart || "0" == i.selectionStart) {
				var a = i.selectionStart,
					o = i.selectionEnd,
					l = i.scrollTop;
				i.value = i.value.substring(0, a) + e + i.value.substring(o, i.value.length), i.focus(), i.selectionStart = t ? n : s, i.selectionEnd = s, i.scrollTop = l
			} else i.value += e, this.setCaretPosition(s), i.focus();
			this.lastCaret = s, this.$input.change()
		},
		getCurrentWord: function(e) {
			var t = this.getCurrentText(),
				i = t.slice(0, e),
				n = t.slice(e, t.length),
				s = t.charAt(e - 1);
			if (!s || " " === s) return "";
			this.leftBoundary = i.search(this.constructor.wordEnd);
			var r = i.slice(this.leftBoundary, i.length),
				a = n.slice(0, n.search(this.constructor.spaceBoundary)),
				o = r.concat(a);
			return this.rightBoundary = this.leftBoundary + o.length, o
		},
		replaceCurrentWord: function(e) {
			var t = this.getCurrentText().split("");
			this.oldValueArray = t;
			var i = t.slice(0, this.leftBoundary),
				n = t.slice(this.rightBoundary, t.length);
			(n.length < 1 || !n[0].match(/\s/)) && (e += " ");
			var s = (i.join("") + e).length + 1;
			return {
				value: i.join("") + e + n.join(""),
				cursor: s
			}
		},
		destroy: function() {
			this._unregisterEvents(), this.$node.remove()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(32)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.Dataminr = TD.components.Base.extend(function() {
		this.$node = (0, s.default)(TD.ui.template.render("open_column_list_multi_group")), this.items = [], this.menuComponents = [], this._boundHandleWatchlists = this._handleWatchlists.bind(this), (0, s.default)(document).on("dataDataminrWatchlists", this._boundHandleWatchlists), (0, s.default)(document).trigger("uiNeedsDataminrWatchlists")
	}).statics({}).methods({
		_handleWatchlists: function(e, t) {
			t.watchlists && 0 !== t.watchlists.length && (this.menuComponents.forEach(function(e) {
				e.destroy()
			}), this.$node.empty(), t.watchlists.forEach(function(e) {
				var t = (0, s.default)(TD.ui.template.render("open_column_list_group", {
						title: e.name
					})),
					i = t.filter(".js-list-container");
				e.value.forEach(function(e) {
					var t = new TD.components.MenuItem;
					t.dataminr(e), this.menuComponents.push(t), i.append(t.$node)
				}, this), this.$node.append(t)
			}, this), this.menuComponents.length > 0 && (0, n.default)(function() {
				this.menuComponents[0].select()
			}.bind(this)))
		},
		destroy: function() {
			(0, s.default)(document).off("dataDataminrWatchlists", this._boundHandleWatchlists), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(726)),
		s = o(i(0)),
		r = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(164)),
		a = i(344);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.RepliesTo = TD.components.Base.extend(function(e, t, i, n) {
		this.chirp = e.getMainTweet(), this.column = t, this.mainTweet = this.chirp.getMainTweet(), this.repliesTo = [], this.mediaPreviewSize = i, this.wantsDragHandle = n, this.refreshPeriod = 60, this._boundHandleConversation = this._handleConversation.bind(this), this.subscriptions = {}, this.subscriptions[this.mainTweet.id] = s.default.subscribe("/tweets/conversation/" + this.mainTweet.id, this._boundHandleConversation), this.client = TD.controller.clients.getClient(this.chirp.account.getKey()), this.pollTaskId = TD.controller.scheduler.schedulePeriodicTask(this.refreshPeriod, function() {
			this.client.getConversation(this.mainTweet.id)
		}.bind(this), !0), this.$node.html(TD.ui.template.render("status/tweet_detail_repliesto"))
	}).methods({
		_handleConversation: function(e) {
			var t = this,
				i = {};
			this.repliesTo.forEach(function(e) {
				i[e.id] = !0
			});
			var n = e.descendants.filter(function(e) {
				return !i[e.id]
			});
			this.repliesTo = this.repliesTo.concat(n), n.forEach(function(e) {
				this.subscriptions[e.id] || (this.subscriptions[e.id] = s.default.subscribe("/tweets/conversation/" + e.id, this._boundHandleConversation))
			}.bind(this));
			var r = this.$find(".js-replies-to");
			n.forEach(function(e) {
				if (e.showMore) r.append(TD.ui.template.render("status/conversation_show_more", e));
				else {
					var i = e.render({
						mediaPreviewSize: t.mediaPreviewSize,
						isInConvo: !0,
						hasReplies: e.hasReplies(),
						isGifActive: !0,
						withDragHandle: t.wantsDragHandle && !e.user.isProtected
					});
					r.append(i);
					var n = r.find(".js-card-container:last");
					(0, a.renderCardForChirp)(e, n, {
						context: "column",
						scribeNamespace: {
							page: "main",
							section: "detail"
						}
					})
				}
			}), this.$find(".js-has-replies").closest(".js-stream-item").css({
				"border-bottom": "none"
			}), this.$find(".js-conversation-show-more").click(function(e) {
				var t = (0, s.default)(e.currentTarget).prevAll(".stream-item:first");
				(0, s.default)(t).find(".js-show-detail").trigger("click")
			})
		},
		findChirp: function(e) {
			var t = null;
			return this.chirp.id === e ? t = this.chirp : this.mainTweet.id === e ? t = this.mainTweet : this.repliesTo && (t = (0, n.default)(this.repliesTo, function(t) {
				return t.id === e
			})), t
		},
		teardownCards: function() {
			this.$find(".js-replies-to").find(".js-card-container").each(function(e, t) {
				r.unmountComponentAtNode(t)
			})
		},
		destroy: function() {
			for (var e in this.subscriptions) s.default.unsubscribe(this.subscriptions[e]);
			this.teardownCards(), TD.controller.scheduler.removePeriodicTask(this.pollTaskId), this.supr()
		}
	})
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = c(i(26)),
		s = c(i(14)),
		r = c(i(16)),
		a = c(i(27)),
		o = c(i(28)),
		l = i(4);
	c(i(8));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidCatch",
			value: function(e, t) {}
		}, {
			key: "render",
			value: function() {
				return this.props.children
			}
		}]), t
	}(l.Component);
	t.default = u
}, , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n = g(i(9)),
		s = g(i(240)),
		r = g(i(1899)),
		a = g(i(13)),
		o = g(i(0)),
		l = g(i(1901)),
		c = g(i(109)),
		u = i(17),
		d = i(168),
		h = i(7),
		m = g(h),
		f = g(i(18)),
		p = i(33);

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = m.default.mixin(function() {
		this.attributes({
			cardName: null,
			isInvertedDark: null,
			isPossiblySensitive: null,
			isContributorAccount: null,
			accountUserId: null,
			id: null,
			context: null,
			scribeNamespace: {}
		}), this.initialState({
			xdmCard: null,
			xdmCardHeight: 0
		}), this.componentDidInitialize = function() {
			var e = this,
				t = this.attr,
				i = t.cardName,
				n = t.context;
			this.$node.attr("data-testid", "legacyCard"), this.after("render", function() {
				var t = e.$node[0].scrollHeight;
				e.trigger("uiCardDidResize", {
					height: t
				})
			}), this.checkCard(), (0, u.metric)("card:render:" + n + ":" + i)
		}, this.getCardUrl = function() {
			var e = "dark" !== TD.settings.getTheme() || this.attr.isInvertedDark ? "light" : "dark",
				t = {
					bearer_token: TD.config.bearer_token,
					client: "tweetdeck",
					forward: !0,
					theme: "tweetdeck-" + e,
					font_size: TD.settings.getFontSizePixels(TD.settings.getFontSize())
				};
			this.attr.isPossiblySensitive && (t.possibly_sensitive = !0), this.attr.isContributorAccount && (t.act_as_user_id = this.attr.accountUserId), (0, d.isStaticCard)(this.props.card) && (t.static_view = !0);
			var i = this.attr.id,
				n = (0, c.default)("https://twitter.com/i/cards/tfw/v1/" + i).search(t);
			return n.toString()
		}, this.checkCard = function() {
			var e = !!this.state.xdmCard;
			e || this.mergeState({
				xdmCard: this.makeCard(this.getCardUrl(), this.$node[0], {
					resizeCard: this.onResizeCard.bind(this),
					scribe: this.onScribe.bind(this),
					openLinkNoScribe: this.onOpenLink.bind(this)
				})
			})
		}, this.render = function() {
			this.setFrameHeight()
		}, this.setFrameHeight = function() {
			var e = (0, a.default)(this.state, "xdmCard.iframe");
			e && (0, o.default)(e).height(this.state.xdmCardHeight)
		}, this.onResizeCard = function(e) {
			var t = e.height;
			this.state.xdmCardHeight !== t && this.mergeState({
				xdmCardHeight: t
			})
		}, this.onScribe = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = (0, a.default)(e, "customScribe.element", ""),
				i = (0, a.default)(e, "customScribe.action", ""),
				s = (0, a.default)(e, "customScribe.itemData", {}),
				r = (0, a.default)(e, "scribeData", {});
			(0, p.generic)((0, n.default)({}, this.attr.scribeNamespace, {
				element: t,
				action: i
			}), {
				items: [(0, n.default)({}, s, r)]
			})
		}, this.onOpenLink = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
			(0, u.isMacApp)() && (0, u.openURL)(e.url)
		}, this.makeCard = function(e, t) {
			var i = this,
				s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
			return new l.default.Rpc({
				remote: e,
				container: t,
				props: {
					height: "0",
					style: {
						display: "block"
					}
				}
			}, {
				local: (0, n.default)({}, s, {
					localMethodNames: function() {
						return i.getMethodNames(s)
					}
				}),
				remote: {
					localMethodNames: {},
					callVideoPlayerMethod: {},
					transmitEvent: {}
				}
			})
		}, this.getMethodNames = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
			return (0, r.default)(e, s.default)
		}, this.before("teardown", function() {
			this.trigger("uiCardDidResize", {
				height: void 0
			}), this.state.xdmCard && this.state.xdmCard.destroy()
		})
	}, f.default), e.exports.LegacyCardReact = (0, h.uiBaseToReact)(e.exports, {
		displayName: "LegacyCard"
	})
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	var n = {
		"./ar.js": [2645, 0, 5],
		"./bg.js": [2646, 0, 6],
		"./bn.js": [2647, 0, 7],
		"./ca.js": [2648, 0, 8],
		"./cs.js": [2649, 0, 9],
		"./da.js": [2650, 0, 10],
		"./de.js": [2651, 0, 11],
		"./el.js": [2652, 0, 12],
		"./en-GB.js": [2653, 0, 13],
		"./en-ss.js": [2654, 0, 15],
		"./en-xx.js": [2655, 0, 16],
		"./en.js": [2656, 0, 14],
		"./es.js": [2657, 0, 17],
		"./eu.js": [2658, 0, 18],
		"./fa.js": [2659, 0, 19],
		"./fi.js": [2660, 0, 20],
		"./fil.js": [2661, 0, 21],
		"./fr.js": [2662, 0, 22],
		"./ga.js": [2663, 0, 23],
		"./gl.js": [2664, 0, 24],
		"./gu.js": [2665, 0, 25],
		"./he.js": [2666, 0, 26],
		"./hi.js": [2667, 0, 27],
		"./hr.js": [2668, 0, 28],
		"./hu.js": [2669, 0, 29],
		"./id.js": [2670, 0, 30],
		"./it.js": [2671, 0, 31],
		"./ja.js": [2672, 0, 32],
		"./kn.js": [2673, 0, 33],
		"./ko.js": [2674, 0, 34],
		"./mr.js": [2675, 0, 35],
		"./ms.js": [2676, 0, 36],
		"./nb.js": [2677, 0, 37],
		"./nl.js": [2678, 0, 38],
		"./pl.js": [2679, 0, 39],
		"./pt.js": [2680, 0, 40],
		"./ro.js": [2681, 0, 41],
		"./ru.js": [2682, 0, 42],
		"./sk.js": [2683, 0, 43],
		"./sr.js": [2684, 0, 44],
		"./sv.js": [2685, 0, 45],
		"./ta.js": [2686, 0, 46],
		"./th.js": [2687, 0, 47],
		"./tr.js": [2688, 0, 48],
		"./uk.js": [2689, 0, 49],
		"./ur.js": [2690, 0, 50],
		"./vi.js": [2691, 0, 51],
		"./zh-Hant.js": [2692, 0, 52],
		"./zh.js": [2693, 0, 53]
	};

	function s(e) {
		var t = n[e];
		return t ? Promise.all(t.slice(1).map(i.e)).then(function() {
			var e = t[0];
			return i.t(e, 7)
		}) : Promise.resolve().then(function() {
			var t = new Error("Cannot find module '" + e + "'");
			throw t.code = "MODULE_NOT_FOUND", t
		})
	}
	s.keys = function() {
		return Object.keys(n)
	}, s.id = 1966, e.exports = s
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = a(i(9)),
		s = a(i(228));
	t.default = function(e) {
		var t = e.screenName,
			i = (0, s.default)(e, ["screenName"]);
		return r.default.createElement("a", (0, n.default)({
			href: "https://twitter.com/" + t,
			rel: "user",
			target: "_blank"
		}, i))
	};
	var r = a(i(4));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.default = function(e) {
		var t = e.children,
			i = TD.ui.template.render("status/media_sensitive", {
				isPossiblySensitive: !0
			});
		return r.default.createElement(r.default.Fragment, null, r.default.createElement("div", {
			className: "position-rel"
		}, r.default.createElement("div", {
			className: "js-media-sensitive-content media-sensitive-detail is-invisible"
		}, t), r.default.createElement("div", {
			dangerouslySetInnerHTML: {
				__html: i
			}
		})))
	};
	var n, s = i(4),
		r = (n = s) && n.__esModule ? n : {
			default: n
		}
}, function(e, t, i) {
	"use strict";
	var n = d(i(726)),
		s = d(i(120)),
		r = d(i(63)),
		a = d(i(55)),
		o = d(i(32)),
		l = d(i(0)),
		c = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(164)),
		u = i(344);

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.InReplyTo = TD.components.Base.extend(function(e, t, i, n, s) {
		var r = this;
		this.chirp = e, this.column = t, this.mainTweet = this.chirp.getMainTweet(), this.$container = i, this.$detailContentContainer = this.$container.find(".js-detail-container"), this.$detailContent = this.$detailContentContainer.find(".js-detail-content"), this.mediaPreviewSize = n, this.wantsDragHandle = s, this.mainTweet.inReplyToID && (this.$node.html(TD.ui.template.render("status/tweet_detail_inreplyto")), this.$repliesContainer = this.$find(".js-replies-before"), this.$repliesText = this.$find(".in-reply-to").hide(), this.replies = null, (0, o.default)(function() {
			r.bubbleEvent(TD.components.InReplyTo.BEGIN)
		}), this.subscription = l.default.subscribe("/tweets/conversation/" + this.mainTweet.id, (0, a.default)(this._handleRelatedResults, this)), this.client = TD.controller.clients.getClient(this.chirp.account.getKey()), this.client.getConversation(this.mainTweet.id))
	}).statics({
		BEGIN: "td-load-convo",
		END: "td-load-finish",
		INREPLYTO_PADDING: 20
	}).methods({
		_handleRelatedResults: function(e) {
			this.replies && this.replies.length > 0 || (this.replies = e.ancestors, (0, r.default)(this.replies) ? this._getTweet() : this._showReplies())
		},
		_getTweet: function() {
			var e = this;
			this.client.show(this.mainTweet.inReplyToID, function(t) {
				e.replies = e.replies || [], e.replies.push(t), e._showReplies()
			}, function() {
				e.bubbleEvent(TD.components.InReplyTo.END)
			})
		},
		_showReplies: function() {
			(0, o.default)((0, a.default)(this._showRepliesInternal, this))
		},
		_showRepliesInternal: function() {
			var e = this;
			if (this.bubbleEvent(TD.components.InReplyTo.END), !(0, r.default)(this.replies)) {
				var t = this.mainTweet.id;
				this.replies = (0, s.default)(this.replies, function(e) {
					return e.id !== t
				});
				var i = this.$detailContentContainer.outerHeight(),
					n = this.$detailContent.outerHeight();
				this.teardownCards(), this.$repliesContainer.empty(), this.replies.forEach(function(t) {
					if (t.topCursor) e.$repliesContainer.append(TD.ui.template.render("status/conversation_cursor_top"));
					else {
						var i = t.render({
							mediaPreviewSize: e.mediaPreviewSize,
							isInConvo: !0,
							hasReplies: t.hasReplies(),
							isGifActive: !0,
							withDragHandle: !e.isInOwnCustomTimeline && !t.user.isProtected
						});
						e.$repliesContainer.append(i);
						var n = e.$repliesContainer.find(".js-card-container:last");
						(0, u.renderCardForChirp)(t, n, {
							context: "column",
							scribeNamespace: {
								page: "main",
								section: "detail"
							}
						})
					}
				});
				var a = this.$node.outerHeight();
				n < i && this.$detailContent.css("padding-bottom", i - n);
				var o = void 0;
				o = this.replies.length <= 1 ? 0 : a - (this.$repliesContainer.children().last().outerHeight() + TD.components.InReplyTo.INREPLYTO_PADDING), this.$detailContentContainer.scrollTop(a), this.$detailContentContainer.animate({
					scrollTop: o
				}, {
					duration: "fast"
				});
				var c = {
						"border-bottom": "none"
					},
					d = this.$find(".js-cursor-top");
				this.$find(".js-has-replies").closest(".js-stream-item").css(c), d.css(c), d.click(function(e) {
					var t = (0, l.default)(e.currentTarget).nextAll(".stream-item:first");
					(0, l.default)(t).find(".js-show-detail").trigger("click")
				})
			}
		},
		findChirp: function(e) {
			var t = null;
			return this.chirp.id === e ? t = this.chirp : this.mainTweet.id === e ? t = this.mainTweet : this.replies && (t = (0, n.default)(this.replies, function(t) {
				return t.id === e
			})), t
		},
		teardownCards: function() {
			this.$repliesContainer && this.$repliesContainer.find(".js-card-container").each(function(e, t) {
				c.unmountComponentAtNode(t)
			})
		},
		destroy: function() {
			this.subscription && l.default.unsubscribe(this.subscription), this.teardownCards(), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(46)),
		s = a(i(55)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.BaseModal = TD.components.Base.extend(function(e) {
		void 0 !== e && (this.title = e.title), this.$node = this._render(), (0, r.default)(document).trigger("uiCloseModal"), this.$title = this.$find(".js-header-title"), this.$closeButton = this.$find(".js-dismiss"), this.$menuContainer = this.$find(".js-mdl-content"), this.$footer = this.$find("footer");
		var t = (0, s.default)(this.destroy, this);
		this.$node.bind(TD.components.BaseModal.CLOSE_EVENT, t), this.$node.on("click", ".js-dismiss", this.destroy.bind(this)), this.boundCloseModal = this._handleCloseModal.bind(this), (0, r.default)(document).on("uiCloseModal", this.boundCloseModal);
		var i = (0, s.default)(this.handleDragStart, this),
			a = (0, s.default)(this.getDragDropBoundary, this);
		this.$node.draggable({
			boundary: a,
			handle: this.$find(".js-drag-handle")
		}), this.$node.on("start.draggable", i), (0, r.default)("div.ovl.scroll-v").on("click", function(e) {
			this === e.target && t()
		}), TD.util.isTouchDevice() && window.navigator.standalone && ((0, r.default)("div.ovl.scroll-v").on("touchmove", function(e) {
			e.preventDefault()
		}), (0, r.default)("div.ovl.scroll-v").on("touchmove", ".scroll-v", function(e) {
			e.stopPropagation()
		})), this.hasFocus = !1, this.focusId = (0, n.default)("focus"), this._boundHandleFocus = this.handleFocus.bind(this), (0, r.default)(document).on("uiFocus", this._boundHandleFocus), (0, r.default)(document).trigger("uiFocusRequest", {
			id: this.focusId
		})
	}).statics({
		CLOSE_EVENT: "td-close"
	}).methods({
		_render: function() {
			return (0, r.default)(TD.ui.template.render("large_modal", {
				title: this.title,
				withHeaderDivider: !0
			}))
		},
		handleFocus: function(e, t) {
			t.id === this.focusId ? this.hasFocus = !0 : this.hasFocus = !1
		},
		getDragDropBoundary: function() {
			return this.$node.parent()
		},
		handleDragStart: function() {
			this.$node.css({
				position: "absolute",
				top: this.$node.offset().top,
				left: this.$node.offset().left
			}), this.$node.parent("#open-modal").addClass("is-dragging")
		},
		setAndShowContainer: function(e, t) {
			"boolean" != typeof t && (t = !0), t && e.empty(), e.append(this.$node).show(), this._checkIfTouchModal(e)
		},
		show: function() {
			this.supr()
		},
		_checkIfTouchModal: function(e) {
			var t = (0, r.default)("#open-modal");
			TD.util.isTouchDevice() && TD.decider.get("touchdeck_modals_v2") ? (e.addClass("is-touch-modal"), t.addClass("is-touch-modal")) : (e.removeClass("is-touch-modal"), t.removeClass("is-touch-modal"))
		},
		_handleCloseModal: function() {
			this.destroy()
		},
		destroy: function() {
			this.$node.parent("#open-modal").removeClass("is-dragging"), (0, r.default)(document).off("uiFocus", this._boundHandleFocus), (0, r.default)(document).off("uiCloseModal", this.boundCloseModal), (0, r.default)(document).trigger("uiFocusRelease", {
				id: this.focusId
			}), this.$node.find("video, video source").attr("src", ""), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.NewFeaturesSplash = TD.components.BaseModal.extend(function() {
		this.$node.addClass("release-notes-modal"), this.$menuContainer.append(TD.ui.template.render("splash/whats_new")), this.$find(".js-mdl-content").removeClass("horizontal-flow-container"), this.bind(), this.setAndShowContainer((0, r.default)("#splash-modal")), TD.components.NewFeaturesSplash.updateSeenVersion()
	}).statics({
		FOR_VERSION: "3.5",
		shouldShow: function() {
			var e = TD.components.NewFeaturesSplash.FOR_VERSION,
				t = TD.settings.getPreviousSplashVersion();
			return 1 === TD.util.versionComparator(e, t) && (-1 !== TD.util.versionComparator(TD.version, e) && ((0, r.default)(document).trigger("metric", {
				key: "login:featuresplash"
			}), !0))
		},
		updateSeenVersion: function() {
			TD.settings.setPreviousSplashVersion(TD.version)
		}
	}).methods({
		destroy: function() {
			this.supr(), (0, r.default)("#splash-modal").hide()
		},
		bind: function() {
			this.$find(".js-done").click(this.destroy.bind(this)), this.$find("[data-action]").click(this._handleActionClick.bind(this))
		},
		_handleActionClick: function(e) {
			switch (e.preventDefault(), e.target.dataset.action) {
				case "signOut":
					TD.storage.store.setCurrentAuthType("tweetdeck"), TD.controller.init.signOut();
					break;
				case "openSettings":
					(0, r.default)(document).trigger("uiShowAccountSettings")
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(15)),
		s = o(i(88)),
		r = o(i(2)),
		a = o(i(0));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.OpenColumn = TD.components.BaseModal.extend(function() {
		var e = this;
		this.$footer.append((0, a.default)(TD.ui.template.render("open_column_footer"))), this.$backButton = this.$find(".js-back"), this.$addButton = this.$find(".js-add-column"), this.history = [], this.menu = null, this.$backButton.bind("click", function(t) {
			t.stopPropagation(), e._previous()
		}), this.$node.on(TD.components.TemporaryColumn.DELETED_EVENT, this._reload.bind(this))
	}).statics({
		GO_URL_REGEX: /^(add|profile)$/,
		GO_EVENT: "/go",
		instance: null
	}).methods({
		canGo: function(e, t) {
			return TD.components.OpenColumn.GO_URL_REGEX.test(e)
		},
		go: function(e, t, i, n) {
			TD.components.OpenColumn.instance = this, n && (this.history = [n]), this.history.push([e, (0, s.default)(t), i]);
			var r, a = t.shift();
			if (this.menu && this.menu.canGo && this.menu.canGo(e, t)) return this.history.pop(), this.history[this.history.length - 1] = fullUrl, void this.menu.go(a, t, i);
			var o = !1;
			if ("add" === e) switch (a) {
				case "home":
					r = new TD.components.OpenColumnHome, o = !0;
					break;
				case "lists":
				case "customtimelines":
					r = new TD.components.OpenCustomTimelines(a);
					break;
				case "dataminr":
					r = new TD.components.OpenDataminr;
					break;
				case "livevideo":
					r = new TD.components.OpenLiveVideo;
					break;
				default:
					TD.controller.columnManager.TWITTER_GENERIC[a] && (r = new TD.components.OpenTwitterGeneric(a))
			}
			this._show(a, r, o, !1, !1), r.go && r.go(a, t, i)
		},
		_show: function(e, t, i, n, s) {
			this.menu && this.menu.destroy(), this.menu = t, this.$menuContainer.append(t.$node), i || this.menu.setup(this.$addButton), this.$node.toggleClass("s-nonav s-minimal s-fluid width--523", i), this.$node.toggleClass("s-narrow", n), this.$backButton.toggle(this.history.length > 1).toggleClass("hide", 0 === this.history.length), "home" === e ? this.$title.text((0, r.default)("Choose a column type to add")) : "profile" === e ? this.$title.text((0, r.default)("Account profile")) : this.$title.text(TD.controller.columnManager.MODAL_TITLE[e] || "")
		},
		_previous: function() {
			this.history.pop();
			var e = this.history.pop();
			e instanceof Array ? this.go.apply(this, e) : (this.destroy(), (0, a.default)(e.target).trigger(e.type, [e.data]))
		},
		_reload: function() {
			var e = this.history.pop();
			e instanceof Array && this.go.apply(this, e)
		},
		destroy: function() {
			this.menu && this.menu.destroy(), (0, n.default)(this.eventSubscriptions, function(e) {
				a.default.unsubscribe(e)
			}), this.$backButton.unbind(), (0, a.default)("#open-modal").hide(), TD.components.OpenColumn.instance = null, this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(63)),
		s = a(i(0)),
		r = i(37);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.OpenColumnHome = TD.components.Base.extend(function() {
		var e = this,
			t = this,
			i = !1,
			a = !1;
		this.premiumAnalytics$ = r.premiumAnalytics$.subscribe(function(e) {
			i = e
		}), this.tweetdeckBeta$ = r.tweetdeckBeta$.subscribe(function(e) {
			a = e
		}), this.singletonTypes = {};
		var o = {},
			l = {};
		l[TD.controller.columnManager.DATAMINR] = !0, l[TD.controller.columnManager.LIVEVIDEO] = !0, l[TD.controller.columnManager.EVENT] = !0, TD.controller.columnManager.DISPLAY_ORDER_SINGLETONS.forEach(function(e) {
			t.singletonTypes[e.type] = !0, o[e.type] = !(0, n.default)(TD.storage.columnController.getColumnsByType(e.type)), l[e.type] = !1
		}), this.$node = (0, s.default)(TD.ui.template.render("open_column_home", {
			options: TD.controller.columnManager.DISPLAY_ORDER,
			isDisabled: function() {
				return o[this.type]
			},
			isHidden: function() {
				return l[this.type]
			}
		})), this.$launchers = this.$find(".js-item-launch"), this.$launchers.bind("click", function(e) {
			var n = (0, s.default)(e.currentTarget),
				r = n.data("type"),
				o = t.singletonTypes[r],
				l = "trends" === r;
			l && TD.settings.setShowTrendingColumnNewPill(!1);
			var c, u = l || i && "analytics" === r || a && "whatshappening" === r;
			n.hasClass("is-disabled") || (o || u ? (c = TD.controller.columnManager.makeColumnFor({
				type: r,
				service: "tweetdeck"
			}), TD.controller.columnManager.addColumnToUI(c), t.bubbleEvent(TD.components.BaseModal.CLOSE_EVENT)) : t.publishEvent(TD.components.OpenColumn.GO_EVENT, TD.components.OpenColumnHome.URL_BASE + "/" + r))
		}), this._boundHandleDataminrAuthenticated = this._handleDataminrAuthenticated.bind(this), (0, s.default)(document).on("dataDataminrAuthenticated", this._boundHandleDataminrAuthenticated), (0, s.default)(document).trigger("uiNeedsDataminrAuth"), this.liveVideo$ = (0, r.getStreamForLiveVideo)().distinctUntilChanged().subscribe(function(t) {
			e.$find('.js-item-launch[data-type="livevideo"]').toggleClass("is-hidden", !t)
		}), this.$find('.js-item-launch[data-type="analytics"]').toggleClass("is-hidden", !i), this.$find('.js-item-launch[data-type="whatshappening"]').toggleClass("is-hidden", !a)
	}).statics({
		URL_BASE: "/add",
		DATAMINR_ADD_SELECTOR: '.js-item-launch[data-type="dataminr"]'
	}).methods({
		_handleDataminrAuthenticated: function() {
			this.$find(TD.components.OpenColumnHome.DATAMINR_ADD_SELECTOR).removeClass("is-hidden")
		},
		destroy: function() {
			(0, s.default)(document).off("dataDataminrAuthenticated", this._boundHandleDataminrAuthenticated), this.liveVideo$ && this.liveVideo$.unsubscribe(), this.premiumAnalytics$ && this.premiumAnalytics$.unsubscribe(), this.tweetdeckBeta$ && this.tweetdeckBeta$.unsubscribe(), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(15)),
		s = a(i(229)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.SplitMenu = TD.components.Base.extend(function() {
		var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).hasAddMultipleUsersButton;
		this.$node = (0, r.default)(TD.ui.template.render("open_split_menu", {
			hasAddMultipleUsersButton: e
		})), this.menuItems = [], this.rightPillarComponent = null, this.pinnedMenuComponent = null, this.$leftPinnedContainer = this.$find(".js-left-pinned"), this.$leftPinnedBottomContainer = this.$find(".js-left-pinned-bottom"), this.$leftPillarContainer = this.$find(".js-left-column"), this.$rightPillarContainer = this.$find(".js-right-column")
	}).methods({
		appendMenuItem: function(e) {
			this.menuItems.push(e), this.$leftPillarContainer.append(e.$node)
		},
		removeMenuItem: function(e) {
			e.destroy(), this.pinnedMenuComponent === e && (this.pinnedMenuComponent = null, this.$leftPillarContainer.removeClass("s-with-pinned")), this.menuItems = (0, s.default)(this.menuItems, e)
		},
		appendPinnedMenuItem: function(e) {
			var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).bottom;
			if (this.pinnedMenuComponent = e, this.menuItems.push(e), t) return this.$leftPillarContainer.addClass("s-with-pinned-bottom"), void this.$leftPinnedBottomContainer.html(e.$node);
			this.$leftPillarContainer.addClass("s-with-pinned"), this.$leftPinnedContainer.html(e.$node)
		},
		appendMenuItemElement: function(e) {
			this.$leftPillarContainer.append(e)
		},
		setRightPillar: function(e) {
			this.rightPillarComponent && this.rightPillarComponent.destroy(), this.rightPillarComponent = e, this.$rightPillarContainer.html(e.$node)
		},
		destroy: function() {
			(0, n.default)(this.menuItems, function(e) {
				e.destroy()
			}), this.rightPillarComponent && this.rightPillarComponent.destroy(), this.supr()
		}
	})
}, , , , function(e, t, i) {
	"use strict";
	var n = r(i(32)),
		s = r(i(55));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.OpenSplitMenu = TD.components.SplitMenu.extend(function() {
		this.$addButton = null
	}).methods({
		setup: function(e) {
			this.$addButton = e, this.$addButton.hide(), this.$addButton.click((0, s.default)(this._handleAddClick, this))
		},
		setChirpPillar: function(e) {
			this.setRightPillar(e);
			var t = this;
			e instanceof TD.components.TemporaryColumn && (0, n.default)(function() {
				e.populate(), t.$addButton.show(), t.$addButton.prop("disabled", !1)
			})
		},
		_handleAddClick: function(e) {
			this.$addButton.prop("disabled") || this.makeChirpColumnPermanent()
		},
		makeChirpColumnPermanent: function() {
			this.rightPillarComponent && (this.rightPillarComponent.makePermanent(), this.$addButton.prop("disabled", !0))
		},
		destroy: function() {
			this.$addButton.unbind("click"), this.$addButton.hide(), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(55),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.OpenTwitterGeneric = TD.components.OpenSplitMenu.extend(function(e) {
		if (this.type = e, this.showUserSearch = !TD.controller.columnManager.SELF_ACCOUNTS_ONLY[e], this.userSearch = null, this.helpText = TD.controller.columnManager.HELP_TEXT[e], this.placeHolder = new TD.components.OpenColumnPlaceholder(this.helpText), this.setChirpPillar(this.placeHolder), this.showUserSearch) {
			this.userSearch = new TD.components.TwitterUserSearch, this.appendPinnedMenuItem(this.userSearch);
			var t = this.userSearch.detachResultsContainer();
			this.appendMenuItemElement(t)
		}
		this.profileAccount = new TD.components.ProfileAccount, this.profileAccount.$node.hide(), this.appendMenuItem(this.profileAccount), this.selfAccounts = new TD.components.SelfAccounts("twitter"), this.appendMenuItem(this.selfAccounts), this.$node.bind(TD.components.MenuItemBase.BUBBLE_SELECT_EVENT, (0, r.default)(this._handleSelect, this))
	}).methods({
		go: function(e, t, i) {
			i.screenName ? (this.profileAccount.setUser(i.screenName), this.profileAccount.$node.show(), this.profileAccount.select()) : this.selfAccounts.selectDefault()
		},
		_handleSelect: function(e, t) {
			var i;
			if (t.target.account)(i = new TD.components.TemporaryColumn).genericTwitter(this.type, t.target.account, void 0);
			else if (t.target.twitterUser) {
				i = new TD.components.TemporaryColumn;
				var n = this.userSearch.client.oauth.account;
				i.genericTwitter(this.type, n, t.target.twitterUser)
			}
			i && (this.setChirpPillar(i), e.stopPropagation())
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(55)),
		s = o(i(2)),
		r = o(i(2073)),
		a = o(i(2074));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.OpenCustomTimelines = TD.components.OpenSplitMenu.extend(function(e) {
		switch (this.mode = e, this.screenName = null, this.listsComponent = null, this.newCustomTimelineButton = null, this.mode) {
			case "lists":
				this.helpText = TD.controller.columnManager.HELP_TEXT[TD.controller.columnManager.LISTS];
				break;
			case "customtimelines":
				this.helpText = TD.controller.columnManager.HELP_TEXT[TD.controller.columnManager.CUSTOMTIMELINES]
		}
		this.placeHolder = new TD.components.OpenColumnPlaceholder(this.helpText), this.removePlaceholder = new TD.components.OpenColumnPlaceholder(""), this.setChirpPillar(this.placeHolder), this.$node.bind(TD.components.MenuItemBase.BUBBLE_SELECT_EVENT, (0, n.default)(this._handleListSelect, this)), this.$node.bind(TD.components.CustomTimelines.LOADED, (0, n.default)(this._handleListsLoaded, this))
	}).methods({
		go: function(e, t, i) {
			if (i.screenName) this.screenName = i.screenName, this.listsComponent = new TD.components.CustomTimelines(this.screenName, i.slug, this.mode), this.appendMenuItem(this.listsComponent);
			else {
				this.listsComponent = new TD.components.CustomTimelines(null, null, this.mode), this.appendMenuItem(this.listsComponent), this.newCustomTimelineButton = new a.default(r.default, {
					mode: this.mode
				});
				var n = 0 !== this.listsComponent.items.length;
				n || this.$leftPillarContainer.remove(), this.appendPinnedMenuItem(this.newCustomTimelineButton, {
					bottom: n
				})
			}
		},
		_handleListsLoaded: function(e, t) {
			if (t.target === this.listsComponent && 0 === t.data) {
				var i;
				switch (this.removeMenuItem(this.listsComponent), this.mode) {
					case "lists":
						i = this.screenName ? (0, s.default)("This user has no public Lists") : (0, s.default)("You are not subscribed to any Lists");
						break;
					case "customtimelines":
						i = this.screenName ? (0, s.default)("This user has no Collections") : (0, s.default)("You do not have any Collections")
				}
				this.listsComponent = new TD.components.OpenColumnPlaceholder(i), this.setChirpPillar(this.removePlaceholder), this.appendMenuItem(this.listsComponent)
			}
		},
		_handleListSelect: function(e, t) {
			var i = t.target.list,
				n = new TD.components.TemporaryColumn;
			switch (this.mode) {
				case "lists":
					n.list(i);
					break;
				case "customtimelines":
					n.customTimeline(i)
			}
			this.setChirpPillar(n), e.stopPropagation()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(2)),
		s = o(i(0)),
		r = o(i(6)),
		a = o(i(7));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			mode: null,
			buttonTemplate: "new_custom_timeline_button"
		}), this.componentDidInitialize = function() {
			this.on("click", this.handleNewCustomTimelineClick)
		}, this.scribeNewListClick = function() {
			TD.controller.stats.newListClick()
		}, this.scribeNewCustomtimelineClick = function() {
			TD.controller.stats.newCustomtimelineClick()
		}, this.handleNewCustomTimelineClick = function() {
			switch (this.trigger(TD.components.BaseModal.CLOSE_EVENT), this.attr.mode) {
				case "lists":
					(0, s.default)(document).trigger("uiShowEditListMembers"), this.scribeNewListClick();
					break;
				case "customtimelines":
					(0, s.default)(document).trigger("uiShowEditCustomTimeline"), this.scribeNewCustomtimelineClick()
			}
		}, this.getButtonText = function(e) {
			switch (e) {
				case "lists":
					return (0, n.default)("Create List");
				case "customtimelines":
					return (0, n.default)("Create Collection");
				default:
					return ""
			}
		}, this.render = function() {
			var e = r.default.render(this.attr.buttonTemplate, {
				buttonText: this.getButtonText(this.attr.mode)
			});
			this.$node.html(e)
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(66);
	t.default = TD.components.Base.extend(function(e, t) {
		var i = (0, a.attach)(e, this.$node, t).teardownEvent;
		this.teardownEvent = i
	}).methods({
		destroy: function() {
			(0, r.default)(document).trigger(this.teardownEvent), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.OpenDataminr = TD.components.OpenSplitMenu.extend(function() {
		this.helpText = TD.controller.columnManager.HELP_TEXT[TD.controller.columnManager.DATAMINR], this.placeHolder = new TD.components.OpenColumnPlaceholder(this.helpText), this.setChirpPillar(this.placeHolder), this._boundHandleWatchlistSelect = this._handleWatchlistSelect.bind(this), this._boundHandleWatchlists = this._handleWatchlists.bind(this), this.$node.bind(TD.components.MenuItemBase.BUBBLE_SELECT_EVENT, this._boundHandleWatchlistSelect), (0, s.default)(document).bind("dataDataminrWatchlists", this._boundHandleWatchlists)
	}).methods({
		go: function(e, t, i) {
			this.watchlistsComponent && this.watchlistsComponent.destroy(), this.watchlistsComponent = new TD.components.Dataminr, this.appendMenuItem(this.watchlistsComponent)
		},
		_handleWatchlists: function(e, t) {
			if (!t.watchlists || !t.watchlists.length) {
				this.removeMenuItem(this.watchlistsComponent);
				var i = (0, n.default)("You are not subscribed to any watchlists");
				this.watchlistsComponent = new TD.components.OpenColumnPlaceholder(i), this.setChirpPillar(this.removePlaceholder), this.appendMenuItem(this.watchlistsComponent)
			}
		},
		_handleWatchlistSelect: function(e, t) {
			var i = new TD.components.TemporaryColumn,
				n = TD.storage.store.getTwitterLoginAccount();
			i.dataminr(t.target.watchlist, n.getKey()), this.setChirpPillar(i)
		},
		destroy: function() {
			this.$node.off(TD.components.MenuItemBase.BUBBLE_SELECT_EVENT, this._boundHandleWatchlistSelect), (0, s.default)(document).off("dataDataminrWatchlists", this._boundHandleWatchlists), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(55),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.OpenLiveVideo = TD.components.OpenSplitMenu.extend(function() {
		this.liveVideos = new TD.components.LiveVideos, this.appendMenuItem(this.liveVideos), this.helpText = TD.controller.columnManager.HELP_TEXT[TD.controller.columnManager.LIVEVIDEO], this.placeHolder = new TD.components.OpenColumnPlaceholder(this.helpText), this.setChirpPillar(this.placeHolder), this.$node.bind(TD.components.MenuItemBase.BUBBLE_SELECT_EVENT, (0, r.default)(this._handleLiveVideoSelect, this))
	}).methods({
		_handleLiveVideoSelect: function(e, t) {
			var i = new TD.components.TemporaryColumn;
			i.liveVideo("livevideo", t.target.metadata), this.setChirpPillar(i), e.stopPropagation()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(44)),
		s = a(i(0)),
		r = i(47);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.LiveVideos = TD.components.Base.extend(function() {
		this.$node = (0, s.default)(TD.ui.template.render("list_module_livevideos")), this.$liveVideosList = this.$find(".js-live-videos-list"), (0, r.getTwitterClient)().getLiveEvents().addCallbackWith(this, function(e) {
			var t = this;
			(0, n.default)(e.data).forEach(function(i) {
				var n = e.data[i];
				(function(e) {
					var t = {
							id: e.id_str,
							title: e.title,
							timelines: e.timelines,
							hasMultipleTimelines: e.timelines.length > 1,
							aspectRatio: e.media.video_info.aspect_ratio
						},
						i = (new TD.components.MenuItem).liveVideo(t);
					this.$liveVideosList.append(i.$node)
				}).call(t, n)
			})
		})
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.OpenColumnPlaceholder = TD.components.Base.extend(function(e) {
		this.helperText = e, this.$node = (0, r.default)(TD.ui.template.render("open_column_temp_help", {
			helpText: e
		}))
	})
}, function(e, t, i) {
	"use strict";
	var n = h(i(46)),
		s = h(i(15)),
		r = h(i(112)),
		a = h(i(63)),
		o = h(i(55)),
		l = h(i(2)),
		c = h(i(0)),
		u = h(i(17)),
		d = i(19);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.ListMembers = TD.components.BaseModal.extend(function(e, t) {
		var i = this;
		this.theList = e, this.membersIndex = {}, this.changed = !1, this.client = TD.controller.clients.getClient(e.account.getKey()), this.feedKey = TD.storage.Feed.generateKeyFor(this.theList.account.getKey(), "list", {
			listId: this.theList.id,
			ownerId: this.theList.user.id
		}), this.splitMenu = new TD.components.SplitMenu({
			hasAddMultipleUsersButton: !0
		}), this.userSearch = new TD.components.TwitterUserSearch(e.user.account, 10, TD.components.ListMember), this.suggestedUsers = new TD.components.SuggestedUsers(e.user.account, 10, TD.components.ListMember, e.name), this.loadingPane = new TD.components.OpenColumnPlaceholder((0, l.default)("Loading List members…")), this.memberList = new TD.components.ListMemberList, this.$title.html((0, l.default)("{{{1}}} by {{2}}", {
			1: u.default.cleanWithEmoji(e.name),
			2: e.user.screenName
		})), this.$menuContainer.append(this.splitMenu.$node), this.$footer.append((0, c.default)(TD.ui.template.render("lists/edit_members_footer"))), this.splitMenu.appendPinnedMenuItem(this.userSearch), this.splitMenu.appendMenuItemElement(this.userSearch.detachResultsContainer()), this.splitMenu.appendMenuItem(this.suggestedUsers), this.splitMenu.setRightPillar(this.loadingPane), this.setAndShowContainer((0, c.default)("#lists-modal")), this.userSearch.searchInput.$inputBox.focus(), this.$memberCount = this.memberList.$find(".js-member-count"), this.$editButton = this.$find(".js-edit"), this.$addMultipleButton = this.$find(".js-add-multiple"), this.$deleteButton = this.$find(".js-delete"), this.$doneButton = this.$find(".js-done"), this.$addColumnOption = this.$find(".js-add-column-option"), this.$addColumnCheckbox = this.$addColumnOption.find(".js-add-column-checkbox"), this.$exportButton = this.memberList.$find(".js-action-header-export-button"), this.$exportButton.click((0, o.default)(this._exportList, this)), 0 === TD.storage.columnController.getColumnsContainingFeed(this.feedKey).length && (this.$addColumnCheckbox.prop("checked", !0), this.$addColumnOption.removeClass("is-hidden")), this.$editButton.click((0, o.default)(this._editDetails, this)), this.$addMultipleButton.click((0, o.default)(this._addMultipleUsers, this)), this.$deleteButton.click((0, o.default)(this._deleteList, this)), this.$doneButton.click((0, o.default)(this._handleDone, this)), this.$node.bind(TD.components.ListMember.ADD_REMOVE_EVENT, (0, o.default)(this._addRemoveMember, this)), this.$node.bind(TD.components.TwitterUserSearch.SEARCH_COMPLETE, function(e, t) {
			var n = t.target;
			i._checkResultsState(n), i.splitMenu.$leftPillarContainer.scrollTop(0)
		}), this._updateMemberCountAndExportButton(), this._importMembers(t).addCallback(function() {
			i.suggestedUsers.render(), i._checkResultsState(i.userSearch), i._checkResultsState(i.suggestedUsers)
		})
	}).methods({
		_addMembers: function(e) {
			var t;
			if ((0, a.default)(e)) t = TD.core.defer.succeed();
			else {
				t = new TD.core.defer.Deferred;
				var i = (0, r.default)(e, "screenName");
				this.client.addUsersToList(this.theList.id, i, (0, o.default)(t.callback, t), (0, o.default)(t.errback, t))
			}
			return t
		},
		_importMembers: function(e) {
			var t = this,
				i = this._addMembers(e);
			return i.addCallbackWith(this, this._loadAllMembers), i.addCallback(function() {
				return t._updateMemberCountAndExportButton()
			}), i.addCallback(function() {
				e && (0, d.showNotification)({
					message: (0, l.default)("Users added successfully")
				})
			}), i.addErrback(function(e) {
				(0, d.showErrorNotification)({
					message: (0, l.default)("Oops, something wen't wrong")
				})
			}), i
		},
		_loadAllMembers: function() {
			var e, t = this;
			return (e = this._fetchMemberPage(-1)).addCallback(function(e) {
				t.theList.memberCount = e.users.length, t._displayMembers(e.users, !1)
			}), e
		},
		_fetchMemberPage: function(e) {
			var t = new TD.core.defer.Deferred,
				i = {
					id: this.theList.id,
					cursor: e,
					count: 5e3
				};
			return this.client.getListMembers(i, (0, o.default)(t.callback, t), (0, o.default)(t.errback, t)), t
		},
		_displayMembers: function(e, t) {
			var i = this;
			t && e.reverse(), (0, s.default)(e, function(e) {
				if (!i.membersIndex[e.id]) {
					var n = new TD.components.ListMember(e);
					i.membersIndex[n.user.id] = n, t ? i.memberList.prepend(n) : i.memberList.append(n)
				}
			}), this.loadingPane && (this.loadingPane.destroy(), this.loadingPane = null, this.splitMenu.setRightPillar(this.memberList))
		},
		_updateMemberCountAndExportButton: function() {
			var e = this.theList.isOwnList() && this.theList.memberCount > 0;
			this.$memberCount.text(this.theList.memberCount), this.$exportButton.toggleClass("is-hidden", !e)
		},
		_editDetails: function() {
			this.$node.trigger("uiShowEditListDetails", {
				list: this.theList
			}), this.destroy()
		},
		_addMultipleUsers: function() {
			(0, c.default)(document).trigger("uiShowImportListModal", {
				list: this.theList
			})
		},
		_exportList: function() {
			var e = (0, r.default)(this.membersIndex, "user.screenName").map(function(e) {
				return "@" + e
			}).join("\n");
			(0, c.default)(document).trigger("uiShowExportListModal", {
				list: this.theList,
				members: e
			})
		},
		_deleteList: function() {
			var e = this,
				t = (0, n.default)(),
				i = {
					id: t,
					title: (0, l.default)("Deleting List!"),
					message: (0, l.default)("Are you sure you want to delete this List?"),
					okLabel: (0, l.default)("Delete"),
					cancelLabel: (0, l.default)("Cancel")
				};
			(0, c.default)(document).on("uiConfirmationAction", function i(n, s) {
				s.id === t && ((0, c.default)(document).off("uiConfirmationAction", i), s.result && e.client.destroyList(e.theList.id, function() {
					e.theList = null, e.destroy()
				}))
			}).trigger("uiShowConfirmationDialog", i)
		},
		_addRemoveMember: function(e, t) {
			e.stopPropagation();
			var i = t.target;
			this.membersIndex[i.user.id] ? this.removeMember(i.user) : this.addMember(i.user)
		},
		addMember: function(e) {
			var t = this;
			this._changeUserState(e.id, TD.components.ListMember.STATE_WORKING), this.client.addUserToList(this.theList.id, e.screenName, function(i) {
				t._displayMembers([e], !0), t.theList.memberCount++, t._updateMemberCountAndExportButton(), t._changeUserState(e.id, TD.components.ListMember.STATE_MEMBER), t.changed = !0
			}, function(i) {
				t._changeUserState(e.id, TD.components.ListMember.STATE_NON_MEMBER);
				var n = (0, l.default)("Problem adding {{userName}} to the List {{listName}}. Please try again", {
					userName: e.name,
					listName: t.theList.name
				});
				(0, d.showErrorNotification)({
					message: n
				})
			})
		},
		removeMember: function(e) {
			var t = this;
			this._changeUserState(e.id, TD.components.ListMember.STATE_WORKING), this.client.removeUserFromList(this.theList.id, e.screenName, function(i) {
				t.membersIndex[e.id].destroy(), delete t.membersIndex[e.id], t.theList.memberCount--, t._updateMemberCountAndExportButton(), t._changeUserState(e.id, TD.components.ListMember.STATE_NON_MEMBER), t.changed = !0
			}, function(i) {
				t._changeUserState(e.id, TD.components.ListMember.STATE_MEMBER);
				var n = (0, l.default)("Problem removing {{userName}} from the List {{listName}}. Please try again", {
					userName: e.name,
					listName: t.theList.name
				});
				(0, d.showErrorNotification)({
					message: n
				})
			})
		},
		_changeUserState: function(e, t) {
			this.membersIndex[e] && this.membersIndex[e].setState(t), t === TD.components.ListMember.STATE_MEMBER && (t = TD.components.ListMember.STATE_MEMBER_CHECKED);
			var i = this.userSearch.items.concat(this.suggestedUsers.items);
			(0, s.default)(i, function(i) {
				i.user.id === e && i.setState(t)
			})
		},
		_checkResultsState: function(e) {
			var t = this,
				i = e === this.suggestedUsers;
			(0, s.default)(e.items, function(e) {
				t.membersIndex[e.user.id] ? (e.setState(TD.components.ListMember.STATE_MEMBER_CHECKED), i && e.hide()) : (e.setState(TD.components.ListMember.STATE_NON_MEMBER), i && e.show())
			})
		},
		_handleDone: function() {
			if (this.$addColumnCheckbox.prop("checked")) {
				var e = new TD.components.TemporaryColumn;
				e.list(this.theList), e.makePermanent()
			}
			this.destroy()
		},
		destroy: function() {
			if (this.changed && this.theList) {
				TD.cache.lists.add(this.theList);
				var e = TD.controller.feedManager.getPoller(this.feedKey);
				e && e.refresh({
					reset: !0
				})
			}(0, c.default)("#lists-modal").hide(), this.splitMenu.destroy(), this.userSearch.destroy(), this.suggestedUsers.destroy(), this.memberList.destroy(), this.loadingPane && this.loadingPane.destroy(), (0, s.default)(this.membersIndex, function(e, t) {
				e.destroy()
			}), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(55)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.ListMember = TD.components.Base.extend(function(e) {
		this.user = e, this.state = null;
		var t = {
			fullname: e.name || e.screenName,
			username: e.screenName,
			profileImageURL: e.profileImageURL,
			description: e.description,
			isProtected: e.isProtected,
			isVerified: e.isVerified
		};
		this.$node = (0, s.default)(TD.ui.template.render("lists/member", t)), this.$addRemoveButton = this.$find(".js-add-remove"), this.$addRemoveButton.click((0, n.default)(this._handleAddRemoveClick, this)), this.setMember()
	}).statics({
		ADD_REMOVE_EVENT: "td-add-remove",
		STATE_MEMBER: "member",
		STATE_MEMBER_CHECKED: "member-checked",
		STATE_NON_MEMBER: "non-member",
		STATE_WORKING: "working"
	}).methods({
		_handleAddRemoveClick: function() {
			this.bubbleEvent(TD.components.ListMember.ADD_REMOVE_EVENT)
		},
		setState: function(e) {
			switch (e) {
				case TD.components.ListMember.STATE_MEMBER:
					this.setMember();
					break;
				case TD.components.ListMember.STATE_MEMBER_CHECKED:
					this.setMemberChecked();
					break;
				case TD.components.ListMember.STATE_NON_MEMBER:
					this.setNonMember();
					break;
				case TD.components.ListMember.STATE_WORKING:
					this.setWorking()
			}
		},
		setMember: function() {
			this.state = TD.components.ListMember.STATE_MEMBER, this.$addRemoveButton.removeClass("s-nonmember s-working s-checked").addClass("s-member"), this.$addRemoveButton.prop("disabled", !1)
		},
		setMemberChecked: function() {
			this.state = TD.components.ListMember.STATE_MEMBER_CHECKED, this.$addRemoveButton.removeClass("s-nonmember s-member s-working").addClass("s-checked"), this.$addRemoveButton.prop("disabled", !1)
		},
		setNonMember: function() {
			this.state = TD.components.ListMember.STATE_NON_MEMBER, this.$addRemoveButton.removeClass("s-member s-checked s-working").addClass("s-nonmember"), this.$addRemoveButton.prop("disabled", !1)
		},
		setWorking: function() {
			this.state = TD.components.ListMember.STATE_WORKING, this.$addRemoveButton.removeClass("s-member s-nonmember s-checked").addClass("s-working"), this.$addRemoveButton.prop("disabled", !0)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.ListMemberList = TD.components.Base.extend(function() {
		this.$node = (0, r.default)(TD.ui.template.render("lists/member_list")), this.$list = this.$find(".js-member-list")
	}).methods({
		append: function(e) {
			this.$list.append(e.$node)
		},
		prepend: function(e) {
			this.$list.prepend(e.$node)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = h(i(32)),
		s = h(i(43)),
		r = h(i(807)),
		a = h(i(38)),
		o = h(i(15)),
		l = h(i(2)),
		c = h(i(0)),
		u = i(275),
		d = i(47);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.CustomTimelines = TD.components.Base.extend(function(e, t, i) {
		var n = this;
		this.mode = i;
		var s, r, a = this,
			u = {},
			h = TD.storage.clientController.client.getDefaultAccount();
		switch (this.owners = u, this.screenName = e, e ? s = "lists" === this.mode ? (0, l.default)("@{{screenName}}'s Lists", this) : (0, l.default)("@{{screenName}}'s Collections", this) : "lists" === this.mode ? s = (0, l.default)("Your Lists") : "customtimelines" === this.mode && (s = (0, l.default)("Your Collections")), this.mode) {
			case "lists":
				r = [{
					title: s,
					className: "js-my-custom-timelines",
					isFilterable: !0,
					itemType: (0, l.default)("lists")
				}, {
					title: (0, l.default)("Subscribed to"),
					className: "js-others-custom-timelines",
					isHidden: !0,
					itemType: (0, l.default)("lists")
				}];
				break;
			case "customtimelines":
				r = [{
					title: s,
					className: "js-my-custom-timelines",
					isFilterable: !0,
					itemType: (0, l.default)("collections")
				}]
		}
		if (this.$node = (0, c.default)(TD.ui.template.render("open_column_list_multi_group", {
				groups: r
			})), this.$searchFilterInput = this.$find(".js-search-filter"), this.$myTimelines = this.$find("ul.js-my-custom-timelines"), this.$otherTimelines = this.$find("ul.js-others-custom-timelines"), this.$noMatch = this.$find(".js-no-match").first(), this.items = [], this.menuComponents = [], this.slug = t, this.$searchFilterInput.on("keyup keydown keypress paste", function() {
				return n._handleFilterChange()
			}), this.listComparator = function(e, t) {
				var i, n = TD.components.CustomTimelines;
				return u[e.user.id] && !u[t.user.id] ? -1 : !u[e.user.id] && u[t.user.id] ? 1 : u[e.user.id] && u[t.user.id] ? (i = e.account.getKey() === h) === (t.account.getKey() === h) ? n.ownerNameComparator(e, t) || n.nameComparator(e, t) : i ? -1 : 1 : n.nameComparator(e, t) || n.ownerNameComparator(e, t)
			}, this.collectionsComparator = function(e, t) {
				var i = e.name.toLowerCase(),
					n = t.name.toLowerCase();
				return i < n ? -1 : i > n ? 1 : 0
			}, e) {
			TD.cache.twitterUsers.getByScreenName(e).addCallback(function(t) {
				u[t.id] = !0;
				var i = (0, d.getClientByScreenName)(e);
				switch (a.mode) {
					case "lists":
						i ? (a._handleLists(TD.cache.lists.getListsFor(i.oauth.account.getKey())), a.bubbleEvent(TD.components.CustomTimelines.LOADED, a.items.length)) : (i = (0, d.getTwitterClient)()).getLists(e, function(e) {
							a._handleLists(e), a.bubbleEvent(TD.components.CustomTimelines.LOADED, a.items.length)
						});
						break;
					case "customtimelines":
						(i = i || (0, d.getTwitterClient)()).getCustomTimelines(t.id, null, function(e) {
							a._handleLists(e), a.bubbleEvent(TD.components.CustomTimelines.LOADED, a.items.length)
						})
				}
			})
		} else {
			var m = TD.controller.clients.getClientsByService("twitter");
			(0, o.default)(m, function(e) {
				u[e.oauth.account.getUserID()] = !0
			}), (0, o.default)(m, function(e) {
				"lists" === a.mode ? a._handleLists(TD.cache.lists.getListsFor(e.oauth.account.getKey())) : "customtimelines" === a.mode && a._handleLists(e.customTimelines)
			}), this.bubbleEvent(TD.components.CustomTimelines.LOADED, a.items.length)
		}
	}).statics({
		LOADED: "td-custom-timelines-loaded",
		nameComparator: function(e, t) {
			var i = e.name.toLowerCase(),
				n = t.name.toLowerCase();
			return (i > n) - (i < n)
		},
		ownerNameComparator: function(e, t) {
			var i = e.user.name.toLowerCase(),
				n = t.user.name.toLowerCase();
			return (i > n) - (i < n)
		}
	}).methods({
		_handleLists: function(e) {
			if ((0, a.default)(e) && 0 !== e.length) {
				this.items = this.items.concat(e), "lists" === this.mode ? this.items.sort(this.listComparator) : this.items.sort(this.collectionsComparator);
				var t = {};
				this.items = (0, r.default)(this.items, function(e) {
					var i = !t[e.id];
					return t[e.id] = !0, i
				}), this._renderLists(this.items, {
					isSearch: !1
				})
			}
		},
		_handleFilterChange: (0, u.makeDOMMutator)(function() {
			var e = this.$searchFilterInput.val().toLowerCase(),
				t = this.items.filter(function(t) {
					return (t.name + " " + t.description).toLowerCase().includes(e)
				});
			this._renderLists(t, {
				isSearch: !0
			})
		}),
		_renderLists: function(e) {
			var t = this,
				i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			(0, o.default)(this.menuComponents, function(e) {
				e.destroy()
			});
			var r, a = this.$find(".js-title").not(".is-hidden"),
				l = this.$find(".is-search-hidden");
			!e.length && i.isSearch ? (a.addClass("is-hidden is-search-hidden"), this.$noMatch.removeClass("is-hidden")) : (l.removeClass("is-hidden"), this.$noMatch.addClass("is-hidden")), this.menuComponents = (0, s.default)(e, function(e) {
				var i = new TD.components.MenuItem;
				switch (t.mode) {
					case "lists":
						i.list(e), t.owners[e.user.id] ? (t.$myTimelines.append(i.$node), t.slug && e.slug.toLowerCase() === t.slug.toLowerCase() && e.user.screenName.toLowerCase() === t.screenName.toLowerCase() && (r = i)) : (t.$find(".js-title").removeClass("is-hidden"), t.$otherTimelines.append(i.$node));
						break;
					case "customtimelines":
						i.customTimeline(e), t.$myTimelines.append(i.$node);
						var n = e.id.replace("custom-", "");
						t.slug && n.toLowerCase() === t.slug.toLowerCase() && (r = i)
				}
				return i
			}), !r && this.screenName && this.menuComponents.length > 0 && (r = this.menuComponents[0]), r && (0, n.default)(function() {
				r.select()
			})
		}
	})
}, , , , , , , function(e, t, i) {
	"use strict";
	var n = a(i(184)),
		s = a(i(2)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.SearchInput = TD.components.Base.extend(function(e) {
		var t = this;
		(0, n.default)(e) ? this.promptText = e: this.promptText = (0, s.default)("Enter a #hashtag or keyword"), this.$node = (0, r.default)(TD.ui.template.render("add_column_search_input", {
			searchInputClassName: "js-add-column-search-input",
			searchInputPlaceholder: this.promptText
		})), this.$inputBox = this.$find(".js-add-column-search-input"), this.$searchButton = this.$find(".js-perform-search"), this.$spinner = this.$find(".js-spinner"), this.$clearButton = this.$find(".js-clear-search"), this.$node.submit(function(e) {
			t._search(), e.preventDefault()
		}), this.$clearButton.click(function(e) {
			t._clear(), e.preventDefault()
		}), this.$searchButton.click(function(e) {
			t._search(), e.preventDefault()
		}), this.boundCancelSearch = this.cancelSearch.bind(this), this.$inputBox.on("uiInputBlur", this.boundCancelSearch)
	}).methods({
		cancelSearch: function() {
			this.$inputBox.val("").blur()
		},
		_search: function() {
			var e = r.default.trim(this.$inputBox.val());
			"" === e ? this._clear() : this.prevSearchTerm !== e && (this.prevSearchTerm = e, this.bubbleEvent("td-search", this.$inputBox.val()))
		},
		_clear: function() {
			this.$inputBox.val(""), this.prevSearchTerm = "", this.$inputBox.focus(), this.bubbleEvent("td-search-clear"), this.$clearButton.hide(), this.$searchButton.show()
		},
		showActivity: function() {
			this.$searchButton.hide(), this.$clearButton.hide(), this.$spinner.show()
		},
		hideActivity: function() {
			var e = "" !== this.$inputBox.val();
			this.$clearButton.toggle(e), this.$searchButton.toggle(!e), this.$spinner.hide()
		},
		destroy: function() {
			(0, r.default)(document).off("uiSearchBlur", this.boundCancelSearch), this.$inputBox.unbind(), this.$node.remove()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(15)),
		s = o(i(32)),
		r = o(i(55)),
		a = o(i(0));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.MenuItemBase = TD.components.Base.extend(function() {
		this.eventSubscriptions = [], this.selected = !1, this.eventSubscriptions.push(a.default.subscribe(TD.components.MenuItemBase.GLOBAL_SELECT_EVENT, (0, r.default)(this._handleSelectionEvent, this))), (0, s.default)((0, r.default)(this._addClickHandler, this))
	}).statics({
		GLOBAL_SELECT_EVENT: "/menuitem/select",
		BUBBLE_SELECT_EVENT: "td-menuitem-select",
		deselectAll: function() {
			TD.storage.notification.notify(this.GLOBAL_SELECT_EVENT, {
				target: null
			})
		}
	}).methods({
		_handleSelectionEvent: function(e) {
			this.selected = e.target === this, this.$node.toggleClass("selected", this.selected)
		},
		_addClickHandler: function() {
			var e = this;
			this.$node.bind("click", function(t) {
				e.selected || e.select()
			})
		},
		select: function() {
			this.publishEvent(TD.components.MenuItemBase.GLOBAL_SELECT_EVENT, null), this.bubbleEvent(TD.components.MenuItemBase.BUBBLE_SELECT_EVENT)
		},
		deselect: function() {
			this.selected = !1, this.$node.removeClass("selected")
		},
		destroy: function() {
			(0, n.default)(this.eventSubscriptions, function(e) {
				a.default.unsubscribe(e)
			}), this.$node.remove()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(2)),
		s = a(i(0)),
		r = a(i(17));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.MenuItem = TD.components.MenuItemBase.extend(function() {
		this.type = null
	}).statics({
		BASIC: "basic",
		SUBTITLE: "subtitle",
		PERSON: "person",
		LIST: "list"
	}).methods({
		basic: function(e) {
			return this.type = TD.components.MenuItem.BASIC, this.title = e, this.$node = (0, s.default)(TD.ui.template.render("list_module_list_item", {
				title: this.title
			})), this
		},
		subtitle: function(e, t) {
			this.type = TD.components.MenuItem.SUBTITLE, this.title = e, this.subtitle = t;
			var i = {
				title: e,
				subtitle: t
			};
			return this.$node = (0, s.default)(TD.ui.template.render("list_module_subtitle_item", i)), this
		},
		selfAccount: function(e) {
			this.type = TD.components.MenuItem.PERSON, this.account = e;
			var t = {
				fullname: e.getName() || e.getUsername(),
				emojifiedName: r.default.cleanWithEmoji(e.getName()),
				username: e.getUsername(),
				profileImageURL: e.getProfileImageURL()
			};
			return this.$node = (0, s.default)(TD.ui.template.render("list_module_account_item", t)), this
		},
		twitterUser: function(e) {
			this.type = TD.components.MenuItem.PERSON, this.twitterUser = e;
			var t = {
				fullname: e.name || e.screenName,
				emojifiedName: e.emojifiedName,
				username: e.screenName,
				profileImageURL: e.profileImageURL,
				isVerified: e.isVerified
			};
			return this.$node = (0, s.default)(TD.ui.template.render("list_module_account_item", t)), this
		},
		list: function(e) {
			this.type = TD.components.MenuItem.LIST, this.list = e;
			var t = {
				title: r.default.cleanWithEmoji(e.name),
				by: (0, n.default)("by {{1}}", {
					1: e.user.name
				}),
				description: r.default.cleanWithEmoji(e.description),
				subtitle: (0, n.default)("{{1}} members", {
					1: e.memberCount
				}),
				miniProfileURL: e.user.miniProfileImageURL(),
				isPrivate: e.isPrivate
			};
			return this.$node = (0, s.default)(TD.ui.template.render("list_module_twitter_list_item", t)), this
		},
		customTimeline: function(e) {
			this.type = TD.components.MenuItem.LIST, this.list = e;
			var t = {
				title: r.default.cleanWithEmoji(e.name),
				description: r.default.cleanWithEmoji(e.description)
			};
			return this.$node = (0, s.default)(TD.ui.template.render("list_module_twitter_customtimeline_item", t)), this
		},
		dataminr: function(e) {
			return this.type = TD.components.MenuItem.DATAMINR, this.watchlist = e, this.$node = (0, s.default)(TD.ui.template.render("list_module_dataminr_watchlist", e)), this
		},
		liveVideo: function(e) {
			return this.type = TD.components.MenuItem.BASIC, this.metadata = e, this.$node = (0, s.default)(TD.ui.template.render("list_module_list_item", {
				title: e.title
			})), this
		},
		event: function(e) {
			return this.type = TD.components.MenuItem.BASIC, this.metadata = e, this.$node = (0, s.default)(TD.ui.template.render("list_module_list_item", {
				title: e.title
			})), this
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(15)),
		s = a(i(2)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.SelfAccounts = TD.components.Base.extend(function(e) {
		var t = TD.storage.accountController.getPostingAccounts();
		this.titleText = (0, s.default)("Your Accounts"), this.service = e, this.items = [], this.$node = (0, r.default)(TD.ui.template.render("open_column_list_with_header", {
			title: this.titleText
		})), this.$list = this.$find(".js-list-container");
		for (var i = 0; i < t.length; i++) {
			var n = t[i].getType();
			if (!this.service || n === this.service) {
				var a = (new TD.components.MenuItem).selfAccount(t[i]);
				this.items.push(a), this.$list.append(a.$node)
			}
		}
	}).methods({
		selectDefault: function() {
			for (var e, t = TD.storage.accountController.getDefault().getKey(), i = 0; i < this.items.length; i++)
				if (t === (e = this.items[i]).account.getKey()) {
					e.select();
					break
				}
		},
		destroy: function() {
			(0, n.default)(this.items, function(e) {
				e.destroy()
			}), this.$node.remove()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.ProfileAccount = TD.components.Base.extend(function() {
		this.titleText = (0, n.default)("Profile Account"), this.screenName = null, this.twitterUser = null, this.$node = (0, s.default)(TD.ui.template.render("open_column_list_with_header", {
			title: this.titleText
		})), this.$list = this.$find(".js-list-container"), this.menuItem = null
	}).methods({
		setUser: function(e) {
			this.screenName = e, TD.cache.twitterUsers.getByScreenName(this.screenName).addCallbackWith(this, this._renderUser)
		},
		_renderUser: function(e) {
			this.twitterUser = e, this.menuItem = (new TD.components.MenuItem).twitterUser(e), this.$list.append(this.menuItem.$node)
		},
		select: function() {
			this.menuItem.select()
		},
		destroy: function() {
			this.menuItem && this.menuItem.destroy(), this.$node.remove()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = l(i(2095)),
		s = l(i(15)),
		r = l(i(55)),
		a = l(i(2)),
		o = l(i(0));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.TwitterUserSearch = TD.components.Base.extend(function(e, t, i) {
		e || (e = TD.storage.accountController.getPreferredAccount("twitter")), e && (this.ListItemComponent = i, this.client = TD.controller.clients.getClient(e.getKey()), this.maxResults = t || TD.components.TwitterUserSearch.MAX_RESULTS, this.searchInput = new TD.components.SearchInput((0, a.default)("Enter a @name or full name")), this.items = [], this.resultsTitle = (0, a.default)("Search results"), this.$searchResults = (0, o.default)(TD.ui.template.render("open_column_list_with_header", {
			title: this.resultsTitle
		})), this.$searchResults.hide(), this.$node = (0, o.default)(this.searchInput.$node), this.$node.append(this.$searchResults), this.$node.bind("td-search", (0, r.default)(this._handleSearchSubmit, this)), this.$node.bind("td-search-clear", (0, r.default)(this._handleSearchClear, this)), this.$searchResultsList = this.$find(".js-list-container"))
	}).statics({
		SEARCH_COMPLETE: "td-search-complete",
		MAX_RESULTS: 4
	}).methods({
		_handleSearchSubmit: function(e, t) {
			this.searchInput.showActivity();
			var i = t.data;
			this._search(i), e.stopPropagation()
		},
		_search: function(e) {
			e && this.client.userSearch(e, (0, r.default)(this._handleUsers, this))
		},
		_handleSearchClear: function(e) {
			(0, s.default)(this.items, function(e) {
				e.destroy()
			}), this.$searchResults.hide()
		},
		_handleUsers: function(e) {
			var t, i, s;
			for (this.searchInput.hideActivity(), e = (0, n.default)(e.filter(function(e) {
					return !e.isWithHeld()
				}), this.maxResults), this.items = [], this.$searchResultsList.empty(), t = 0, i = e.length; t < i; t++) s = this.ListItemComponent ? new this.ListItemComponent(e[t]) : (new TD.components.MenuItem).twitterUser(e[t]), this.items.push(s), this.$searchResultsList.append(s.$node);
			this.$searchResults.show(), this.bubbleEvent(TD.components.TwitterUserSearch.SEARCH_COMPLETE)
		},
		detachResultsContainer: function() {
			return this.$searchResults.detach()
		},
		destroy: function() {
			(0, s.default)(this.items, function(e) {
				e.destroy()
			}), this.supr()
		}
	})
}, , function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.SuggestedUsers = TD.components.TwitterUserSearch.extend(function(e, t, i, r) {
		this.searchTerm = r, this._ready = !1, this._userData = null, this.resultsTitle = (0, n.default)("Suggested"), (0, s.default)(".js-title", this.$searchResults).text(this.resultsTitle), this.$node = this.$searchResults, this.searchInput.$node.detach(), this._search(r)
	}).methods({
		_handleUsers: function(e) {
			this._ready ? e && e.length > 0 && (this.supr(e), this._userData = null) : this._userData = e
		},
		render: function() {
			this._ready || (this._ready = !0, this._handleUsers(this._userData))
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = l(i(32)),
		s = l(i(46)),
		r = l(i(2)),
		a = l(i(0)),
		o = l(i(21));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.TemporaryColumn = TD.components.Base.extend(function() {
		this.type = void 0, this.service = void 0, this.accountKey = void 0, this.metaString = void 0, this.column = null, this.destroyCallbacks = []
	}).statics({
		DELETED_EVENT: "td-column-deleted"
	}).methods({
		_init: function(e) {
			var t = TD.controller.columnManager.makeColumnFor(e);
			this.renderColumn(t)
		},
		renderColumn: function(e) {
			this.column = e, e.visible = !0, e.temporary = !0, TD.controller.columnManager.add(this.column), this.$node = TD.ui.columns.renderColumn(this.column, {
				detached: !0
			}), TD.util.isTouchDevice() && TD.decider.get("touchdeck_tweet_controls_v3") && this.$node.find(".js-chirp-container").addClass("is-touch-tweet-container")
		},
		populate: function() {
			TD.ui.columns.setupColumnScrollListeners(this.column), TD.controller.feedScheduler.addColumn(this.column, !1)
		},
		makePermanent: function() {
			var e = this.column.clone();
			TD.controller.columnManager.addColumnToUI(e)
		},
		home: function(e) {
			this._init({
				type: "home",
				service: "tweetdeck"
			})
		},
		me: function() {
			this._init({
				type: "me",
				service: "tweetdeck"
			})
		},
		inbox: function() {
			this._init({
				type: "privateMe",
				service: "tweetdeck"
			})
		},
		scheduled: function() {
			this._init({
				type: "scheduled",
				service: "tweetdeck"
			})
		},
		genericTwitter: function(e, t, i) {
			var n, s, r = t.getKey(),
				a = i ? i.id : void 0;
			i ? (n = TD.controller.columnManager.NON_SELF_FEED_TYPE[e] || e, e === TD.controller.columnManager.MENTIONS && (a = "+@" + i.screenName), TD.cache.names.addScreenName(i.id, i.screenName)) : (e === TD.controller.columnManager.MENTIONS && (s = new TD.vo.SearchFilter).action.fromJSONObject({
				showMentions: !0
			}), e === TD.controller.columnManager.FOLLOWERS && (s = new TD.vo.SearchFilter).action.fromJSONObject({
				showFollowers: !0
			}), n = TD.controller.columnManager.SELF_FEED_TYPE[e] || e), this._init({
				type: n,
				service: "twitter",
				accountKey: r,
				metaString: a,
				searchFilter: s
			})
		},
		liveVideo: function(e, t, i) {
			i || (i = TD.storage.accountController.getPreferredAccount("twitter").getKey());
			this._init({
				type: e,
				service: "twitter",
				accountKey: i,
				metadata: t
			})
		},
		event: function(e, t, i) {
			i || (i = TD.storage.accountController.getPreferredAccount("twitter").getKey());
			this._init({
				type: e,
				service: "twitter",
				accountKey: i,
				metadata: t
			})
		},
		search: function(e, t) {
			t || (t = TD.storage.accountController.getPreferredAccount("twitter").getKey());
			this._init({
				type: "search",
				service: "twitter",
				accountKey: t,
				metaString: e
			})
		},
		list: function(e) {
			var t = this,
				i = e.user.account.getKey(),
				n = e.user.id + "/" + e.id;

			function s() {
				if (e.isOwnList()) {
					var i = t.$find(".js-action-header-button");
					i.text((0, r.default)("Edit")), i.removeClass("is-hidden"), i.click(function() {
						t.bubbleEvent(TD.components.BaseModal.CLOSE_EVENT), new TD.components.ListMembers(e)
					})
				}
			}
			TD.cache.names.addScreenName(e.user.id, e.user.screenName), TD.cache.names.addListName(e.id, e.name), this._init({
				type: "list",
				service: "twitter",
				accountKey: i,
				metaString: n
			}), s();
			var o = (0, a.default)(document),
				l = function(e, i) {
					t.column.model.privateState.key === i.columnKey && s()
				};
			o.on("uiColumnTitleRefreshed", l), this.destroyCallbacks.push(o.off.bind(o, "uiColumnTitleRefreshed", l))
		},
		customTimeline: function(e) {
			var t = this,
				i = e.account.getKey(),
				l = e.user.id + "/" + e.id;
			TD.cache.names.addCustomTimelineName(e.id, e.name), TD.cache.names.addScreenName(e.user.id, e.user.screenName), this._init({
				type: o.default.feedTypes.CUSTOMTIMELINE,
				service: "twitter",
				accountKey: i,
				metaString: l
			}), d();
			var c = (0, a.default)(document),
				u = function(e, i) {
					t.column.model.privateState.key === i.columnKey && d()
				};

			function d() {
				if (e.isOwnCustomTimeline()) {
					var i = t.$find(".js-action-header-button");
					i.text((0, r.default)("Delete")), i.removeClass("is-hidden"), i.addClass("Button--danger"), i.click(function() {
						var e = (0, s.default)(),
							i = {
								id: e,
								title: (0, r.default)("Delete"),
								message: (0, r.default)("Are you sure you want to delete this Collection?"),
								okLabel: (0, r.default)("Delete"),
								cancelLabel: (0, r.default)("Cancel")
							},
							o = function(i, s) {
								s.id === e && ((0, a.default)(document).off("uiConfirmationAction"), s.result && t.column.deleteCustomTimeline(function() {
									(0, n.default)(function() {
										t.bubbleEvent(TD.components.TemporaryColumn.DELETED_EVENT)
									})
								}))
							};
						c.on("uiConfirmationAction", o), t.destroyCallbacks.push(c.off.bind(c, "uiConfirmationAction", o)), t.$node.trigger("uiShowConfirmationDialog", i)
					})
				}
			}(0, a.default)(document).on("uiColumnTitleRefreshed", u), this.destroyCallbacks.push(c.off.bind(c, "uiColumnTitleRefreshed", u))
		},
		dataminr: function(e, t) {
			this._init({
				type: "dataminr",
				service: "twitter",
				accountKey: t,
				metadata: {
					watchlist: e
				}
			})
		},
		destroy: function() {
			this.column && this.column.temporary && TD.controller.columnManager.removeFromAppLayer(this.column.model.getKey()), this.destroyCallbacks.forEach(function(e) {
				e.call(this)
			}.bind(this)), this.$node.remove()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(2099)),
		s = o(i(48)),
		r = o(i(2)),
		a = o(i(0));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.ScheduledDatePicker = TD.components.Base.extend(function(e, t) {
		var i = this;
		t = (0, s.default)(t || {}, {
			startDate: null,
			hidden: !1
		}), this.$node = (0, a.default)(TD.ui.template.render("compose/schedule")), this.$node.toggle(!t.hidden), e.append(this.$node), this.$minutes = (0, a.default)("#scheduled-minute"), this.$hours = (0, a.default)("#scheduled-hour"), this.$datepicker = (0, a.default)("#datepicker"), this.$nextMonth = (0, a.default)("#next-month"), this.$prevMonth = (0, a.default)("#prev-month"), this.$removeDate = (0, a.default)(".js-remove", this.$node), this.$amToggle = (0, a.default)("#amPm"), this.$hours.bind("change", function() {
			i._refreshDate(), i.publishDateChanged()
		}), this.$minutes.bind("change", function() {
			var e = (0, a.default)(this);
			e.val(("00" + e.val()).slice(-2)), i._refreshDate(), i.publishDateChanged()
		}), this.$datepicker = this.$datepicker.dateinput({
			onHide: function() {
				return !1
			},
			change: function() {
				i._refreshDate(), i.publishDateChanged()
			},
			min: -1
		}), i.datePickerData = this.$datepicker.data("dateinput").show(), this.$nextMonth.bind("click", function(e) {
			i.datePickerData.addMonth(1)
		}), this.$prevMonth.bind("click", function(e) {
			i.datePickerData.addMonth(-1)
		}), this.$removeDate.bind("click", function(e) {
			i.publishRemoval()
		}), this.$amToggle.bind("click", function(e) {
			var t = i.$amToggle.data("value");
			i._setAmPm(!t), i.publishDateChanged()
		}), i.setDate(t.startDate)
	}).methods({
		_refreshDate: function() {
			var e = this.$hours.val(),
				t = Number(e) % 12,
				i = Number(this.$minutes.val());
			if (!(0, n.default)(t) && !(0, n.default)(i)) {
				var s = new Date(this.datePickerData.getValue().getTime());
				this.$amToggle.data("value") ? s.setHours(t + 12) : s.setHours(t), s.setMinutes(i), this.date = s, e > 12 ? (this.$hours.val(t), this._setAmPm(!0)) : "0" === e && (this.$hours.val(12), this._setAmPm(!1))
			}
		},
		_setAmPm: function(e) {
			e ? (this.$amToggle.text((0, r.default)("PM")), this.$amToggle.data("value", !0)) : (this.$amToggle.text((0, r.default)("AM")), this.$amToggle.data("value", !1)), this._refreshDate()
		},
		setDate: function(e) {
			if (e) {
				var t = e.getHours() % 12 || 12,
					i = e.getHours() > 11,
					n = e.getMinutes();
				this._setAmPm(i), this.datePickerData.setValue(e.getFullYear(), e.getMonth(), e.getDate()), this.$hours.val(t), this.$minutes.val(("00" + n).slice(-2))
			}
			this.date = e, this.publishDateChanged()
		},
		getDate: function() {
			return this.date
		},
		publishDateChanged: function(e) {
			a.default.publish("/change/date", [void 0 !== e ? e : this.getDate()])
		},
		publishRemoval: function() {
			this.date = null, this.publishDateChanged(null), a.default.publish("/removed/date")
		}
	})
}, , function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.DetailView = TD.components.Base.extend(function(e, t) {
		this.initialised = !1, this.column = e, this.$column = t, this.$detailContainer = (0, r.default)(".js-column-detail", this.$column), this.$columnsContainer = (0, r.default)("#container"), this.$column.trigger("uiDetailViewOpening", {
			column: this.column
		}), this.$column.on("click", ".js-column-back", this._handleHeaderClick.bind(this)), this._render(), this.$detailContainer.html(this.$node), this.column.temporary || this.$node.trigger("uiCloseModal"), this.$holder = (0, r.default)(".js-detail-container", this.$column), this.$header = (0, r.default)(".js-column-header", this.$column), TD.ui.columns.refreshTitle(this.column)
	}).methods({
		_render: function() {
			throw new Error("DetailView._render not implemented")
		},
		_handleHeaderClick: function(e) {
			this.destroy()
		},
		changed: function(e) {
			e && e.id === this.chirp.id && (this.chirp = e)
		},
		deleted: function(e) {
			e.id === this.chirp.id && this.destroy()
		},
		destroy: function(e) {
			var t = this.supr.bind(this);
			this.$detailContainer.trigger("uiDetailViewClosing"), this.$column.off("click", ".js-column-back"), this.$column.trigger("uiDetailViewClosed", {
				column: this.column
			}), this.$column.one("transitionend", function() {
				e && e(), t()
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = f(i(13)),
		s = f(i(2)),
		r = f(i(0)),
		a = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(164)),
		o = f(i(230)),
		l = f(i(21)),
		c = i(19),
		u = i(66),
		d = i(344),
		h = f(i(2102)),
		m = i(17);

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.TweetDetailView = TD.components.DetailView.extend(function(e, t) {
		var i = this;
		this._sensitiveMediaSubscription = r.default.subscribe("/storage/client/settings/display_sensitive_media", function() {
			return i.chirp && i._renderChirp()
		})
	}).statics({
		CARD_CONTAINER: ".js-cards-container",
		MEDIA_CONTAINER: ".js-tweet-media",
		TWEET_STAT: ".js-tweet-stat",
		RENDER_OPTIONS: {
			headerClass: "js-detail-header",
			headerAction: "resetToTopColumn",
			headerLinkClass: "js-column-back"
		}
	}).methods({
		_render: function(e) {
			var t = r.default.extend({}, TD.components.TweetDetailView.RENDER_OPTIONS, e);
			this.$node = (0, r.default)(TD.ui.template.render("status/tweet_detail_wrapper", t))
		},
		showChirp: function(e, t) {
			var i = this;
			this.chirp = e, this.mainChirp = e.getMainTweet ? e.getMainTweet() : e, this.parentChirp = t, this._renderChirp(), this._subscription || (this._subscription = r.default.subscribe("/tweets/conversation/" + this.mainChirp.id, function(e) {
				e.root && (i.chirp = i.mainChirp = i.refetchedChirp = e.root, i._renderChirp(), r.default.unsubscribe(i._subscription))
			})), (0, m.metric)("ui:detail:render")
		},
		_showMediaOrCardsForChirp: function(e) {
			e.hasMedia() ? this._showMedia(e) : this._showCardsForChirp(e)
		},
		_showCardsForChirp: function(e) {
			var t = this.$tweetDetail.find(".js-card-container");
			(0, d.renderCardForChirp)(e, t, {
				context: "detail",
				scribeNamespace: {
					page: "main",
					section: "detail"
				}
			})
		},
		_showQuotedTweet: function(e) {
			if (e.isQuoteStatus) {
				var t = this.$find(".js-attachment-tweet");
				e.quotedTweetMissing ? t.replaceWith(TD.ui.template.render("status/quoted_tweet_missing")) : t.replaceWith(e.quotedTweet.renderQuotedTweet({
					mediaPreviewSize: TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM
				}))
			}
		},
		_showMedia: function(e) {
			if (e.hasMedia()) {
				var t = this.$find(TD.components.TweetDetailView.MEDIA_CONTAINER);
				if (!e.hasVideo() || t.hasClass("is-hidden")) {
					var i = TD.settings.getDisplaySensitiveMedia(),
						n = e.possiblySensitive && !i,
						s = TD.ui.template.render("status/tweet_detail_media", r.default.extend({}, e, {
							isPossiblySensitive: n,
							renderMediaGridView: function() {
								return this.media.renderGridView({
									isPossiblySensitive: n
								})
							},
							renderMediaDetailView: function() {
								return this.media.renderDetailView({
									chirpId: this.chirpId,
									isPossiblySensitive: n
								})
							}
						}));
					t.removeClass("is-hidden").html(s)
				}
			}
		},
		_chirpRetrievalError: function() {},
		_renderChirp: function() {
			if (this.$tweetDetail) {
				var e = this.$tweetDetail.find(".js-card-container");
				a.unmountComponentAtNode(e[0])
			}
			var t = l.default.isOwnCustomTimeline(this.column),
				i = !this.column.temporary && !t;
			this.$tweetDetail = (0, r.default)(TD.ui.template.render("status/tweet_detail", {
				withDragHandle: i && !this.chirp.getMainUser().isProtected,
				withRemove: t,
				renderQuoted: function() {
					return this.renderQuotedTweet({
						mediaPreviewSize: TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM,
						isGifActive: !0,
						withAutoplay: TD.settings.getAutoPlayGifs()
					})
				},
				chirp: this.chirp,
				isFavorited: this.chirp.isFavorite,
				isRetweeted: this.chirp.isRetweet
			})), this.$tweetDetail.find(".tweet-location-search").on("click", function(e) {
				return (0, r.default)(document).trigger("uiPerformSearch", {
					query: 'near:"' + this.chirp.getLocationFullName() + '"'
				}), !1
			});
			var n = this.$tweetDetail.find(".js-detail-view-inline-text");
			if (this.chirp.isOwnChirp() && this.chirp.isInThread() ? this.chirp.lastInSelfThread() ? n.html((0, s.default)("Add another Tweet")) : this.$tweetDetail.find(".js-detail-view-inline").hide() : n.html("Reply to " + this.chirp.getReplyUsers().map(function(e) {
					return o.default.atMentionify(e.screenName)
				}).join(" ")), this.$find(".js-tweet-detail").html(this.$tweetDetail), this.showTweetStats(this.chirp), this.attachTranslateCTA(), this._showMediaOrCardsForChirp(this.chirp), this._showQuotedTweet(this.chirp), !this.replies || !this.repliesTo) {
				var c = this.column.getMediaPreviewSize();
				c !== TD.vo.Column.MEDIA_PREVIEW_OFF && (c = TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL), this.replies = new TD.components.InReplyTo(this.chirp, this.column, this.$detailContainer, c, i), this.repliesTo = new TD.components.RepliesTo(this.chirp, this.column, c, i), this.$find(".js-inreplyto").replaceWith(this.replies.$node), this.$find(".js-tweet-replies").append(this.repliesTo.$node), this._boundShowSocialProof = this.showSocialProof.bind(this), this.$column.on("click", TD.components.TweetDetailView.TWEET_STAT, this._boundShowSocialProof), this.initialised = !0, this.$tweetDetail.trigger("uiDetailViewActive", {
					$chirp: this.$tweetDetail,
					chirp: this.chirp,
					parentChirp: this.parentChirp
				}), TD.controller.stats.tweetImpression(this.chirp.getScribeItemData()), this.mainChirp.isOwnChirp() && TD.controller.stats.ownTweetDetailImpression(this.mainChirp.getScribeItemData())
			}
		},
		attachTranslateCTA: function() {
			var e = this;
			this.detachTranslateCTA && this.detachTranslateCTA();
			var t = this.$tweetDetail.find(".js-translate-call-to-action"),
				i = function() {
					e.chirp.translate()
				};
			t.on("click", i), this.detachTranslateCTA = function() {
				t.off("click", i)
			}
		},
		showTweetStats: function(e) {
			if (this.tweetStats && (0, r.default)(document).trigger(this.tweetStats.teardownEvent), e instanceof TD.services.TwitterStatus && !(e instanceof TD.services.TwitterConversationMessageEvent)) {
				var t = e.getMainTweet();
				this.tweetStats = (0, u.attach)(h.default, this.$find(".js-tweet-stats"), {
					tweetId: t.id,
					userId: t.user.id,
					initialLikeCount: t.likeCount,
					initialReplyCount: t.replyCount,
					initialRetweetCount: t.retweetCount,
					userScreenName: t.user.screenName,
					isOwnChirp: t.isOwnChirp(),
					accountKey: t.account.getKey()
				})
			}
		},
		showSocialProof: function(e) {
			var t = this,
				i = (0, r.default)(e.target).closest(TD.components.TweetDetailView.TWEET_STAT).attr("data-type"),
				n = this.chirp.getMainTweet ? this.chirp.getMainTweet() : this.chirp;
			TD.controller.clients.getClient(n.account.getKey()).getTweetSummary(n.id, function(e) {
				t.$column.trigger("uiShowSocialProof", {
					type: i,
					tweetSummary: e,
					$chirp: t.$tweetDetail,
					chirp: t.chirp,
					parentChirp: t.parentChirp
				})
			}, function(e) {
				(0, c.showErrorNotification)({
					message: (0, s.default)("Could not fetch users")
				})
			})
		},
		destroy: function() {
			this._subscription && r.default.unsubscribe(this._subscription), this._sensitiveMediaSubscription && r.default.unsubscribe(this._sensitiveMediaSubscription), this.detachTranslateCTA && this.detachTranslateCTA(), this.repliesTo && this.repliesTo.destroy(), this.$column.off("click", this._boundShowSocialProof);
			var e = function() {
				if (this.initialised) {
					this.replies.destroy(), this.repliesTo.destroy(), this.tweetStats && (0, r.default)(document).trigger(this.tweetStats.teardownEvent);
					var e = this.$tweetDetail.find(".js-card-container");
					a.unmountComponentAtNode(e[0])
				}
			}.bind(this);
			this.supr(e)
		},
		findChirp: function(e) {
			return this.initialised ? (0, n.default)(this.refetchedChirp, "id") === e ? this.refetchedChirp : this.replies.findChirp(e) || this.repliesTo.findChirp(e) : void 0
		},
		getMostInteresting$Chirp: function() {
			return this.$tweetDetail
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = m(i(80)),
		s = m(i(13)),
		r = m(i(2)),
		a = m(i(36)),
		o = i(37),
		l = m(i(17)),
		c = m(i(2103)),
		u = m(i(7)),
		d = m(i(18)),
		h = i(513);

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = u.default.mixin(function() {
		this.attributes({
			tweetId: null,
			userId: null,
			userScreenName: null,
			accountKey: null,
			isOwnChirp: !1,
			initialLikeCount: null,
			initialReplyCount: null,
			initialRetweetCount: null,
			analyticsLinkSelector: ".js-open-analytics"
		}), this.initialState({
			like_count: function() {
				return this.attr.initialLikeCount
			},
			reply_count: function() {
				return this.attr.initialReplyCount
			},
			retweet_count: function() {
				return this.attr.initialRetweetCount
			}
		}), this.componentDidInitialize = function() {
			var e = this,
				t = this.getAnalyticsUpsell();
			this.initialRender(t), this.connectLivePipeline(), this.on("click", {
				analyticsLinkSelector: function() {
					return e.scribeAnalytics(t, "click", e.attr.userId)
				}
			}), this.scribeAnalytics(t, "impression", this.attr.userId)
		}, this.connectLivePipeline = function() {
			var e = this,
				t = TD.storage.accountController.get(this.attr.accountKey),
				i = (0, h.getAccountPipeline)(t),
				n = o.livePipelineEnabled$.switchMap(function(t) {
					return t ? i.subscribeToTweetEngagement(e.attr.tweetId) : a.default.Observable.empty()
				}).map(function(e) {
					return (0, s.default)(e, "payload.tweet_engagement")
				}).filter(Boolean);
			this.observe(n).subscribe(function(t) {
				return e.mergeState(t)
			})
		}, this.initialRender = function(e) {
			var t = {
					analytics: e,
					stats: [{
						type: "repliers",
						label: "",
						noLink: !0
					}, {
						type: "retweeters",
						label: ""
					}, {
						type: "favoriters",
						label: ""
					}]
				},
				i = TD.ui.template.render("status/tweet_detail_socialstats", t);
			this.$node.html(i), this.attachTicker("reply_count", this.$node.find('[data-type="repliers"] .js-value')), this.attachTicker("retweet_count", this.$node.find('[data-type="retweeters"] .js-value')), this.attachTicker("like_count", this.$node.find('[data-type="favoriters"] .js-value'))
		}, this.attachTicker = function(e, t) {
			var i = this,
				n = this.connect(c.default, {
					mapStateToProps: function(t) {
						return {
							value: i.mapCountToTickerValue(t[e])
						}
					}
				});
			this.attachChild(n, t)
		}, this.mapCountToTickerValue = function(e) {
			return e && "0" !== e ? TD.util.prettyNumber(e, {
				noNegativeNumbers: !0
			}) : void 0
		}, this.render = function() {
			var e = this.$node.find('[data-type="repliers"]'),
				t = (0, n.default)(this.mapCountToTickerValue(this.state.reply_count));
			e.toggleClass("is-hidden", t), e.find(".js-label").text(TD.util.pluralise((0, r.default)("Reply"), (0, r.default)("Replies"), this.state.reply_count));
			var i = this.$node.find('[data-type="retweeters"]'),
				s = (0, n.default)(this.mapCountToTickerValue(this.state.retweet_count));
			i.toggleClass("is-hidden", s), i.find(".js-label").text(TD.util.pluralise((0, r.default)("Retweet"), (0, r.default)("Retweets"), this.state.retweet_count));
			var a = this.$node.find('[data-type="favoriters"]'),
				o = (0, n.default)(this.mapCountToTickerValue(this.state.like_count));
			a.toggleClass("is-hidden", o), a.find(".js-label").text(TD.util.pluralise((0, r.default)("Like"), (0, r.default)("Likes"), this.state.like_count));
			var l = t && s && o;
			this.$node.find(".js-stats-list").toggleClass("is-hidden", l)
		}, this.getAnalyticsUpsell = function() {
			if (!this.attr.isOwnChirp) return null;
			var e = l.default.getTwitterCookieUserId();
			return e === this.attr.userId ? {
				type: "tweet",
				text: (0, r.default)("View Tweet Activity"),
				url: "https://analytics.twitter.com/user/" + this.attr.userScreenName + "/tweet/" + this.attr.tweetId
			} : {
				type: "generic",
				text: (0, r.default)("Open Twitter Analytics"),
				url: "http://analytics.twitter.com"
			}
		}, this.scribeAnalytics = function(e, t, i) {
			if (e && e.type) {
				var n = "generic" === e.type ? "general_analytics_button" : "tweet_analytics_button";
				TD.controller.stats.checkNamespace(t, ["impression", "click"]), TD.controller.stats.generic({
					page: "main",
					section: "detail",
					element: n,
					action: t
				}, {
					user_id: i
				})
			}
		}
	}, d.default)
}, function(e, t, i) {
	"use strict";
	var n = m(i(65)),
		s = m(i(2104)),
		r = m(i(80)),
		a = m(i(332)),
		o = m(i(189)),
		l = m(i(0)),
		c = m(i(36)),
		u = i(277),
		d = m(i(6)),
		h = m(i(7));

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = c.default.Observable.of(0, c.default.Scheduler.animationFrame).repeat();
	e.exports = h.default.mixin(function() {
		this.attributes({
			tickerInner: ".js-ticker-inner",
			tickerValues: ".js-ticker-value",
			animateClass: "ticker-animate",
			transitionTimeout: 1e3
		}), this.initialState({
			animating: !1
		}), this.componentDidInitialize = function() {
			this.after("render", this.animate)
		}, this.shouldComponentUpdate = function(e, t) {
			if (t.animating) return !1;
			var i = this.getCurrentValues(),
				n = this.getNextValues(e, i);
			return (0, o.default)(i) !== (0, o.default)(n)
		}, this.render = function() {
			var e = {
					values: this.getNextValues().map(function(e) {
						return {
							value: e
						}
					})
				},
				t = d.default.render("number_ticker", e);
			this.$node.html(t)
		}, this.animate = function() {
			var e = this;
			if (!this.state.animating) {
				this.mergeState({
					animating: !0
				});
				var t = this.needsAnimation() ? this.doCSSTransition() : this.waitForFrames(1);
				t.subscribe(function() {
					return e.mergeState({
						animating: !1
					})
				})
			}
		}, this.needsAnimation = function() {
			var e = this.getCurrentValues();
			return (0, a.default)(e) !== (0, o.default)(e)
		}, this.getNextValues = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.props,
				t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.getCurrentValues();
			return [].concat((0, n.default)(t), [e.value]).filter(function(e) {
				return !(0, r.default)(e) && !(0, s.default)(e)
			}).slice(-2).map(String)
		}, this.getCurrentValues = function() {
			return this.select("tickerValues").toArray().map(function(e) {
				return (0, l.default)(e).text()
			})
		}, this.doCSSTransition = function() {
			var e = this,
				t = this.select("tickerInner"),
				i = c.default.Observable.merge(c.default.Observable.fromEvent(t, u.TRANSITION_END), c.default.Observable.timer(this.attr.transitionTimeout)).take(1);
			return this.waitForFrames(2).do(function() {
				return t.addClass(e.attr.animateClass)
			}).exhaustMap(function() {
				return i
			}).exhaustMap(function() {
				return e.waitForFrames(1)
			}).take(1)
		}, this.waitForFrames = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
			return f.skip(e - 1).take(1)
		}
	})
}, , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.ConversationDetailView = TD.components.DetailView.extend(function(e, t) {
		(0, r.default)(document).trigger("metric", {
			key: "dm:ui:conversation:view"
		}), (0, r.default)(document).trigger("scribeEvent", {
			terms: {
				page: "main",
				component: "conversations",
				section: "detail",
				action: "impression"
			}
		}), this.$column = t, this.boundHandleUiColumnTitleRefreshed = this.handleUiColumnTitleRefreshed.bind(this), this.$column.on("uiColumnTitleRefreshed", this.boundHandleUiColumnTitleRefreshed), this.boundHandleUiConversationChanged = this.handleUiConversationChanged.bind(this), (0, r.default)(document).on("uiConversationChanged", this.boundHandleUiConversationChanged)
	}).methods({
		_render: function() {
			this.$node = (0, r.default)(TD.ui.template.render("status/message_wrapper", {
				headerClass: "js-detail-header",
				headerAction: "resetToTopColumn",
				headerLinkClass: "js-column-back"
			}))
		},
		_renderChirp: function() {
			var e = this.chirp.renderThread();
			this.$find(".js-message-detail").html(e), this.initialised = !0, this.chirp.markAsRead(), this.$node.trigger("uiDetailViewActive", {
				$chirp: this.getMostInteresting$Chirp(),
				chirp: this.chirp,
				parentChirp: this.parentChirp
			});
			var t = this.chirp.isOneToOne() ? "dm:ui:conversation:view:one-to-one" : "dm:ui:conversation:view:group-dm";
			(0, r.default)(document).trigger("metric", {
				key: t
			})
		},
		showChirp: function(e, t) {
			this.chirp = e, this.parentChirp = t, this.replyBar = new TD.components.ReplyBar(this.chirp), this.$find(".js-message-box").replaceWith(this.replyBar.$node), this._renderChirp(), TD.ui.columns.refreshTitle(this.column, this.chirp), this.$column.trigger("uiColumnTitleRefreshed", {
				columnKey: this.column.model.getKey()
			});
			var i = this.chirp.updateConversation();
			return i.addCallback(function(e) {
				if (e.length) return e[0]
			}), i.addCallback(this.changed.bind(this)), i
		},
		handleUiConversationChanged: function(e, t) {
			this.changed(t.chirp)
		},
		changed: function(e) {
			if (this.initialised && e && e.id === this.chirp.id) {
				var t = e.renderThread();
				this.$find(".js-message-detail").html(t), TD.ui.columns.refreshTitle(this.column, this.chirp)
			}
		},
		findChirp: function(e) {
			return this.initialised ? this.chirp.messageIndex[e] : void 0
		},
		getMostInteresting$Chirp: function() {
			return this.$find(".js-message-detail .js-stream-item").first()
		},
		handleUiColumnTitleRefreshed: function(e, t) {
			if (this.$column.find(".js-tooltip-target").tooltip("destroy"), t.columnKey && this.chirp.participants.length > 1) {
				var i = TD.ui.template.render("participants_tooltip", {
					title: TD.util.transform(this.chirp.name || ""),
					participants: this.chirp.participants
				});
				this.$column.find(".js-tooltip-target").tooltip({
					container: this.$column.find(".js-detail-header"),
					placement: function(e) {
						var t = this.$column.find(".js-detail-header");
						return {
							top: t.position().top + t.height(),
							left: Math.round((t.width() - (0, r.default)(e).width()) / 2),
							placement: "bottom"
						}
					}.bind(this),
					html: !0,
					title: i,
					delay: {
						show: 500,
						hide: 100
					}
				})
			}
		},
		destroy: function() {
			var e = function() {
				this.initialised && (this.replyBar.destroy(), this.chirp.markAsRead())
			}.bind(this);
			this.$column.off("uiColumnTitleRefreshed", this.boundHandleUiColumnTitleRefreshed), (0, r.default)(document).off("uiConversationChanged", this.boundHandleUiConversationChanged), this.supr(e)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.components.DataminrDetailView = TD.components.TweetDetailView.extend(function(e, t) {}).statics({
		HEADER_CONTAINER: ".js-dataminr-header",
		FOOTER_CONTAINER: ".js-dataminr-footer",
		SOURCE_PROFILE_CONTAINER: ".js-source-profile",
		SKIP_TO_REPLIES: ".js-skip-to-replies",
		REPLIES_HEADER: ".js-replies-header",
		FOLLOW_FROM_SELECTOR: ".js-action-follow",
		FOLLOW_STATE_SELECTOR: ".prf-follow-status",
		CLOSE_EVENT: "uiDataminrDetailViewClosed"
	}).methods({
		_render: function() {
			return this.supr({
				withDataminr: !0
			})
		},
		showChirp: function(e, t) {
			this._dataminrConversationSubscription = r.default.subscribe("/tweets/conversation/" + e.id, this._handleDataminrConversation.bind(this)), this.supr(e, t), this.addDataminrComponents(e)
		},
		addDataminrComponents: function(e) {
			e.dataminr && (this._showDataminrHeader(e.dataminr), this._showDataminrFooter(e.dataminr), this._showDataminrSourceProfile(e.user, e.account))
		},
		_showDataminrFooter: function(e) {
			var t = TD.ui.template.render("status/dataminr_footer", e);
			this.$find(TD.components.DataminrDetailView.FOOTER_CONTAINER).html(t)
		},
		_showDataminrHeader: function(e) {
			var t = TD.ui.template.render("status/dataminr_header", e);
			this.$find(TD.components.DataminrDetailView.HEADER_CONTAINER).html(t)
		},
		_showDataminrSourceProfile: function(e, t) {
			var n = TD.ui.template.render("profile/profile_full", e);
			this.$find(TD.components.DataminrDetailView.SOURCE_PROFILE_CONTAINER).html(n);
			var s = i(810),
				r = i(811),
				a = {
					account: t,
					twitterUser: e,
					closeEvent: TD.components.DataminrDetailView.CLOSE_EVENT
				};
			r.attachTo(this.$find(TD.components.DataminrDetailView.FOLLOW_FROM_SELECTOR), a), s.attachTo(this.$find(TD.components.DataminrDetailView.FOLLOW_STATE_SELECTOR), a)
		},
		_handleDataminrConversation: function(e) {
			e.descendants && e.descendants.length > 0 && (this.$find(TD.components.DataminrDetailView.SKIP_TO_REPLIES).removeClass("is-hidden"), this.$find(TD.components.DataminrDetailView.REPLIES_HEADER).removeClass("is-hidden"))
		},
		destroy: function() {
			this.$find(TD.components.DataminrDetailView.FOLLOW_STATE_SELECTOR).trigger(TD.components.DataminrDetailView.CLOSE_EVENT), r.default.unsubscribe(this._dataminrConversationSubscription), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = c(i(46)),
		s = c(i(32)),
		r = c(i(55)),
		a = c(i(2)),
		o = c(i(0)),
		l = i(19);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.ReplyBar = TD.components.Base.extend(function(e) {
		e && e.postComment && (this._boundHandleGlobalKeydown = this._handleGlobalKeydown.bind(this), this._boundSend = this.send.bind(this), this._boundPopInlineToDocked = this.popInlineToDocked.bind(this), this._boundAddImage = this.addImage.bind(this), this._boundHandleDataTweetSent = this._handleDataTweetSent.bind(this), this._boundHandleDataTweetError = this._handleDataTweetError.bind(this), this.$node = (0, o.default)(TD.ui.template.render("status/tweet_detail_replybar", {
			from: e.account.getUsername(),
			avatarURL: e.account.getProfileImageURL()
		})), this.chirp = e, this.$inputBox = this.$find(".js-reply-tweetbox"), this.$charCount = this.$find(".js-reply-charcount"), this.$sendButton = this.$find(".js-send"), this.$popoutButton = this.$find(".js-reply-popout"), this.$addImageButton = this.$find(".js-reply-add-image"), this.$sendButton.bind("click", this._boundSend), this.$popoutButton.bind("click", this._boundPopInlineToDocked), this.$addImageButton.bind("click", this._boundAddImage), (0, o.default)(document).on("dataTweetSent", this._boundHandleDataTweetSent), (0, o.default)(document).on("dataTweetError", this._boundHandleDataTweetError), (0, o.default)(document).on("dataDmSent", this._boundHandleDataTweetSent), (0, o.default)(document).on("dataDmError", this._boundHandleDataTweetError), this._reset(), this._updateCharCount())
	}).statics({
		ACTIVITY_EVENTS: "click change focus blur input keydown keypress keyup mousedown mouseup paste",
		RESET_EVENT: "td-reset",
		REPLYING_EVENT: "td-replying",
		OVER_CHAR_COUNT_CLASS: "over-char-count"
	}).methods({
		_triggerMetric: function(e) {
			(0, o.default)(document).trigger("metric", {
				key: "dm:ui:conversation:reply:" + e
			})
		},
		_updateCharCount: function() {
			var e = twttrTxt.getTweetLength(this.$inputBox.val());
			this.$inputBox.toggleClass("rpl-textarea--expanded", e > 140);
			var t = 1e4 - e,
				i = t >= 0 && e > 0;
			this.$sendButton.prop("disabled", !i), this.$charCount.toggleClass(TD.components.ReplyBar.OVER_CHAR_COUNT_CLASS, t < 0), this.$charCount.hide()
		},
		_reset: function(e) {
			e = o.default.extend({}, {
				keepFocus: !1
			}, e);
			var t = "";
			if (this.chirp instanceof TD.services.TwitterStatus) {
				var i = this.chirp.getMainTweet();
				t = (0, a.default)("Reply to @{{1}}", {
					1: i.user.screenName
				})
			} else this.chirp instanceof TD.services.TwitterConversation && (t = (0, a.default)("Reply from @{{1}}", {
				1: this.chirp.account.getUsername()
			}));
			this.$node.removeClass("s-replying"), this.$inputBox.blur().prop("disabled", !1), this.$sendButton.prop("disabled", !1), this.$inputBox.bind(TD.components.ReplyBar.ACTIVITY_EVENTS, (0, r.default)(this._handleActivity, this)), this.bubbleEvent(TD.components.ReplyBar.RESET_EVENT, null), (0, o.default)(window).unbind("keydown", this._boundHandleGlobalKeydown), this.$inputBox.val(""), e.keepFocus ? this.$inputBox.focus() : this.$inputBox.attr("placeholder", t)
		},
		_handleActivity: function(e) {
			var t = this;
			this.$inputBox.unbind(), t.bubbleEvent(TD.components.ReplyBar.REPLYING_EVENT, null), this.$node.addClass("s-replying"), this._triggerMetric("active");
			var i = "",
				n = [];
			n.length > 0 && (i = n.join(" ") + " "), this.$inputBox.val(i), this._updateCharCount();
			var a = i.length,
				o = i.length;
			n.length > 0 && (a = n[0].length + 1), this.$inputBox.bind("keydown", (0, r.default)(this._handleKeydown, this)), this.$inputBox.bind("input propertychange change", (0, r.default)(this._updateCharCount, this)), (0, s.default)(function() {
				t.$inputBox[0].setSelectionRange(a, o)
			})
		},
		_handleGlobalKeydown: function(e) {
			e.which === TD.constants.keyCodes.escape && this._reset()
		},
		_handleKeydown: function(e) {
			switch (e.charCode || e.keyCode) {
				case 10:
				case 13:
					(e.ctrlKey || e.metaKey) && (e.preventDefault(), this.send());
					break;
				case TD.constants.keyCodes.escape:
					this.$inputBox.blur(), (0, o.default)(window).bind("keydown", this._boundHandleGlobalKeydown)
			}
		},
		popInlineToDocked: function() {
			var e = {
				type: "message",
				text: this.$inputBox.val(),
				from: [TD.storage.Account.generateKeyFor("twitter", this.chirp.account.getUserID())]
			};
			this.chirp.chirpType === TD.services.ChirpBase.MESSAGE_THREAD ? e.conversationId = this.chirp.conversationId : e.messageRecipients = [{
				screenName: this.chirp.getMainUser().screenName
			}], this._triggerMetric("popout"), (0, o.default)(document).trigger("uiComposeTweet", e), this._reset()
		},
		addImage: function() {
			this._triggerMetric("image:add"), this._boundPopInlineToDocked(), (0, o.default)(document).trigger("uiComposeAddImageClick", {
				type: "message"
			})
		},
		send: function() {
			var e, t = this.$inputBox.val();
			this.$sendButton.prop("disabled") || t && (this.$sendButton.prop("disabled", !0), this.$inputBox.prop("disabled", !0), this.$inputBox.blur(), this.currentRequestId = (0, n.default)("sendTweet"), this._triggerMetric("send"), "uiSendDm", (e = {
				type: "message",
				text: t,
				from: [this.chirp.account.getKey()],
				accountKey: this.chirp.account.getKey(),
				requestId: this.currentRequestId,
				messageType: this.chirp.type
			}).conversationId = this.chirp.conversationId, e.isReplyBar = !0, (0, o.default)(document).trigger("uiSendDm", e))
		},
		_handleDataTweetSent: function(e, t) {
			this.currentRequestId && t.request.requestId === this.currentRequestId && this._reset({
				keepFocus: !0
			})
		},
		_handleDataTweetError: function(e, t) {
			this.currentRequestId && t.request.requestId === this.currentRequestId && ((0, l.showErrorNotification)({
				message: t.response.errors[0].message
			}), this.$sendButton.prop("disabled", !1), this.$inputBox.prop("disabled", !1), this.$inputBox.focus())
		},
		destroy: function() {
			(0, o.default)(document).off("dataTweetSent", this._boundHandleDataTweetSent), (0, o.default)(document).off("dataTweetError", this._boundHandleDataTweetError), (0, o.default)(document).off("dataDmSent", this._boundHandleDataTweetSent), (0, o.default)(document).off("dataDmError", this._boundHandleDataTweetError)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = h(i(111)),
		s = h(i(253)),
		r = h(i(15)),
		a = h(i(2121)),
		o = h(i(2)),
		l = h(i(0)),
		c = i(19),
		u = h(i(812)),
		d = i(66);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.MediaGallery = TD.components.BaseModal.extend(function(e, t, i, n) {
		var s = this,
			r = this;
		this.chirp = e, this.column = n, this.clickedLink = t, this.clickedMediaEntityId = i, this.$node = (0, l.default)(TD.ui.template.render("media/media_gallery")), this.$node.on("click", ".js-other-replies-link", function() {
			s.column.ui._$chirpContainer.trigger("mediaGalleryRequestTwitterUsersForReplyModal", {
				userMentions: s.chirp.entities.user_mentions
			})
		}), this.$closeButton = this.$find(".js-dismiss"), this.$prevButton = this.$find(".js-media-gallery-prev"), this.$nextButton = this.$find(".js-media-gallery-next"), this.$embed = this.$find(".js-mediaembed"), this.$tweet = this.$find(".med-tweet"), this.$mainframe = this.$find(".js-embeditem"), this._sizeMedia = this._sizeMedia.bind(this), this.sizeMediaInterval = setInterval(this._sizeMedia, 300), this.$closeButton.bind("click", function() {
			r.destroy()
		}), this.$prevButton.bind("click", function() {
			r._prev()
		}), this.$nextButton.bind("click", function() {
			r._next()
		}), this._loadTweet(), this.setAndShowContainer((0, l.default)("#open-modal"), !1), TD.util.isTouchDevice() && TD.decider.get("touchdeck_tweet_controls_v3") && this.$node.find(".js-med-tweet").addClass("is-touch-tweet-container"), e.hasMedia() ? (this.media = e.getMedia(), this._setupEmbeds(), e.scribeMediaImpression()) : (TD.util.openURL(t), this.destroy()), this.media.length > 1 && (this.$node.focus(), this.prevOrNext = this._prevOrNext.bind(this), this.$node.on("uiKeyLeft", this.prevOrNext), this.$node.on("uiKeyRight", this.prevOrNext))
	}).statics({
		MEDIA_FLAG_NSFW: ".js-media-flag-nsfw",
		MEDIA_FLAGGED_NSFW: ".js-media-flagged-nsfw",
		HIDDEN_CLASS: "is-hidden"
	}).methods({
		_prev: function() {
			var e = (0, a.default)(this.media, this.currentMedia);
			0 === e && (e = this.media.length), this.currentMedia = this.media[e - 1], this._renderEmbed()
		},
		_next: function() {
			var e = (0, a.default)(this.media, this.currentMedia);
			e === this.media.length - 1 && (e = -1), this.currentMedia = this.media[e + 1], this._renderEmbed()
		},
		_prevOrNext: function(e) {
			e.stopImmediatePropagation(), "uiKeyLeft" === e.type ? this._prev() : "uiKeyRight" === e.type && this._next()
		},
		_setupEmbeds: function() {
			if (this.media && 0 !== this.media.length) {
				var e = this;
				this.currentMedia = this.media[0], this.clickedLink && (0, r.default)(this.media, function(t) {
					(e.clickedMediaEntityId && t.mediaId === e.clickedMediaEntityId || !e.clickedMediaEntityId && t.url === e.clickedLink) && (e.currentMedia = t)
				}), this._renderEmbed()
			}
		},
		_loadTweet: function() {
			var e = this;
			this.$tweet.append(this.chirp.renderInMediaGallery()), this.$tweet.bind("click", function(t) {
				l.default.publish("chirp/click", [t, e.chirp, e.column])
			})
		},
		_sizeMedia: function() {
			var e = (0, l.default)("img", this.$mainframe),
				t = this.$embed.outerHeight(),
				i = this.$mainframe.height(),
				n = Math.max(0, e.height() - (t - i));
			e.css({
				"max-width": this.$mainframe.width() + "px",
				"max-height": n + "px"
			})
		},
		_fadeIn: function() {
			this.$mainframe.addClass("is-loaded"), this.$embed.fadeTo("fast", 1)
		},
		_renderEmbed: function() {
			var e = this.currentMedia,
				t = this.chirp.conversationId,
				i = this.chirp.getMainTweet ? this.chirp.getMainTweet() : this.chirp,
				r = "scheduled_tweet_group" === this.chirp.chirpType,
				a = e.renderGallery({
					chirpId: i.id,
					isDM: t,
					isFromProtectedUser: r || this.chirp.getMainUser().isProtected
				});
			if (e.isScheduled && e.isVideo) {
				var h = (0, l.default)(a).select(".js-scheduled-video"),
					m = this.$embed.parent().width(),
					f = this.$embed.parent().height(),
					p = m / f,
					g = (0, n.default)(e.entity.video_info.aspect_ratio, 2),
					v = g[0] / g[1],
					T = m,
					w = f;
				p > v ? T = f * v : w = m / v;
				var b = (0, d.attach)(u.default, h, {
					data: {
						videoSrc: e.chooseVideoVariant().url
					},
					isScheduled: !0,
					videoWidth: T,
					videoHeight: w
				}).teardownEvent;
				this.videoTeardownEvent = b, this.$embed.append(h)
			} else this.$embed.html(a);
			e.isScheduled || this.$embed.append(TD.ui.template.render("text/gallery_original_link", e)), e.needsSecureUrl || e.isScheduled || this.$embed.append(TD.ui.template.render("text/gallery_flag_media", {
				flagged: e.flaggedNSFW
			})), e.needsSecureUrl && (0, l.default)(document).trigger("uiNeedsSecureImageUrl", {
				accountKey: this.chirp.account.getKey(),
				url: e.large()
			});
			var y = (0, l.default)("img", this.$embed);
			0 === y.length ? (0, s.default)(function() {
				this._fadeIn(), this._sizeMedia()
			}.bind(this), 1e3) : y.load(function() {
				y.attr("data-maxwidth", y.width()), y.attr("data-maxheight", y.height()), this._sizeMedia(), this._fadeIn()
			}.bind(this)), this.$find(TD.components.MediaGallery.MEDIA_FLAG_NSFW).click(function(t) {
				e.flaggedNSFW = !0, this.$find(TD.components.MediaGallery.MEDIA_FLAG_NSFW).addClass(TD.components.MediaGallery.HIDDEN_CLASS), this.$find(TD.components.MediaGallery.MEDIA_FLAGGED_NSFW).removeClass(TD.components.MediaGallery.HIDDEN_CLASS), TD.controller.clients.getClient(this.chirp.account.getKey()).flagTweet(this.chirp.id, function() {}, function() {
					var e = (0, o.default)("Problem flagging media. Please try again");
					(0, c.showErrorNotification)({
						message: e
					}), this.$find(TD.components.MediaGallery.MEDIA_FLAG_NSFW).removeClass(TD.components.MediaGallery.HIDDEN_CLASS), this.$find(TD.components.MediaGallery.MEDIA_FLAGGED_NSFW).addClass(TD.components.MediaGallery.HIDDEN_CLASS)
				})
			}.bind(this)), this.media.length > 1 ? (this.$prevButton.removeClass(TD.components.MediaGallery.HIDDEN_CLASS), this.$nextButton.removeClass(TD.components.MediaGallery.HIDDEN_CLASS), this.$mainframe.addClass("s-shorter"), this.$tweet.find(".js-media").show()) : (this.$prevButton.addClass(TD.components.MediaGallery.HIDDEN_CLASS), this.$nextButton.addClass(TD.components.MediaGallery.HIDDEN_CLASS), this.$tweet.find(".js-media").hide())
		},
		destroy: function() {
			this.media.length > 1 && (this.$node.unbind("uiKeyLeft", this.prevOrNext), this.$node.unbind("uiKeyRight", this.prevOrNext)), this.videoTeardownEvent && this.$node.trigger(this.videoTeardownEvent), this.$node.trigger("uiMediaGalleryClosing"), (0, l.default)("#open-modal").hide(), clearInterval(this.sizeMediaInterval), this.supr()
		}
	})
}, , , , function(e, t, i) {
	"use strict";
	var n = a(i(55)),
		s = a(i(2)),
		r = a(i(0));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.AddToCustomTimelineDialog = TD.components.BaseModal.extend(function(e) {
		var t = TD.storage.accountController.getAccountsForService("twitter");
		this.myCustomTimelines = [], this.tweetToAdd = e, this.tweetToAdd.user.isProtected ? this.destroy() : (t.forEach(function(t) {
			var i = TD.controller.clients.getClient(t.getKey());
			this.myCustomTimelines = this.myCustomTimelines.concat(i.customTimelines), i.getCustomTimelines(null, e.id, function(e) {
				for (var t = 0; t < e.length; t++) this.$find('[data-id="' + e[t].id + '"]').prop("checked", !0)
			}.bind(this))
		}.bind(this)), this.myCustomTimelines.sort(function(e, t) {
			var i = e.name.toLowerCase(),
				n = t.name.toLowerCase();
			return i < n ? -1 : i > n ? 1 : 0
		}), this.$node.removeClass("s-short").addClass("s-fluid s-wide cmp s-minimal"), this.$title.html(" " + (0, s.default)("Include Tweet in:")), this.$menuContainer.html(TD.ui.template.render("actions/add_to_customtimeline_dialog", this)).addClass("with-scroll scroll-v scroll-alt").toggleClass("scroll-styled-v", TD.globalRenderOptions.styledScrollbar), this.$checkboxes = this.$find(".js-mdl-content input").click((0, n.default)(this._changeSubscription, this)), (0, r.default)(".js-dismiss", this.$node).click((0, n.default)(this.destroy, this)), (0, r.default)("#actions-modal").html(this.$node).show(), this.$checkboxes.first().focus())
	}).methods({
		_render: function() {
			return (0, r.default)(TD.ui.template.render("short_modal", {
				title: (0, s.default)("Your Collections"),
				hasDoneButton: !0,
				modalClasses: "padding-t--0"
			}))
		},
		_changeSubscription: function(e) {
			var t = (0, r.default)(e.target),
				i = t.attr("data-id"),
				n = t.prop("checked"),
				s = t.attr("data-account"),
				a = n ? "uiAddOrMoveTweetToCustomTimeline" : "uiRemoveTweetFromCustomTimeline";
			(0, r.default)(document).trigger(a, {
				id: i,
				account: s,
				tweetId: this.tweetToAdd.id
			})
		},
		destroy: function(e) {
			(0, r.default)(document).off("uiHasCustomTimelines", this.handleHasCustomTimelines), this.$node.remove(), (0, r.default)("#actions-modal").hide(), e && e.preventDefault(), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(253)),
		s = o(i(55)),
		r = o(i(2)),
		a = o(i(0));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.AddToListsDialog = TD.components.BaseModal.extend(function(e) {
		this.myLists = [], this.userToAdd = e, this._getLists(), this.$node.removeClass("s-short").addClass("s-fluid s-narrow cmp s-minimal"), this.$title.html(" " + (0, r.default)("Include {{>text/user_link_screenname}} in:", e)), this.$menuContainer.html(TD.ui.template.render("actions/add_to_list_dialog", this)).addClass("with-scroll scroll-v scroll-alt").toggleClass("scroll-styled-v", TD.globalRenderOptions.styledScrollbar), this.$find(".js-mdl-content input").click(this._changeSubscription.bind(this)), this.$createListButton = this.$find(".js-create-list"), this.$createListButton.click((0, s.default)(this._createList, this)), this.setAndShowContainer((0, a.default)("#actions-modal"))
	}).methods({
		_render: function() {
			return (0, a.default)(TD.ui.template.render("short_modal", {
				title: (0, r.default)("Your Lists"),
				hasDoneButton: !0,
				modalClasses: "padding-t--0"
			}))
		},
		_changeSubscription: function(e) {
			var t = (0, a.default)(e.target),
				i = t.attr("id"),
				s = t.prop("checked"),
				r = t.attr("data-account"),
				o = TD.controller.clients.getClient(r),
				l = TD.storage.Feed.generateKeyFor(r, "list", {
					listId: i
				}),
				c = TD.controller.feedManager.getPoller(l),
				u = this;
			s ? o.addUserToList(i, this.userToAdd.screenName, function() {
				c && (0, n.default)(function() {
					c.refresh({
						reset: !0
					})
				}, 1e3)
			}) : o.removeUserFromList(i, this.userToAdd.screenName, function() {
				c && c.removeWhere(function(e) {
					return u.userToAdd.id === e.user.id
				})
			})
		},
		_createList: function() {
			this.$node.trigger("uiShowEditListDetails", {
				autoAddUser: this.userToAdd
			}), this.destroy()
		},
		_getLists: function() {
			var e = this;
			TD.storage.accountController.getAccountsForService("twitter").forEach(function(t) {
				var i = t.getKey(),
					n = TD.controller.clients.getClient(i),
					s = TD.cache.lists.getListsFor(i).filter(function(e) {
						return e.isOwnList()
					});
				e.myLists = e.myLists.concat(s.sort(function(e, t) {
					var i = e.name.toLowerCase(),
						n = t.name.toLowerCase();
					return (i > n) - (i < n)
				})), n.getListMemberships(e.userToAdd.screenName, !0, function(e) {
					e.forEach(function(e) {
						document.getElementById(e.id).checked = !0
					})
				})
			})
		},
		destroy: function(e) {
			this.$node.remove(), (0, a.default)("#actions-modal").hide(), e && e.preventDefault(), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = c(i(2)),
		s = c(i(0)),
		r = c(i(279)),
		a = c(i(514)),
		o = c(i(2127)),
		l = i(19);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.ActionDialog = TD.components.BaseModal.extend(function(e) {
		var t = e.tweet;
		this.tweet = t, this.$node.removeClass("js-modal-panel s-tall-fixed").addClass("cmp s-inreply l-no-txtarea s-fluid-height"), this.mainUser = t.getMainUser(), this.$find(".mdl-inner").replaceWith((0, s.default)(TD.ui.template.render("actions/action_dialog", {
			isProtected: this.mainUser.isProtected
		}))), this.$inreplyToHolder = this.$find(".js-inreply"), this.accountSelector = new TD.components.AccountSelector, this.middleSection = this.$node.find(".mdl-inner"), o.default.attachTo(this.middleSection, {
			accountSelector: this.accountSelector
		}), this.$buttons = this.$find(".js-action-button"), this.$buttons.click(this._handleClick.bind(this)), this.$retweetButton = this.$find(".js-retweet-button"), this.$inreplyToHolder.on("click", ".js-other-replies-link", this._showOtherReplies.bind(this)), this._boundRetweet = this._retweet.bind(this), this._boundHandleRetweetSuccess = this._handleRetweetSuccess.bind(this), this._boundHandleRetweetFailure = this._handleRetweetFailure.bind(this), this._boundHandleTwitterUsers = this._handleTwitterUsers.bind(this), (0, s.default)(document).on("uiSendRetweetAction", this._boundRetweet), (0, s.default)(document).on("dataRetweetSuccess", this._boundHandleRetweetSuccess), (0, s.default)(document).on("dataRetweetError", this._boundHandleRetweetFailure), (0, s.default)(document).on("dataTwitterUsers", this._boundHandleTwitterUsers), this.displayTweet(t), this.accountSelector.$node.on(TD.components.AccountSelector.CHANGE, this._handleAccountSelectionChange.bind(this)), this.accountSelector.selectAccount(t.account), this.setAndShowContainer((0, s.default)("#actions-modal"))
	}).methods({
		displayTweet: function(e) {
			e && (e.withAvatar = !0, e.inDialog = !0, this.$inreplyToHolder.html(TD.ui.template.render("status/tweet_single", e)).show())
		},
		_getSelectedAccountKeys: function() {
			return [this.accountSelector.getSelectedAccount().accountKey]
		},
		_quote: function() {
			this.tweet.quoteTo(this._getSelectedAccountKeys()), this.destroy()
		},
		_retweet: function() {
			this.$buttons.prop("disabled", !0), (0, s.default)(document).trigger("uiRetweet", {
				id: this.tweet.id,
				from: this._getSelectedAccountKeys()
			})
		},
		_handleClick: function(e) {
			var t = (0, s.default)(e.target);
			if (t.is(":disabled")) return !1;
			switch (t.data("action")) {
				case "quote":
					this._quote();
					break;
				case "retweet":
					this._retweet()
			}
		},
		_showOtherReplies: function(e) {
			var t = r.default.getImplicitMentions(this.tweet.entities.user_mentions);
			this.requestId = r.default.requestUsers(t)
		},
		_handleTwitterUsers: function(e, t) {
			if (t.requestId === this.requestId) {
				this.middleSection.$node.remove(), this.$inreplyToHolder.remove();
				var i = (0, n.default)("People in conversation");
				this.$title.html(i);
				var s = this.$find(".mdl-inner");
				a.default.attachTo(s, {
					replies: t.users
				})
			}
		},
		_handleAccountSelectionChange: function(e, t) {
			var i = t.selectedAccount,
				n = void 0 === i ? null : i;
			this.$retweetButton.prop("disabled", !n)
		},
		_handleRetweetSuccess: function(e, t) {
			this.tweet.setRetweeted(!0), TD.controller.stats.retweet(this.tweet.getScribeItemData(), t.response.user.id_str), this.destroy()
		},
		_handleRetweetFailure: function(e, t) {
			var i = (0, n.default)("Failed: Retweet");
			t.response.errors && t.response.errors.forEach(function(e) {
				i += " - " + e.message
			}), (0, l.showErrorNotification)({
				message: i
			}), this.$buttons.prop("disabled", !1)
		},
		destroy: function() {
			(0, s.default)(document).off("uiSendRetweetAction", this._boundRetweet), (0, s.default)(document).off("dataRetweetSuccess", this._boundHandleRetweetSuccess), (0, s.default)(document).off("dataRetweetError", this._boundHandleRetweetFailure), (0, s.default)(document).off("dataTwitterUsers", this._boundHandleTwitterUsers), this.accountSelector.destroy(), o.default.teardownAll(), (0, s.default)("#actions-modal").hide(), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(2)),
		s = a(i(7)),
		r = a(i(6));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.attributes({
			accountSelector: null,
			template: "action_header",
			actionHeaderSelector: ".js-action-header-user-list",
			accountSelectorContainer: ".js-account-selector-container"
		}), this.initialState({
			composeTitleText: ""
		}), this.componentDidInitialize = function() {
			var e = this.attr.accountSelector;
			e.$node.on(TD.components.AccountSelector.CHANGE, this._accountSelectorChangeHandle.bind(this)), this.initialRender()
		}, this._accountSelectorChangeHandle = function() {
			var e = this.attr.accountSelector,
				t = e.getSelectedAccount(),
				i = (0, n.default)("From @" + t.screenName);
			this.mergeState({
				composeTitleText: i
			})
		}, this.initialRender = function() {
			var e = r.default.render(this.attr.template);
			this.$node.html(e), this.select("accountSelectorContainer").html(this.attr.accountSelector.$node)
		}, this.render = function() {
			this.select("actionHeaderSelector").text(this.state.composeTitleText)
		}, this.componentWillTeardown = function() {
			this.attr.accountSelector.$node.off(TD.components.AccountSelector.CHANGE)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = c(i(2)),
		s = c(i(0)),
		r = c(i(2129)),
		a = c(i(2130)),
		o = c(i(2131)),
		l = i(66);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.components.GlobalSettings = TD.components.BaseModal.extend(function() {
		var e = TD.storage.accountController.isEmpty() ? "accounts" : "general";
		this.$optionList = this.$find(".js-setting-list li"), (0, s.default)("a.list-link", this.$node).click(function(e) {
			var t = (0, s.default)(e.currentTarget).data("action");
			this.switchTab(t)
		}.bind(this)), this.setAndShowContainer((0, s.default)("#settings-modal"), !1), this.switchTab(e)
	}).methods({
		_render: function() {
			return (0, s.default)(TD.ui.template.render("short_modal", {
				title: (0, n.default)("Settings"),
				content: TD.ui.template.render("settings/global_settings_modal", this.getInfo()),
				hasDoneButton: !0,
				centeredFooter: !0
			}))
		},
		getInfo: function() {
			return {
				tabs: [{
					title: (0, n.default)("General"),
					action: "general"
				}, {
					title: (0, n.default)("Link Shortening"),
					action: "services"
				}, {
					title: (0, n.default)("Mute"),
					action: "filter"
				}]
			}
		},
		switchTab: function(e) {
			if (this.$globalSettings = (0, s.default)("#global-settings"), e !== this.currentTabName) {
				switch (this.$optionList.removeClass("selected"), this.teardownEvent && (0, s.default)(document).trigger(this.teardownEvent), e) {
					case "general":
						var t = {
							version: TD.util.getFullVersionString()
						};
						TD.util.isWrapperApp() && deck.getWrapperVersion && (t.wrapperVersion = deck.getWrapperVersion());
						var i = (0, l.attach)(o.default, this.$globalSettings, t);
						this.teardownEvent = i.teardownEvent;
						break;
					case "services":
						var n = (0, l.attach)(a.default, this.$globalSettings);
						this.teardownEvent = n.teardownEvent;
						break;
					case "filter":
						var c = (0, l.attach)(r.default, this.$globalSettings);
						this.teardownEvent = c.teardownEvent
				}
				this.currentTabName = e, this.$optionList.find("[data-action=" + e + "]").parent("li").addClass("selected")
			}
		},
		destroy: function(e) {
			this.teardownEvent && (0, s.default)(document).trigger(this.teardownEvent), (0, s.default)("#settings-modal").hide(), e && e.preventDefault(), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(2)),
		s = o(i(0)),
		r = o(i(6)),
		a = o(i(7));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			template: "settings/global_setting_filter",
			filterListTemplate: "settings/global_setting_filter_list",
			filterListSelector: ".js-filter-list",
			addFilterButtonSelector: ".js-add-filter",
			addFilterButtonTemplate: "settings/global_setting_filter_add_btn",
			addFilterContainerSelector: ".js-add-filter-container",
			filterTypeSelector: ".js-filter-types",
			filterInputSelector: ".js-filter-input",
			removeFilterButtonSelector: ".js-remove-filter",
			globalSettingsSelector: ".js-global-settings"
		}), this.initialState({
			placeholderText: "",
			addFilterButtonEnabled: !1,
			filters: []
		}), this.componentDidInitialize = function() {
			this.on("submit", {
				globalSettingsSelector: this.handleAddFilter.bind(this)
			}), this.on("click", {
				removeFilterButtonSelector: this.handleRemoveFilter.bind(this)
			}), this.on("keyup", {
				filterInputSelector: this.toggleFilterButtonEnabled.bind(this)
			}), this.on("change", {
				filterTypeSelector: this.handleFilterTypeChange.bind(this)
			}), this.on("click", {
				addFilterButtonSelector: this.handleAddFilter.bind(this)
			}), this.mergeState({
				placeholderText: (0, n.default)("Enter a word or phrase"),
				filters: TD.controller.filterManager.getAll()
			}), this.initialRender()
		}, this.toggleFilterButtonEnabled = function() {
			this.mergeState({
				addFilterButtonEnabled: this.validateFilter()
			})
		}, this.validateFilter = function() {
			var e = this.select("filterTypeSelector").val(),
				t = this.select("filterInputSelector").val();
			return TD.controller.filterManager.validateFilter(e, t)
		}, this.handleAddFilter = function(e) {
			if (e.preventDefault(), this.validateFilter()) {
				var t = this.select("filterTypeSelector").val(),
					i = this.select("filterInputSelector").val();
				TD.controller.filterManager.addFilter(t, i), this.refreshFilters(), this.select("filterInputSelector").val("")
			}
		}, this.handleRemoveFilter = function(e) {
			var t = (0, s.default)(e.target);
			TD.controller.filterManager.removeFilter({
				id: t.data("id")
			}), this.refreshFilters()
		}, this.getPlaceholderText = function(e) {
			switch (e) {
				case TD.vo.Filter.PHRASE:
					return (0, n.default)("Enter a word or phrase");
				case TD.vo.Filter.SOURCE:
					return (0, n.default)("eg TweetSpamApp");
				default:
					return ""
			}
		}, this.handleFilterTypeChange = function() {
			var e = this.select("filterTypeSelector").val(),
				t = this.getPlaceholderText(e);
			this.mergeState({
				placeholderText: t,
				addFilterButtonEnabled: this.validateFilter()
			})
		}, this.refreshFilters = function() {
			this.mergeState({
				filters: TD.controller.filterManager.getAll()
			})
		}, this.initialRender = function() {
			var e = r.default.render(this.attr.template, {
				placeholderText: this.state.placeholderText,
				addFilterButtonEnabled: this.state.addFilterButtonEnabled,
				filters: this.state.filters
			});
			this.$node.html(e)
		}, this.render = function() {
			var e = this.state.placeholderText;
			this.select("filterInputSelector").attr("placeholder", e);
			var t = r.default.render(this.attr.addFilterButtonTemplate, {
				addFilterButtonEnabled: this.state.addFilterButtonEnabled
			});
			this.select("addFilterContainerSelector").html(t);
			var i = r.default.render(this.attr.filterListTemplate, {
				filters: this.state.filters
			});
			this.select("filterListSelector").html(i)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(6)),
		s = r(i(7));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.attributes({
			template: "settings/global_setting_link_shortening",
			bitlyAccountFormTemplate: "settings/link_shortening_bitly_form",
			linkShorteningSelector: ".js-link-shortening",
			bitlyFormSelector: ".js-bitly-form",
			bitlyUsernameSelector: ".js-bitly-email",
			bitlyApiKeySelector: ".js-bitly-key"
		}), this.initialState({
			selectedShortener: null,
			bitlyAccount: null
		}), this.componentDidInitialize = function() {
			this.on("change", {
				linkShorteningSelector: this.handleLinkShortenerChange
			}), this.on(document, "dataSettingsValues", this.getCurrentSettings), this.getCurrentSettings(), this.initialRender()
		}, this.handleLinkShortenerChange = function(e) {
			var t = e.currentTarget.value;
			TD.settings.setLinkShortener(t)
		}, this.getCurrentSettings = function() {
			var e = TD.settings.getLinkShortener(),
				t = "bitly" === e ? TD.services.bitly.getAccount() : null;
			this.mergeState({
				selectedShortener: e,
				bitlyAccount: t
			})
		}, this.saveBitlyAccount = function() {
			if (TD.util.metric("settings:services:save"), "bitly" === this.state.selectedShortener) return TD.services.bitly.updateAccount({
				login: this.select("bitlyUsernameSelector").val(),
				apiKey: this.select("bitlyApiKeySelector").val()
			})
		}, this.initialRender = function() {
			var e = n.default.render(this.attr.template);
			this.$node.html(e)
		}, this.render = function() {
			var e = "bitly" === this.state.selectedShortener,
				t = e ? n.default.render(this.attr.bitlyAccountFormTemplate, {
					bitlyAccount: this.state.bitlyAccount
				}) : "";
			this.select("linkShorteningSelector").val(this.state.selectedShortener), this.select("bitlyFormSelector").html(t)
		}, this.before("teardown", function() {
			this.saveBitlyAccount()
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(0)),
		s = a(i(6)),
		r = a(i(7));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			template: "settings/global_setting_general",
			version: null,
			wrapperVersion: void 0,
			streamTweetsInputId: "streaming-updates",
			startupNotificationsInputId: "show-startup-notifications",
			sensitiveContentInputId: "display-sensitive-media",
			autoplayGifsInputId: "auto-play-gifs",
			enableRateLimitBypassInputId: "enable-rate-limit-bypass",
			toggleSwitchSelector: ".js-toggle-switch",
			radioInputSelector: ".js-settings-radio",
			themeInputName: "theme",
			columnWidthInputName: "column-size",
			fontSizeInputName: "font-size",
			columnWidthSelector: ".js-column-size",
			fontSizeSelector: ".js-font-size",
			themeSelector: ".js-theme",
			streamTweetsSelector: ".js-streaming-updates",
			showNotificationsSelector: ".js-show-startup-notifications",
			displaySensitiveContentSelector: ".js-display-sensitive-media",
			autoplayGifsSelector: ".js-auto-play-gifs",
			enableRateLimitBypassSelector: ".js-enable-rate-limit-bypass"
		}), this.componentDidInitialize = function() {
			this.on("click", {
				toggleSwitchSelector: this.handleToggleSwitchClick.bind(this)
			}), this.on("change", {
				radioInputSelector: this.handleRadioInputChange
			}), this.on(document, "dataSettingsValues", this.loadSettings), this.loadSettings(), this.initialRender(), this.$columnWidth = this.select("columnWidthSelector"), this.$fontSize = this.select("fontSizeSelector"), this.$theme = this.select("themeSelector"), this.$streamTweets = this.select("streamTweetsSelector"), this.$showNotifications = this.select("showNotificationsSelector"), this.$displaySensitiveContent = this.select("displaySensitiveContentSelector"), this.$autoplayGifs = this.select("autoplayGifsSelector"), this.$enableRateLimitBypass = this.select("enableRateLimitBypassSelector")
		}, this.loadSettings = function() {
			this.mergeState({
				streamTweets: TD.settings.getUseStream(),
				showStartupNotifications: TD.settings.getShowStartupNotifications(),
				displaySensitiveMedia: TD.settings.getDisplaySensitiveMedia(),
				autoplayGifs: TD.settings.getAutoPlayGifs(),
				enableRateLimitBypass: localStorage.OTDuseDifferentToken === '1',
				theme: TD.settings.getTheme(),
				columnWidth: TD.settings.getColumnWidth(),
				fontSize: TD.settings.getFontSize()
			})
		}, this.handleToggleSwitchClick = function(e) {
			var t = (0, n.default)(e.currentTarget).hasClass("icon-toggle-on"),
				i = !t;
			switch (e.currentTarget.id) {
				case this.attr.streamTweetsInputId:
					TD.settings.setUseStream(i), this.mergeState({
						streamTweets: i
					});
					break;
				case this.attr.startupNotificationsInputId:
					TD.settings.setShowStartupNotifications(i), this.mergeState({
						showStartupNotifications: i
					});
					break;
				case this.attr.sensitiveContentInputId:
					TD.settings.setDisplaySensitiveMedia(i), this.mergeState({
						displaySensitiveMedia: i
					});
					break;
				case this.attr.autoplayGifsInputId:
					TD.settings.setAutoPlayGifs(i), this.mergeState({
						autoplayGifs: i
					});
					break;
				case this.attr.enableRateLimitBypassInputId:
					localStorage.OTDuseDifferentToken = i ? '1' : '0', this.mergeState({
						enableRateLimitBypass: i
					});
					break;
			}
		}, this.handleRadioInputChange = function(e) {
			var t = e.currentTarget.value;
			switch (e.currentTarget.name) {
				case this.attr.themeInputName:
					TD.settings.setTheme(t);
					break;
				case this.attr.columnWidthInputName:
					TD.settings.setColumnWidth(t);
					break;
				case this.attr.fontSizeInputName:
					TD.settings.setFontSize(t)
			}
		}, this.initialRender = function() {
			var e = s.default.render(this.attr.template, {
				version: this.attr.version,
				wrapperVersion: this.attr.wrapperVersion
			});
			this.$node.html(e)
		}, this.render = function() {
			var e = this.state,
				t = e.streamTweets,
				i = e.showStartupNotifications,
				n = e.displaySensitiveMedia,
				s = e.autoplayGifs,
				r = e.theme,
				a = e.columnWidth,
				o = e.fontSize;
			this.$streamTweets.removeClass(t ? "icon-toggle-off" : "icon-toggle-on").addClass(t ? "icon-toggle-on" : "icon-toggle-off"), 
			this.$showNotifications.removeClass(i ? "icon-toggle-off" : "icon-toggle-on").addClass(i ? "icon-toggle-on" : "icon-toggle-off"), 
			this.$displaySensitiveContent.removeClass(n ? "icon-toggle-off" : "icon-toggle-on").addClass(n ? "icon-toggle-on" : "icon-toggle-off"), 
			this.$autoplayGifs.removeClass(s ? "icon-toggle-off" : "icon-toggle-on").addClass(s ? "icon-toggle-on" : "icon-toggle-off"), 
			this.$enableRateLimitBypass.removeClass(localStorage.OTDuseDifferentToken === '1' ? "icon-toggle-off" : "icon-toggle-on").addClass(localStorage.OTDuseDifferentToken === '1' ? "icon-toggle-on" : "icon-toggle-off"),
			this.$theme.find("[value=" + r + "]").prop("checked", !0), 
			this.$columnWidth.find("[value=" + a + "]").prop("checked", !0), 
			this.$fontSize.find("[value=" + o + "]").prop("checked", !0)
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = o(i(43)),
		s = o(i(55)),
		r = o(i(0)),
		a = o(i(725));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = TD.components.AccountSelector = a.default.extend(function() {
		var e = this;
		this.$node = r.default.createElement("div").addClass("js-account-selector margin-t--10 compose-accounts flex flex-wrap--wrap cf"), this.cachedSelectedAccount = null, this.accountIndex = {}, this.refreshPostingAccounts(), this.$node.on("click", ".js-account-item", function(t) {
			var i = (0, r.default)(t.currentTarget);
			t.stopPropagation(), (0, r.default)("a", e.$node).removeClass("is-selected"), i.addClass("is-selected"), e.updateSelectedAccount()
		}), this.subscription = r.default.subscribe("/storage/client/account_whitelist_changed", (0, s.default)(this.refreshPostingAccounts, this))
	}).statics({
		CHANGE: "td-accounts-change",
		SELECTED_CLASS: "is-selected"
	}).methods({
		refreshPostingAccounts: function() {
			var e, t, i, s, r = TD.storage.accountController.getPostingAccounts(),
				a = [];
			for (this.accountIndex = {}, e = 0; e < r.length; e++) i = (t = r[e]).getKey(), a.push(i), this.accountIndex[i] = {
				accountKey: i,
				avatarSize: 36,
				profileImageURL: t.getProfileImageURL(),
				screenName: t.getUsername()
			};
			var o, l, c;
			a.length && (s = TD.ui.template.render("compose/accounts", (o = a, l = this.accountIndex, (c = {
				accounts: [],
				show_acc_toggle: !0
			}).accounts = (0, n.default)(o, function(e) {
				return l[e]
			}), c)), this.$node.html(s))
		},
		getSelectedAccount: function() {
			var e = void 0;
			if (this.cachedSelectedAccount) return this.cachedSelectedAccount;
			var t = this.$node.find(".is-selected");
			if (1 === t.length) {
				var i = t[0].attributes["data-id"].value;
				e = this.accountIndex[i]
			}
			return this.cachedSelectedAccount = e, e
		},
		selectAccount: function(e) {
			if (e) {
				var t = this.$node.find(".js-account-item");
				t.removeClass("is-selected"), t.filter("a[data-id='" + e.getKey() + "']").addClass("is-selected"), this.updateSelectedAccount()
			}
		},
		updateSelectedAccount: function() {
			this.cachedSelectedAccount = null;
			var e = this.getSelectedAccount();
			this.$node.trigger("td-accounts-change", {
				selectedAccount: e
			})
		},
		destroy: function() {
			r.default.unsubscribe(this.subscription), this.$node.off("click", ".js-account-item"), this.supr()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = S(i(63)),
		s = S(i(88)),
		r = S(i(77)),
		a = S(i(32)),
		o = S(i(48)),
		l = S(i(15)),
		c = S(i(132)),
		u = S(i(120)),
		d = S(i(43)),
		h = S(i(80)),
		m = S(i(170)),
		f = S(i(112)),
		p = S(i(121)),
		g = S(i(2)),
		v = S(i(0)),
		T = S(i(354)),
		w = S(i(813)),
		b = S(i(261)),
		y = S(i(21)),
		_ = i(168),
		C = i(19);

	function S(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.vo.Column = function(e, t) {
		var i = this;
		TD.sync.util.assert(e, "must provide sColumn to create aColumn"), this.model = e, TD.sync.util.assert(this.model.getKey(), "vo.Column will most likely fail if your column has no key"), this.ui = new TD.ui.Column(this.model.getKey()), this._feeds = [], this.filters = [], this.description = "", this.reset(), this.scribedImpressionIDs = new T.default(200), this._isUpdating = !0, this.feedSubscriptions = {}, this.deleteSubscriptions = {}, this.visible = !0, this.visibility = {
			columnWidth: 0,
			visibleWidth: 0,
			visibleHeight: 0,
			visibleFraction: 0
		}, this.temporary = !1, this.detailViewComponent = null, this.UPWARD_SCROLL_CHIRP_BLOCK_SIZE = 40, this.INFINITE_SCROLL_CHIRP_BLOCK_SIZE = 20, this.TARGET_COLUMN_CHIRP_LIMIT = 40, this.RETRY_FILL_TIMEOUT = 1e3, this.loadFeeds(), this.loadFilters(), t && this.setFeeds(t), y.default.isFilterable(this) || this.updateSearchFilter(new TD.vo.SearchFilter), this.COLUMN_MINIMALIST_TWEET_TPM_THRESHOLD = 750, this.CARDS_TPM_THRESHOLD = 10, this.streamRate = 0, this.streamRateEvent = "dataStreamRate." + this.model.getKey(), (0, v.default)(document).on(this.streamRateEvent, this.updateStreamRate.bind(this)), this.tpm = 0, this.tpmUpdateEvent = "dataColumn" + this.model.getKey() + "Tpm", (0, v.default)(document).on(this.tpmUpdateEvent, this.updateTpm.bind(this)), this.tpmCounter = new TD.util.TpmCounter(500, 5e3, this.tpmUpdateEvent), this.tpmIncrementEvent = "incrementTpmCounter." + this.model.getKey(), (0, v.default)(document).on(this.tpmIncrementEvent, function(e, t) {
			t.columnKey === i.model.getKey() && i.tpmCounter.incrementCounter(1)
		}), this.STREAM_ITEM_CONTENT_SELECTOR = ".js-stream-item-content", this.STREAM_ITEM_SELECTOR = ".js-stream-item", this.miscSubscriptions = [v.default.subscribe("/storage/client/settings/display_sensitive_media", function() {
			return i.reloadTweets()
		}), v.default.subscribe("/storage/client/settings/font_size", function() {
			return i.reloadTweets()
		}), v.default.subscribe("/storage/client/settings/theme", function() {
			return i.reloadTweets()
		}), v.default.subscribe("/storage/client/settings/column_width", function() {
			return i.reloadTweets()
		})], this.throttledUpdateUnreadIndicators = (0, p.default)(this.updateUnreadIndicators.bind(this), 100), this.pausePlayGifs = (0, p.default)(this.pausePlayGifs.bind(this), 500), this.chirpsWithPlayingGifs = [], this.visibleChirpsEvent = "uiVisibleChirps." + this.model.getKey(), (0, v.default)(document).on(this.visibleChirpsEvent, function(e, t) {
			t.columnKey === i.model.getKey() && i.handleVisibleChirps(t)
		})
	}, TD.vo.Column.MEDIA_PREVIEW_OFF = "off", TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL = "small", TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM = "medium", TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE = "large", TD.vo.Column.prototype.handleVisibleChirps = function(e) {
		var t = e.chirpsData.map(function(e) {
				return e.chirp
			}).filter(function(e) {
				return e && !e.showMore && !e.topCursor
			}),
			i = TD.util.getTopChirp([this.highWaterMarkSeenChirp].concat(t));
		if (i !== this.highWaterMarkSeenChirp && (this.highWaterMarkSeenChirp = i), this.throttledUpdateUnreadIndicators(), this.pausePlayGifs(t), TD.config.debug_highlight_visible_chirps) {
			var n = this.ui.getChirpContainer(),
				s = (0, f.default)(t, "id");
			n.find(".js-stream-item").each(function() {
				var e = (0, v.default)(this),
					t = e.attr("data-key"),
					i = s.indexOf(t) > -1 ? "#ffb699" : "transparent";
				e.css("background-color", i)
			})
		}
	}, TD.vo.Column.prototype.loadCards = function(e) {
		var t = this,
			i = this.getMediaPreviewSize() === TD.vo.Column.MEDIA_PREVIEW_OFF,
			n = !(0, _.isUsingHorizonWebCards)() && this.tpm > this.CARDS_TPM_THRESHOLD;
		TD.ui.columns.isScrolledToTop(this.model.getKey()) && n || e.forEach(function(e) {
			!e || i && !(0, _.hasPoll)(e.card) || t.ui.loadCard(e, y.default.getColumnType(t), t.temporary)
		})
	}, TD.vo.Column.prototype.pausePlayGifs = function(e) {
		var t = this,
			i = e.filter(Boolean).filter(function(e) {
				var t = e.quotedTweet && e.quotedTweet.hasAnimatedGif();
				return e.hasAnimatedGif() || t
			});
		(0, m.default)(this.chirpsWithPlayingGifs, i).forEach(function(e) {
			t.ui.unloadGif(e, t.getRenderOptions())
		}, this.ui), i.forEach(function(e) {
			t.ui.loadGif(e, t.getRenderOptions()), TD.settings.getAutoPlayGifs() ? t.ui.playGifIfNotManuallyPaused(e) : t.ui.pauseGif(e), e.quotedTweet && (t.ui.loadGif(e.quotedTweet, t.getRenderOptions()), TD.settings.getAutoPlayGifs() ? t.ui.playGifIfNotManuallyPaused(e.quotedTweet) : t.ui.pauseGif(e.quotedTweet))
		}), this.chirpsWithPlayingGifs = i
	}, TD.vo.Column.prototype.reset = function() {
		this.state = "awaiting_backfill", this.updateArray = [], this.updateIndex = {}, this.highWaterMarkChirp = null, this.highWaterMarkSeenChirp = null, this.isTrackingRealtime = !0, this.isFetchingUpwardUpdates = !1, this.isFetchingOlderUpdates = !1, this.doUpwardScrollDeferreds = [], TD.ui.columns.unlockColumnFromElement(this.model.getKey()), this.resetUnreadIndicators()
	}, TD.vo.Column.prototype.updateHighWaterMarkChirp = function(e) {
		e && (this.highWaterMarkChirp = TD.util.getTopChirp([this.highWaterMarkChirp, e]))
	}, TD.vo.Column.prototype.backfill = function() {
		var e = this,
			t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).firstLoad;
		if ("awaiting_backfill" === this.state) {
			this.state = "backfill_loading";
			var i = y.default.getColumnType(this),
				n = this.calculateInfiniteScrollCursor([]),
				s = TD.controller.columnManager.getAllOrdered().indexOf(this),
				r = t && s > 2 ? 500 * s : 0,
				a = TD.core.defer.timeout(r);
			a.addCallback(function() {
				return e.fillAggregateCursor(n)
			}), a.addCallbacks(function(t) {
				e.mergeAndRenderChirps(t.chirps), t.chirps.length ? (e.state = "polling", TD.util.metric("column:backfill:result:chirps:" + i)) : (e.state = "awaiting_backfill", TD.util.metric("column:backfill:result:no-chirps:" + i))
			}, function() {
				e.state = "awaiting_backfill", TD.util.metric("column:backfill:error:fill:" + i)
			}), a.addErrback(function(e) {
				TD.util.metric("column:backfill:error:final:" + i)
			})
		}
	}, TD.vo.Column.prototype.clone = function() {
		return TD.controller.columnManager.makeColumn(this.model.getType(), this.getFeeds(), this.model.getFilters())
	}, TD.vo.Column.prototype.updateStreamRate = function(e, t) {
		this.streamRate = t.itemsPerMinute
	}, TD.vo.Column.prototype.updateTpm = function(e, t) {
		this.tpm = t.itemsPerMinute
	}, TD.vo.Column.prototype.loadFeeds = function() {
		if (this.model.managed) {
			var e = this.model.getFeedKeys();
			if ((0, h.default)(e)) TD.sync.util.stateLog("loadFeeds() not loading feeds for", this, "given", this.model.state);
			else {
				this._feeds = [];
				for (var t = 0; t < e.length; t++) {
					var i = TD.storage.feedController.get(e[t]);
					this._feeds.push(i)
				}
				this.refreshSubscriptions()
			}
		}
	}, TD.vo.Column.prototype.getFeeds = function() {
		return this._feeds.concat()
	}, TD.vo.Column.prototype.getFeedsByType = function(e) {
		return this.getFeeds().filter(function(t) {
			return t.getType() === e
		})
	}, TD.vo.Column.prototype.setFeeds = function(e) {
		this._feeds = e;
		for (var t = [], i = 0; i < this._feeds.length; i++) t.push(this._feeds[i].getKey());
		this.model.setFeedKeys(t), this.refreshSubscriptions(), this.model.managed && TD.storage.feedController.manageFeeds(this._feeds)
	}, TD.vo.Column.prototype.addFeed = function(e) {
		for (var t, i = [], n = 0; n < this._feeds.length; n++) {
			if ((t = this._feeds[n].getKey()) === e.getKey()) return;
			i.push(t)
		}
		this._feeds.push(e), i.push(e.getKey()), this.model.setFeedKeys(i), this.refreshSubscriptions(), this.model.managed && TD.storage.feedController.manageFeeds(this._feeds)
	}, TD.vo.Column.prototype.addFeeds = function(e) {
		if (e && 0 !== e.length) {
			var t, i = [],
				n = {};
			for (e = this._feeds.concat(e), t = 0; t < e.length; t++) n[e[t].getKey()] || (n[e[t].getKey()] = !0, i.push(e[t]));
			this.setFeeds(i)
		}
	}, TD.vo.Column.prototype.removeFeed = function(e) {
		for (var t, i = [], n = 0, s = this._feeds.length - 1; s >= 0; s--)(t = this._feeds[s].getKey()) === e.getKey() ? (this._feeds.splice(s, 1), n++) : i.push(t);
		return n > 0 && (this.model.setFeedKeys(i), this.refreshSubscriptions(), this.checkChirpIndex()), n
	}, TD.vo.Column.prototype.filterAllowedChirps = function(e) {
		var t = this.model.getClearedTimestamp();
		return e.filter(function(e) {
			return e.created.getTime() > t && e.passFilters(this.filters)
		}, this)
	}, TD.vo.Column.prototype.findChirp = function(e) {
		var t = void 0;
		if (this.detailViewComponent && (t = this.detailViewComponent.findChirp(e)), t || (t = this.updateIndex[e]), !t)
			for (var i = 0; i < this.updateArray.length; i++)
				if (this.updateArray[i].getRelatedTweet() && this.updateArray[i].getRelatedTweet().id === e) {
					t = this.updateArray[i].getRelatedTweet();
					break
				} return t
	}, TD.vo.Column.prototype.findMostInterestingChirp = function(e) {
		var t = this.findChirp(e);
		return t && t instanceof TD.services.TwitterAction && (t = t.getRelatedTweet() || t), t
	}, TD.vo.Column.prototype.checkChirpIndex = function() {
		var e = this.model.getFeedKeys(),
			t = (0, d.default)(e, TD.controller.feedManager.getPoller),
			i = (0, u.default)(this.updateArray, function(e) {
				return !(0, c.default)(t, function(t) {
					return t.chirpIndex[e.id]
				})
			});
		this.removeFromIndex(null, i, !0), 0 === this.updateArray.length && this.reset()
	}, TD.vo.Column.prototype.refreshSubscriptions = function() {
		var e, t = {},
			i = this.model.getFeedKeys();
		if ("me" === this.model.getType()) {
			var n = !1,
				s = [];
			(0, l.default)(i, function(e) {
				var t = TD.storage.feedController.get(e);
				t && ("interactions" === t.getType() && (n = !0), "mentions" !== t.getType() && s.push(e))
			}), n && (i = s)
		}
		for (var r = 0; r < i.length; r++) t[e = i[r]] = !0, this.feedSubscriptions[e] || (this.feedSubscriptions[e] = v.default.subscribe("/feed/" + e, this.handlePushChirps.bind(this))), this.deleteSubscriptions[e] || (this.deleteSubscriptions[e] = v.default.subscribe("/delete/" + e, this.handlePushDelete.bind(this)));
		for (e in this.feedSubscriptions) this.feedSubscriptions.hasOwnProperty(e) && (t[e] || (v.default.unsubscribe(this.feedSubscriptions[e]), delete this.feedSubscriptions[e]));
		for (e in this.deleteSubscriptions) this.deleteSubscriptions.hasOwnProperty(e) && (t[e] || (v.default.unsubscribe(this.deleteSubscriptions[e]), delete this.deleteSubscriptions[e]))
	}, TD.vo.Column.prototype.handlePushChirps = function(e) {
		if ("polling" === this.state) {
			var t = TD.core.defer.succeed(e);
			return t.addCallbackWith(this, this.preprocessPollerData), t.addCallbackWith(this, this.mergeMissingChirps), this.isTrackingRealtime && (t.addCallbackWith(this, this.doUpwardScroll), t.addCallback(function() {
				return e
			})), t.addCallbackWith(this, this.processPushData), t
		}
		this.backfill()
	}, TD.vo.Column.prototype.preprocessPollerData = function(e) {
		return e.chirps = this.filterAllowedChirps(e.chirps), e.chirps.sort(TD.util.chirpColumnSort), e
	}, TD.vo.Column.prototype.mergeMissingChirps = function(e) {
		var t = b.default.empty;
		this.updateArray.length && (t = new b.default(b.default.incEnd(this.updateArray[this.updateArray.length - 1]), b.default.incEnd(this.updateArray[0])));
		var i = e.chirps.filter(t.contains, t);
		return this.mergeAndRenderChirps(i), e
	}, TD.vo.Column.prototype.processPushData = function(e) {
		if (!!e.poller.feed.managed && e.notifyAfterSortIndex) {
			var t = new TD.services.ChirpBase;
			t.sortIndex = e.notifyAfterSortIndex;
			var i = [].concat.apply([], e.chirps.map(function(e) {
				return e.getUnreadChirps(t)
			}));
			v.default.publish("/notifications/new", [{
				column: this,
				items: i
			}])
		}
		var n = new b.default(this.highWaterMarkChirp ? b.default.excEnd(this.highWaterMarkChirp) : b.default.negInf, b.default.posInf),
			s = e.chirps.filter(n.contains, n);
		this.updateHighWaterMarkChirp(e.chirps[0]), this.numNewPushedChirps += s.length, this.wasPushedGap = this.wasPushedGap || e.gap, this.throttledUpdateUnreadIndicators()
	}, TD.vo.Column.prototype.handlePushDelete = function(e, t) {
		this.removeFromIndex(e, t, !0)
	}, TD.vo.Column.prototype.resetUnreadIndicators = function() {
		this.numNewPushedChirps = 0, this.wasPushedGap = !1, this.updateUnreadIndicators()
	}, TD.vo.Column.prototype.updateUnreadIndicators = function() {
		this.temporary || this.ui.updateUnreadIndicators({
			numUnseenChirps: this.getNumUnseenChirps(),
			gappy: this.wasPushedGap
		})
	}, TD.vo.Column.prototype.getNumUnseenChirps = function() {
		var e = 0;
		if (!this.isTrackingRealtime) {
			var t = new b.default(this.highWaterMarkSeenChirp ? b.default.excEnd(this.highWaterMarkSeenChirp) : b.default.negInf, b.default.posInf);
			e = this.updateArray.filter(t.contains, t).reduce(function(e, t) {
				return e + (t instanceof TD.services.GapChirp ? t.gapSize : 1)
			}, 0)
		}
		return e + this.numNewPushedChirps
	}, TD.vo.Column.prototype.removeSubscriptions = function() {
		var e;
		for (e in this.feedSubscriptions) this.feedSubscriptions.hasOwnProperty(e) && (v.default.unsubscribe(this.feedSubscriptions[e]), delete this.feedSubscriptions[e]);
		for (e in this.deleteSubscriptions) this.deleteSubscriptions.hasOwnProperty(e) && (v.default.unsubscribe(this.deleteSubscriptions[e]), delete this.deleteSubscriptions[e]);
		this.miscSubscriptions.forEach(function(e) {
			return v.default.unsubscribe(e)
		}), (0, v.default)(document).off(this.streamRateEvent), (0, v.default)(document).off(this.tpmUpdateEvent), (0, v.default)(document).off(this.tpmIncrementEvent), (0, v.default)(document).off(this.visibleChirpsEvent), this.tpmCounter.stop()
	}, TD.vo.Column.prototype.doUpwardScroll = function() {
		var e = this;
		if ("polling" !== this.state) return TD.core.defer.succeed();
		var t = new TD.core.defer.Deferred;
		if (this.doUpwardScrollDeferreds = this.doUpwardScrollDeferreds || [], this.doUpwardScrollDeferreds.push(t), this.isFetchingUpwardUpdates) return t;
		this.isFetchingUpwardUpdates = !0;
		var i = this.fillAggregateCursor(this.calculateUpwardScrollCursor(this.updateArray), {
			emptyPageRetriesAllowed: 0
		});
		return i.addCallbackWith(this, function(e) {
			return e.possibleGapSize = this.numNewPushedChirps - e.chirps.length, e
		}), i.addCallbackWith(this, this.extractChirpsWithGap), i.addCallbackWith(this, this.mergeAndRenderChirps), i.addBoth(this.removeOffscreen.bind(this, "up")), i.addBothWith(this, TD.util.effect(function() {
			this.isFetchingUpwardUpdates = !1, this.resetUnreadIndicators()
		})), i.addBothWith(this, this.throttledUpdateUnreadIndicators), i.addCallbacks(function() {
			var t = e.doUpwardScrollDeferreds;
			e.doUpwardScrollDeferreds = [], t.forEach(function(e) {
				return e.callback()
			})
		}, function(t) {
			var i = e.doUpwardScrollDeferreds;
			e.doUpwardScrollDeferreds = [], i.forEach(function(e) {
				return e.errback(t)
			})
		}), t
	}, TD.vo.Column.prototype.extractChirpsWithGap = function(e) {
		if (e.remainderCursor.interval.empty) return e.chirps;
		var t = new TD.services.GapChirp(e.remainderCursor, {
			sortIndex: e.chirps[e.chirps.length - 1].sortIndex,
			gapSize: e.possibleGapSize
		});
		return e.chirps.concat([t])
	}, TD.vo.Column.prototype.doInfiniteScroll = function(e) {
		if (e = (0, o.default)(e || {}, {
				fromScrollbarDrag: !1
			}), !this.isFetchingOlderUpdates && "polling" === this.state) {
			this.isFetchingOlderUpdates = !0, this.ui.addInfiniteScrollSpinner();
			var t = this.fillAggregateCursor(this.calculateInfiniteScrollCursor(this.updateArray));
			return t.addCallbackWith(this, function(e) {
				this.mergeAndRenderChirps(e.chirps)
			}), t.addBothWith(this, function() {
				this.isFetchingOlderUpdates = !1, this.ui.removeInfiniteScrollSpinner()
			}), e.fromScrollbarDrag || t.addBoth(this.removeOffscreen.bind(this, "down")), t
		}
	}, TD.vo.Column.prototype.fillGap = function(e) {
		var t = this.findChirp(e);
		if (t) {
			var i = this.fillAggregateCursor(t.gapCursor);
			i.addCallbackWith(this, TD.util.effect(this.trackFillGap)), i.addCallbackWith(this, function(e) {
				return e.possibleGapSize = t.gapSize - e.chirps.length, e
			}), i.addCallbackWith(this, this.extractChirpsWithGap), i.addCallbackWith(this, function(e) {
				return this.removeFromIndex(null, [t], !0), this.mergeAndRenderChirps(e)
			}), i.addCallback(TD.core.defer.timeout.bind(null, 200)), i.addCallback(this.removeOffscreen.bind(this, "up"))
		}
	}, TD.vo.Column.prototype.fillAggregateCursor = function(e, t) {
		return this.fillAggregateCursorWithRetries(e, t).addCallback(function(e) {
			return e.emptyPageRetriesMade > 0 && TD.util.metric("column:fetch:retry-fill:retries-made", [e.emptyPageRetriesMade], "metric"), e.data
		})
	}, TD.vo.Column.prototype.fillAggregateCursorWithRetries = function(e, t) {
		t = (0, o.default)(t || {}, {
			emptyPageRetriesAllowed: 5,
			emptyPageRetriesMade: 0,
			bypassCache: !1
		});
		var i = e.getCursors().map(function(e) {
				return TD.controller.feedManager.getPoller(e.feedKey).fillCursor(e, {
					forceFetch: !0,
					bypassCache: t.bypassCache
				})
			}),
			n = TD.core.defer.gatherResults(i);
		return n.addCallbackWith(this, this.extractUsableBlock), n.addCallbackWith(this, function(i) {
			var n = i.reduce(function(e, t) {
				return e.concat(t.chirps)
			}, []);
			n.sort(TD.util.chirpColumnSort);
			var s = this.INFINITE_SCROLL_CHIRP_BLOCK_SIZE;
			e.interval.from !== b.default.negInf && (s = this.UPWARD_SCROLL_CHIRP_BLOCK_SIZE), n.length > s && (n = n.slice(0, s), i = i.map(function(e) {
				return TD.controller.feedManager.getPoller(e.requestCursor.feedKey).recalculateResult(e, n)
			}));
			var r = this.makeAggregateCursor(new Date, i.map(function(e) {
				return e.remainderCursor
			}));
			return {
				data: {
					requestCursor: e,
					chirps: n,
					remainderCursor: r
				},
				emptyPageRetriesAllowed: t.emptyPageRetriesAllowed,
				emptyPageRetriesMade: t.emptyPageRetriesMade
			}
		}), TD.decider.get("throttle_column_fill_retry") || n.addCallbackWith(this, this.maybeRetryFillAggregateCursor), n
	}, TD.vo.Column.prototype.maybeRetryFillAggregateCursor = function(e) {
		var t = 0 === e.data.chirps.length,
			i = e.emptyPageRetriesMade < e.emptyPageRetriesAllowed,
			n = e.data.remainderCursor.interval.empty;
		return t && i && !n ? TD.core.defer.timeout(this.RETRY_FILL_TIMEOUT).addCallbackWith(this, function() {
			return this.fillAggregateCursorWithRetries(e.data.remainderCursor, {
				emptyPageRetriesAllowed: e.emptyPageRetriesAllowed,
				emptyPageRetriesMade: e.emptyPageRetriesMade + 1
			})
		}) : TD.core.defer.succeed(e)
	}, TD.vo.Column.prototype.extractUsableBlock = function(e) {
		var t = e.reduce(function(e, t) {
			return e.hull(t.remainderCursor.interval)
		}, b.default.empty);
		return e.map(function(e) {
			var i = e.chirps.filter(function(e) {
				return !t.contains(e)
			});
			return (e = TD.controller.feedManager.getPoller(e.requestCursor.feedKey).recalculateResult(e, i)).chirps = this.filterAllowedChirps(e.chirps), e
		}.bind(this))
	}, TD.vo.Column.prototype.mergeAndRenderChirps = function(e) {
		var t = this;
		this.ui.hideIsUpdatingMessage(), this._isUpdating && (this.ui.getChirpContainer().trigger("dataColumnFeedUpdated"), this.ui.hideChirpContainer(), this._isUpdating = !1), 0 === this.updateArray.length && this.ui.removeInfiniteScrollSpinner();
		var i = this.addItemsToIndex(e);
		return 0 === this.updateArray.length ? this.ui.showNoResultsMessage(this.temporary, y.default.isOwnCustomTimeline(this)) : this.ui.hideNoResultsMessage(), y.default.isMessageColumn(this) && (0, v.default)(document).trigger("uiMessageUnreadCount", {
			columnKey: this.model.getKey(),
			count: this.unreadMessageCount()
		}), this.updateHighWaterMarkChirp(this.updateArray[0]), (0, a.default)(function() {
			(0, v.default)(document).trigger("uiColumnChirpsChanged", {
				id: t.model.getKey()
			})
		}), i
	}, TD.vo.Column.prototype.getRenderOptions = function() {
		return {
			mediaPreviewSize: this.getMediaPreviewSize(),
			isOwnCustomTimeline: y.default.isOwnCustomTimeline(this),
			isOwnReorderableCustomTimeline: this.isOwnReorderableCustomTimeline(),
			isTemporaryColumn: this.temporary
		}
	}, TD.vo.Column.prototype.addItemsToIndex = function(e) {
		var t, i, n = [];
		e.sort(TD.util.chirpColumnSort);
		var s = {};
		e = e.filter(function(e) {
			var t = !s[e.id];
			return s[e.id] = !0, t
		});
		for (var r = 0; r < e.length; r++) i = e[r], this.updateIndex[i.id] ? this.reRenderChirp(i) : (n.push(i), this.updateIndex[i.id] = i);
		if (t = n.length) {
			for (var a = "", o = [], l = this.updateArray, c = this.getRenderOptions(); n.length > 0 || l.length > 0;)
				if (0 === n.length) o = o.concat(l), l = [];
				else if (0 === l.length) o = o.concat(n), this.addToView(a, n, c, {
				insertAtTop: !a,
				insertAtBottom: !0
			}), n = [];
			else {
				for (var u = [], d = l[0], h = n[0]; TD.util.chirpColumnSort(d, h) > 0 && n.length > 0;) i = n.shift(), u.push(i), n.length > 0 && (h = n[0]);
				u.length > 0 ? (this.addToView(a, u, c, {
					insertAtTop: !a,
					insertAtBottom: !1
				}), o = o.concat(u)) : (i = l.shift(), o.push(i), i.passFilters(this.filters) && (a = i.id))
			}
			this.updateArray = o
		}
		return this.loadCards(e), t
	}, TD.vo.Column.prototype.reRenderChirp = function(e) {
		var t = this,
			i = this.updateIndex[e.id],
			n = this.ui.getChirpContainer(),
			s = (0, v.default)(this.ui.renderChirps([e], this.getRenderOptions())),
			r = n.children('[data-key="' + e.id + '"]'),
			a = this.updateArray.indexOf(i),
			o = TD.decider.get("non_destructive_chirp_rerender");
		this.updateIndex[e.id] = e, this.updateArray[a] = e, this.updateArray.sort(TD.util.chirpColumnSort), this.detailViewComponent && this.detailViewComponent.changed(e);
		var l = this.updateArray.indexOf(e);
		if (l > 0) var c = this.updateArray[l - 1].id;
		TD.ui.columns.alterColumnContents(this.model.getKey(), r, function() {
			var e = i.quotedTweet && i.quotedTweet.hasAnimatedGif();
			if ((i.hasAnimatedGif() || e) && t.ui.unloadVideos(r), o && !y.default.isMessageColumn(t)) {
				[".js-tweet-header", ".js-tweet-text"].forEach(function(e) {
					var t = s.find(e).first();
					r.find(e).first().replaceWith(t)
				})
			} else r.remove(), 0 === l ? n.prepend(s) : n.children('[data-key="' + c + '"]').after(s)
		})
	}, TD.vo.Column.prototype.removeFromIndex = function(e, t, i) {
		for (var n = 0; n < t.length; n++) {
			var s = t[n];
			this.removeChirp(s), i && this.detailViewComponent && this.detailViewComponent.deleted(s)
		}
	}, TD.vo.Column.prototype.removeChirp = function(e) {
		var t = this.updateIndex[e.id];
		if (t) {
			for (var i = 0; i < this.updateArray.length; i++)
				if ((e = this.updateArray[i]) === t) {
					this.updateArray.splice(i, 1);
					break
				} delete this.updateIndex[e.id], this.ui.removeChirp(e.id), (0, v.default)(document).trigger("uiColumnChirpsChanged", {
				id: this.model.getKey()
			})
		}
		0 === this.updateArray.length && this.ui.showIsUpdatingMessage()
	}, TD.vo.Column.prototype.clear = function() {
		if (0 !== this.updateArray.length) {
			var e = this.updateArray[0].created.getTime();
			this.model.setClearedTimestamp(e), this.truncate(0)
		}
	}, TD.vo.Column.prototype.calculateUpwardScrollCursor = function(e) {
		var t = this.getPollers().map(function(t) {
			return {
				feedKey: t.feed.getKey(),
				interval: new b.default(0 === e.length ? b.default.negInf : b.default.excEnd(e[0]), b.default.posInf),
				bounds: {}
			}
		}, this);
		return this.makeAggregateCursor(new Date, t)
	}, TD.vo.Column.prototype.calculateInfiniteScrollCursor = function(e) {
		var t = {
				interval: b.default.whole,
				bounds: {}
			},
			i = this.getPollers().map(function(i) {
				return i.getCacheResult(t, e).remainderCursor
			}, this);
		return this.makeAggregateCursor(new Date, i)
	}, TD.vo.Column.prototype.boundedRefreshCustomTimelineFeed = function(e) {
		var t = this,
			i = this.findChirp(e.relativeToId),
			n = this.updateArray.indexOf(i),
			s = {};
		if (-1 === n) s = {
			upper: null,
			lower: null
		};
		else if (e.placeAbove) {
			var r = this.updateArray[n - 1];
			s = {
				upper: void 0 !== r ? r : null,
				lower: i
			}
		} else {
			var a = this.updateArray[n + 1];
			s = {
				upper: i,
				lower: void 0 !== a ? a : null
			}
		}
		var o = this.getChirpBoundedCursor(s.upper, s.lower),
			l = TD.decider.get("slow_collection_refresh") ? 2e3 : 100,
			c = "move" === e.actionType ? l : 0,
			u = TD.core.defer.timeout(c, o);
		return u.addCallback(function(e) {
			return t.fillAggregateCursor(e, {
				bypassCache: !0
			})
		}), u.addCallback(function(e) {
			return t.mergeAndRenderChirps(e.chirps)
		}), u
	}, TD.vo.Column.prototype.getChirpBoundedCursor = function(e, t) {
		var i = this.getPollers().map(function(i) {
			return i.getCursor({
				upper: e,
				lower: t
			})
		}, this);
		return this.makeAggregateCursor(new Date, i)
	}, TD.vo.Column.prototype.makeAggregateCursor = function(e, t) {
		return new w.default(e, t || [])
	}, TD.vo.Column.prototype.getPollers = function() {
		return this.getFeeds().map(function(e) {
			return TD.controller.feedManager.getPoller(e.getKey())
		})
	}, TD.vo.Column.prototype.removeOffscreen = function(e, t) {
		"number" != typeof t && (t = 0);
		var i = this.TARGET_COLUMN_CHIRP_LIMIT,
			n = TD.ui.columns.isScrolledToTop(this.model.getKey()),
			s = this.ui.state.slidingQueue.length;
		return ("up" === e || n) && this.discardTweetsNotInRange(0, i + s + (n ? 0 : t)), "down" === e && this.discardTweetsNotInRange(this.updateArray.length - i, this.updateArray.length), t
	}, TD.vo.Column.prototype.discardTweetsNotInRange = function(e, t) {
		e = Math.max(0, e);
		var i = this.updateArray.slice(0, e).map(TD.util.getChirpId),
			n = this.updateArray.slice(t).map(TD.util.getChirpId);
		this.annihilateChirps(i, {
			willBreakScrollPosition: !0
		}), this.annihilateChirps(n, {
			willBreakScrollPosition: !1
		}), this.updateArray = this.updateArray.slice(e, t), this.updateArray.length || this.reset()
	}, TD.vo.Column.prototype.truncate = function(e) {
		this.discardTweetsNotInRange(0, e)
	}, TD.vo.Column.prototype.annihilateChirps = function(e, t) {
		e.length && (e.forEach(function(e) {
			delete this.updateIndex[e]
		}, this), this.ui.removeChirps(e, t))
	}, TD.vo.Column.prototype.trackFillGap = function(e) {
		TD.util.metric("column:fetch:gap:fill:result", [e.chirps.length], "metric")
	}, TD.vo.Column.prototype.addToView = function(e, t, i, n) {
		var s = this;
		if (0 !== t.length) {
			var r = this.ui.getChirpContainer(),
				a = n.insertAtBottom && n.insertAtTop;
			i.doRenderMinimalist = this.updateArray.length > 0 && this.tpm > this.COLUMN_MINIMALIST_TWEET_TPM_THRESHOLD;
			var o = t.map(function(e) {
					return {
						chirp: e,
						$node: (0, v.default)(s.ui.renderChirps([e], i))
					}
				}),
				l = o.reduce(function(e, t) {
					return e.add(t.$node)
				}, (0, v.default)());
			"" === e ? a ? r.html(l) : r.prepend(l) : r.children('[data-key="' + e + '"]').after(l), n.containsNewChirps = !this.highWaterMarkChirp || t[0].belongsAbove(this.highWaterMarkChirp), a ? this.ui.fadeInChirpContainer() : this.ui.slideInChirps(o, this.temporary, this.streamRate, this.tpm, n)
		}
	}, TD.vo.Column.prototype.getMediaPreviewSize = function() {
		var e = this.model.getMediaPreviewSize();
		return e || (y.default.isMessageColumn(this) && (e = TD.vo.Column.MEDIA_PREVIEW_OFF), e = this.getSearchFilter().content.hasActiveMediaFilter() ? TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE : y.default.getColumnType(this) === y.default.columnMetaTypes.INTERACTIONS ? TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL : TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM), e
	}, TD.vo.Column.prototype.setMediaPreviewSize = function(e) {
		e !== this.getMediaPreviewSize() && this.model.setMediaPreviewSize(e), this.reloadTweets()
	}, TD.vo.Column.prototype.isSingleActionTypeColumn = function() {
		return y.default.singleActionColumnTypes.indexOf(y.default.getColumnType(this)) > -1
	}, TD.vo.Column.prototype.isOwnReorderableCustomTimeline = function() {
		var e = this.getCustomTimeline(),
			t = !!e && e.isCurationOrdering();
		return y.default.isOwnCustomTimeline(this) && t
	}, TD.vo.Column.prototype.deleteCustomTimeline = function(e, t) {
		this.getFeedsByType(y.default.feedTypes.CUSTOMTIMELINE).forEach(function(i) {
			var n = i.getMetadata().id,
				s = TD.controller.clients.getClient(i.getAccountKey()),
				r = i.getKey();
			s.deleteCustomTimeline(n, function() {
				TD.controller.feedManager.deleteFeedsWhere(function(e) {
					return e.getKey() === r
				}), e && e()
			}, function() {
				(0, C.showErrorNotification)({
					message: (0, g.default)("Error deleting Collection")
				}), t && t()
			})
		})
	}, TD.vo.Column.prototype.getCustomTimeline = function() {
		var e, t = this.getCustomTimelineFeed();
		if (t) {
			var i = t.getMetadata().id;
			e = TD.controller.clients.getClient(t.getAccountKey()).customTimelines.filter(function(e) {
				return e.id === i
			})[0]
		}
		return e
	}, TD.vo.Column.prototype.getCustomTimelineFeed = function() {
		return this.getFeedsByType(y.default.feedTypes.CUSTOMTIMELINE)[0]
	}, TD.vo.Column.prototype.updateMetadata = function(e) {
		var t, i = this.getFeeds()[0];
		this._isUpdating = !0, this.ui.showIsUpdatingMessage(), e.term = null, t = TD.storage.feedController.getOrCreateFeed(i.getType(), i.getService(), i.getAccountKey(), e), this.ui.getChirpContainer().trigger("dataColumnUpdatingFeed", {
			column: this,
			oldFeed: i,
			newFeed: t
		}), TD.controller.feedManager.replaceFeed(i, t, [this.model.getKey()])
	}, TD.vo.Column.prototype.loadFilters = function() {
		var e = new TD.vo.SearchFilter(this.model.getFilters()).getFilters();
		(0, r.default)((0, f.default)(this.filters, "id"), (0, f.default)(e, "id")) || (this.filters = e, this.reloadTweets())
	}, TD.vo.Column.prototype.reloadTweets = function() {
		this._isUpdating || (this.truncate(0), this.backfill())
	}, TD.vo.Column.prototype.reapplyFilters = function() {
		this.reloadTweets()
	}, TD.vo.Column.prototype.updateSearchFilter = function(e) {
		var t, i, n, r, a;
		if (e)
			if (y.default.isSearchColumn(this) || y.default.isEventColumn(this)) this.updateSearchFeedFilter(e);
			else {
				if ((n = this.getFeeds()[0]) && y.default.isActionsColumn(this) && !y.default.isActivityColumn(this)) {
					i = n.getType(), t = y.default.inferFeedTypeFromActionFilter(e.action);
					var o = Boolean(n.getMetadata().usersIFollowFilter),
						l = "following" === e.user.from_type;
					t === i && o === l || ((a = (0, s.default)(n.getMetadata())).usersIFollowFilter = Boolean(l), r = TD.storage.feedController.getOrCreateFeed(t, n.getService(), n.getAccountKey(), a), this.ui.getChirpContainer().trigger("dataColumnUpdatingFeed", {
						column: this,
						oldFeed: n,
						newFeed: r
					}), TD.controller.feedManager.replaceFeed(n, r, [this.model.getKey()]))
				}
				this.model.setFilters(e.toJSONObject()), this.ui.getChirpContainer().trigger("dataColumnFiltersUpdated")
			}
	}, TD.vo.Column.prototype.updateSearchFeedFilter = function(e) {
		var t = !1,
			i = this.getFeeds()[0],
			n = (0, s.default)(i.getMetadata());
		n.baseQuery || (n.baseQuery = n.term);
		var r = e.content && e.content.matching && e.content.matching !== n.baseQuery,
			a = e.content && e.content.matching !== n.baseQuery;
		(y.default.isSearchColumn(this) && r || y.default.isEventColumn(this) && a) && (t = !0, n.baseQuery = e.content.matching);
		var o = new TD.vo.SearchFilter(n.searchFilterData);
		(t || o.getQueryString() !== e.getQueryString()) && (n.searchFilterData = e.toJSONObject(), this.updateMetadata(n))
	}, TD.vo.Column.prototype.setMatchingFilter = function(e) {
		var t = this.getSearchFilter();
		t.content.setMatching(e), this.updateSearchFilter(t)
	}, TD.vo.Column.prototype.getSearchFilter = function() {
		var e, t;
		return y.default.isSearchColumn(this) || y.default.isEventColumn(this) ? (t = this.getFeeds()[0].getMetadata(), (e = new TD.vo.SearchFilter(t.searchFilterData)).content.matching || e.content.setMatching(t.baseQuery || t.term)) : e = new TD.vo.SearchFilter(this.model.getFilters()), e
	}, TD.vo.Column.prototype.hasActiveSearchFilters = function() {
		var e = this.getSearchFilter(),
			t = !this.isSingleActionTypeColumn() && !y.default.isSearchColumn(this),
			i = this.hasActiveUserFilters() || this.hasActiveContentFilters() || this.hasActiveLocationFilters() || this.hasActiveEngagementFilters() || this.hasActiveActionFilters() && t;
		return y.default.isSearchColumn(this) || (i = e.content.matching || i), Boolean(i)
	}, TD.vo.Column.prototype.hasActiveContentFilters = function() {
		var e, t = this.getSearchFilter();
		return e = y.default.isSearchColumn(this) ? t.content.getQueryString() : t.content.matching || t.content.getQueryString() || t.content.type !== TD.vo.ContentFilter.TYPE_ANYTHING, Boolean(e)
	}, TD.vo.Column.prototype.hasActiveLocationFilters = function() {
		var e = this.getSearchFilter().location.getQueryString();
		return Boolean(e)
	}, TD.vo.Column.prototype.hasActiveUserFilters = function() {
		var e = this.getSearchFilter(),
			t = e.user.getQueryString(),
			i = "following" === e.user.from_type;
		return Boolean(t || i)
	}, TD.vo.Column.prototype.hasActiveActionFilters = function() {
		var e = this.getSearchFilter(),
			t = y.default.getColumnType(this),
			i = e.action.getMaxFacets(t);
		return e.action.getActiveFacetCount(t) < i
	}, TD.vo.Column.prototype.hasActiveEngagementFilters = function() {
		var e = this.getSearchFilter().engagement.getQueryString();
		return Boolean(e)
	}, TD.vo.Column.prototype.hasFilterError = function() {
		return this.getSearchFilter().action.hasFilterError(y.default.getColumnType(this))
	}, TD.vo.Column.prototype.markAllMessagesAsRead = function() {
		y.default.isMessageColumn(this) && this.getFeeds().forEach(function(e) {
			var t = e.getAccountKey();
			TD.controller.clients.getClient(t).conversations.markAllRead()
		}, this)
	}, TD.vo.Column.prototype.hasUnreadMessages = function() {
		var e = !1;
		return y.default.isMessageColumn(this) && (e = this.updateArray.some(function(e) {
			return e.unread
		})), e
	}, TD.vo.Column.prototype.unreadMessageCount = function() {
		var e = 0;
		return y.default.isMessageColumn(this) && (e = this.getFeeds().map(function(e) {
			return TD.controller.clients.getClient(e.getAccountKey())
		}).reduce(function(e, t) {
			return e + t.conversations.getUnreadCount()
		}, 0)), e > 20 && (e = (0, g.default)("20+")), e.toString()
	}, TD.vo.Column.prototype.getChirpIndex = function(e) {
		return this.updateArray.indexOf(this.updateIndex[e])
	}, TD.vo.Column.prototype.isEmpty = function() {
		return (0, n.default)(this.updateArray)
	}
}, , function(e, t, i) {
	"use strict";
	var n = u(i(814)),
		s = u(i(276)),
		r = u(i(815)),
		a = u(i(816)),
		o = u(i(43)),
		l = u(i(184)),
		c = u(i(2));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.vo.Filter = function(e, t, i) {
		switch (this.type = e, this.value = t, this.positive = i, (0, l.default)(t) && (this.value = t.toLowerCase()), this.type) {
			case TD.vo.Filter.PHRASE:
				this.exact = !1;
				break;
			case TD.vo.Filter.SENDER:
				this.exact = !0, this.fuzzy = !0, this.filterTarget = "parent";
				break;
			case TD.vo.Filter.SOURCE:
				this.exact = !0, this.fuzzy = !1;
				break;
			case TD.vo.Filter.FOLLOWERS:
				this.exact = !1, this.range = !0;
				break;
			case TD.vo.Filter.IS_RETWEET:
				this.exact = !0;
				break;
			case TD.vo.Filter.IS_FROM_VERIFIED:
			case TD.vo.Filter.CHIRP_TYPE:
				this.exact = !0, this.filterTarget = "parent"
		}
		this.id = this.generateLocalID()
	}, TD.vo.Filter.PHRASE = "phrase", TD.vo.Filter.SENDER = "sender", TD.vo.Filter.SOURCE = "source", TD.vo.Filter.FOLLOWERS = "followers", TD.vo.Filter.IS_RETWEET = "is_retweet", TD.vo.Filter.IS_MENTION = "is_mention", TD.vo.Filter.IS_FAVORITE = "is_favorite", TD.vo.Filter.IS_FOLLOW = "is_follow", TD.vo.Filter.IS_ACTION_ON_RETWEET = "is_action_on_retweet", TD.vo.Filter.IS_QUOTED = "is_quoted", TD.vo.Filter.HAS_IMAGE = "has_image", TD.vo.Filter.HAS_VIDEO = "has_video", TD.vo.Filter.HAS_GIF = "has_gif", TD.vo.Filter.HAS_VINE = "has_vine", TD.vo.Filter.HAS_MEDIA = "has_media", TD.vo.Filter.HAS_LINK = "has_link", TD.vo.Filter.IS_FROM_VERIFIED = "verified", TD.vo.Filter.CHIRP_TYPE = "chirp_type", TD.vo.Filter.LOCATION = "location", TD.vo.Filter.SINCE_TIME = "since_time", TD.vo.Filter.UNTIL_TIME = "until_time", TD.vo.Filter.prototype.id = null, TD.vo.Filter.prototype.value = null, TD.vo.Filter.prototype.type = TD.vo.Filter.PHRASE, TD.vo.Filter.prototype.positive = !0, TD.vo.Filter.prototype.exact = !0, TD.vo.Filter.prototype.fuzzy = !1, TD.vo.Filter.prototype.range = !1, TD.vo.Filter.prototype.filterTarget = "child", TD.vo.Filter.prototype.generateLocalID = function() {
		return "filter" + TD.util.deterministicObjectHash(this.toBackendState())
	}, TD.vo.Filter.prototype.pass = function(e) {
		var t = this,
			i = (e = this._getFilterTarget(e)).getFilterableText();
		i = i ? i.toLowerCase() : null;
		var n = e.getSenders();
		n = n ? (0, o.default)(n, function(e) {
			return e.toLowerCase()
		}) : null;
		var s = e.sourceNoHTML;
		switch (s = s ? s.toLowerCase() : null, this.type) {
			case TD.vo.Filter.PHRASE:
				return this._testString(i);
			case TD.vo.Filter.SENDER:
				return this.positive ? (0, a.default)(n, function(e) {
					return t._testString(e)
				}) : (0, r.default)(n, function(e) {
					return t._testString(e)
				});
			case TD.vo.Filter.SOURCE:
				return this._testString(s);
			case TD.vo.Filter.FOLLOWERS:
				return this._testNumber(void 0);
			case TD.vo.Filter.IS_RETWEET:
				return this._testBoolean(e.isRetweetedStatus());
			case TD.vo.Filter.IS_FROM_VERIFIED:
				return this._testBoolean(e.isFromVerifiedUser());
			case TD.vo.Filter.HAS_IMAGE:
				return this._testBoolean(e.hasImage());
			case TD.vo.Filter.HAS_VIDEO:
				return this._testBoolean(e.hasVideo());
			case TD.vo.Filter.HAS_GIF:
				return this._testBoolean(e.hasAnimatedGif());
			case TD.vo.Filter.HAS_VINE:
				return this._testBoolean(e.hasVine());
			case TD.vo.Filter.HAS_MEDIA:
				return this._testBoolean(e.hasImage() || e.hasVideo());
			case TD.vo.Filter.HAS_LINK:
				return this._testBoolean(e.hasLink());
			case TD.vo.Filter.CHIRP_TYPE:
				return this._testString(e.getChirpType())
		}
		return !0
	}, TD.vo.Filter.prototype.getDisplayType = function() {
		switch (this.type) {
			case TD.vo.Filter.PHRASE:
				return "";
			case TD.vo.Filter.SENDER:
				return (0, c.default)("user");
			case TD.vo.Filter.SOURCE:
				return (0, c.default)("source");
			case TD.vo.Filter.FOLLOWERS:
				return (0, c.default)("followers");
			case TD.vo.Filter.IS_RETWEET:
				return (0, c.default)("retweets");
			case TD.vo.Filter.HAS_MEDIA:
				return (0, c.default)("media");
			case TD.vo.Filter.HAS_LINK:
				return (0, c.default)("links");
			case TD.vo.Filter.IS_FROM_VERIFIED:
				return (0, c.default)("verified")
		}
		return ""
	}, TD.vo.Filter.prototype._getFilterTarget = function(e) {
		return "parent" !== this.filterTarget && e.targetTweet ? e.targetTweet : e
	}, TD.vo.Filter.prototype._testString = function(e) {
		if (!e || !this.value) return !0;
		if (this.exact) {
			if (e === this.value) return this.positive;
			if (this.fuzzy && "@" + e === this.value) return this.positive
		} else if (-1 !== e.indexOf(this.value)) return this.positive;
		return !this.positive
	}, TD.vo.Filter.prototype._testNumber = function(e) {
		if (!(0, s.default)(e) || !(0, s.default)(this.value)) return !0;
		if (this.exact) {
			if (e === this.value) return this.positive
		} else if (this.range && e >= this.value) return this.positive;
		return !this.positive
	}, TD.vo.Filter.prototype._testBoolean = function(e) {
		return !(0, n.default)(e) || !(0, n.default)(this.value) || (e === this.value ? this.positive : !this.positive)
	}, TD.vo.Filter.prototype.toBackendState = function() {
		return {
			type: this.type,
			value: this.value,
			positive: this.positive,
			exact: this.exact,
			fuzzy: this.fuzzy,
			range: this.range
		}
	}, TD.vo.Filter.prototype.fromBackendState = function(e) {
		this.type = e.type, this.value = e.value, this.positive = e.positive, this.exact = e.exact, this.fuzzy = e.fuzzy, this.range = e.range, this.id = this.generateLocalID()
	}
}, , , , function(e, t, i) {
	"use strict";
	TD.vo.SearchFilter = function(e) {
		this.fromJSONObject(e)
	}, TD.vo.SearchFilter.prototype.action = null, TD.vo.SearchFilter.prototype.content = null, TD.vo.SearchFilter.prototype.location = null, TD.vo.SearchFilter.prototype.engagement = null, TD.vo.SearchFilter.prototype.user = null, TD.vo.SearchFilter.prototype.toJSONObject = function() {
		return {
			action: this.action.toJSONObject(),
			content: this.content.toJSONObject(),
			location: this.location.toJSONObject(),
			engagement: this.engagement.toJSONObject(),
			user: this.user.toJSONObject()
		}
	}, TD.vo.SearchFilter.prototype.fromJSONObject = function(e) {
		e = e || {}, this.action = new TD.vo.ActionFilter(e.action), this.content = new TD.vo.ContentFilter(e.content), this.location = new TD.vo.LocationFilter(e.location), this.engagement = new TD.vo.EngagementFilter(e.engagement), this.user = new TD.vo.UserFilter(e.user)
	}, TD.vo.SearchFilter.prototype.getQueryString = function() {
		return [this.content.getQueryString(), this.location.getQueryString(), this.engagement.getQueryString(), this.user.getQueryString()].join(" ").trim()
	}, TD.vo.SearchFilter.prototype.getFilters = function() {
		var e = this.action.getFilters();
		return e = (e = (e = (e = e.concat(this.content.getFilters())).concat(this.location.getFilters())).concat(this.engagement.getFilters())).concat(this.user.getFilters())
	}
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = d(i(44)),
		o = d(i(9)),
		l = d(i(162)),
		c = d(i(2)),
		u = d(i(21));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = (n = {}, (0, l.default)(n, "showMentions", !0), (0, l.default)(n, "showRetweets", !0), (0, l.default)(n, "showFavorites", !0), (0, l.default)(n, "showFollowers", !0), (0, l.default)(n, "showLists", !0), (0, l.default)(n, "showActionsOnRetweets", !0), (0, l.default)(n, "showQuoted", !0), (0, l.default)(n, "showInteractionsOnMentioned", !0), (0, l.default)(n, "showInteractionsOnTagged", !0), n),
		m = (s = {}, (0, l.default)(s, "showFavorites", !0), (0, l.default)(s, "showFollowers", !0), (0, l.default)(s, "showLists", !0), s),
		f = (0, o.default)({}, m, h),
		p = (r = {}, (0, l.default)(r, "showMentions", !0), (0, l.default)(r, "showRetweets", !0), (0, l.default)(r, "showFavorites", !0), (0, l.default)(r, "showFollowers", !0), (0, l.default)(r, "showLists", !0), (0, l.default)(r, "showActionsOnRetweets", !0), (0, l.default)(r, "showQuoted", !0), (0, l.default)(r, "showInteractionsOnMentioned", !0), (0, l.default)(r, "showInteractionsOnTagged", !0), r),
		g = (0, a.default)(f).reduce(function(e, t) {
			return (0, o.default)({}, e, (0, l.default)({}, t, !1))
		}, {});
	TD.vo.ActionFilter = function(e) {
		this.fromJSONObject(e)
	}, TD.vo.ActionFilter.prototype.toJSONObject = function() {
		return (0, o.default)({}, p, this.state)
	}, TD.vo.ActionFilter.prototype.fromJSONObject = function(e) {
		e && (this.state = this.mergeState({}, (0, o.default)({}, g, e)))
	}, TD.vo.ActionFilter.prototype.mergeState = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
			t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
		return (0, a.default)(t).filter(function(e) {
			return f[e]
		}).reduce(function(e, i) {
			return (0, o.default)({}, e, (0, l.default)({}, i, Boolean(t[i])))
		}, e)
	}, TD.vo.ActionFilter.prototype.getActiveFacetCount = function(e) {
		var t = this.toJSONObject(),
			i = this.getAvailableFacets(e);
		return (0, a.default)(i).reduce(function(e, i) {
			return e + (t[i] ? 1 : 0)
		}, 0)
	}, TD.vo.ActionFilter.prototype.hasFilterError = function(e) {
		return 0 === this.getActiveFacetCount(e)
	}, TD.vo.ActionFilter.prototype.isNotificationsColumn = function(e) {
		return e === u.default.columnMetaTypes.INTERACTIONS || (e === u.default.columnMetaTypes.FOLLOWERS || e === u.default.columnMetaTypes.MENTIONS)
	}, TD.vo.ActionFilter.prototype.getAvailableFacets = function(e) {
		var t, i = this.isNotificationsColumn(e),
			n = (t = {}, (0, l.default)(t, "showActionsOnRetweets", TD.decider.get("action_retweeted_retweet") || TD.decider.get("action_favorited_retweet")), (0, l.default)(t, "showLists", !TD.decider.get("notification_disable_list_events")), (0, l.default)(t, "showQuoted", TD.decider.get("action_quoted_tweet")), t),
			s = i ? (0, o.default)({}, h, n) : (0, o.default)({}, m);
		return (0, a.default)(s).filter(function(e) {
			return Boolean(s[e])
		}).reduce(function(e, t) {
			return (0, o.default)({}, e, (0, l.default)({}, t, !0))
		}, {})
	}, TD.vo.ActionFilter.prototype.getMaxFacets = function(e) {
		var t = this.getAvailableFacets(e);
		return (0, a.default)(t).length
	}, TD.vo.ActionFilter.prototype.getSummaryText = function(e) {
		var t, i, n = [],
			s = this.getMaxFacets(e),
			r = this.getActiveFacetCount(e),
			a = this.getAvailableFacets(e),
			o = this.toJSONObject();
		return 0 === r ? t = (0, c.default)("Filter error") : r === s ? t = "" : r === s - 1 && e !== u.default.columnMetaTypes.ACTIVITY ? (!o.showMentions && a.showMentions && (t = (0, c.default)("All except mentions")), !o.showRetweets && a.showRetweets && (t = (0, c.default)("All except Retweets")), !o.showFavorites && a.showFavorites && (t = (0, c.default)("All except likes")), !o.showFollowers && a.showFollowers && (t = (0, c.default)("All except followers")), !o.showLists && a.showLists && (t = (0, c.default)("All except Lists")), !o.showActionsOnRetweets && a.showActionsOnRetweets && (t = (0, c.default)("All except actions on my Retweets")), !o.showQuoted && a.showQuoted && (t = (0, c.default)("All except quoted Tweets")), !o.showInteractionsOnMentioned && a.showInteractionsOnMentioned && (t = (0, c.default)("All except Tweets mentioning me")), !o.showInteractionsOnTagged && a.showInteractionsOnTagged && (t = (0, c.default)("All except Tweets tagging me"))) : (o.showMentions && a.showMentions && n.push((0, c.default)("mentions")), o.showQuoted && a.showQuoted && n.push((0, c.default)("quoted Tweets")), o.showInteractionsOnMentioned && a.showInteractionsOnMentioned && n.push((0, c.default)("including Tweets mentioning me")), o.showInteractionsOnTagged && a.showInteractionsOnTagged && n.push((0, c.default)("including Tweets tagging me")), o.showRetweets && a.showRetweets && n.push((0, c.default)("Retweets")), o.showFavorites && a.showFavorites && n.push((0, c.default)("likes")), o.showFollowers && a.showFollowers && n.push((0, c.default)("followers")), o.showLists && a.showLists && n.push((0, c.default)("Lists")), o.showActionsOnRetweets && a.showActionsOnRetweets && n.push((0, c.default)("actions on my Retweets")), i = n.pop(), 1 === r ? t = (0, c.default)("{{{actionType}}} only", {
			actionType: i
		}) : (n = n.join(", "), t = (0, c.default)("{{{actionTypes}}} and {{{lastActionType}}}", {
			actionTypes: n,
			lastActionType: i
		}))), t
	}, TD.vo.ActionFilter.prototype.getFilters = function() {
		var e, t = [],
			i = this.toJSONObject();
		return i.showMentions || (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.MENTION, !1), t.push(e)), i.showRetweets || (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.RETWEET, !1), t.push(e)), i.showFavorites || (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.FAVORITE, !1), t.push(e)), i.showFollowers || (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.FOLLOW, !1), t.push(e)), i.showLists || (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.LIST_CREATED, !1), t.push(e), e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.LIST_MEMBER_ADDED, !1), t.push(e)), i.showActionsOnRetweets || (TD.decider.get("action_retweeted_retweet") && (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.RETWEETED_RETWEET, !1), t.push(e)), TD.decider.get("action_favorited_retweet") && (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.FAVORITED_RETWEET, !1), t.push(e))), i.showInteractionsOnMentioned || (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.FAVORITED_MENTION, !1), t.push(e), e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.RETWEETED_MENTION, !1), t.push(e)), i.showInteractionsOnTagged || (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.FAVORITED_MEDIA, !1), t.push(e), e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.RETWEETED_MEDIA, !1), t.push(e)), !i.showQuoted && TD.decider.get("action_quoted_tweet") && (e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.QUOTE, !1), t.push(e), e = new TD.vo.Filter(TD.vo.Filter.CHIRP_TYPE, TD.services.TwitterAction.QUOTED_TWEET, !1), t.push(e)), t
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.vo.EngagementFilter = function(e) {
		this.fromJSONObject(e)
	}, TD.vo.EngagementFilter.prototype.minReplies = 0, TD.vo.EngagementFilter.prototype.minRetweets = 0, TD.vo.EngagementFilter.prototype.minFavorites = 0, TD.vo.EngagementFilter.prototype.setMinReplies = function(e) {
		this.minReplies = parseInt(e, 10)
	}, TD.vo.EngagementFilter.prototype.setMinRetweets = function(e) {
		this.minRetweets = parseInt(e, 10)
	}, TD.vo.EngagementFilter.prototype.setMinFavorites = function(e) {
		this.minFavorites = parseInt(e, 10)
	}, TD.vo.EngagementFilter.prototype.toJSONObject = function() {
		return {
			minReplies: this.minReplies,
			minRetweets: this.minRetweets,
			minFavorites: this.minFavorites
		}
	}, TD.vo.EngagementFilter.prototype.fromJSONObject = function(e) {
		e && (this.setMinReplies(e.minReplies), this.setMinRetweets(e.minRetweets), this.setMinFavorites(e.minFavorites))
	}, TD.vo.EngagementFilter.prototype.getQueryString = function() {
		var e = [];
		return this.minReplies > 0 && e.push("min_replies:" + this.minReplies), this.minRetweets > 0 && e.push("min_retweets:" + this.minRetweets), this.minFavorites > 0 && e.push("min_faves:" + this.minFavorites), e.join(" ")
	}, TD.vo.EngagementFilter.prototype.getSummaryText = function() {
		var e, t = [];
		switch (this.minReplies > 0 && t.push({
				count: this.minReplies,
				label: (0, r.default)("replies")
			}), this.minRetweets > 0 && t.push({
				count: this.minRetweets,
				label: (0, r.default)("Retweets")
			}), this.minFavorites > 0 && t.push({
				count: this.minFavorites,
				label: (0, r.default)("likes")
			}), t.length) {
			case 0:
				e = "";
				break;
			case 1:
				e = (0, r.default)("at least {{#0}}{{count}} {{label}}{{/0}}", t);
				break;
			case 2:
				e = (0, r.default)("at least {{#0}}{{count}} {{label}}{{/0}} and {{#1}}{{count}} {{label}}{{/1}}", t);
				break;
			case 3:
				e = (0, r.default)("at least {{#0}}{{count}} {{label}}{{/0}}, {{#1}}{{count}} {{label}}{{/1}} and {{#2}}{{count}} {{label}}{{/2}}", t)
		}
		return e
	}, TD.vo.EngagementFilter.prototype.getFilters = function() {
		return []
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.vo.UserFilter = function(e) {
		this.fromJSONObject(e)
	}, TD.vo.UserFilter.FROM_ALL = "all", TD.vo.UserFilter.FROM_USER = "user", TD.vo.UserFilter.FROM_VERIFIED = "verified", TD.vo.UserFilter.FROM_LIST = "list", TD.vo.UserFilter.FROM_FOLLOWING = "following", TD.vo.UserFilter.prototype.from_type = null, TD.vo.UserFilter.prototype.from_name = null, TD.vo.UserFilter.prototype.mention_name = null, TD.vo.UserFilter.prototype.setFrom = function(e, t) {
		t && e !== TD.vo.UserFilter.FROM_VERIFIED && e !== TD.vo.UserFilter.FROM_ALL || (t = ""), this.from_type = e, this.from_name = TD.util.deMentionify(t)
	}, TD.vo.UserFilter.prototype.setMentioned = function(e) {
		this.mention_name = e || "", this.mention_name = TD.util.deMentionify(this.mention_name)
	}, TD.vo.UserFilter.prototype.toJSONObject = function() {
		return {
			from_type: this.from_type,
			from_name: this.from_name,
			mention_name: this.mention_name
		}
	}, TD.vo.UserFilter.prototype.fromJSONObject = function(e) {
		e && (this.setFrom(e.from_type, e.from_name), this.setMentioned(e.mention_name))
	}, TD.vo.UserFilter.prototype.getQueryString = function() {
		var e = [];
		switch (this.from_type) {
			case TD.vo.UserFilter.FROM_USER:
				e.push("from:" + this.from_name);
				break;
			case TD.vo.UserFilter.FROM_VERIFIED:
				e.push("filter:verified");
				break;
			case TD.vo.UserFilter.FROM_LIST:
				e.push("list:" + this.from_name)
		}
		return this.mention_name && e.push("+@" + this.mention_name), e.join(" ")
	}, TD.vo.UserFilter.prototype.getSummaryText = function() {
		var e = [];
		switch (this.from_type) {
			case TD.vo.UserFilter.FROM_USER:
				TD.storage.accountController.getAccountFromUsername(this.from_name).length > 0 ? e.push((0, r.default)("by me (@{{{name}}})", {
					name: this.from_name
				})) : e.push((0, r.default)("by @{{{name}}}", {
					name: this.from_name
				}));
				break;
			case TD.vo.UserFilter.FROM_VERIFIED:
				e.push((0, r.default)("by verified users"));
				break;
			case TD.vo.UserFilter.FROM_LIST:
				e.push((0, r.default)("by members of @{{{name}}}", {
					name: this.from_name
				}));
				break;
			case TD.vo.UserFilter.FROM_FOLLOWING:
				e.push((0, r.default)("by users I follow"))
		}
		return this.mention_name && (TD.storage.accountController.getAccountFromUsername(this.mention_name).length > 0 ? e.push((0, r.default)("mentioning me (@{{{name}}})", {
			name: this.mention_name
		})) : e.push((0, r.default)("mentioning @{{{name}}}", {
			name: this.mention_name
		}))), e.join(", ")
	}, TD.vo.UserFilter.prototype.getFilters = function() {
		var e, t = [];
		switch (this.mention_name && (e = new TD.vo.Filter(TD.vo.Filter.PHRASE, TD.util.atMentionify(this.mention_name), !0), t.push(e)), this.from_type) {
			case TD.vo.UserFilter.FROM_USER:
				e = new TD.vo.Filter(TD.vo.Filter.SENDER, this.from_name, !0), t.push(e);
				break;
			case TD.vo.UserFilter.FROM_VERIFIED:
				e = new TD.vo.Filter(TD.vo.Filter.IS_FROM_VERIFIED, !0, !0), t.push(e)
		}
		return t
	}
}, function(e, t, i) {
	"use strict";
	var n = c(i(110)),
		s = c(i(99)),
		r = c(i(15)),
		a = c(i(2)),
		o = c(i(0)),
		l = i(152);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.cache.lists = function() {
		var e = {},
			t = {},
			i = (0, l.makeCommandBag)();

		function c() {
			i.removeAll();
			var e = t.getAll().filter(function(e) {
				return e.isOwnList()
			}).map(function(e) {
				return {
					label: (0, a.default)("Edit List — “{{listName}}” by @{{screenName}}", {
						listName: e.name,
						screenName: e.user.screenName
					}),
					apply: function() {
						return (0, o.default)(document).trigger("uiShowEditListMembers", {
							list: e
						})
					}
				}
			});
			i.add(e)
		}

		function u(t) {
			var i = e[t] || {};
			return e[t] = i, i
		}
		return t.add = function(e) {
			u(e.account.getKey())[e.id] = e, TD.controller.feedManager.fixListFeeds(), TD.cache.names.updateScreenName(e.user.id, e.user.screenName), TD.cache.names.updateListName(e.id, e.name), c()
		}, t.unsubscribe = function(e) {
			delete u(e.account.getKey())[e.id], c()
		}, t.purge = function(t) {
			var i;
			if ((0, r.default)(e, function(e, n) {
					i = i || e[t], delete e[t]
				}), i) {
				var n = TD.storage.Feed.generateKeyFor(i.account.getKey(), "list", {
					listId: t,
					ownerId: i.user.id
				});
				TD.controller.feedManager.deleteFeedsWhere(function(e) {
					return e.getKey() === n
				})
			}
			c()
		}, t.getListsFor = function(e) {
			return (0, s.default)(u(e))
		}, t.find = function(t, i, n, s, a) {
			var o, l, c;
			return i && n && (o = "@" + i.toLowerCase() + "/" + n.toLowerCase()), (0, r.default)(e, function(e, i) {
				a && a !== i || (0, r.default)(e, function(e, i) {
					(t && e.id === t || e.fullName.toLowerCase() === o) && (e.isOwnList() ? l = e : c = e)
				})
			}), s ? l : l || c
		}, t.getAll = function() {
			var t = {};
			return (0, r.default)(e, function(e, i) {
				(0, n.default)(t, e)
			}), (0, s.default)(t)
		}, t
	}()
}, , , , , , , function(e, t, i) {
	"use strict";
	var n, s = c(i(15)),
		r = c(i(85)),
		a = c(i(0)),
		o = c(i(21)),
		l = i(47);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.cache.names = ((n = {
		SECONDS_IN_ONE_WEEK: 604800,
		_cache: null,
		init: function() {
			n._cache = TD.settings.getNameCache(), n._cache.users = n._cache.users || {}, n._cache.lists = n._cache.lists || {}, n._cache.customTimelines = n._cache.customTimelines || {}, a.default.subscribe("/storage/client/column_order_changed", function() {
				n.prune(), n.commit()
			}), a.default.subscribe("/storage/column/feeds_changed", function(e, t, i) {
				var s = TD.storage.columnController.get(i.getKey());
				s && !s.temporary && n.commit()
			})
		},
		getScreenName: function(e) {
			var t, i, s = TD.util.unixTime(new Date),
				r = TD.storage.Account.generateKeyFor("twitter", e),
				a = TD.storage.accountController.get(r);
			return a ? (i = TD.util.atMentionify(a.getUsername()), n.addScreenName(e, i)) : ((t = n._cache.users[e]) && (i = t.name), (!t || t.timestamp + n.SECONDS_IN_ONE_WEEK < s) && n._fetchUser(e)), i
		},
		getListName: function(e, t) {
			var i, s, r = TD.util.unixTime(new Date),
				a = TD.cache.lists.find(e, "", "");
			return a ? (i = a.name, n.addListName(e, i)) : ((s = n._cache.lists[e]) && (i = s.name), (!s || s.timestamp + n.SECONDS_IN_ONE_WEEK < r) && n._fetchList(e, t)), i
		},
		getCustomTimelineName: function(e, t) {
			var i, s, r = TD.util.unixTime(new Date);
			return (s = n._cache.customTimelines[e]) && (i = s.name), (!s || s.timestamp + n.SECONDS_IN_ONE_WEEK < r) && n._fetchCustomTimeline(e, t), i
		},
		addScreenName: function(e, t) {
			if (n._cache) {
				var i = {},
					s = n._cache.users[e],
					r = TD.util.atMentionify(t),
					a = !s || r !== s.name;
				i.name = r, i.timestamp = TD.util.unixTime(new Date), n._cache.users[e] = i, a && (n.commit(), TD.storage.notification.notify("/cache/names/change"))
			}
		},
		addListName: function(e, t) {
			if (n._cache) {
				var i = {},
					s = n._cache.lists[e],
					r = !s || t !== s.name;
				i.name = t, i.timestamp = TD.util.unixTime(new Date), n._cache.lists[e] = i, r && (n.commit(), TD.storage.notification.notify("/cache/names/change"))
			}
		},
		addCustomTimelineName: function(e, t) {
			if (n._cache && t) {
				var i = {},
					s = n._cache.customTimelines[e],
					r = !s || t !== s.name;
				i.name = t, i.timestamp = TD.util.unixTime(new Date), n._cache.customTimelines[e] = i, r && (n.commit(), TD.storage.notification.notify("/cache/names/change"))
			}
		},
		updateScreenName: function(e, t) {
			n._cache && (n._cache.users[e] && n.addScreenName(e, t))
		},
		updateListName: function(e, t) {
			n._cache && (n._cache.lists[e] && n.addScreenName(e, t))
		},
		updateCustomTimelineName: function(e, t) {
			n._cache && (n._cache.customTimelines[e] && n.addCustomTimelineName(e, t))
		},
		_fetchUser: function(e) {
			TD.cache.twitterUsers.getById(e).addCallback(function(t) {
				n.addScreenName(e, t.screenName)
			})
		},
		_fetchList: function(e, t) {
			var i = TD.storage.Account.generateKeyFor("twitter", t);
			(0, l.getClientByAccountKeyOrDefault)(i).getList(e, null, null, function(t) {
				n.addListName(e, t.name)
			})
		},
		_fetchCustomTimeline: function(e, t) {
			var i = TD.storage.Account.generateKeyFor("twitter", t);
			(0, l.getClientByAccountKeyOrDefault)(i).getCustomTimeline(e, function(t) {
				n.addCustomTimelineName(e, t.name)
			})
		}
	}).commit = (0, r.default)(function() {
		n.prune(), TD.settings.setNameCache(n._cache)
	}, 100), n.prune = function() {
		n._cache = n._getPrunedCache()
	}, n._getPrunedCache = function() {
		var e = {
				users: {},
				lists: {},
				customTimelines: {}
			},
			t = TD.storage.feedController.getAll();
		return (0, s.default)(t, function(t) {
			var i, s, r, a = t.getType(),
				l = t.getMetadata();
			if (l) {
				switch (a) {
					case o.default.feedTypes.CUSTOMTIMELINE:
						r = l.id, i = l.ownerId;
						break;
					case o.default.feedTypes.LIST:
						s = l.listId, i = l.ownerId;
						break;
					default:
						i = l.id
				}
				i && n._cache.users[i] && (e.users[i] = n._cache.users[i]), r && n._cache.customTimelines[r] && (e.customTimelines[r] = n._cache.customTimelines[r]), s && n._cache.lists[s] && (e.lists[s] = n._cache.lists[s])
			}
		}), e
	}, n)
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = l(i(15)),
		o = l(i(0));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.clients = (n = {}, s = {}, r = function(e, t) {
		switch (e) {
			case "twitter":
				return new TD.services.TwitterClient(t);
			case "tweetdeck":
				return new TD.services.TweetDeckClient
		}
	}, {
		init: function() {
			o.default.subscribe("/storage/account/new", function(e) {
				TD.controller.clients.initialiseClients()
			}), (0, o.default)(document).on("dataContributees", this.handleContributees.bind(this)).on("dataContributeeAcceptSuccess", this.handleContributeeInviteAcceptSuccess.bind(this)), TD.controller.clients.initialiseClients()
		},
		initialiseClients: function() {
			for (var e, t = TD.storage.accountController.getPostingAccounts(), i = 0; i < t.length; i++)(e = n[t[i].getKey()]) || (e = r(t[i].getType(), t[i]), n[t[i].getKey()] = e);
			n.tweetdeck || (n.tweetdeck = new TD.services.TweetDeckClient), TD.controller.scheduler.schedulePeriodicTask(1200, TD.controller.clients.refreshRetweetBlockLists), TD.controller.scheduler.schedulePeriodicTask(300, this.fetchContributees.bind(this), !0), (0, o.default)(document).trigger("dataClientsUpdated")
		},
		getClient: function(e) {
			return n[e]
		},
		getTDClient: function() {
			return n.tweetdeck
		},
		getClientsByService: function(e) {
			var t = [];
			for (var i in n) n[i].type == e && t.push(n[i]);
			return t
		},
		getPreferredClient: function(e) {
			var t = TD.storage.accountController.getPreferredAccount(e);
			return t ? this.getClient(t.getKey()) : void 0
		},
		addClient: function(e, t) {
			t || (t = new TD.storage.Account).setType(e);
			var i = TD.controller.auth.create(e, t),
				n = this.getClientsByService(e).length > 0,
				s = function() {
					i.becomeContributor().addCallbackWith(this, function() {
						TD.storage.accountController.manage(t), this.initialiseClients()
					})
				}.bind(this);
			(0, o.default)(document).trigger("metric", {
				key: "account:manage:start"
			}), i.start(t, s, n)
		},
		removeClient: function(e) {
			var t = TD.storage.accountController.get(e);
			t && (n[e] && n[e].cleanUp && n[e].cleanUp(), delete n[e], TD.controller.feedManager.deleteFeedsWhere(function(t) {
				return t.getAccountKey() === e
			}), TD.storage.accountController.blacklistAccount(t), (0, o.default)(document).trigger("dataClientsUpdated"))
		},
		refreshRetweetBlockLists: function() {
			if (TD.util.shouldStream()) {
				var e = TD.controller.clients.getClientsByService("twitter");
				(0, a.default)(e, function(e) {
					e.populateRetweetBlockList()
				})
			}
		},
		fetchContributees: function() {
			var e = TD.storage.store.getTwitterLoginAccount();
			e && (0, o.default)(document).trigger("uiNeedsContributees", {
				accountKey: e.getKey()
			})
		},
		addExpectedNewContributeeId: function(e) {
			e || (e = "*"), s[e] = !0
		},
		handleContributeeInviteAcceptSuccess: function(e, t) {
			TD.storage.accountController.manageContributee(t).addCallback(function() {
				(0, o.default)(document).trigger("dataContributeeInviteSuccess", t)
			})
		},
		handleContributees: function(e, t) {
			var i = TD.storage.store.getTwitterLoginAccount();
			if (t.accountKey === i.getKey()) {
				var n = [];
				t.contributees.reduce(function(e, t) {
					var i = TD.storage.accountController.isContributeeManaged(t),
						r = s[t.id] || s["*"];
					return i || r ? e.concat([t]) : (n.push(t), e)
				}, []).forEach(function(e) {
					delete s["*"], delete s[e.id], TD.storage.accountController.manageContributee(e)
				}), n.concat(t.pending).forEach(function(e) {
					(0, o.default)(document).trigger("dataContributeeNotManaged", e)
				})
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = o(i(46)),
		r = o(i(15)),
		a = o(i(0));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.scheduler = n = {
		QUERY_INTERVAL: 1e3,
		SLEEP_THRESHOLD: 6e4,
		_tasks: {},
		_lastTickTime: null,
		tick: function() {
			var e = this;
			setTimeout(function() {
				try {
					e._handleTick()
				} finally {
					e.tick()
				}
			}, this.QUERY_INTERVAL)
		},
		init: function() {
			this.tick(), n._lastTickTime = Date.now(), this._jQueryCleanupTaskId = TD.controller.scheduler.schedulePeriodicTask(600, function() {
				a.default.fragments = {}
			})
		},
		_handleTick: function() {
			var e = Date.now(),
				t = e - n._lastTickTime - n.QUERY_INTERVAL;
			n._lastTickTime = e, t > n.SLEEP_THRESHOLD && (0, a.default)(document).trigger("dataAppWokenFromSleep", {
				lateness: t
			}), (0, r.default)(n._tasks, function(t) {
				e - t.cycleStartTime > t.period && (n._fireTask(t), t.cycleStartTime = Date.now())
			})
		},
		_fireTask: function(e) {
			try {
				e.callback()
			} catch (t) {
				console.log("Error in periodic task:", e, "Error:", t)
			}
		},
		schedulePeriodicTask: function(e, t, i) {
			var n = {
				id: (0, s.default)("sched_task_"),
				callback: t,
				period: 1e3 * e,
				cycleStartTime: Date.now()
			};
			return i && this._fireTask(n), this._tasks[n.id] = n, n.id
		},
		updatePeriodicTask: function(e, t, i) {
			var n = this._tasks[e];
			n && (n.period = 1e3 * t, n.callback = i || n.callback)
		},
		restartPeriodicTask: function(e) {
			var t = this._tasks[e];
			t && (t.cycleStartTime = Date.now())
		},
		removePeriodicTask: function(e) {
			delete this._tasks[e]
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = p(i(44)),
		s = p(i(2154)),
		r = p(i(63)),
		a = p(i(516)),
		o = p(i(48)),
		l = p(i(13)),
		c = p(i(43)),
		u = p(i(15)),
		d = p(i(77)),
		h = p(i(0)),
		m = i(518),
		f = i(37);

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.feedScheduler = function() {
		var e = {
			FEED_TYPE_TO_MINIMUM_REFRESH_PERIOD: {
				home: 4,
				favorites: 4,
				search: 15,
				usertweets: 5,
				networkactivity: 45,
				scheduled: 960
			}
		};
		f.activityValuePolling$.subscribe(function(t) {
			var i = Math.max(parseInt(t, 10), 15);
			e.FEED_TYPE_TO_MINIMUM_REFRESH_PERIOD.networkactivity = i
		}), f.contentUsertweetsRestPolling$.subscribe(function() {
			var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 5;
			((t = parseInt(t, 10)) < 5 || (0, s.default)(t)) && (t = 5), e.FEED_TYPE_TO_MINIMUM_REFRESH_PERIOD.usertweets = t
		}), e.DEFAULT_MINIMUM_REFRESH_PERIOD = 10, e.DEFAULT_REFRESH_PERIOD = 45, e.THROTTLED_REFRESH_PERIOD = 120, e._activeColumns = {}, e._temporaryColumns = {}, e._taskIndex = {}, e.getMinimumRefreshPeriod = function(e) {
			return this.FEED_TYPE_TO_MINIMUM_REFRESH_PERIOD[e] ? this.FEED_TYPE_TO_MINIMUM_REFRESH_PERIOD[e] : this.DEFAULT_MINIMUM_REFRESH_PERIOD
		}, e.init = function() {
			h.default.subscribe("/storage/column/feeds_changed", function(t, i, n) {
				var s = n.getKey(),
					r = TD.controller.columnManager.get(s);
				r && e.addColumn(r, !r.temporary)
			}), h.default.subscribe("/storage/column/change", function(t) {
				var i = t.getKey(),
					n = TD.controller.columnManager.get(i);
				if (n) {
					var s = n.model.getFeedKeys(),
						r = t.getFeedKeys();
					(0, d.default)(s, r) || e.addColumn(n, !n.temporary)
				}
			}), (0, h.default)(document).on("dataRateLimit", this._handleRateLimitData.bind(this)), (0, h.default)(document).on("dataThrottleFeed", this._handleThrottleFeed.bind(this)), (0, h.default)(document).on("dataUserStreamStatus", this._handleStreamStatus.bind(this)), (0, h.default)(document).on("dataAppWokenFromSleep", this._handleAppWoken.bind(this)), (0, h.default)(document).on("dataTwitterAccountAccessEnabled", this._handeAccessEnabled.bind(this))
		}, e._getTask = function(e, t) {
			if (this._taskIndex[e]) return this._taskIndex[e][t]
		}, e._setTask = function(e, t, i) {
			this._taskIndex[e] = this._taskIndex[e] || {}, this._taskIndex[e][t] = i
		}, e._handleRateLimitData = function(e, t) {
			var i = this._getTask(t.accountKey, t.feedType);
			i && (i.rateLimitData = t.rateLimitData, this._setPeriodicTask(i))
		}, e._handleThrottleFeed = function(e, t) {
			var i = this._getTask(t.accountKey, t.feedType);
			i && i.isThrottled !== t.doThrottle && (i.isThrottled = t.doThrottle, this._setPeriodicTask(i))
		}, e._handleStreamStatus = function(t, i) {
			var n = this._taskIndex[i.accountKey];
			(0, u.default)(n, e._setPeriodicTask.bind(this))
		}, e._handleAppWoken = function(e, t) {
			(0, u.default)(this._taskIndex, function(e) {
				(0, u.default)(e, this._resetTask)
			}.bind(this)), TD.controller.stats.appWokenFromSleep(t.lateness)
		}, e._handeAccessEnabled = function(e, t) {
			this._taskIndex[t.accountKey] && (0, u.default)(this._taskIndex[t.accountKey], this._resetTask, this)
		}, e._resetTask = function(e) {
			e.doTask({
				reset: !0
			}), TD.controller.scheduler.restartPeriodicTask(e.taskId)
		}, e.addColumn = function(e, t) {
			var i = t.firstLoad,
				n = void 0 !== i && i,
				s = e.getFeeds(),
				r = e.model.getKey();
			this._activeColumns[r] && this.removeColumn(r), this._activeColumns[r] = e, e.temporary && (this._temporaryColumns[r] = e);
			for (var a = 0; a < s.length; a++) TD.controller.feedManager.addFeed(s[a]), this._addFeed(s[a]);
			e.backfill({
				firstLoad: n
			})
		}, e._addFeed = function(e) {
			var t, i = e.getAccountKey(),
				n = e.getType(),
				s = e.getKey();
			(t = this._getTask(i, n) || {
				accountKey: i,
				feedType: n,
				feeds: {},
				taskId: null,
				rateLimitData: null,
				isThrottled: !1,
				doTask: null
			}).doTask || (t.doTask = this._doTaskFactory(t)), this._setTask(i, n, t), t.feeds[s] = e, this._setPeriodicTask(t)
		}, e._setPeriodicTask = function(e) {
			var t = void 0;
			try {
				t = this._calculatePeriod(e)
			} catch (e) {
				t = this.DEFAULT_REFRESH_PERIOD
			}
			e.taskId ? TD.controller.scheduler.updatePeriodicTask(e.taskId, t) : e.taskId = TD.controller.scheduler.schedulePeriodicTask(t, e.doTask, !1)
		}, e._doTaskFactory = function(i) {
			return function(n) {
				var s = (0, c.default)(i.feeds, function(i, s) {
					return t(i.state), e._refreshFeed(s, n)
				});
				return TD.core.defer.gatherResults(s)
			}
		};
		var t = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = (0, l.default)(e, "type"),
				i = (0, l.default)(e, "metadata.term");
			"search" === t && ((0, m.trackQuerySupportedByContent)(i) || (0, h.default)(document).trigger("metric", {
				key: "project-content:unsupported-search-query-polling"
			}))
		};
		return e._calculatePeriod = function(e) {
			var t = void 0;
			if (e.rateLimitData) {
				var i = e.rateLimitData.rateLimitRemaining - 10,
					s = e.rateLimitData.rateLimitReset + 10 - Date.now() / 1e3,
					r = i / (0, n.default)(e.feeds).length;
				t = s > 0 && i > 0 ? Math.min(s / r, s) : s <= 0 ? this.DEFAULT_REFRESH_PERIOD : s
			} else t = this.DEFAULT_REFRESH_PERIOD;
			var a = Math.round(t),
				o = Math.min(Math.max(a, this.getMinimumRefreshPeriod(e.feedType)), 900);
			TD.util.metric("feed_scheduler:period:bounded:" + e.feedType, [o], "metric");
			var l = e.isThrottled || TD.decider.get("throttle_polling_period") ? Math.max(o, this.THROTTLED_REFRESH_PERIOD) : o,
				c = TD.decider.get("faster_notifications") && "interactions" === e.feedType ? Math.min(15, l) : l;
			return TD.util.metric("feed_scheduler:period:faster:" + e.feedType, [c], "metric"), TD.util.metric("feed_scheduler:period:throttled:" + e.feedType, [l], "metric"), c
		}, e._refreshFeed = function(e, t) {
			return (t = (0, o.default)({}, t)).reset = t.reset || (0, a.default)(this._temporaryColumns, function(t) {
				return -1 !== t.model.getFeedKeys().indexOf(e)
			}), TD.controller.feedManager.getPoller(e).refresh(t)
		}, e.removeColumn = function(e) {
			delete this._activeColumns[e], delete this._temporaryColumns[e], this._rebuildTaskIndex(), TD.controller.feedManager.cleanupFeeds()
		}, e._rebuildTaskIndex = function() {
			(0, u.default)(this._taskIndex, function(e) {
				(0, u.default)(e, function(e) {
					e.feeds = {}
				})
			}), (0, u.default)(this._activeColumns, function(t) {
				(0, u.default)(t.getFeeds(), function(t) {
					e._addFeed(t)
				})
			}), (0, u.default)(this._taskIndex, function(e) {
				(0, u.default)(e, function(e) {
					(0, r.default)(e.feeds) && (TD.controller.scheduler.removePeriodicTask(e.taskId), e.taskId = null)
				})
			})
		}, e.refreshColumn = function(e, t) {
			var i, n = this._activeColumns[e];
			if (n) {
				i = n.getFeeds();
				for (var s = 0; s < i.length; s++) this._refreshFeed(i[s].getKey(), t)
			}
		}, e.refreshAccountFeeds = function(e, t) {
			(0, u.default)(this._taskIndex[e], function(e) {
				e.doTask({
					reset: t
				})
			})
		}, e
	}()
}, , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = f(i(121)),
		s = f(i(32)),
		r = f(i(239)),
		a = f(i(57)),
		o = f(i(48)),
		l = f(i(0)),
		c = f(i(354)),
		u = f(i(21)),
		d = f(i(261)),
		h = i(17),
		m = i(37);

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = TD.controller.FeedPoller = function(e) {
		var t = this;
		this.TRIM_THROTTLE_MS = 1e4, this.OPTIMUM_ARRAY_LENGTH = 200, this.MAX_ARRAY_LENGTH = 300, this.TWEET_ID_QUEUE_LENGTH = 500, this.REFRESH_LOCK_EXPIRY = 6e4, this.EXHAUSTED_API_THRESHOLD = 10, this.feed = e, this.mark = "", this.chirpArray = [], this.chirpIndex = {}, this.seenTweetIDs = new c.default(this.TWEET_ID_QUEUE_LENGTH), this.refreshLock = 0, this.requestsInFlight = 0, this.cursorQueue = [], this.isInitialLoad = !0, this.intervalOfPossibility = d.default.whole, this.shouldTrackHighWaterMark = !1, this.renderContentSearchTweets = !1, this.renderContentUserTweets = !1, m.actuallyRenderContentSearchTweets$.subscribe(function(e) {
			t.renderContentSearchTweets = e
		}), m.actuallyRenderContentUsertweets$.subscribe(function(e) {
			t.renderContentUserTweets = e
		}), m.activityStreaming$.subscribe(function(e) {
			t.streamActivity = e
		}), this.shouldRenderContentSearchTweets = function() {
			return this.renderContentSearchTweets
		}, this.shouldRenderContentUserTweets = function() {
			return this.renderContentUserTweets
		}, this._checkNotifications = function() {
			var e = TD.storage.columnController.getColumnsContainingFeed(this.feed.getKey());
			this.shouldTrackHighWaterMark = e.some(function(e) {
				return e.getHasSound() || e.getHasNotification()
			})
		}, this._checkNotifications(), this.subscription = l.default.subscribe("/storage/column/column_flags_changed", this._checkNotifications.bind(this)), this.removeChirp = function(e) {
			var t = this.chirpIndex[e];
			if (t) {
				for (var i = 0; i < this.chirpArray.length; i++)
					if (this.chirpArray[i] === t) {
						this.chirpArray.splice(i, 1);
						break
					} delete this.chirpIndex[e], l.default.publish("/delete/" + this.feed.getKey(), [this, [t]])
			}
		}, this.removeWhere = function(e) {
			this.doWhere(e, function(e) {
				this.removeChirp(e.id)
			}.bind(this))
		}, this.doWhere = function(e, t) {
			this.chirpArray.filter(e).forEach(t)
		}, this.forgetAll = function() {
			this.chirpArray = [], this.chirpIndex = {}, this.seenTweetIDs.flush()
		}, this.recordChirpLateness = function(e, t, i, n) {
			if (TD.decider.get("chirp_lateness_metric")) {
				var s = (e || []).filter(function(e) {
					return e.chirpType === TD.services.ChirpBase.TWEET && Math.random() < n
				}, this).map(function(e) {
					return i - e.created.getTime()
				});
				if (0 !== s.length) {
					var r = TD.ui.template.toHtmlFromRaw("api:delivery-delay:{{apiType}}:{{feedType}}", {
						apiType: t,
						feedType: this.feed.getType()
					});
					(0, l.default)(document).trigger("metric", {
						key: r,
						type: "metric",
						value: s
					})
				}
			}
		}, this.acceptStreamChirps = function() {}, this.acceptChirps = function(e, t) {
			if (e && e.length) {
				var i = this.addChirpsToMemCache(e);
				this.isInitialLoad && !TD.settings.getShowStartupNotifications() && this.saveHighWaterMark(), this.publishChirps(i, t), this.saveHighWaterMark(), this.deferredTrimChirps()
			} else this.publishChirps([], t);
			this.isInitialLoad = !1
		}, this.acceptContentedChirps = function(e) {
			("usertweets" !== this.feed.getType() || this.shouldRenderContentUserTweets()) && ("search" !== this.feed.getType() || this.shouldRenderContentSearchTweets()) && this.acceptChirps(TD.util.poller.annotateChirpsWithApiBounds(this.feed, e), !1)
		}, this.saveHighWaterMark = function() {
			if (this.shouldTrackHighWaterMark) {
				var t = this.chirpArray[0].getSortIndex();
				e.setTopSortIndex(t);
				var i = this.chirpArray[0].created.getTime();
				e.setLatestTime(Math.max(e.getLatestTime(), i))
			}
		}, this.addChirpsToMemCache = function(e) {
			var t, i, n, s, r, a, o, l = [],
				c = [],
				u = !0;
			for (e.sort(TD.util.chirpColumnSort), t = 0; t < e.length; t++) i = e[t], n = this.chirpIndex[i.id], r = this.isRepeatedRetweet(i), n ? (s = this.chirpArray.indexOf(n), this.chirpArray[s] = i, this.chirpIndex[i.id] = i, c.push(i)) : r || (l.push(i), this.chirpIndex[i.id] = i, c.push(i));
			return this.chirpArray.length && l.length && (a = this.chirpArray[0], o = l[l.length - 1], u = a.belongsAbove(o)), this.chirpArray = l.concat(this.chirpArray), u && this.chirpArray.sort(TD.util.chirpColumnSort), c
		}, this.isRepeatedRetweet = function(e) {
			var t, i, n = !1;
			return e instanceof TD.services.TwitterStatus && (t = e.getMainTweet().id, i = this.seenTweetIDs.get(t) || 0, n = e.isRetweetedStatus() && i > 0, this.seenTweetIDs.put(t, i + 1)), n
		}, this.refresh = function(e) {
			(e = (0, o.default)({}, e)).retries = e.retries || 0;
			var t = Date.now();
			if (t < this.refreshLock + this.REFRESH_LOCK_EXPIRY) return TD.core.defer.succeed();
			e.reset && (this.cursorQueue.forEach(function(e) {
				e.d.cancel()
			}), this.cursorQueue = []);
			var i = TD.util.poller.getRefreshCursor(this.feed, this.chirpArray),
				n = i.interval.from !== d.default.negInf && i.interval.to === d.default.posInf,
				s = {
					bypassCache: !0,
					forceFetch: e.reset
				};
			this.refreshLock = t;
			var r = this.fillCursor(i, s);
			return r.addBoth(function(e) {
				return this.refreshLock = 0, e
			}.bind(this)), r.addCallbackWith(this, TD.util.effect(function(e) {
				n && this.recordChirpLateness(e.chirps, "rest", Date.now(), TD.controller.FeedPoller.CHIRP_LATENESS_METRIC_SAMPLE)
			})), r.addErrbackWith(this, function(t) {
				if (!TD.decider.get("disable_network_failure_retry") && (e.reset && t && (0, a.default)(t.message) && "responseText" in t.message)) {
					var i = t.message;
					if (TD.util.isNetworkFailure(i)) return this.retryRefresh(e)
				}
			}), r
		}, this.retryRefresh = function(e) {
			var t = (0, r.default)({}, e, {
				retries: e.retries + 1
			});
			(0, l.default)(document).trigger("metric", {
				key: "feed_poller:refresh:retry:request"
			});
			var i = Math.min(1e3 * Math.pow(2, e.retries / 2), 6e4),
				n = TD.core.defer.timeout(i);
			return n.addCallback(this.refresh.bind(this, t)), 1 === t.retries && n.addCallback(function(e) {
				return (0, l.default)(document).trigger("metric", {
					key: "feed_poller:refresh:retry:success"
				}), e
			}), n
		}, this.fillCursor = function(e, t) {
			t = t || {}, (0, o.default)(t, {
				bypassCache: !1,
				forceFetch: !1
			});
			var i = new TD.core.defer.Deferred;
			return this.cursorQueue.push({
				cursor: e,
				opts: t,
				d: i
			}), this.processCursorQueue(), i
		}, this.getCacheResult = function(e, t) {
			var i = TD.util.poller.makeChirpInterval(t),
				n = e.interval.intersection(this.intervalOfPossibility),
				s = t.filter(n.contains, n),
				r = n.intersection(i.complement().before),
				a = TD.util.poller.calculateUpperBound(this.feed.getKey(), s);
			return {
				requestCursor: e,
				chirps: s,
				remainderCursor: {
					feedKey: this.feed.getKey(),
					interval: r,
					bounds: {
						upper: a || e.bounds.upper,
						lower: e.bounds.lower
					}
				}
			}
		}, this.recalculateResult = function(e, t) {
			return t.length === e.chirps.length ? e : this.getCacheResult(e.requestCursor, t)
		}, this.processCursorQueue = function() {
			if (this.cursorQueue = this.cursorQueue.filter(function(e) {
					var t = this;
					if (e.opts.bypassCache) return !0;
					var i = this.getCacheResult(e.cursor, this.chirpArray),
						n = TD.util.poller.isCacheHit(i);
					return n && (0, s.default)(function() {
						var i = t.getCacheResult(e.cursor, t.chirpArray);
						e.d.callback(i)
					}), !n
				}, this), !(0 === this.cursorQueue.length || this.requestsInFlight > 0)) {
				var e = this.cursorQueue.shift(),
					t = this.fetchChirps(e.cursor, e.opts);
				t.addCallbackWith(this, function(t) {
					var i = this.processRestResult(this.chirpArray, e.cursor, t);
					i.isGappy && this.forgetAll(), "usertweets" === this.feed.getType() && (0, h.metric)("api:rest:tweet:usertweets", i.chirps.length), this.acceptChirps(i.chirps, i.isGappy);
					var n = this.getCacheResult(e.cursor, this.chirpArray);
					return TD.util.poller.isCacheHit(n) || (n = this.getCacheResult(e.cursor, t)), t.length < this.EXHAUSTED_API_THRESHOLD && (u.default.nonExhaustibleFeedTypes[this.feed.getType()] || (this.intervalOfPossibility = n.remainderCursor.interval.complement().after), n.remainderCursor.interval = d.default.empty), n
				}), t.addCallbacks(e.d.callback.bind(e.d), e.d.errback.bind(e.d)), t.addBothWith(this, this.processCursorQueue)
			}
		}, this.processRestResult = function(e, t, i) {
			var n = TD.util.poller.makeChirpInterval(e),
				s = TD.util.poller.makeRequestResultInterval(i, t.interval),
				r = n.unify(s),
				a = !u.default.gaplessFeedTypes[this.feed.getType()];
			a || (r = n.hull(s));
			var o = [n, s, r].sort(function(e, t) {
					return e.toComparator(e.to, t.to) || e.fromComparator(t.from, e.from)
				}).pop(),
				l = r.empty && o.equalTo(s),
				c = i;
			if (a) {
				var d = o.intersection(t.interval);
				c = i.filter(d.contains, d)
			}
			return {
				chirps: c,
				isGappy: l
			}
		}, this.fetchChirps = function(e, t) {
			(t = (0, o.default)(t || {}, {
				forceFetch: !1
			})).poller = this, t.feedType = this.feed.getType(), t.metadata = this.feed.getMetadata();
			var i = TD.controller.clients.getClient(this.feed.getAccountKey());
			if (!i) return TD.core.defer.fail(new Error("Could not find client for feed: " + this.feed.getAccountKey()));
			this.requestsInFlight++;
			var n = i.getChirpsForFeed(e, t),
				s = setTimeout(function() {
					n.cancel(), (0, l.default)(document).trigger("metric", {
						key: "feed_poller:request:timeout:" + t.feedType
					})
				}, TD.controller.FeedPoller.REQUEST_TIMEOUT);
			return n.addCallbackWith(this, function(e) {
				return TD.util.poller.annotateChirpsWithApiBounds(this.feed, e).sort(TD.util.chirpColumnSort)
			}), n.addBoth(function(e) {
				return this.requestsInFlight--, clearTimeout(s), setTimeout(this.processCursorQueue.bind(this), 1), e
			}.bind(this)), n
		}, this.getCursor = function(e) {
			var t = [];
			e.upper && (t = this.chirpArray.filter(function(t) {
				return !t.belongsBelow(e.upper)
			}));
			var i = [];
			return e.lower && (i = this.chirpArray.filter(function(t) {
				return !t.belongsAbove(e.lower)
			})), {
				feedKey: this.feed.getKey(),
				interval: new d.default(e.lower ? d.default.excEnd(e.lower) : d.default.negInf, e.upper ? d.default.excEnd(e.upper) : d.default.posInf),
				bounds: {
					upper: e.upper ? TD.util.poller.calculateUpperBound(this.feed.getKey(), t) : void 0,
					lower: e.lower ? TD.util.poller.calculateLowerBound(this.feed.getKey(), i, {
						isGapless: u.default.gaplessFeedTypes[this.feed.getType()]
					}) : void 0
				}
			}
		}, this.trimChirps = function() {
			if (!(this.chirpArray.length < this.MAX_ARRAY_LENGTH))
				for (var e = this.chirpArray.splice(this.OPTIMUM_ARRAY_LENGTH, Number.MAX_VALUE), t = 0; t < e.length; t++) delete this.chirpIndex[e[t].id]
		}, this.deferredTrimChirps = (0, n.default)(this.trimChirps.bind(this), this.TRIM_THROTTLE_MS, {
			leading: !1
		}), this.publishAll = function() {
			this.publishChirps(this.chirpArray)
		}, this.publishChirps = function(e, t) {
			l.default.publish("/feed/" + this.feed.getKey(), [{
				poller: this,
				chirps: e.concat(),
				notifyAfterSortIndex: this.feed.getTopSortIndex(),
				gap: !!t
			}])
		}, this.destroy = function() {
			var e = this.feed;
			this.chirpArray = [], this.chirpIndex = {}, l.default.unsubscribeAll("/feed/" + e.getKey()), l.default.unsubscribeAll("/delete/" + e.getKey()), l.default.unsubscribe(this.subscription)
		}
	}, TD.controller.FeedPoller.FEED_TYPES = {
		customTimeline: "customtimeline",
		direct: "direct",
		dataminr: "dataminr",
		favorites: "favorites",
		home: "home",
		interactions: "interactions",
		list: "list",
		mentions: "mentions",
		networkactivity: "networkactivity",
		scheduled: "scheduled",
		search: "search",
		useractivity: "useractivity",
		usertimeline: "usertimeline",
		usertweets: "usertweets",
		livevideo: "livevideo",
		event: "event"
	}, TD.controller.FeedPoller.NOTIFICATION_FEED_TYPES = ["interactions", "mentions"], TD.controller.FeedPoller.CURSORED_ON_TWEET_TIMESTAMP = {
		interactions: !0,
		networkactivity: !0,
		useractivity: !0
	}, TD.controller.FeedPoller.CURSORED_FEED_TYPES = {
		customtimeline: !0,
		livevideo: !0
	}, TD.controller.FeedPoller.SCHEDULED_FEED_TYPES = {
		scheduled: !0
	}, TD.controller.FeedPoller.CHIRP_LATENESS_METRIC_SAMPLE = .01, TD.controller.FeedPoller.REQUEST_TIMEOUT = 45e3
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = f(i(44)),
		s = f(i(519)),
		r = f(i(85)),
		a = f(i(48)),
		o = f(i(15)),
		l = f(i(120)),
		c = f(i(2)),
		u = f(i(0)),
		d = f(i(21)),
		h = i(19),
		m = i(2160);

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = TD.controller.feedManager = function() {
		var e = {},
			t = {};

		function i() {
			var e, t = TD.storage.accountController.getDefault(),
				i = t.getKey();
			"twitter" === t.getType() && (e = TD.storage.feedController.getAll(), e = (0, l.default)(e, function(e) {
				return "search" === e.getType() && e.getAccountKey() !== i
			}), (0, o.default)(e, function(e) {
				var t = TD.storage.feedController.getOrCreateFeed(e.getType(), e.getService(), i, e.getMetadata());
				TD.controller.feedManager.replaceFeed(e, t)
			}))
		}

		function f(e, t) {
			var i, n = t && t.toLowerCase();
			i = t ? (0, c.default)("User @{{screenName}} has been suspended", {
				screenName: t
			}) : (0, c.default)("User has been suspended"), (0, h.showNotification)({
				message: i
			}), TD.controller.feedManager.deleteWhere(function(i) {
				var s = i.getMainUser && i.getMainUser();
				return !!s && (e && e == s.id || t && n === s.screenName.toLowerCase())
			})
		}

		function p(e, t, i) {
			var n = i.getRelatedTweet();
			if (!n) return !1;
			var s = n.id === e || n.retweetedStatus && n.retweetedStatus.id === e,
				r = n.account.getKey() === t;
			return s && r
		}
		return e.init = function() {
			var e, n = TD.storage.feedController.getAll();
			for (e = 0; e < n.length; e++) {
				var s = n[e];
				t[s.getKey()] = new TD.controller.FeedPoller(s)
			}
			u.default.subscribe("/user/removeTweets", this.deleteUserChirps), u.default.subscribe("/user/suspended", f), u.default.subscribe("/storage/client/default_account_changed", i), (0, u.default)(document).on("dataUndoRetweetSuccess", this.handleUndoRetweetSuccess.bind(this)), (0, u.default)(document).on("dataUndoRetweetError", this.handleUndoRetweetError.bind(this))
		}, e.handleUndoRetweetSuccess = function(e, t) {
			this.deleteWhere(function(e) {
				return e.retweetedStatus && e.retweetedStatus.id === t.tweetId && e.creatorAccount && e.creatorAccount.getKey() === t.from
			}), this.doWhere(p.bind(null, t.tweetId, t.from), function(e) {
				e.getRelatedTweet().setRetweeted(!1)
			})
		}, e.handleUndoRetweetError = function(e, t) {
			(0, h.showErrorNotification)({
				message: (0, c.default)("Undo retweet failed")
			}), this.doWhere(p.bind(null, t.tweetId, t.from), function(e) {
				e.getRelatedTweet().setRetweeted(!0)
			})
		}, e.getPoller = function(e) {
			return t[e]
		}, e.addFeed = function(i) {
			(0, m.getSubscriber)(i) || (0, m.addSubscriber)(i);
			var n = i.getKey(),
				s = e.getPoller(n) || new TD.controller.FeedPoller(i);
			return t[n] = s, s
		}, e.removeFeed = function(i) {
			(0, m.removeSubscriber)(i);
			var n = i.getKey(),
				s = e.getPoller(n);
			delete t[n], s.destroy()
		}, e.cleanupFeeds = function() {
			var i = TD.controller.columnManager.getAll(),
				n = {};
			for (var s in i)
				for (var r = i[s].getFeeds(), a = 0; a < r.length; a++) n[r[a].getKey()] = !0;
			for (var o in t)
				if (!n[o]) {
					var l = t[o].feed;
					e.removeFeed(l), TD.storage.feedController.remove(l.getKey())
				}
		}, e.deleteChirp = function(t) {
			e.deleteWhere(function(e) {
				if (e.id === t) return !0;
				if (e.getRelatedTweet) {
					var i = e.getRelatedTweet();
					return i && i.id === t
				}
				return !1
			})
		}, e.deleteWhere = function(e, i) {
			i = (0, a.default)(i || {}, {
				feedTypes: d.default.allFeedTypes
			}), (0, n.default)(t).forEach(function(n) {
				var s = t[n],
					r = s.feed.getType();
				i.feedTypes[r] && s.removeWhere(e)
			})
		}, e.doWhere = function(e, i) {
			for (var n in t) t[n].doWhere(e, i)
		}, e.deleteUserChirps = function(t, i, n) {
			e.deleteWhere(function(e) {
				try {
					var n = e.getCreator && e.getCreator();
					return n && n.id === t && e.account.getUserID() === i
				} catch (e) {}
				return !1
			}, n)
		}, e.deleteFeedsWhere = function(e) {
			TD.storage.clientController.client.getColumnOrder().forEach(function(t) {
				var i = TD.controller.columnManager.get(t);
				i.getFeeds().forEach(function(t) {
					e(t) && (TD.storage.feedController.remove(t), i.removeFeed(t))
				}), 0 === i.getFeeds().length && i instanceof TD.vo.Column && TD.controller.columnManager.deleteColumn(t)
			})
		}, e.replaceFeed = function(t, i, n) {
			var s = TD.controller.columnManager.getAll();
			n && (s = (0, l.default)(s, function(e) {
				return -1 !== n.indexOf(e.model.getKey())
			})), (0, o.default)(s, function(e) {
				e instanceof TD.vo.Column && e.removeFeed(t) > 0 && e.addFeed(i)
			}), e.cleanupFeeds()
		}, e.fixListFeeds = (0, r.default)((0, s.default)(function() {
			var e = function(e, t) {
					var i = TD.storage.feedController.getOrCreateFeed(e.getType(), e.getService(), e.getAccountKey(), {
						listId: t.id,
						ownerId: t.user.id
					});
					TD.controller.feedManager.replaceFeed(e, i)
				},
				t = [],
				i = TD.storage.feedController.getAll();
			i = (0, l.default)(i, function(e) {
				var t = e.getMetadata();
				return !("list" !== e.getType() || t.listId && t.ownerId)
			}), (0, o.default)(i, function(i) {
				var n = i.getMetadata(),
					s = TD.cache.lists.find(null, n.screenName, n.slug);
				s ? e(i, s) : t.push(i)
			}), (0, o.default)(t, function(t) {
				var i = TD.controller.clients.getClient(t.getAccountKey()),
					n = t.getMetadata();
				i.getList(null, n.screenName, n.slug, function(i) {
					e(t, i)
				}, function() {})
			})
		}), 5e3), e.isContentStreaming = function(e) {
			var t = (0, m.getSubscriber)(e);
			return !!t && (t.streamOnly && "ok" === t.getStatus())
		}, e
	}()
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.clearSubscribers = t.removeSubscriber = t.getSubscriber = t.addSubscriber = void 0;
	var n = a(i(808)),
		s = a(i(2161)),
		r = a(i(2163));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = new n.default;
	t.addSubscriber = function(e) {
		var t = e.getType(),
			i = e.getKey(),
			n = null;
		switch (t) {
			case "search":
				n = new s.default(e);
				break;
			case "usertweets":
				n = new r.default(e);
				break;
			default:
				return null
		}
		return o.set(i, n), n
	}, t.getSubscriber = function(e) {
		var t = e.getKey();
		return o.has(t) ? o.get(t) : null
	}, t.removeSubscriber = function(e) {
		var t = e.getKey(),
			i = o.get(t);
		i && (i.teardown(), o.delete(t))
	}, t.clearSubscribers = function() {
		o.forEach(function(e) {
			e.teardown()
		}), o.clear()
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = m(i(9)),
		s = m(i(26)),
		r = m(i(14)),
		a = m(i(16)),
		o = m(i(27)),
		l = m(i(28)),
		c = m(i(823)),
		u = i(37),
		d = i(518),
		h = m(i(2162));

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = function(e) {
		function t(e) {
			(0, r.default)(this, t);
			var i = (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).call(this, e));
			return i.subscriptionType = "track", i.streamOnly = !0, i._subscribeToFeatureFlagForContentUpdates(u.contentSearchEnabled$), i
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "_getGraphQlQuery",
			value: function() {
				if (!this.subscriptionEnabled) return null;
				var e = this.feed.getMetadata().term;
				return (0, d.trackQuerySupportedByContent)(e) ? (0, n.default)({}, h.default, {
					variables: {
						query: e
					}
				}) : (TD.util.metric("project-content:unsupported-track"), null)
			}
		}]), t
	}(c.default);
	t.default = f
}, function(e, t) {
	e.exports = {
		queryId: "3ZjVpar4Iy_jbxlHEnJMsQ",
		operationName: "TrackQuery"
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = h(i(9)),
		s = h(i(26)),
		r = h(i(14)),
		a = h(i(16)),
		o = h(i(27)),
		l = h(i(28)),
		c = h(i(823)),
		u = i(37),
		d = h(i(2164));

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var m = function(e) {
		function t(e) {
			(0, r.default)(this, t);
			var i = (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).call(this, e));
			return i.subscriptionType = "user", i.streamOnly = !1, i._subscribeToFeatureFlagForContentUpdates(u.contentUsertweetsEnabled$), i
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "_getGraphQlQuery",
			value: function() {
				if (!this.subscriptionEnabled) return null;
				var e = this.feed.getAccountKey();
				if ("twitter:" !== e.substring(0, "twitter:".length)) return console.error("Unexpected account key format."), null;
				var t = e.substring("twitter:".length);
				return (0, n.default)({}, d.default, {
					variables: {
						user_id: t
					}
				})
			}
		}]), t
	}(c.default);
	t.default = m
}, function(e, t) {
	e.exports = {
		queryId: "Hp5-JEK0Akeda_47_5aR0g",
		operationName: "UserQuery"
	}
}, function(e, t, i) {
	"use strict";
	var n = o(i(110)),
		s = o(i(0)),
		r = o(i(21)),
		a = i(33);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.notifications = function() {
		var e, t = 500,
			o = {},
			l = [],
			c = {},
			u = !1,
			d = window.Notification,
			h = !1,
			m = "growl",
			f = "w3c";

		function p() {
			(e = null, (0, a.generic)({
				page: "main",
				component: "column",
				action: "notification" + (u ? "_with_sound" : "")
			}), u && (document.getElementById("update-sound").play(), u = !1), l.length && h) && ((h === m ? l.slice(0, 5) : l).forEach(function(e) {
				var t;
				switch (h) {
					case m:
						deck.doGrowl(e.title, e.text, e.img, e.chirpID, e.columnKey);
						break;
					case f:
						(t = new d(e.title, {
							body: e.text,
							icon: e.img
						})).onclose = o.reset, t.onshow = function() {
							setTimeout(function() {
								t.close()
							}, 5e3)
						}, t.onclick = function() {
							o.showDetailView(e.columnKey, e.chirpID), TD.util.isChromeApp() && chrome.extension.getBackgroundPage().TD.bg.utils.showTDTab(), window.focus()
						}
				}
			}), o.reset(), l = [])
		}
		var g = function(e) {
				switch (e) {
					case "privateMe":
						return 5;
					case "direct":
						return 4;
					case "me":
						return 3;
					case "mentions":
						return 2;
					case "home":
						return 1;
					case "search":
						return -1;
					default:
						return 0
				}
			},
			v = function(e) {
				var t = !!TD.util.isWrapperApp() || o.isPermissionGranted();
				return t && (h = f, e && e("granted")), t
			};
		return o.init = function() {
			TD.util.isMacApp() ? h = m : d && v(), s.default.subscribe("/notifications/new", function(s) {
				var a = s.column,
					o = s.items;
				if (0 !== (o = o.filter(function(e) {
						return e.passFilters(a.filters) && !e.isOwnChirp()
					})).length) {
					var d = [];
					if (a.model.getHasNotification() && h)
						for (var m = 0; m < o.length; m++) {
							var f = o[m],
								v = c[f.id];
							if (v) g(a.type) > g(v.columnType) && (v.columnKey = a.model.getKey(), v.columnTitle = r.default.getColumnTitleHTML(a), v.columnType = a.model.getType(), v.accountKey = f.account.getKey());
							else {
								var T = {
										chirpID: f.messageThreadId || f.id,
										accountKey: f.account.getKey(),
										columnKey: a.model.getKey(),
										columnTitle: r.default.getColumnTitleHTML(a),
										columnType: a.model.getType()
									},
									w = f.getNotificationData();
								if (!w) continue;
								w.img = w.img || i(825), (0, n.default)(T, w), d.push(T), c[o[m].id] = T
							}
						}
					u = u || a.model.getHasSound(), l = l.concat(d), !e && (l.length > 0 || u) && (e = setTimeout(p, t))
				}
			}.bind(this))
		}, o.hasNotifications = function() {
			return !!h || d && "denied" !== d.permission
		}, o.isPermissionGranted = function() {
			return !!h || d && "granted" === d.permission
		}, o.canPermissionBeRequested = function() {
			return d && "default" === d.permission
		}, o.getPermission = function(e) {
			v(e) || d.requestPermission(function(t) {
				"permission" in d || (d.permission = t), v(e), (0, a.generic)({
					page: "main",
					component: "desktop_notifications",
					action: "permissions_" + t
				})
			})
		}, o.showDetailView = function(e, t) {
			(0, s.default)(document).trigger("uiColumnFocus", {
				columnKey: e
			});
			var i = TD.controller.columnManager.get(e),
				n = i.findMostInterestingChirp(t);
			if (n) {
				var r = i.findChirp(t);
				TD.ui.updates.showDetailView(i, n, r)
			}
		}, o.reset = function() {
			c = {}, u = !1
		}, o
	}()
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = c(i(816)),
		o = c(i(2167)),
		l = c(i(15));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.filterManager = (s = [], r = function() {
		var e = [];
		(0, l.default)(s, function(t) {
			e.push(t.toBackendState())
		}), TD.settings.setGlobalFilter(e)
	}, (n = {}).init = function() {
		var e = TD.settings.getGlobalFilter();
		(0, l.default)(e, function(e) {
			var t = new TD.vo.Filter;
			t.fromBackendState(e), s.push(t)
		}), n.reapplyAllFilters()
	}, n.reapplyAllFilters = function() {
		(0, l.default)(TD.controller.columnManager.getAll(), function(e) {
			e.reapplyFilters()
		})
	}, n.pass = function(e, t) {
		var i, n;
		for (i = 0, n = s.length; i < n; i++)
			if (!s[i].pass(e)) return !1;
		if (t)
			for (i = 0, n = t.length; i < n; i++)
				if (!t[i].pass(e)) return !1;
		return !0
	}, n.getAll = function(e, t) {
		return s
	}, n.addFilter = function(e, t, i) {
		var a = new TD.vo.Filter(e, t, Boolean(i));
		return s.push(a), n.reapplyAllFilters(), r(), a
	}, n.validateFilter = function(e, t) {
		return !(!e || !t || 0 == (0, o.default)(t).length || (0, a.default)(s, function(i) {
			return i.type === e && i.value === t
		}))
	}, n.removeFilter = function(e) {
		var t = null;
		s.forEach(function(i, n) {
			e.id ? i.id === e.id && (t = n) : e.type && e.text && i.type === e.type && i.value === e.text && (t = n)
		}), null !== t && (s.splice(t, 1), n.reapplyAllFilters(), r())
	}, n.hasFilterApplied = function(e, t) {
		return s.some(function(i) {
			return i.type === e && i.value === t
		})
	}, n)
}, , , , , , function(e, t, i) {
	"use strict";
	var n = l(i(44)),
		s = l(i(88)),
		r = l(i(110)),
		a = l(i(0)),
		o = l(i(36));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = new function() {
		var e = {},
			t = new o.default.BehaviorSubject(null),
			i = sessionStorage.getItem("sessionDeciderOverlay");
		i && (console.warn("sessionDeciderOverlay found in sessionStorage"), TD.config.decider_overlay = (0, r.default)(TD.config.decider_overlay || {}, JSON.parse(i) || {})), this.accessLevels = {
			scheduler: {
				levels: [{
					level: "READ_BACKGROUND",
					deciderKey: "scheduler_read_background"
				}, {
					level: "READ_VISIBLE",
					deciderKey: "scheduler_read_visible"
				}, {
					level: "WRITE",
					deciderKey: "scheduler_write"
				}, {
					level: "WRITE_MEDIA",
					deciderKey: "scheduler_write_media"
				}]
			},
			mediaUpload: {
				levels: [{
					level: "USE_SRU",
					deciderKey: "upload_use_sru"
				}, {
					level: "BIG_GIFS",
					deciderKey: "upload_big_gifs"
				}]
			}
		}, this.updateForGuestId = function() {
			return this.updateFromBackendForID(TD.storage.store.getOrCreateGuestID())
		}, this.updateFromBackendForID = function(e) {
			var t = TD.sync.tdapi.getDecider(e);
			return t.addCallbackWith(this, function(e) {
				this.updateFromBackend(e.decider)
			}), t
		}, this.updateFromBackend = function(i) {
			e = i || {}, (0, a.default)(document).trigger("dataDeciderUpdated"), t.next(this.getAllWithOverlay())
		}, this.get = function(t) {
			return TD.config.decider_overlay && void 0 !== TD.config.decider_overlay[t] ? TD.config.decider_overlay[t] : e[t]
		}, this.getAll = function() {
			return (0, s.default)(e)
		}, this.getAllWithOverlay = function() {
			return [].concat((0, n.default)(TD.config.decider_overlay || {})).reduce(function(e, t) {
				return e[t] = this.get(t), e
			}.bind(this), this.getAll())
		}, this.hasAccessLevel = function(e, t) {
			var i = this.accessLevels[e];
			return !(i.opts && i.opts.gateFunction && !i.opts.gateFunction()) && i.levels.reduce(function(e, i) {
				var n = i.level === t,
					s = i.deciderKey;
				!s && i.deciderKeyByEnv && (s = i.deciderKeyByEnv[TD.util.getAppEnv()] || i.deciderKeyByEnv.default);
				var r = e.canAccessPreviousLevel && !!this.get(s);
				return {
					canAccessPreviousLevel: r,
					canAccessDesiredLevel: n ? r : e.canAccessDesiredLevel
				}
			}.bind(this), {
				canAccessPreviousLevel: !0,
				canAccessDesiredLevel: !1
			}).canAccessDesiredLevel
		}, this.getStreamForDeciderKey = function(e) {
			return e ? o.default.Observable.create(function(i) {
				var n = t.filter(Boolean).map(function(t) {
					return t[e]
				}).distinctUntilChanged().subscribe(i);
				return function() {
					n.unsubscribe()
				}
			}) : o.default.Observable.empty()
		}
	}
}, , function(e, t, i) {
	"use strict";

	function n() {
		this.data = {}, this.length = 0
	}
	n.prototype.clear = function() {
		this.data = {}, this.length = 0
	}, n.prototype.getItem = function(e) {
		var t = this.data[e];
		return void 0 !== t ? t : null
	}, n.prototype.key = function(e) {
		throw new Error("MemoryStore.key not implemented.")
	}, n.prototype.removeItem = function(e) {
		null !== this.getItem(e) && (delete this.data[e], this.length--)
	}, n.prototype.setItem = function(e, t) {
		null === this.getItem(e) && this.length++, this.data[e] = "" + t
	}, e.exports = n
}, function(e, t, i) {
	"use strict";
	var n = r(i(99)),
		s = r(i(63));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = {
		CURRENT_VERSION: 5,
		getVersion: function(e) {
			var t = e.getItem("__version__");
			return null === t ? a.guessVersion(e) : Number(t)
		},
		guessVersion: function(e) {
			var t = e.getItem("settings"),
				i = e.getItem("clients"),
				r = e.getItem("columns");
			if (i && !t && (i = JSON.parse(i), !(0, s.default)(i) && "ΔQ" in (0, n.default)(i)[0])) return 2;
			return !i && t && r ? 0 : 4
		},
		doUpgrade: function(e) {
			var t = a.getVersion(e._backend);
			(!t || t < 4) && a._upgradeAllToV4(e), (t = a.getVersion(e._backend)) < 5 && a._upgradeV4ToV5(e), e.setVersion(this.CURRENT_VERSION)
		},
		_upgradeAllToV4: function(e) {
			console.log("Upgrading store to v4"), e.constructor.flushDataFromStore(e._backend, e.constructor.PERSISTENT_SESSION_ITEMS), e.setVersion(4)
		},
		_upgradeV4ToV5: function(e) {
			window.sessionStorage && sessionStorage.removeItem("migrate");
			var t = e._backend;
			"tweetdeck" === t.getItem("currentAuthType") && (t.removeItem("currentAuthType"), t.removeItem("tweetdeckAccount"), t.removeItem("_session")), e.setVersion(5)
		}
	};
	e.exports = a
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = c(i(15)),
		o = c(i(88)),
		l = c(i(425));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.sync.trace = (n = TD.sync.util, r = [], (s = {}).record = function() {
		var e = (new Date).toLocaleTimeString();
		r.push([e].concat((0, l.default)(arguments))), TD.config.debug_trace && n.stateLog.apply(null, ["-------- TRACE: " + e].concat((0, l.default)(arguments))), TD.config.debug_menu || r.length > 200 && r.splice(0, 100)
	}, s.request = function(e, t, i) {
		s.record("request", e, i.type, t, (0, o.default)(i))
	}, s.response = function(e, t, i, n) {
		s.record("response", e, t, (0, o.default)(i), (0, o.default)(n))
	}, s.objInit = function(e, t, i) {
		s.record("obj init", e, (0, o.default)(t), (0, o.default)(i))
	}, s.manage = function(e, t) {
		s.record("manage", e, t, n.clone(t.getStateForLocalstorage()))
	}, s.update = function(e, t, i) {
		s.record("update", e, t, (0, o.default)(i))
	}, s.push = function(e, t, i, r) {
		s.record("push", e, t, (0, o.default)(i), n.clone(r))
	}, s.tsResults = function(e, t, i, n, r, a) {
		s.record("t+s results", e, (0, o.default)(t), (0, o.default)(i), (0, o.default)(n), (0, o.default)(r), a)
	}, s.tsResult = function(e, t, i, n, r, a) {
		s.record("t+s result", e, (0, o.default)(t), (0, o.default)(i), n, (0, o.default)(r), a)
	}, s.conflicts = function(e, t, i, n, r) {
		s.record("conflicts", e, (0, o.default)(t), (0, o.default)(i), (0, o.default)(n), r)
	}, s.conflict = function(e, t, i, n, r) {
		s.record("conflict", e, (0, o.default)(t), (0, o.default)(i), (0, o.default)(n), r)
	}, s.assert = function(e, t) {
		s.record("ASSERT", e, t, n.getStack())
	}, s.clear = function() {
		r = []
	}, s.logDump = function() {
		var e = "-------------------------------------------------------------";
		console.log(e + " TRACE dump " + e), (0, a.default)(r, function(e) {
			console.log(e)
		}), console.log(e + "  END dump  " + e)
	}, s.logSummarise = function() {
		var e = "-------------------------------------------------------------";
		console.log(e + " TRACE dump " + e);
		var t = n.list_to_set(["obj init", "update"]);
		(0, a.default)(r, function(e) {
			t[e[1]] || console.log(e)
		}), console.log(e + "  END dump  " + e)
	}, s)
}, function(e, t, i) {
	"use strict";
	var n = d(i(68)),
		s = d(i(63)),
		r = d(i(48)),
		a = d(i(241)),
		o = d(i(46)),
		l = d(i(15)),
		c = d(i(80)),
		u = d(i(0));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.sync.tdapi = function(e, t, i, d) {
		var h = {},
			m = null;
		h.getDecider = function(e) {
			var t = "https://tweetdeck.twitter.com/decider?identifier=" + e;
			return h.drequest(t, {
				type: "GET"
			}, {})
		}, h.importSetup = function(e, t) {
			return h.requestWithBody("/import", "POST", {
				from_username: e,
				passhash: t
			})
		}, h.importPreview = function(e, t) {
			return h.drequest("/import/preview", {
				type: "POST",
				headers: {},
				data: (0, n.default)({
					from_username: e,
					passhash: t
				}),
				contentType: "application/json"
			})
		}, h.onAuthFail = function(e, t) {
			m = e
		}, h.Conflict = function(e) {
			this.body = e
		};
		var f = new RegExp("^([^:]*): (.*)$"),
			p = function(e, t) {
				(0, c.default)(t) && (t = {});
				var i = e.getAllResponseHeaders(),
					n = i.split("\r\n");
				return 1 == n.length && (n = i.split("\n")), (0, l.default)(n, function(e) {
					var i = e.match(f);
					i && (t[i[1].toLowerCase()] = i[2])
				}), t
			};
		return h.drequest = function(n, l, d, f) {
			var g = (0, o.default)(l && l.reqid ? "[" + l.reqid + "]rq:" : "rq:");
			if (e.stateLog("drequest", g, n, l), (null === l || (0, c.default)(l)) && (l = h.getReq()), i.request(g, n, l), "/" == n.charAt(0) && (n = TD.config.api_root + n), !(0, a.default)(n, "http://") && !(0, a.default)(n, "https://")) return t.fail(new Error("Malformed url"));
			l.headers = (0, r.default)(l.headers || {}, {
				"X-Twitter-Client-Version": TD.util.getTweetDeckUserAgentString()
			});
			var v = function(i, n) {
				var s = u.default.ajax(i, n),
					r = new t.Deferred;
				return s.done(function(e, t, i) {
					r.callback(i)
				}), s.fail(function(i, n, s) {
					409 === i.status ? (e.assert("Conflict" === s, "409 should be Conflict"), r.callback(i)) : r.errback(new t.XMLHttpRequestError(i, s))
				}), r
			}(n, l);
			v.reqid = g;
			v.addErrback(function(e) {
				var t = e.req;
				if (401 !== t.status || f) throw e;
				if ("X-TD-Session" !== p(t)["www-authenticate"]) throw e;
				throw m && m(), e
			});
			return v.addCallback(function(t, r) {
				var a, o = function(t) {
					if ("" === t) return t;
					try {
						return JSON.parse(t)
					} catch (i) {
						return (0, s.default)(t) || e.warn(["failed to json parse drequest response;", t, "for request", n, l]), t
					}
				};
				return a = 409 === t.status ? new h.Conflict(o(t.responseText)) : o(t.responseText), d && p(t, d), d && d.date && TD.storage.notification.notify("/date", d.date), e.stateLog("drequest ret", g, n, a, t.getAllResponseHeaders().split("\n")), i.response(g, n, a, d), a
			}, g), v
		}, h.requestWithBody = function(e, t, i, s, r, a, o) {
			var l = h.getReq({
				type: t,
				reqid: a,
				headers: r || {},
				data: (0, n.default)(i),
				contentType: "application/json"
			});
			return h.drequest(e, l, s, o)
		}, h.getReq = function(e) {
			var t = {
				type: "GET",
				headers: {}
			};
			for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
			return e && e.method && (t.type = e.method), t
		}, h
	}(TD.sync.util, TD.core.defer, TD.sync.trace, TD.core.base64)
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = u(i(32)),
		o = u(i(15)),
		l = u(i(0)),
		c = u(i(193));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.notification = (s = [], r = function() {
		var e = s.splice(0, s.length);
		(0, o.default)(e, function(e) {
			if (e.topic) try {
				l.default.publish(e.topic, e.args)
			} catch (t) {
				console.log("FAILURE publishing event", e, t)
			} else e.d && e.d.callback()
		})
	}, (n = {}).notify = function(e) {
		var t = Array.prototype.slice.call(arguments, 1);
		s.push({
			topic: e,
			args: t
		}), (0, a.default)(r)
	}, n.flush = function() {
		var e = new c.default.Deferred;
		return s.push({
			d: e
		}), (0, a.default)(r), e
	}, n)
}, function(e, t, i) {
	"use strict";
	var n = u(i(80)),
		s = u(i(43)),
		r = u(i(112)),
		a = u(i(229)),
		o = u(i(77)),
		l = u(i(88)),
		c = u(i(63));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.StoredObj = function(e, t, i, u, d, h, m) {
		function f(e) {
			this.controller = e
		}
		return f.prototype.controller = null, f.prototype.managed = !1, f.prototype.stateCache = null, f.prototype.state = null, f.prototype.privateState = null, f.prototype.eventname = "/storage/object", f.prototype._init = function(i) {
			i || (i = {}), m.objInit(this, i), this.state = {}, this.privateState = {}, (0, c.default)(i) ? (this.deltaQ = [], this.stateCache = null) : (this.deltaQ = [new e.StoredDelta("init", i)], this.stateCache = (0, l.default)(i)), t.verboseLog("StoredObj.init", this, i, this.deltaQ)
		}, f.prototype.getApiid = function() {
			var e = this.getPrivate("apiid");
			return t.assert(e, "missing apiid", this), e
		}, f.prototype.hasApiid = function() {
			return Boolean(this.getPrivate("apiid"))
		}, f.prototype.setApiid = function(e) {
			return m.update("set apiid", this, [e]), this.setPrivate("apiid", e)
		}, f.prototype.getKey = function() {
			return this.getPrivate("key")
		}, f.prototype.setKey = function(e) {
			return this.setPrivate("key", e)
		}, f.prototype._prepCache = function() {
			return null === this.stateCache && (t.assert(0 === this.deltaQ.length, "empty stateCache must coincide with empty ΔQ"), this.stateCache = (0, l.default)(this.state)), this.stateCache
		}, f.prototype.set = function(i, n) {
			return m.update("set", this, [i, n]), t.assert("columns" !== i, "you should be setting column_order, not columns"), this._prepCache(), this.deltaQ.push(new e.StoredDelta("set", i, n)), this.stateCache[i] = n, h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.setListPermutation = function(i, n) {
			TD.config.debug_checks && this.checkCache();
			var s = this.get(i);
			if ((0, o.default)(n, s)) return m.update("set null list permutation", this, [i, s, n]), t.stateLog("ignoring request to change list at", i), d.succeed();
			m.update("set list permutation", this, [i, s, n]);
			var r = e.StoredDelta.listPermutator(i, s, n);
			return t.verboseLog("set list permutation", s, "→", n, "Δs:", r), this.deltaQ = this.deltaQ.concat(r), this.stateCache = e.StoredDelta.applyMultiple(this.deltaQ, this.state), TD.config.debug_checks && this.checkCache(), h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.listPrepend = function(t, i) {
			m.update("list prepend", this, [t, i]);
			var n = this.get(t);
			return n || (n = []), this._prepCache(), this.deltaQ.push(new e.StoredDelta("linsert", t, i, 0)), this.stateCache[t] = [i].concat(n), h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.listAppend = function(t, i) {
			m.update("list append", this, [t, i]);
			var n = this.get(t);
			return n || (n = []), this._prepCache(), this.deltaQ.push(new e.StoredDelta("linsert", t, i, n.length)), this.stateCache[t] = n.concat([i]), h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.listAdd = function(i, n) {
			var s = this.get(i);
			s || (s = []);
			var r = new e.StoredDelta("ladd", i, n, s.length),
				a = r.applyToValue(i, s);
			return (0, o.default)(a, s) ? (m.update("set null list add", this, [i, s, a]), t.stateLog("ignoring request to add to list at", i), d.succeed()) : (m.update("list add", this, [i, n]), this._prepCache(), this.deltaQ.push(r), this.stateCache[i] = a, h.notify(this.eventname + "/change", this), this.controller.triggerPush())
		}, f.prototype.listTruncate = function(t, i) {
			m.update("list truncate", this, [t, i]);
			var n = this.get(t);
			return n || (n = []), this._prepCache(), this.deltaQ.push(new e.StoredDelta("ltrunc", t, i)), n.length > i && n.splice(i, n.length - i), this.stateCache[t] = n, h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.listRemove = function(t, i) {
			m.update("list remove", this, [t, i]);
			var n = this.get(t) || [];
			return this._prepCache(), this.deltaQ.push(new e.StoredDelta("ldel", t, i)), this.stateCache[t] = (0, a.default)(n, i), h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.listDedupe = function(t) {
			m.update("list dedupe", this, [t]);
			var i = this.get(t) || [];
			this._prepCache();
			var n = new e.StoredDelta("ldedupe", t);
			return this.deltaQ.push(n), this.stateCache[t] = n.applyToValue(t, i), h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.dictSet = function(t, i, n) {
			m.update("dict set", this, [t, i, n]), this._prepCache();
			var s = (0, l.default)(this.get(t));
			return this.deltaQ.push(new e.StoredDelta("hset", t, i, n)), s || (s = {}), s[i] = n, this.stateCache[t] = s, h.notify(this.eventname + "/change", this), this.controller.triggerPush()
		}, f.prototype.setPrivate = function(e, t) {
			var i = this.privateState[e];
			return this.privateState[e] = t, i !== t && h.notify(this.eventname + "/change", this), d.succeed()
		}, f.prototype.getPrivate = function(e) {
			return this.privateState[e]
		}, f.prototype.immutableSet = function(e, i) {
			var n = this.state[e];
			if (i != n) throw t.warn("ERROR: attempt to change", e, "of", this, "from", n, "to", i), new Error("attempt to modify immutable field " + e);
			return d.succeed()
		}, f.prototype.setValueIffDifferent = function(e, i, n, s) {
			var r = this.get(e);
			return (0, o.default)(r, i) ? d.succeed(null) : (t.verboseLog(this, "setValueIffDifferent", e, "from", r, "to", i), n && h.notify(n, i, r, this), s && s(i, r), h.notify(this.eventname + "/change", this), this.set(e, i))
		}, f.prototype.get = function(e) {
			return null === this.stateCache ? this.state[e] : this.stateCache[e]
		}, f.prototype.latestDelta = function() {
			return (0, c.default)(this.deltaQ) ? null : this.deltaQ[this.deltaQ.length - 1].id
		}, f.prototype.getStateForBackend = function() {
			TD.config.debug_checks && (t.precondition(this.isDirty(), "don't call getStateForBackend unless isDirty"), this.checkCache());
			var e = (0, l.default)(null !== this.stateCache ? this.stateCache : this.state);
			return !e.mtime && this.state.mtime && (e.mtime = this.state.mtime), {
				"Δid": this.latestDelta(),
				state: this.transformForRemote(e, this.privateState)
			}
		}, f.prototype.postProcessNewRemoteState = function() {}, f.prototype.newRemoteState = function(i) {
			m.update("new remote state", this, i), TD.config.debug_checks && (t.stateLog("checking cache"), this.checkCache()), t.verboseLog("transforming to local:", this, t.clone(i)), this.state = this.transformToLocal(i), 0 !== this.deltaQ.length ? (t.assert(null !== this.stateCache, "if we have Δs, we should have cache"), t.verboseLog("applying pending deltas", this, t.clone(this.deltaQ)), this.stateCache = e.StoredDelta.applyMultiple(this.deltaQ, this.state)) : t.assert(null === this.stateCache, "if no Δs, should have no cache"), this.postProcessNewRemoteState(), TD.config.debug_checks && (t.stateLog("checking cache"), this.checkCache()), h.notify(this.eventname + "/change", this)
		}, f.prototype.commit = function(i, n) {
			m.update("commit", this, [i + " : " + n]);
			var a = (0, r.default)(this.deltaQ, "id").indexOf(i);
			if (-1 === a) throw t.stateLog("asked to commit " + i + " but it doesn't exist in " + (0, s.default)(this.deltaQ, function(e) {
				return e.toString()
			})), new Error("invalid deltaId supplied");
			if (TD.config.debug_checks && this.checkCache(), a === this.deltaQ.length - 1) this.deltaQ = [], this.state = (0, l.default)(this.stateCache), this.state.mtime = n, this.stateCache = null, TD.config.debug_checks && this.checkCache();
			else {
				var o = this.deltaQ.splice(0, a + 1),
					c = e.StoredDelta.applyMultiple(o, this.state);
				this.state = c, this.state.mtime = n, this.stateCache.mtime = n, TD.config.debug_checks && this.checkCache(), this.controller.triggerPush()
			}
		}, f.prototype.checkCache = function() {
			var i = e.StoredDelta.checkStateCache(this.state, this.deltaQ, this.stateCache);
			t.assert(i, "cache != state+Δs")
		}, f.prototype.checkInvariants = function() {
			this.hasApiid() || t.assert((0, c.default)(this.state), 'must have no "state" if no apiid'), t.assert(this.state && (0, n.default)(this.state.apiid), "apiid in non-priv state, bad"), this.isDirty() ? (t.assert(!(0, c.default)(this.deltaQ), "deltaQ must be non-empty if dirty"), t.assert(null !== this.stateCache, "cache must be present if dirty"), this.checkCache(), this.hasApiid() && t.assert(null !== this.latestDelta(), "latestDelta() must not return null for Δid for dirty object")) : (t.assert((0, c.default)(this.deltaQ), "deltaQ must be empty if not dirty"), t.assert(null === this.stateCache, "cache must be absent if not dirty"))
		}, f.prototype.isDirty = function() {
			return this.hasApiid() ? 0 !== this.deltaQ.length : (t.assert(0 !== this.deltaQ.length, "should be dirty if no apiid"), !0)
		}, f
	}(TD.storage, TD.sync.util, TD.sync.tdapi, TD.util, TD.core.defer, TD.storage.notification, TD.sync.trace)
}, function(e, t, i) {
	"use strict";
	var n = v(i(68)),
		s = v(i(43)),
		r = v(i(828)),
		a = v(i(170)),
		o = v(i(15)),
		l = v(i(281)),
		c = v(i(122)),
		u = v(i(356)),
		d = v(i(229)),
		h = v(i(80)),
		m = v(i(88)),
		f = v(i(77)),
		p = v(i(46)),
		g = v(i(425));

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.StoredDelta = function(e, t, i, v, T) {
		function w(t) {
			this.type = t, e.assert(_[t] && b, "unknown type " + t), this.args = (0, g.default)(arguments).slice(1), this.id = "Δ" + (new Date).getTime() + (0, p.default)(":"), y(t, this.args), "init" === t && (e.verboseLog("initialisation delta", this.id, this.args[0]), "mtime" in this.args[0] && e.warn("WARNING init Δ contains mtime!", e.clone(this.args[0])))
		}
		var b = {
				init: 1,
				set: 2,
				del: 1,
				lmove: 3,
				ldel: 2,
				linsert: 3,
				ladd: 3,
				ltrunc: 2,
				ldedupe: 1,
				hset: 3,
				other: 0
			},
			y = function(t, i) {
				var n = b[t];
				switch (e.assert(i.length === n, "wrong no. args for " + t + ", expected " + n + " got " + i.length), t) {
					case "ltrunc":
						e.assert("number" == typeof i[1], "ltrunc: length must be number");
						break;
					case "linsert":
					case "ladd":
					case "ldel":
					case "lmove":
						e.assert("string" == typeof i[1], "list elements must be strings")
				}
			};
		w.prototype.toString = function() {
			return "StoredDelta[" + this.id + "](" + this.type + ": " + (0, n.default)(this.args) + ")"
		}, w.prototype.serialise = function() {
			return [this.type].concat(this.args)
		};
		var _ = {
			init: function(t, i) {
				if (!(0, f.default)(t, {})) {
					var n = e.clone(t),
						s = e.clone(i);
					return delete n.mtime, delete s.mtime, (0, f.default)(n, s) ? (e.warn("WARNING Δ init_state === state", e.clone(t), "init:", i.mtime, "state:", t.mtime), t) : void e.warn("WARNING discarding init_state", e.clone(i), "in favour of", e.clone(t))
				}
				return (0, m.default)(i)
			},
			set: function(e, t, i) {
				return e[t] = i, e
			},
			del: function(e, t) {
				return delete e[t], e
			},
			lmove: function(e, t, i, n) {
				var s = (0, m.default)(e[t]),
					r = s.indexOf(i);
				if (-1 != r) return s.splice(r, 1), s.splice(r + n, 0, i), e[t] = s, e
			},
			ldel: function(e, t, i) {
				var n;
				return n = (0, h.default)(e[t]) ? [] : (0, d.default)(e[t], i), e[t] = n, e
			},
			linsert: function(e, t, i, n) {
				var s;
				return (s = (0, h.default)(e[t]) ? [] : (0, m.default)(e[t])).splice(n, 0, i), e[t] = s, e
			},
			ladd: function(e, t, i, n) {
				return (0, u.default)(e[t], i) ? e : ((s = (0, h.default)(e[t]) ? [] : (0, m.default)(e[t])).splice(n, 0, i), e[t] = s, e);
				var s
			},
			ltrunc: function(e, t, i) {
				var n;
				return (n = (0, h.default)(e[t]) ? [] : e[t]).length > i && n.splice(i, n.length - i), e[t] = n, e
			},
			ldedupe: function(e, t) {
				var i;
				return i = (0, h.default)(e[t]) ? [] : e[t], e[t] = (0, c.default)(i), e
			},
			hset: function(e, t, i, n) {
				var s = (0, m.default)(e[t]);
				return s || (s = {}), s[i] = n, e[t] = s, e
			}
		};
		w.prototype.apply = function(t) {
			var i = (0, m.default)(t),
				n = _[this.type].apply(this, [i].concat(this.args));
			return n || (e.warn("WARNING: unable to apply Δ", this.toString(), "to", e.clone(t)), (0, m.default)(t))
		}, w.prototype.applyToValue = function(e, t) {
			var i = {};
			return i[e] = t, this.apply(i)[e]
		}, w.listPermutator = function(t, i, n) {
			var s = [],
				r = (0, m.default)(i);
			if (e.verboseLog("StoredDelta.listPermutator", i, "→", n), i.length != (0, l.default)(i).length || n.length != (0, l.default)(n).length) throw e.stateLog("Duplicate error in listPermutator", {
				original: i,
				original_: (0, l.default)(i),
				target: n,
				targetu: (0, l.default)(n)
			}), new TypeError("lists must not contain duplicates");
			(0, o.default)((0, a.default)(i, n), function(e) {
				s.push(new w("ldel", t, e)), r.splice(r.indexOf(e), 1)
			});
			for (var c = 0; c < n.length; c++)
				if (r[c] != n[c]) {
					var u = n[c],
						d = r.indexOf(u); - 1 === d ? (s.push(new w("ladd", t, u, c)), r.splice(c, 0, u)) : (s.push(new w("lmove", t, u, c - d)), r.splice(d, 1), r.splice(c, 0, u))
				} return s
		}, w.applyMultiple = function(e, t) {
			return (0, r.default)(e, function(e, t) {
				return t.apply(e)
			}, t)
		};
		return w.deserialiseDeltas = function(e) {
			return (0, s.default)(e, function(e) {
				return function(e, t) {
					function i() {
						return e.apply(this, t)
					}
					return i.prototype = e.prototype, new i
				}(w, e)
			})
		}, w.checkStateCache = function(t, i, n) {
			if (null === n && 0 === i.length) return !0;
			var s = (0, m.default)(n);
			delete s.mtime;
			var r = w.applyMultiple(i, (0, m.default)(t));
			return delete r.mtime, !!(0, f.default)(s, r) || (e.stateLog("cache", n, "!= goal", r, "for", t, "+", i), !1)
		}, w
	}(TD.sync.util, TD.sync.tdapi, TD.util, TD.core.defer, TD.storage.notification)
}, , , , function(e, t, i) {
	"use strict";
	var n, s, r, a, o, l, c = T(i(184)),
		u = T(i(15)),
		d = T(i(112)),
		h = T(i(43)),
		m = T(i(63)),
		f = T(i(120)),
		p = T(i(46)),
		g = T(i(99)),
		v = T(i(55));

	function T(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.SobjController = (n = TD.storage, s = TD.sync.util, r = TD.sync.tdapi, TD.storage.notification, a = TD.core.defer, o = TD.sync.trace, (l = function() {
		this._objects = null, this._objectsByApiid = null, this.reqsinflight = null, this.apiEndpoint = null, this._moduleName = null
	}).prototype.toString = function() {
		return "<SobjController[" + (this._moduleName || "unknown") + "]>"
	}, l.prototype.triggerPush = function() {
		throw s.printStacktrace(), new Error("NotImplemented")
	}, l.prototype.bindTrigger = function(e) {
		var t = s.makeThingScheduler,
			i = n.store.getTwitterLoginAccountID.bind(n.store);
		this.triggerPush = t((0, v.default)(this.pushDirty, this), null, e, i)
	}, l.prototype.remove = function(e) {
		var t = this._objects[e];
		t && (t.managed = !1, t.hasApiid() && delete this._objectsByApiid[t.getApiid()]), delete this._objects[e]
	}, l.prototype.getAll = function() {
		return (0, g.default)(this._objects)
	}, l.prototype.getByApiid = function(e) {
		return s.assert(e, "must provide apiid; " + s.repr(e)), s.assert("undefined" != e, "huh? where did that come from?"), this._objectsByApiid[e]
	}, l.prototype.pushPreflight = function() {
		return a.succeed(null)
	}, l.prototype.pushDirty = function() {
		TD.config.debug_checks && this.checkInvariants();
		var e = (0, p.default)("pD:");
		o.push(this, "pushDirty", null, e);
		var t = this,
			i = this.pushPreflight();
		return i.addCallback(function() {
			var i = (0, f.default)(t._objects, function(e) {
				return e.isDirty()
			});
			if ((0, m.default)(i)) return o.push(t, "(not dirty)", null, e), a.succeed();
			var n = t.pushObjects(i, e);
			return n.addCallback(function() {
				return t.pushDirty()
			}), n
		}), i
	}, l.prototype.prePushCheckInvariants = function(e) {}, l.prototype.pushObjects = function(e, t) {
		if (s.verboseLog(this.toString() + ".pushObjects()", this, e), t || (t = (0, p.default)("pO:")), o.push(this, "pushObjects", e, t), s.assert(this.apiEndpoint, "api endpoint must be set"), (0, m.default)(e)) return o.push(this, "(empty)", e, t), a.succeed([]);
		TD.config.debug_checks && this.prePushCheckInvariants(e);
		var i = (0, h.default)(e, function(e) {
				return e.getStateForBackend()
			}),
			n = (0, d.default)(i, "Δid"),
			r = (0, d.default)(i, "state");
		o.push(this, "objs+Δs", e, n, t), TD.config.debug_checks && ((0, u.default)(r, function(e) {
			s.assert(e.mtime || !e.id, "for a test and set request, we expect (require) either mtime (modify) or absence of id (create) for every object")
		}), (0, m.default)(this.reqsinflight) || s.warn("WARNING! called pushObjects", e, "when already have requests in flight", s.clone(this.reqsinflight)));
		var l = this.pushObjectsRequest(r, e, n, t);
		return l.addCallbackWith(this, function(e) {
			return this._processTSResults(e.responses, e.objects, e.deltaIds, e.respHeaders, e.pushid)
		}), l.addErrback(function(e) {
			return TD.util.metric("sync:sobj_controller:push_objects:error"), e
		}), l
	}, l.prototype.pushObjectsRequest = function(e, t, i, n) {
		var s = this;
		return TD.storage.store.getOrCreateTwitterLoginAccount().addCallback(function(t) {
			return TD.net.ajax.request(TD.config.twitter_api_base + "/1.1/tweetdeck" + s.apiEndpoint, {
				method: "POST",
				params: e,
				headers: {
					"x-td-mtime-check": "partial",
					"content-type": "application/json"
				},
				account: t
			})
		}).addCallback(function(e) {
			return {
				responses: e.data,
				objects: t,
				deltaIds: i,
				respHeaders: {
					"x-td-mtime": e.xhr.getResponseHeader("x-td-mtime")
				},
				pushid: n
			}
		})
	}, l.prototype._processTSResults = function(e, t, i, n, a) {
		o.tsResults(this, e, t, i, n, a), e instanceof r.Conflict && (o.conflicts(this, e.body, t, n, a), e = e.body), s.assert(e.length == t.length, "wrong number of responses/objects!"), s.assert(e.length == i.length, "wrong number of responses/deltas!"), s.verboseLog("objects", t, "deltas", i), (0, u.default)(i, function(e) {
			s.assert(null !== e, "Δid must not be null")
		});
		var l, d = n["x-td-mtime"];
		s.assert(d, "require x-td-mtime header in object PUT");
		for (var h, m, f = this, p = 0; p < e.length; p++) l = e[p], (0, c.default)(l) ? (s.verboseLog("_processTSResults", t[p], e[p]), h = t[p], m = e[p], s.verboseLog("_processTSResults:check_set_apiid", h, m), h.hasApiid() ? s.assert(h.getApiid() == m, "apiid mismatch") : (f._objectsByApiid[m] = h, h.setApiid(m)), t[p].commit(i[p], d)) : (o.conflict(this, l, t[p], n, a), s.verboseLog("_processTSResults: not an apiid:", l), t[p].newRemoteState(e[p]))
	}, l.prototype.pushObject = function(e, t) {
		s.verboseLog(this.toString() + ".pushObject()", this, e, t), o.push(this, "object", e);
		var i = e.getStateForBackend(),
			n = i["Δid"],
			r = i.state;
		s.assert(r.mtime, "for a test and set request, we expect (require) mtime");
		var a = this.pushObjectRequest(t, r, e, n);
		return a.addCallbackWith(this, function(e) {
			return this._processTSResult(e.response, e.object, e.deltaId, e.respHeaders)
		}), a.addErrback(function(e) {
			return TD.util.metric("sync:sobj_controller:push_object:error"), e
		}), a
	}, l.prototype.pushObjectRequest = function(e, t, i, n) {
		return TD.storage.store.getOrCreateTwitterLoginAccount().addCallback(function(i) {
			return TD.net.ajax.request(TD.config.twitter_api_base + "/1.1/tweetdeck" + e, {
				method: "POST",
				params: t,
				headers: {
					"x-td-iff-mtime": t.mtime,
					"content-type": "application/json"
				},
				account: i
			})
		}).addCallback(function(e) {
			return {
				response: e.data || "",
				object: i,
				deltaId: n,
				respHeaders: {
					"x-td-mtime": e.xhr.getResponseHeader("x-td-mtime")
				}
			}
		})
	}, l.prototype._processTSResult = function(e, t, i, n) {
		var a;
		if (o.tsResult(this, e, t, i, n), s.verboseLog("object", t, "delta", i), s.assert(null !== i, "Δid must not be null"), e instanceof r.Conflict) s.verboseLog("_processTSResult: got a conflict:", e), a = t.newRemoteState(e.body);
		else {
			s.assert((0, c.default)(e), "don't know how to handle response");
			var l = n["x-td-mtime"];
			s.assert(l, "require x-td-mtime header in object PUT"), s.verboseLog("_processTSResult", t, e), a = t.commit(i, l)
		}
		return a
	}, l.prototype.checkInvariants = function() {
		var e = this;
		(0, u.default)(this._objects, function(t) {
			var i = t.checkInvariants;
			i && i.call(t), t.hasApiid() && s.assert(e._objectsByApiid[t.getApiid()], "all managed objects with apiid must be in _objectsByApiid")
		})
	}, l)
}, function(e, t, i) {
	"use strict";
	var n, s, r, a, o = c(i(63)),
		l = c(i(15));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.FeedController = (n = TD.storage, s = TD.sync.util, TD.sync.tdapi, r = TD.storage.notification, TD.core.defer, (a = function() {
		var e = this;
		this.apiEndpoint = "/feeds", this._moduleName = "feeds", this.reqsinflight = [], this.bindTrigger("feedctr"), e._objects = {}, e._objectsByApiid = {}, this.toString = function() {
			return "<FeedController>"
		}, this.init = function() {
			s.trace("feedController init"), TD.config.debug_checks && this.checkInvariants()
		}, this.reset = function() {
			this._objects = {}, this._objectsByApiid = {}
		}, this.updateFromBackend = function(e) {
			var t = this;
			s.stateLog("feedController.updateFromBackend:", e), (0, l.default)(e, function(e, i) {
				var s = t._objectsByApiid[i];
				s ? (s.newRemoteState(e), r.notify("/storage/feed/updated", s)) : ((s = n.Feed.newFromBackendState(e)).setApiid(i), t.manage(s), r.notify("/storage/feed/new", s))
			})
		}, this.get = function(e) {
			return this._objects[e]
		}, this.manage = function(t) {
			t.managed = !0;
			var i = this._objects[t.getKey()];
			return i && t === i ? e.triggerPush() : (i && (s.warn("WARNING replacing feed", i, "with", t, "please use feedController.getOrCreateFeed", [s.getStack().split("\n")]), i.getLatestTime() > t.getLatestTime() && s.warn("Warning: latestTime weirdness:", i.getLatestTime(), t.getLatestTime()), i.hasApiid() && t.setApiid(i.getApiid()), i.isDirty() && ((0, o.default)(i.deltaQ) || "init" != i.deltaQ[0].type) && s.assert(!i.isDirty(), "houston, we have a problem")), this._objects[t.getKey()] = t, t.hasApiid() && (this._objectsByApiid[t.getApiid()] = t), e.triggerPush())
		}, this.manageFeeds = function(t) {
			for (var i = 0; i < t.length; i++) e.manage(t[i])
		}, this._selfcheckapiids = function() {
			for (var t in this._objects) {
				var i = this._objects[t];
				i.apiid && _assert(i == e.getByApiid(i.apiid), "lookup failed")
			}
		}, e.isEmpty = function() {
			return (0, o.default)(this._objects)
		}, e.getOrCreateFeed = function(e, t, i, s, r) {
			var a, o, l;
			if ("search" !== e || s.term || s.baseQuery && s.searchFilterData && (a = new TD.vo.SearchFilter(s.searchFilterData), s.term = [s.baseQuery, a.getQueryString()].join(" ")), l = n.Feed.generateKeyFor(i, e, s), !(o = this._objects[l])) {
				var c = {
					type: e,
					service: t,
					accountkey: i,
					metadata: s,
					apiid: r
				};
				o = new n.Feed(c)
			}
			return r && (o.apiid = r, this._objectsByApiid[r] = o), o
		}
	}).prototype = new n.SobjController, n.feedController = new a, a)
}, function(e, t, i) {
	"use strict";
	var n, s, r, a, o = p(i(63)),
		l = p(i(43)),
		c = p(i(129)),
		u = p(i(99)),
		d = p(i(120)),
		h = p(i(15)),
		m = p(i(0)),
		f = p(i(21));

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.ColumnController = (n = TD.storage, s = TD.sync.util, TD.sync.tdapi, r = TD.storage.notification, TD.core.defer, ((a = function() {
		var e = this;
		this.apiEndpoint = "/columns", this._moduleName = "columns", this.reqsinflight = [], this.bindTrigger("colctr"), m.default.subscribe("/storage/account/new", function(t) {
			e.addToCombinedColumns(t)
		}), m.default.subscribe("/storage/client/account_whitelist_changed", function() {
			e.rebuildScheduledColumns()
		}), this._objects = {}, this._objectsByApiid = {}, this.toString = function() {
			return "<ColumnController>"
		}, this.init = function() {
			s.trace("columnController init"), (0, m.default)(document).one("TD.ready", t), TD.config.debug_checks && this.checkInvariants()
		}, this.reset = function() {
			this._objects = {}, this._objectsByApiid = {}, (0, m.default)(document).off("TD.ready", t)
		};
		var t = function() {
			e.rebuildScheduledColumns()
		};
		this.updateFromBackend = function(e) {
			var t = this;
			s.stateLog("columnController.updateFromBackend:", e), (0, h.default)(e, function(e, i) {
				var s = t._objectsByApiid[i];
				s ? s.newRemoteState(e) : ((s = n.Column.newFromBackendState(e)).setApiid(i), t.manage(s), r.notify("/storage/column/new", s))
			})
		}, this.get = function(e) {
			return this._objects[e]
		}, this.getColumnsContainingFeed = function(e) {
			var t = [];
			return (0, h.default)(this._objects, function(i) {
				(0, h.default)(i.getFeedKeys(), function(n) {
					n == e && t.push(i)
				})
			}), t
		}, this.getColumnsByType = function(e) {
			return (0, d.default)(this._objects, function(t) {
				return t.getType() === e
			})
		}, this.manage = function(e) {
			return e.managed = !0, s.assert(e.getKey(), "columns must have valid keys to be managed!"), this._objects[e.getKey()] = e, e.hasApiid() && (this._objectsByApiid[e.getApiid()] = e), this.triggerPush()
		}, this.remove = function(e) {
			var t = this._objects[e];
			t && (t.managed = !1), delete this._objects[e]
		}, this.getAll = function() {
			return (0, u.default)(this._objects)
		}, this.getByApiid = function(e) {
			s.assert(e, "must provide apiid; " + s.repr(e)), s.assert("undefined" !== e, "huh? where did that come from?");
			var t = this._objectsByApiid[e];
			return t || (s.warn("WARNING: col ", e, " not found in cols_by_apiid ", (0, c.default)(this._objectsByApiid)), s.stateLog("this._objects, apiids; ", s.pformat((0, l.default)(this._objects, function(e, t) {
				return [t, e.getApiid()]
			})))), t
		}, this.isEmpty = function() {
			return (0, o.default)(this._objects)
		}, this._selfcheckapiids = function() {
			for (var e in this._objects) {
				var t = this._objects[e];
				t.hasApiid() && _assert(t == this.getByApiid(t.getApiid()), "lookup failed")
			}
		}, this.addToCombinedColumns = function(e) {
			if (s.stateLog("ADDING ACCOUNT TO COMBINED COLS", e), n.clientController.client)
				for (var t, i, r, a, o = n.clientController.client.getColumnOrder(), l = {
						home: !0,
						me: !0,
						privateMe: !0
					}, c = function(e) {
						return e.getKey()
					}, u = 0; u < o.length; u++)
					if (t = this.get(o[u])) {
						if (l[i = t.getType()]) {
							switch (r = null, i) {
								case "me":
									r = this.getMeFeeds([e]);
									break;
								case "privateMe":
									r = this.getInboxFeeds([e])
							}
							r && (a = r.map(c), t.setFeedKeys(t.getFeedKeys().concat(a)), t.managed && n.feedController.manageFeeds(r))
						}
					} else s.warn("Warning: Column not found!")
		}, this.rebuildScheduledColumns = function() {
			var e = this.getScheduledFeeds(),
				t = e.map(function(e) {
					return e.getKey()
				});
			this.getColumnsByType("scheduled").forEach(function(i) {
				i.setFeedKeys(t), i.managed && n.feedController.manageFeeds(e), setTimeout(function() {
					TD.controller.feedScheduler.refreshColumn(i.getKey())
				}, 200)
			})
		};
		var i = function(e, t) {
			return n.feedController.getOrCreateFeed(e, t.getType(), t.getKey(), {})
		};
		this.getMeFeeds = function(e) {
			for (var t = [], n = 0; n < e.length; n++) "twitter" === e[n].getType() && t.push(i("mentions", e[n]));
			return t
		}, this.getInboxFeeds = function(e) {
			for (var t = [], n = 0; n < e.length; n++) "twitter" === e[n].getType() && t.push(i("direct", e[n]));
			return t
		}, this.getScheduledFeeds = function() {
			return TD.storage.accountController.getAccountsForService("twitter").map(i.bind(this, f.default.feedTypes.SCHEDULED))
		}, this.prePushCheckInvariants = function(e) {
			(0, h.default)(e, function(e) {
				(0, h.default)(e.getFeedKeys(), function(e) {
					s.assert(n.feedController.get(e), "feeds must exist + be managed in columns push; " + e), s.assert(n.feedController.get(e).hasApiid(), "feeds must all have apiid in columns push; " + e)
				})
			})
		}
	}).prototype = new n.SobjController).pushPreflight = function() {
		return n.feedController.triggerPush(.05)
	}, n.columnController = new a, a)
}, function(e, t, i) {
	"use strict";
	var n, s, r, a, o, l, c = h(i(68)),
		u = h(i(55)),
		d = h(i(32));

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.ClientController = (n = TD.storage, s = TD.sync.util, TD.util, r = TD.sync.tdapi, TD.storage.notification, a = TD.core.defer, o = TD.sync.trace, (l = function() {
		var e = this;
		this.apiEndpoint = "/clients", (0, d.default)(function() {
			var t = s.makeThingScheduler,
				i = n.store.getTwitterLoginAccountID.bind(n.store);
			e.triggerPush = t((0, u.default)(e.pushIfDirty, e), null, "clisync", i)
		}), this._moduleName = "clients", this.reqsinflight = [], this._objects = {}, this._objectsByApiid = this._objects, this.client = null, this.toString = function() {
			return "<ClientController>"
		}, this.init = function() {
			s.stateLog("client controller init start", this.client), s.trace("clientController init"), TD.config.sync_name in this._objects ? (this.client = this._objects[TD.config.sync_name], s.assert(this.client.getName(), "need name!"), s.stateLog("client controller new client:", this.client)) : s.stateLog("no initial client state; deferring client creation"), s.stateLog("clientController.init: client: ", this.client)
		}, this.reset = function() {
			this.client = null
		}, this.createNewClient = function() {
			s.stateLog("clientController.createNewClient()");
			var e = this,
				t = {
					name: TD.config.sync_name,
					columns: [],
					settings: {}
				},
				i = {},
				a = r.requestWithBody("/clients", "POST", t, i);
			return a.addCallback(function() {
				s.stateLog("createNewClient resp headers; ", i);
				var r = i["x-td-mtime"];
				return s.assert(r, "require x-td-mtime header in client POST"), t.mtime = r, e.client = n.Client.newFromBackendState(t), s.assert(e.client.getName(), "Client should have name at this point"), e._objects[e.client.getName()] = e.client, s.stateLog("clientController.createNewClient with", e.client.state), e.triggerPush()
			}), a
		}, this.createNewBackendState = function() {
			var e = {
					name: "blackbird",
					columns: [],
					settings: {
						settings: {
							version: TD.controller.upgrade.CURRENT_VERSION
						}
					}
				},
				t = TD.net.ajax.request(TD.config.twitter_api_base + "/1.1/tweetdeck/clients", {
					method: "POST",
					params: (0, c.default)(e)
				});
			return t.addCallbackWith(this, function(t) {
				var i = t.xhr.getResponseHeader("x-td-mtime");
				return s.assert(i, "require x-td-mtime header in client POST"), e.mtime = i, this.client = n.Client.newFromBackendState(e), this._objects[this.client.getName()] = this.client, s.stateLog("clientController.createNewClient with", this.client.state), this.triggerPush()
			}), t
		}, this.updateFromBackend = function(e) {
			null === this.client ? (this.client = n.Client.newFromBackendState(e), this._objects[this.client.getName()] = this.client, s.stateLog("client controller (ufb) new client:", this.client)) : this.client.newRemoteState(e)
		}, this.pushIfDirty = function() {
			if (TD.config.debug_checks && this.checkInvariants(), o.push(this, "dirty", null), this.client.isDirty()) {
				o.push(this, "dirty", this.client);
				var e = this,
					t = n.columnController.triggerPush();
				return t.addCallback(function() {
					return s.assert(e.client.isDirty(), "?!? push dirty, but not dirty"), e.pushObject(e.client, "/clients/" + e.client.getName())
				}), t.addCallback(function() {
					return e.pushIfDirty()
				}), t
			}
			return o.push(this, "not dirty", null), a.succeed()
		}
	}).prototype = new n.SobjController, n.clientController = new l, l)
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = d(i(68)),
		o = d(i(88)),
		l = d(i(63)),
		c = d(i(110)),
		u = d(i(80));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.Feed = (n = TD.storage, s = TD.sync.util, TD.sync.tdapi, TD.util, ((r = function e(t, i) {
		this._init(t), (0, u.default)(i) || (this.state = this.transformToLocal(i)), this.setKey(e.generateKeyFor(this.getAccountKey(), this.getType(), this.getMetadata()))
	}).prototype = new n.StoredObj(n.feedController)).eventname = "/storage/feed", r.generateKeyFor = function(e, t, i) {
		i = i || {};
		var n = [e, t, TD.util.deterministicObjectHash(i)];
		return s.assert(e, "accountkey not set in Feed.generateKey"), s.assert(t, "type not set in Feed.generateKey"), encodeURI(n.join(":"))
	}, r.prototype.getType = function() {
		return this.get("type")
	}, r.prototype.setType = function(e) {
		return this.immutableSet("type", e)
	}, r.prototype.getService = function() {
		return this.get("service")
	}, r.prototype.setService = function(e) {
		return this.immutableSet("service", e)
	}, r.prototype.getAccountKey = function() {
		return this.get("accountkey")
	}, r.prototype.setAccountKey = function(e) {
		return this.immutableSet("accountkey", e)
	}, r.prototype.getTopSortIndex = function() {
		var e = this.get("marks");
		return e ? e.top_sort_index ? e.top_sort_index || null : {
			value: this.getLatestTime(),
			type: "milliseconds"
		} : null
	}, r.prototype.setTopSortIndex = function(e) {
		var t = this.get("marks") || {};
		return Array.isArray(t) && (t = (0, c.default)({}, t)), t[0] = t[0] || {}, t.top_sort_index = e, this.set("marks", t)
	}, r.prototype.getLatestTime = function() {
		var e = this.get("marks");
		return !e || (0, l.default)(e) ? 0 : e[0].last_notification || 0
	}, r.prototype.setLatestTime = function(e) {
		var t = this.get("marks");
		return !t || (0, l.default)(t) ? this.set("marks", [{
			last_notification: e
		}]) : (t[0].last_notification = e, this.set("marks", t))
	}, r.prototype.getMetadata = function() {
		return (0, o.default)(this.get("metadata"))
	}, r.prototype.setMetadata = function(e) {
		return this.immutableSet("metadata", e)
	}, r.prototype.transformForRemote = function(e, t) {
		var i = n.accountController.get(e.accountkey);
		s.assert(i && i.getUserID(), "must have acct + uid for feed transform");
		var r = i.getUserID(),
			o = {
				type: e.type,
				service: e.service,
				account: {
					userid: r.toString()
				},
				metadata: (0, a.default)(e.metadata),
				marks: e.marks
			};
		return e.mtime && (o.mtime = e.mtime), t.apiid && (o.id = t.apiid), o
	}, r.prototype.reprocessNotificationMarks = function(e, t) {
		var i = null,
			n = null;
		if (t && t.marks && !(0, l.default)(t.marks) && (i = t.marks[0].last_notification, n = t.marks), e.marks && !(0, l.default)(e.marks)) {
			n = e.marks;
			var s = e.marks[0].last_notification;
			i && s ? i = Math.max(i, s) : s && (i = s)
		}
		return n ? n[0].last_notification = i : n = i ? [{
			last_notification: i
		}] : [], n
	}, r.prototype.transformToLocal = function(e) {
		return {
			type: e.type,
			service: e.service,
			accountkey: n.Account.generateKeyFor(e.service, e.account.userid),
			metadata: JSON.parse(e.metadata),
			mtime: e.mtime,
			marks: e.marks
		}
	}, r.newFromBackendState = function(e) {
		return new r(null, e)
	}, r)
}, function(e, t, i) {
	"use strict";
	var n = d(i(43)),
		s = d(i(15)),
		r = d(i(122)),
		a = d(i(38)),
		o = d(i(80)),
		l = d(i(46)),
		c = d(i(0)),
		u = i(33);

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.Column = function(e, t, i, d, h) {
		var m = function(e) {
			this._init(e), this.privateState.key || (this.privateState.key = "c" + (new Date).getTime() + (0, l.default)("s"))
		};
		(m.prototype = new e.StoredObj(e.columnController)).eventname = "/storage/column", m.prototype.getTitle = function() {
			var e = this.get("title");
			return (0, o.default)(e) ? "loading…" : e
		}, m.prototype.setTitle = function(e) {
			return this.set("title", e)
		}, m.prototype.getDescription = function() {
			return this.get("description")
		}, m.prototype.setDescription = function(e) {
			return this.set("description", e)
		}, m.prototype.getType = function() {
			return this.get("type")
		}, m.prototype.setType = function(e) {
			return this.set("type", e)
		}, m.prototype.getFilters = function() {
			return this.get("filters")
		}, m.prototype.setFilters = function(e) {
			return this.setValueIffDifferent("filters", e)
		}, m.prototype.getHasSound = function() {
			var e = this.get("settings");
			return Boolean(e && e.has_sound)
		}, m.prototype.setHasSound = function(e) {
			return e = Boolean(e), h.notify("/storage/column/column_flags_changed", "has_sound", e, this), this.dictSet("settings", "has_sound", e)
		}, m.prototype.getHasNotification = function() {
			var e = this.get("settings");
			return Boolean(e && e.has_notification)
		}, m.prototype.setHasNotification = function(e) {
			return e = Boolean(e), h.notify("/storage/column/column_flags_changed", "has_notification", e, this), this.dictSet("settings", "has_notification", e)
		}, m.prototype.getMediaPreviewSize = function() {
			var e = this.get("settings");
			return e ? e.media_preview_size : null
		}, m.prototype.setMediaPreviewSize = function(e) {
			return (0, c.default)(document).trigger("dataColumnSettings", {
				columnKey: this.getKey(),
				mediaPreviewSize: e
			}), (0, u.generic)({
				page: "column",
				section: "media_preview_size",
				action: "click",
				element: e
			}, {
				previousSize: this.getMediaPreviewSize()
			}), this.dictSet("settings", "media_preview_size", e)
		}, m.prototype.getClearedTimestamp = function() {
			var e = this.get("settings");
			return e && e.cleared_timestamp ? e.cleared_timestamp : 0
		}, m.prototype.setClearedTimestamp = function(e) {
			return h.notify("/storage/column/column_marks_changed", "cleared_timestamp", e, this), this.dictSet("settings", "cleared_timestamp", e)
		}, m.prototype.getFeedKeys = function() {
			return this.get("feedkeys")
		}, m.prototype.setFeedKeys = function(e) {
			return this.setValueIffDifferent("feedkeys", (0, a.default)(e) ? (0, r.default)(e.sort(), !0) : e, "/storage/column/feeds_changed")
		};
		var f = ["mtime", "type", "title", "description", "settings", "position", "bookmarks", "filters"];
		return m.prototype.transformForRemote = function(i, r) {
			var a = {};
			return (0, s.default)(f, function(e) {
				a[e] = i[e]
			}), a.feeds = (0, n.default)(i.feedkeys, function(i) {
				var n = e.feedController.get(i);
				return t.assert(n && n.hasApiid(), "feeds must have apiid when transforming column for remote"), n.getApiid()
			}), i.mtime && (a.mtime = i.mtime), r.apiid && (a.id = r.apiid), a
		}, m.prototype.transformToLocal = function(i) {
			TD.config.debug_checks && (0, s.default)(i.feeds, function(n) {
				t.assert(e.feedController.getByApiid(n), "feed not found by apiid in " + t.pformat(i.feeds))
			});
			var r = {};
			return (0, s.default)(f, function(e) {
				r[e] = i[e]
			}), r.feedkeys = (0, n.default)(i.feeds, function(t) {
				var i = e.feedController.getByApiid(t);
				return i ? i.getKey() : null
			}).filter(function(e) {
				return null != e
			}), r.apiid = i.id, r
		}, m.newFromBackendState = function(e) {
			var t = new m;
			return t.newRemoteState(e), t
		}, m
	}(TD.storage, TD.sync.util, TD.sync.tdapi, TD.util, TD.storage.notification)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = c(i(15)),
		s = c(i(63)),
		r = c(i(88)),
		a = c(i(830)),
		o = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(193)),
		l = i(37);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = (window.location.search.toLowerCase().split("requiregdprconsent=")[1] || "").split("&")[0];
	t.default = TD.storage.Account = function(e, t, i, c, d) {
		var h = function(e, t) {
			e ? (this.state = (0, r.default)(e), this.privateState = {}) : (this.state = {}, this.privateState = {}), this.triggerPush = function() {
				return o.succeed()
			}, t && t.contributor && this.makeContributor()
		};
		(h.prototype = new e.StoredObj(e.accountController)).eventname = "/storage/account", h.generateKeyFor = a.default.generateAccountKey, h.getIdentifiersForKey = function(e) {
			var t = e.split(":");
			return {
				service: t[0],
				id: t[1]
			}
		}, h.gdprConsentFeatureIsEnabled = !1, l.gdprConsent$.subscribe(function(e) {
			return h.gdprConsentFeatureIsEnabled = e
		}), h.prototype.manuallyAddConsentAccounts = function() {
			return u.split(",")
		}, h.prototype.requiresConsent = function() {
			return !!h.gdprConsentFeatureIsEnabled && (this.manuallyAddConsentAccounts().includes(this.getUsername().toLowerCase()) || this.get("require_some_consent"))
		}, h.generateRemoteDataForTwitterUser = function(e) {
			return {
				key: h.CONTRIBUTOR_OAUTH_TOKEN,
				token: "",
				secret: "",
				screen_name: e.screen_name,
				service: "twitter",
				uid: e.id_str,
				avatar: e.profile_image_url_https,
				name: e.name,
				require_some_consent: e.require_some_consent
			}
		}, h.OAUTH2_AUTH_TOKEN = "COOKIE", h.CONTRIBUTOR_OAUTH_TOKEN = "CONTRIBUTOR", h.UNKNOWN_SCREEN_NAME = "???", h.prototype.computeKey = function() {
			if (!this.getType() || !this.getUserID()) throw {
				name: "NotReadyError",
				message: "cannot computeKey on account; insufficient data"
			};
			this.setKey(h.generateKeyFor(this.getType(), this.getUserID()))
		}, h.prototype.set = function(e, t) {
			return this.state[e] = t, i.notify(this.eventname + "/change", this), this.triggerPush()
		}, h.prototype.checkInvariants = function() {
			t.assert((0, s.default)(this.deltaQ), "Accounts must not have Δs"), t.assert(null === this.stateCache, "Accounts do not use stateCache")
		}, h.prototype.setIsVerified = function(e) {
			return this.setPrivate("verified", e)
		}, h.prototype.getIsVerified = function() {
			return this.getPrivate("verified")
		}, h.prototype.getUsername = function() {
			return this.get("username")
		}, h.prototype.setUsername = function(e) {
			return this.set("username", e)
		}, h.prototype.getName = function() {
			return this.get("name")
		}, h.prototype.setName = function(e) {
			return this.set("name", e)
		}, h.prototype.getUserID = function() {
			return this.get("userId")
		}, h.prototype.setUserID = function(e) {
			return this.set("userId", e)
		}, h.prototype.getType = function() {
			return this.get("type")
		}, h.prototype.setType = function(e) {
			return this.set("type", e)
		}, h.prototype.getOAuthToken = function() {
			return this.get("oauth_token")
		}, h.prototype.setOAuthToken = function(e) {
			return this.set("oauth_token", e)
		}, h.prototype.getTokenSecret = function() {
			return this.get("token_secret")
		}, h.prototype.setTokenSecret = function(e) {
			return this.set("token_secret", e)
		}, h.prototype.getProfileImageURL = function() {
			var e = this.get("profileImageURL");
			return e && TD.util.isRetina() && (e = e.replace(TD.services.TwitterUser.NORMAL_SUFFIX_REGEXP, TD.services.TwitterUser.BIGGER_SUFFIX)), e
		}, h.prototype.setProfileImageURL = function(e) {
			return this.set("profileImageURL", e)
		}, h.prototype.getIsPrivate = function() {
			return this.getPrivate("isPrivate")
		}, h.prototype.setIsPrivate = function(e) {
			return this.setPrivate("isPrivate", e)
		}, h.prototype.getUpdated = function() {
			return this.getPrivate("updated")
		}, h.prototype.setUpdated = function(e) {
			return this.setPrivate("updated", e)
		}, h.prototype.isCookieUser = function() {
			return this.getOAuthToken() === h.OAUTH2_AUTH_TOKEN
		}, h.prototype.makeOAuth2 = function() {
			return this.setOAuthToken(h.OAUTH2_AUTH_TOKEN)
		}, h.prototype.isContributor = function() {
			return this.getOAuthToken() === h.CONTRIBUTOR_OAUTH_TOKEN
		}, h.prototype.makeContributor = function() {
			return this.setOAuthToken(h.CONTRIBUTOR_OAUTH_TOKEN)
		}, h.prototype.isMissingUserData = function() {
			return this.getUsername() === h.UNKNOWN_SCREEN_NAME
		}, h.prototype.getIsAdmin = function() {
			return !!(!this.isContributor() || this.getPrivate("isAdmin"))
		}, h.prototype.setIsAdmin = function(e) {
			return this.setPrivate("isAdmin", !!e)
		}, h.prototype.getStateForBackend = function(e) {
			e = e || {};
			var t = {
				secret: this.getTokenSecret(),
				screen_name: this.getUsername(),
				name: this.getName(),
				avatar: this.getProfileImageURL(),
				key: this.getOAuthToken()
			};
			return e.withIdentifiers && (t.uid = this.getUserID(), t.service = this.getType()), t
		};
		var m = {
			key: "oauth_token",
			token: "oauth_token",
			secret: "token_secret",
			screen_name: "username",
			service: "type",
			uid: "userId",
			avatar: "profileImageURL",
			name: "name"
		};
		return h.prototype.newRemoteState = function(e) {
			var i = this;
			t.stateLog(this, ".updateFromBackend(", e, ")"), (0, n.default)(m, function(t, n) {
				e[n] && i.set(t, e[n])
			}), void 0 !== e.require_some_consent && i.set("require_some_consent", e.require_some_consent)
		}, h.newFromBackendState = function(e) {
			var t = new h;
			return t.newRemoteState(e), t.computeKey(), t
		}, h.prototype.isSameUser = function(e) {
			return this.getUsername().toLowerCase() === e.toLowerCase()
		}, h
	}(TD.storage, TD.sync.util, TD.storage.notification, TD.util, TD.core.base64)
}, function(e, t, i) {
	"use strict";
	var n = h(i(120)),
		s = h(i(43)),
		r = h(i(80)),
		a = h(i(356)),
		o = h(i(15)),
		l = h(i(88)),
		c = h(i(281)),
		u = h(i(77)),
		d = h(i(0));

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.storage.Client = function(e, t, i, h, m, f, p) {
		var g = function(e) {
			t.trace("Client constructor:"), t.stateLog("Client constructor: ", e);
			var i = e && e.column_order;
			i && !(0, u.default)(i, (0, c.default)(i)) && (t.warn("WARNING! removing duplicates in column_order", (0, l.default)(i)), e.column_order = (0, c.default)(i)), t.assert(!e || !e.columns, '"columns" should not be in local client state'), this._init(e), this.managed = !0, TD.config.debug_checks && this.checkInvariants()
		};
		(g.prototype = new e.StoredObj(e.clientController)).eventname = "/storage/client", g.prototype.recent_searches_limit = 5, g.prototype.getName = function() {
			return this.get("name")
		}, g.prototype.getApiid = function() {
			return this.get("name")
		}, g.prototype.hasApiid = function() {
			return !0
		}, g.prototype.getColumnOrder = function() {
			return (0, l.default)(this.get("column_order") || [])
		}, g.prototype.setColumnOrder = function(e) {
			if ((0, o.default)(e, function(e) {
					t.precondition("string" == typeof e, "must provide string column keys")
				}), !(0, u.default)(e, (0, c.default)(e))) throw t.warn("ERROR: column_order contains duplicates:", e), new Error("column_order must not contain duplicates");
			return m.notify("/storage/client/column_order_changed"), this.setListPermutation("column_order", e)
		}, g.prototype.removeColumn = function(e) {
			return m.notify("/storage/client/column_order_changed"), this.listRemove("column_order", e)
		}, g.prototype.appendColumn = function(e) {
			return m.notify("/storage/client/column_order_changed"), this.listAdd("column_order", e)
		}, g.prototype.getAccountBlacklist = function() {
			return (0, l.default)(this.get("account_blacklist") || [])
		}, g.prototype.addToAccountBlacklist = function(t) {
			var i = this.get("account_blacklist") || [];
			if ((0, a.default)(i, t)) return f.succeed(null);
			var n = this.listAdd("account_blacklist", t);
			return m.notify("/storage/client/account_blacklist_changed", i, this.get("account_blacklist"), this), e.accountController.remove(t), n
		}, g.prototype.delFromAccountWhitelist = function(e) {
			var t = this.get("account_whitelist") || [];
			if (!(0, a.default)(t, e)) return f.succeed(null);
			var i = this.listRemove("account_whitelist", e),
				n = this.get("account_whitelist");
			return m.notify("/storage/client/account_whitelist_changed", t, n, this), (0, d.default)(document).trigger("dataAccountWhitelist", {
				accountKeys: n
			}), i
		}, g.prototype.addToAccountWhitelist = function(e) {
			var t = this.get("account_whitelist") || [];
			if ((0, a.default)(t, e)) return f.succeed(null);
			var i = this.listAdd("account_whitelist", e),
				n = this.get("account_whitelist");
			return m.notify("/storage/client/account_whitelist_changed", t, n, this), (0, d.default)(document).trigger("dataAccountWhitelist", {
				accountKeys: n
			}), i
		}, g.prototype.delFromAccountBlacklist = function(e) {
			var t = this.get("account_blacklist") || [];
			if (!(0, a.default)(t, e)) return f.succeed(null);
			var i = this.listRemove("account_blacklist", e);
			return m.notify("/storage/client/account_blacklist_changed", t, this.get("account_blacklist"), this), i
		}, g.prototype.getAccountWhitelist = function() {
			return (0, l.default)(this.get("account_whitelist"))
		}, g.prototype.getDefaultAccount = function() {
			return this.get("default_account")
		}, g.prototype.addRecentSearch = function(e) {
			return f.gatherResults([this.listRemove("recent_searches", e), this.listPrepend("recent_searches", e), this.listTruncate("recent_searches", this.recent_searches_limit)])
		}, g.prototype.getRecentSearches = function() {
			return this.get("recent_searches") || []
		}, g.prototype.removeRecentSearch = function(e) {
			this.listRemove("recent_searches", e)
		}, g.prototype.clearRecentSearches = function() {
			this.set("recent_searches", [])
		}, g.prototype.postProcessNewRemoteState = function() {
			var e = this.getColumnOrder(),
				i = (0, c.default)(e);
			(0, u.default)(i, e) || (t.warn("WARNING! found duplicates in column order, collapsing", e), this.state.column_order = i)
		}, g.prototype.setDefaultAccount = function(e) {
			return t.assert(!(0, r.default)(e), "huh? you wanted to do what now?"), this.setValueIffDifferent("default_account", e, "/storage/client/default_account_changed")
		};
		var v = ["account_blacklist", "account_whitelist", "default_account", "settings", "recent_searches"];
		return g.prototype.transformForRemote = function(i, n) {
			t.stateLog("Client.transformToLocal L", i);
			var r = {};
			(0, o.default)(v, function(e) {
				i[e] && (r[e] = i[e])
			});
			var a = {
				settings: r,
				name: i.name
			};
			return a.columns = (0, s.default)(i.column_order || [], function(i) {
				var n = e.columnController.get(i);
				return t.assert(n.hasApiid(), "Column " + i + " does not have apiid", n), n.getApiid()
			}), i.mtime && (a.mtime = i.mtime), t.stateLog("Client.transformToLocal R", a), a
		}, g.prototype.transformToLocal = function(i) {
			t.stateLog("Client.transformToLocal R", i);
			var r = {},
				a = !1;
			r.column_order = (0, n.default)((0, s.default)(i.columns, function(n) {
				if (!n) return t.warn("WARNING: bogus data in rstate.columns!", t.pformat(i.columns)), null;
				var s = e.columnController.getByApiid(n);
				return s || (t.stateLog("allocating new empty local sColumn for", n), (s = new e.Column).setApiid(n), e.columnController.manage(s), a = !0), s.getKey()
			}), Boolean), a && TD.sync.controller.ueberpull();
			var l = i.settings || {};
			return (0, o.default)(v, function(e) {
				l[e] && (r[e] = l[e])
			}), r.mtime = i.mtime, r.name = i.name, t.stateLog("Client.transformToLocal L", r), r
		}, g.prototype.setApiid = function(e) {
			t.assert(!1, "no-one should ever set apiid on Client")
		}, g.newFromBackendState = function(e) {
			var t = new g;
			return t.newRemoteState(e), t
		}, g
	}(TD.storage, TD.sync.util, TD.sync.tdapi, TD.util, TD.storage.notification, TD.core.defer, TD.sync.trace)
}, function(e, t, i) {
	"use strict";
	var n = h(i(228)),
		s = h(i(65)),
		r = h(i(9)),
		a = h(i(111)),
		o = h(i(15)),
		l = h(i(80)),
		c = h(i(0)),
		u = i(58),
		d = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(831));

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.sync.controller = function(e, t, i) {
		var h = {};

		function m() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = e.columns,
				i = void 0 === t ? {} : t,
				s = e.client,
				a = (s = void 0 === s ? {} : s).columns,
				o = void 0 === a ? [] : a,
				l = (0, n.default)(s, ["columns"]),
				c = o.filter(function(e) {
					return i[e]
				});
			return c.length !== o.length && TD.util.metric("sync:controller:fix-missing-columns:columns-missing"), (0, r.default)({}, e, {
				client: (0, r.default)({}, l, {
					columns: c
				})
			})
		}
		return h.flushSyncDataAndReload = function() {
			TD.storage.Store.flushWebstorage(TD.storage.Store.PERSISTENT_SESSION_ITEMS), TD.util.isWrapperApp() && deck.tearDown(), window.location.reload()
		}, h.updateFromBackendData = function(e) {
			TD.storage.accountController.updateFromBackend(e.accounts, e.client), TD.storage.feedController.updateFromBackend(e.feeds), TD.storage.columnController.updateFromBackend(e.columns), TD.storage.clientController.updateFromBackend(e.client), TD.decider.get("disable_decider_using_dedicated_endpoint") && TD.decider.updateFromBackend(e.decider)
		}, h.ueberpull = function() {
			e.trace("überpull");
			var t = i.succeed();
			return t.addCallback(function() {
				return TD.storage.columnController.triggerPush(.05)
			}), t.addCallback(h.sync), t.addCallback(function(e) {
				(0, c.default)(document).trigger("dataMessages", {
					messages: e.messages
				})
			}), t
		}, h.init = function() {
			var e = i.succeed();
			return e.addCallback(function() {
				TD.storage.feedController.init(), TD.storage.columnController.init(), TD.storage.accountController.init(), TD.storage.clientController.init();
				var e = TD.config.sync_period;
				(0, l.default)(e) && (e = 600), h.loop = setInterval(h.ueberpull, 1e3 * e)
			}), e.addCallback(h.sync), e
		}, h.sync = function() {
			return TD.util.metric("sync:controller:sync-with-cookie"), h.fetchSyncData().addCallbackWith(h, h.applySyncData)
		}, h.fetchSyncData = function() {
			var t = TD.storage.store.getOrCreateTwitterLoginAccount(),
				i = h.fetchAccountsForTwitterAccount();
			i.addCallback(function(e) {
				return e.forEach(function(e) {
					e.user.require_some_consent ? TD.util.metric("gdpr:contributee:requires-consent") : TD.util.metric("gdpr:contributee:given-consent")
				}), e
			});
			var n = h.fetchAllForTwitterAccount();
			return n.addErrback(h.maybeCreateNewBackendState), n.addCallback(function(e) {
				return delete e.decider, e
			}), TD.core.defer.gatherResults([t, i, n]).addErrback(TD.util.effect(function() {
				return e.warn("WARNING! sync with twitter account failed")
			}))
		}, h.applySyncData = function(t) {
			var i = TD.core.defer.succeed(t);
			return i.addCallback(function(e) {
				var t = (0, a.default)(e, 3),
					i = t[0],
					n = t[1],
					o = t[2];
				return (0, r.default)({}, o, {
					loginAccount: i,
					accounts: [i.getStateForBackend({
						withIdentifiers: !0
					})].concat((0, s.default)(n.map(function(e) {
						return TD.storage.Account.generateRemoteDataForTwitterUser(e.user)
					})))
				})
			}), i.addCallback(m), i.addCallback(TD.util.dEffect(h.updateFromBackendData)), i.addCallback(TD.util.dEffect(function(t) {
				return TD.decider.updateFromBackendForID(t.loginAccount.getUserID()).addErrback(TD.util.effect(function() {
					return e.warn("WARNING! decider poll failed")
				}))
			})), i
		}, h.maybeCreateNewBackendState = function(e) {
			if (404 !== e.number) return e;
			var t = TD.storage.clientController.createNewBackendState();
			return t.addCallbackWith(h, h.fetchAllForTwitterAccount), t
		}, h.fetchAccounts = function() {
			return t.drequest("/accounts")
		}, h.fetchAccountsForTwitterAccount = function() {
			return (0, u.getValueForFeatureFlag)("tweetdeck_graphql_login") ? d.getContributees() : TD.net.ajax.request(TD.config.twitter_api_base + "/1.1/users/contributees.json").addCallback(function(e) {
				return e.data
			})
		}, h.fetchAllForTwitterAccount = function() {
			return TD.net.ajax.request(TD.config.twitter_api_base + "/1.1/tweetdeck/clients/blackbird/all").addCallback(function(e) {
				return e.data
			})
		}, h.checkInvariants = function() {
			var e = [TD.storage.feedController, TD.storage.columnController, TD.storage.accountController, TD.storage.clientController];
			(0, o.default)(e, function(e) {
				var t = e.checkInvariants;
				t && t.call(e)
			})
		}, h.reset = function() {
			h.loop && (clearInterval(h.loop), delete h.loop), TD.storage.columnController.reset(), TD.storage.feedController.reset(), TD.storage.accountController.reset(), TD.storage.clientController.reset()
		}, h
	}(TD.sync.util, TD.sync.tdapi, TD.core.defer)
}, function(e, t) {
	e.exports = {
		queryId: "6OcU_i9bc8_7iRQOfs-1Ww",
		operationName: "Whoami"
	}
}, , , , function(e, t, i) {
	"use strict";
	var n = v(i(65)),
		s = v(i(108)),
		r = v(i(15)),
		a = v(i(63)),
		o = v(i(170)),
		l = v(i(43)),
		c = v(i(120)),
		u = v(i(80)),
		d = v(i(2)),
		h = v(i(0)),
		m = i(2198),
		f = v(i(21)),
		p = i(58),
		g = i(460);

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		var e = {},
			t = "";

		function i(n) {
			var s = n ? TD.core.defer.fail(n) : TD.core.defer.succeed();
			s.addCallback(function() {
				return TD.sync.controller.init()
			}), s.addCallback(function(e) {
				return TD.storage.store.storeLoginResult(e.loginAccount.getUserID()), e
			}), s.addCallbacks(TD.util.effect(function() {
				return TD.util.metric("login:try-cookie:allowed")
			}), TD.util.effect(function(e) {
				TD.util.metric("login:try-cookie:failed"), v(e) || TD.util.metric("login:try-cookie:error")
			})), s.addCallback(TD.storage.notification.flush), s.addCallback(T), s.addCallback(function() {
				return TD.core.defer.gatherResults([TD.storage.feedController.triggerPush(.05), TD.storage.columnController.triggerPush(.05)])
			}), s.addCallback(function() {
				TD.storage.store.checkVersion()
			}), s.addCallback(T), s.addCallbackWith(TD.controller.upgrade, TD.controller.upgrade.doUpgrades), s.addCallback(function() {
				return TD.storage.accountController.verifyNewTwoginAccount()
			}), s.addCallback(TD.settings.init), s.addCallback(function() {
				TD.controller.stats.setUid(TD.storage.store.getTwitterLoginAccountID())
			}), s.addCallback(b), s.addCallback(function() {
				TD.util.metric("startup:login-success:" + t)
			}), s.addErrback(function(s) {
				TD.util.metric("startup:do-login:errback"), TD.util.metric("startup:errback");
				var r = (0, p.getValueForFeatureFlag)("tweetdeck_graphql_login"),
					a = v(s),
					o = function(e) {
						if (!e.req) return !1;
						return 0 === e.req.status || 12007 === e.req.status
					}(s);
				if (r && !a && !o) return TD.util.metric("startup:do-login:rest-attempt"), (0, g.captureException)(s, {
					loginMethod: t,
					graphQLLogin: r,
					retrying: !0,
					isMacApp: TD.util.isMacApp()
				}), TD.sync.controller.reset(), TD.storage.Store.flushWebstorage(), (0, p.setValueForFeatureFlag)("tweetdeck_graphql_login", !1), t = "graphql-then-rest", void i(n);
				console.error("TweetDeck initialisation failed"), console.error(s), TD.controller.stats.loginError(s.toString());
				var l = TD.storage.store.getTwitterLoginAccountID() || "unknown";
				TD.controller.stats.setUid(l), TD.controller.stats.flushScribeQueue(), TD.sync.controller.reset(), TD.storage.Store.flushWebstorage();
				var c = (0, d.default)("Sorry, something went wrong. Please try again later."),
					u = s.message ? "(" + s.message + ")" : "";
				return a ? (c = "", u = "") : o ? (TD.util.metric("startup:network-failure"), c = (0, d.default)("Please check your network connection and refresh TweetDeck.")) : (TD.util.metric("startup:something-went-wrong"), (0, g.captureException)(s, {
					loginMethod: t,
					graphQLLogin: r,
					isMacApp: TD.util.isMacApp()
				})), e.showLogin((c + " " + u).trim())
			})
		}

		function v(e) {
			return !!e.req && (401 === e.req.status || 403 === e.req.status)
		}

		function T() {
			TD.sync.util.trace("init.purgeDeprecatedAccounts()"), TD.storage.columnController.getAll().forEach(function(e) {
				if (1 === e.getFeedKeys().length) switch (e.getType()) {
					case f.default.storageColumnTypes.HOME:
					case f.default.storageColumnTypes.INBOX:
					case f.default.storageColumnTypes.ME:
						e.setType(f.default.storageColumnTypes.OTHER), TD.util.metric("startup:convert-singleton-column:" + e.getType())
				}
			}), w(function(e) {
				var t = "twitter" === e.getService() && "sentdirect" === e.getType();
				return t && TD.controller.stats.purgedFeed({
					service: e.getService(),
					type: e.getType(),
					message: "Purged sentdirect feed (no longer supported)"
				}), t
			}), w(function(e) {
				var t = (0, u.default)(TD.storage.accountController.get(e.getAccountKey()));
				return t && TD.controller.stats.purgedFeed({
					service: e.getService(),
					type: e.getType(),
					accountKey: e.getAccountKey(),
					message: "Purged feed due to bad account key"
				}), t
			}), w(function(e) {
				var t = "usertimeline" === e.getType();
				return t && TD.controller.stats.purgedFeed({
					service: e.getService(),
					type: e.getType(),
					message: "Purged usertimeline feed (no longer supported)"
				}), t
			})
		}

		function w(e) {
			var t = (0, c.default)(TD.storage.feedController.getAll(), e),
				i = (0, l.default)(t, function(e) {
					var t = e.getKey();
					return TD.storage.feedController.remove(t), t
				}),
				n = (0, c.default)(TD.storage.columnController.getAll(), function(e) {
					var t = (0, o.default)(e.getFeedKeys(), i),
						n = f.default.isSimpleColumn(e.getType());
					return e.setFeedKeys(t), (0, a.default)(t) && !n
				}),
				s = (0, l.default)(n, function(e) {
					return e.getKey()
				});
			if (!(0, a.default)(s)) {
				var u = TD.storage.clientController.client;
				u.setColumnOrder((0, o.default)(u.getColumnOrder(), s)), (0, r.default)(s, function(e) {
					TD.storage.columnController.remove(e), TD.util.metric("startup:remove:column:no-feeds")
				})
			}
		}

		function b() {
			var t;
			(t = TD.util).metric.apply(t, (0, n.default)(e.initTimer.metric("ready"))), TD.sync.util.trace("init.initControllerAndUI()"), (0, h.default)(document).trigger("uiNeedsSettings"), TD.controller.clients.init(), TD.controller.feedManager.init(), TD.cache.names.init(), TD.ui.main.init(), TD.controller.scheduler.init(), TD.controller.columnManager.init(), TD.controller.feedScheduler.init(), TD.controller.notifications.init(), TD.controller.scheduler.schedulePeriodicTask(15, function() {
				"visible" == document.visibilityState && TD.controller.stats.heartbeat(TD.storage.store.getTwitterLoginAccountID())
			}, !0), TD.controller.filterManager.init(), TD.ready = !0, TD.sync.util.trace("init: TD.ready"), (0, h.default)(document).trigger("TD.ready"), TD.storage.accountController.isEmpty() && (0, h.default)(document).trigger("uiShowAccountSettings")
		}
		return e.preload = function() {
			e.initTimer = new m.Timer("timing:controller:init"), TD.util.isTouchDevice() && window.navigator.standalone && ((0, h.default)("head meta[name=viewport]").remove(), (0, h.default)("head").prepend('<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">'));
			var t = (0, h.default)(document.documentElement);
			t.addClass("os-" + TD.util.getOSName()), TD.util.isTouchDevice() && (t.addClass("touch-device"), TD.decider.get("touchdeck_font_size_v2") && t.addClass("with-touch-font-size")), TD.controller.stats.init()
		}, e.start = function() {
			TD.util.metric("startup:start");
			var r = TD.util.getAppEnv();
			TD.util.isWrapperApp() && TD.util.isUnsupportedWebWrapperVersion() && (TD.util.metric("startup:start:wrapper-app:unsupported"), deck.closeLoadingScreen && deck.closeLoadingScreen(), window.location.assign("/web/deprecated.html?appenv" + r)), TD.controller.scheduler.schedulePeriodicTask(2592e3, function() {
				window.location.reload(!0)
			}), (0, h.default)(document).on("unload", function() {
				window.deck && window.deck.closeLoadingScreen && window.deck.closeLoadingScreen()
			});
			var a = TD.core.defer.succeed();
			a.addCallback(function() {
				return (0, h.default)(document).trigger("dataAppStart")
			});
			var o = void 0;
			a.addCallback(function() {
				o = TD.decider.get("stop_load_on_settings_fail") ? (0, p.startPollingForSettings)() : (0, p.startPollingForSettings)().catch(function(e) {
					if (429 !== e.number) return s.default.reject(e)
				})
			}), a.addBoth(function() {
				return TD.decider.updateForGuestId()
			}), a.addBoth(function() {
				TD.util.isWrapperApp() && deck.closeLoadingScreen && deck.closeLoadingScreen()
			}), a.addBoth(function() {
				var t;
				(t = TD.util).metric.apply(t, (0, n.default)(e.initTimer.metric("do-login"))), TD.util.metric("startup:do-login")
			}), a.addCallback(function() {
				return TD.core.defer.fromPromise(o)
			}), a.addCallback(function() {
				var e = (0, p.getValueForFeatureFlag)("tweetdeck_graphql_login");
				t = e ? "graphql" : "rest"
			}), a.addCallback(function() {
				return i(null)
			}), a.addErrback(function(e) {
				return i(e)
			})
		}, e.showLogin = function(t) {
			var i;
			return (i = TD.util).metric.apply(i, (0, n.default)(e.initTimer.metric("show-login-screen"))), TD.util.metric("startup:setup-login-screen"), t && TD.util.metric("startup:setup-login-screen:with-error"), (0, h.default)(document).trigger("uiLoginShowLoginForm", {
				errorMsg: t
			}), new TD.core.defer.Deferred
		}, e.signOut = function(e) {
			return (0, h.default)(document).trigger("uiLogout", e), TD.core.defer.timeout(1e4)
		}, e
	}()
}, function(e, t, i) {
	"use strict";
	var n = a(i(111)),
		s = a(i(14)),
		r = a(i(16));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = function() {
		function e(t) {
			(0, s.default)(this, e), this.ns = t, this.t = e.now()
		}
		return (0, r.default)(e, [{
			key: "mark",
			value: function(t) {
				var i = this.ns,
					n = this.t;
				return [i + ":" + t, Math.floor(e.now() - n)]
			}
		}, {
			key: "metric",
			value: function(e) {
				var t = this.mark(e),
					i = (0, n.default)(t, 2);
				return [i[0],
					[i[1]], "metric"
				]
			}
		}]), e
	}();
	o.now = function() {
		var e = window.performance || {};
		return e.now = e.now || e.webkitNow || e.msNow || e.oNow || e.mozNow || function() {
			return Date.now()
		}, e.now()
	}, t.Timer = o
}, function(e, t, i) {
	"use strict";
	var n, s, r, a = l(i(80)),
		o = l(i(21));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.upgrade = (n = TD.storage, TD.config, TD.sync.util, s = TD.core.defer, r = {
		CURRENT_VERSION: 2,
		recordVersion: function(e) {
			return n.clientController.client.dictSet("settings", "version", e)
		},
		doUpgrades: function() {
			var e = n.clientController.client.get("settings");
			if ((0, a.default)(e) || (0, a.default)(e.version)) return TD.util.metric("controller:upgrade:new-user:to:" + r.CURRENT_VERSION), r.recordVersion(r.CURRENT_VERSION).addErrback(TD.util.effect(function() {
				TD.util.metric("controller:upgrade:error"), TD.util.metric("controller:upgrade:new-user:error")
			}));
			var t = Number(e.version) || 0;
			TD.util.metric("controller:upgrade:existing-version:" + t);
			for (var i = s.succeed(), o = 1; o <= r.CURRENT_VERSION; o++)
				if (t < o) {
					var l = "version_" + o.toString();
					r.hasOwnProperty(l) && (TD.util.metric("controller:upgrade:to:" + o), i.addCallback(r[l]), i.addCallback(r.recordVersion.bind(r, o)))
				} return i.addErrback(TD.util.effect(function() {
				return TD.util.metric("controller:upgrade:error")
			})), i
		},
		version_1: function() {
			n.columnController.getAll().forEach(function(e) {
				var t;
				TD.storage.feedController.get(e.getFeedKeys()[0]).getType() === o.default.feedTypes.MENTIONS && ((t = new TD.vo.SearchFilter(e.getFilters())).action.fromJSONObject({
					showMentions: !0,
					showRetweets: !1,
					showFavorites: !1,
					showFollowers: !1,
					showLists: !1
				}), e.setFilters(t.toJSONObject()))
			})
		},
		version_2: function() {
			!1 === TD.storage.clientController.client.get("settings").show_inline_media && n.columnController.getAll().forEach(function(e) {
				e.setMediaPreviewSize(TD.vo.Column.MEDIA_PREVIEW_OFF)
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = k(i(224)),
		s = k(i(9)),
		r = k(i(65)),
		a = k(i(162)),
		o = k(i(99)),
		l = k(i(32)),
		c = k(i(170)),
		u = k(i(88)),
		d = k(i(132)),
		h = k(i(2201)),
		m = k(i(43)),
		f = k(i(121)),
		p = k(i(13)),
		g = k(i(2202)),
		v = k(i(77)),
		T = k(i(15)),
		w = k(i(2)),
		b = k(i(0)),
		y = i(152),
		_ = k(i(21)),
		C = k(i(2206)),
		S = k(i(36)),
		D = i(37);

	function k(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.columnManager = function(e, t, i) {
		var k, E, I, A, x, M, R, F, O, P = {
			_aColumnIndex: {},
			_columnOrder: []
		};
		P.commands = (0, y.makeCommandBag)(), P.TIMELINE = "timeline", P.MENTIONS = "mentions", P.FOLLOWERS = "followers", P.SEARCH = "search", P.LISTS = "lists", P.CUSTOMTIMELINES = "customtimelines", P.MESSAGES = "messages", P.TRENDS = "trends", P.ANALYTICS = "analytics", P.TWEETS = "tweets", P.FAVORITES = "favorites", P.HOME = "home", P.ME = "me", P.INBOX = "privateMe", P.SCHEDULED = "scheduled", P.NETWORKACTIVITY = "networkactivity", P.INTERACTIONS = "interactions", P.DATAMINR = "dataminr", P.LIVEVIDEO = "livevideo", P.EVENT = "event", P.WHATSHAPPENING = "whatshappening", P.columnTypeToIconClass = (k = {}, (0, a.default)(k, P.TIMELINE, _.default.columnIconClasses.HOME), (0, a.default)(k, P.INTERACTIONS, _.default.columnIconClasses.INTERACTIONS), (0, a.default)(k, P.MENTIONS, _.default.columnIconClasses.MENTIONS), (0, a.default)(k, P.FOLLOWERS, _.default.columnIconClasses.FOLLOWERS), (0, a.default)(k, P.SEARCH, _.default.columnIconClasses.SEARCH), (0, a.default)(k, P.LISTS, _.default.columnIconClasses.LIST), (0, a.default)(k, P.CUSTOMTIMELINES, _.default.columnIconClasses.CUSTOMTIMELINE), (0, a.default)(k, P.MESSAGES, _.default.columnIconClasses.MESSAGES), (0, a.default)(k, P.TWEETS, _.default.columnIconClasses.USER), (0, a.default)(k, P.FAVORITES, _.default.columnIconClasses.FAVORITES), (0, a.default)(k, P.NETWORKACTIVITY, _.default.columnIconClasses.ACTIVITY), (0, a.default)(k, P.HOME, _.default.columnIconClasses.HOME), (0, a.default)(k, P.ME, _.default.columnIconClasses.MENTIONS), (0, a.default)(k, P.INBOX, _.default.columnIconClasses.MESSAGES), (0, a.default)(k, P.SCHEDULED, _.default.columnIconClasses.SCHEDULED), (0, a.default)(k, P.TRENDS, _.default.columnIconClasses.TRENDS), (0, a.default)(k, P.ANALYTICS, _.default.columnIconClasses.ANALYTICS), (0, a.default)(k, P.DATAMINR, _.default.columnIconClasses.DATAMINR), (0, a.default)(k, P.LIVEVIDEO, _.default.columnIconClasses.LIVEVIDEO), (0, a.default)(k, P.EVENT, _.default.columnIconClasses.EVENT), (0, a.default)(k, P.WHATSHAPPENING, _.default.columnIconClasses.WHATSHAPPENING), k), P.SELF_ACCOUNTS_ONLY = (E = {}, (0, a.default)(E, P.MESSAGES, !0), (0, a.default)(E, P.NETWORKACTIVITY, !0), (0, a.default)(E, P.INTERACTIONS, !0), (0, a.default)(E, P.FOLLOWERS, !0), (0, a.default)(E, P.TIMELINE, !0), E), P.TWITTER_GENERIC = (I = {}, (0, a.default)(I, P.TIMELINE, !0), (0, a.default)(I, P.MENTIONS, !0), (0, a.default)(I, P.FOLLOWERS, !0), (0, a.default)(I, P.MESSAGES, !0), (0, a.default)(I, P.TWEETS, !0), (0, a.default)(I, P.FAVORITES, !0), (0, a.default)(I, P.NETWORKACTIVITY, !0), (0, a.default)(I, P.INTERACTIONS, !0), I), P.SELF_FEED_TYPE = (A = {}, (0, a.default)(A, P.TIMELINE, "home"), (0, a.default)(A, P.MESSAGES, "direct"), (0, a.default)(A, P.TWEETS, "usertweets"), (0, a.default)(A, P.FOLLOWERS, "interactions"), A), P.NON_SELF_FEED_TYPE = (x = {}, (0, a.default)(x, P.TIMELINE, "usertimeline"), (0, a.default)(x, P.TWEETS, "usertweets"), (0, a.default)(x, P.MENTIONS, "search"), x), P.MENU_TITLE = (M = {}, (0, a.default)(M, P.TIMELINE, (0, w.default)("Home")), (0, a.default)(M, P.MENTIONS, (0, w.default)("Mentions")), (0, a.default)(M, P.SEARCH, (0, w.default)("Search")), (0, a.default)(M, P.FOLLOWERS, (0, w.default)("Followers")), (0, a.default)(M, P.LISTS, (0, w.default)("List")), (0, a.default)(M, P.CUSTOMTIMELINES, (0, w.default)("Collection")), (0, a.default)(M, P.MESSAGES, (0, w.default)("Messages")), (0, a.default)(M, P.TRENDS, (0, w.default)("Trending")), (0, a.default)(M, P.ANALYTICS, (0, w.default)("Analytics")), (0, a.default)(M, P.TWEETS, (0, w.default)("User")), (0, a.default)(M, P.FAVORITES, (0, w.default)("Likes")), (0, a.default)(M, P.ME, (0, w.default)("Mentions")), (0, a.default)(M, P.INBOX, (0, w.default)("Messages")), (0, a.default)(M, P.SCHEDULED, (0, w.default)("Scheduled")), (0, a.default)(M, P.NETWORKACTIVITY, (0, w.default)("Activity")), (0, a.default)(M, P.INTERACTIONS, (0, w.default)("Notifications")), (0, a.default)(M, P.DATAMINR, (0, w.default)("Dataminr")), (0, a.default)(M, P.LIVEVIDEO, (0, w.default)("Live video")), (0, a.default)(M, P.EVENT, (0, w.default)("General Election")), (0, a.default)(M, P.WHATSHAPPENING, (0, w.default)("What's Happening")), M), P.MODAL_TITLE = (R = {}, (0, a.default)(R, P.TIMELINE, (0, w.default)("Add a Home column")), (0, a.default)(R, P.MENTIONS, (0, w.default)("Add a Mentions column")), (0, a.default)(R, P.SEARCH, (0, w.default)("Search")), (0, a.default)(R, P.FOLLOWERS, (0, w.default)("Add a Followers column")), (0, a.default)(R, P.LISTS, (0, w.default)("Add a List column")), (0, a.default)(R, P.CUSTOMTIMELINES, (0, w.default)("Add a Collection column")), (0, a.default)(R, P.MESSAGES, (0, w.default)("Add a Messages column")), (0, a.default)(R, P.TRENDS, (0, w.default)("Trending")), (0, a.default)(R, P.TWEETS, (0, w.default)("Add a User column")), (0, a.default)(R, P.FAVORITES, (0, w.default)("Add a Likes column")), (0, a.default)(R, P.ME, (0, w.default)("Add a Mentions column")), (0, a.default)(R, P.INBOX, (0, w.default)("Add a Messages column")), (0, a.default)(R, P.SCHEDULED, (0, w.default)("Scheduled")), (0, a.default)(R, P.NETWORKACTIVITY, (0, w.default)("Add an Activity column")), (0, a.default)(R, P.INTERACTIONS, (0, w.default)("Add a Notifications column")), (0, a.default)(R, P.DATAMINR, (0, w.default)("Add a Dataminr column")), (0, a.default)(R, P.LIVEVIDEO, (0, w.default)("Add a Live Video column")), (0, a.default)(R, P.EVENT, (0, w.default)("Add a General Election column")), R), P.MENU_ATTRIBUTION = (F = {}, (0, a.default)(F, P.ME, (0, w.default)("(all accounts)")), (0, a.default)(F, P.INBOX, (0, w.default)("(all accounts)")), F), P.DISPLAY_ORDER = [{
			type: P.TIMELINE,
			service: "twitter",
			class: "top-row"
		}, {
			type: P.TWEETS,
			service: "twitter",
			class: "top-row"
		}, {
			type: P.INTERACTIONS,
			service: "twitter",
			class: "top-row"
		}, {
			type: P.SEARCH,
			service: "twitter",
			class: "top-row"
		}, {
			type: P.LISTS,
			service: "twitter"
		}, {
			type: P.CUSTOMTIMELINES,
			service: "twitter",
			class: "feature-customtimelines"
		}, {
			type: P.TRENDS,
			service: "twitter",
			premiumColumnType: !1
		}, {
			type: P.FAVORITES,
			service: "twitter"
		}, {
			type: P.MESSAGES,
			service: "twitter"
		}, {
			type: P.MENTIONS,
			service: "twitter"
		}, {
			type: P.FOLLOWERS,
			service: "twitter"
		}, {
			type: P.SCHEDULED
		}, {
			type: P.INBOX
		}, {
			type: P.ME
		}, {
			type: P.NETWORKACTIVITY,
			service: "twitter"
		}, {
			type: P.ANALYTICS,
			service: "twitter"
		}, {
			type: P.WHATSHAPPENING,
			service: "twitter",
			premiumColumnType: !0
		}, {
			type: P.LIVEVIDEO,
			service: "twitter"
		}, {
			type: P.EVENT,
			service: "twitter"
		}, {
			type: P.DATAMINR,
			service: "dataminr"
		}], P.DISPLAY_ORDER_SINGLETONS = [{
			type: P.ME
		}, {
			type: P.INBOX
		}, {
			type: P.SCHEDULED
		}], P.DISPLAY_ORDER_PROFILE = [{
			type: P.TWEETS,
			service: "twitter",
			profile: !0,
			title: (0, w.default)("Tweets"),
			columnIconClass: _.default.columnIconClasses.TWITTER
		}, {
			type: P.MENTIONS,
			service: "twitter",
			profile: !0
		}, {
			type: P.LISTS,
			service: "twitter",
			profile: !0
		}, {
			type: P.CUSTOMTIMELINES,
			service: "twitter",
			profile: !0,
			class: "feature-customtimelines"
		}, {
			type: P.FAVORITES,
			service: "twitter",
			profile: !0
		}];
		var N = P.DISPLAY_ORDER.concat(P.DISPLAY_ORDER_SINGLETONS).concat(P.DISPLAY_ORDER_PROFILE);
		P.updateTitlesAndIconClasses = function() {
			(0, T.default)(N, function(e) {
				e.title = e.title || P.MENU_TITLE[e.type], e.attribution = e.attribution || P.MENU_ATTRIBUTION[e.type], e.columnIconClass = e.columnIconClass || P.columnTypeToIconClass[e.type]
			})
		}, P.updateTitlesAndIconClasses(), P.HELP_TEXT = (O = {}, (0, a.default)(O, P.TIMELINE, (0, w.default)("Add a Timeline column for your own accounts, or search for a user and add theirs")), (0, a.default)(O, P.MENTIONS, (0, w.default)("Add a Mentions column for your own accounts, or search for a user and add theirs")), (0, a.default)(O, P.SEARCH, (0, w.default)("Add a column for a saved or recent Search, or enter a new search in the box")), (0, a.default)(O, P.LISTS, (0, w.default)("Create a new List, or select an existing List to edit or add a column")), (0, a.default)(O, P.CUSTOMTIMELINES, (0, w.default)("Create a new Collection, or select an existing timeline")), (0, a.default)(O, P.LIVEVIDEO, (0, w.default)("Select a live stream or come back later")), (0, a.default)(O, P.EVENT, ""), (0, a.default)(O, P.MESSAGES, (0, w.default)("Add a Direct Messages column for your accounts")), (0, a.default)(O, P.TRENDS, (0, w.default)("Add a column to monitor Tweets for any Trend")), (0, a.default)(O, P.TWEETS, (0, w.default)("Add a column for Tweets sent from your own accounts, or search for a user and add theirs")), (0, a.default)(O, P.FAVORITES, (0, w.default)("Add a Likes column for your own accounts, or search for a user and add theirs")), (0, a.default)(O, P.INTERACTIONS, (0, w.default)("Add a column to monitor your mentions, Retweets, likes, follows and List additions in real time")), (0, a.default)(O, P.NETWORKACTIVITY, (0, w.default)("Add a column to view likes, follows and List additions by your friends in real time")), (0, a.default)(O, P.DATAMINR, (0, w.default)("Add a column to view alerts for a Dataminr watchlist")), O), (0, b.default)(document).on("dataDeciderUpdated", function() {
			P.updateTitlesAndIconClasses()
		}), P.init = function() {
			U({
				firstLoad: !0
			}), S.default.Observable.fromEvent((0, b.default)(document), "dataSettingsValues", function(e, t) {
				return t
			}).filter(function(e) {
				return e && void 0 !== e.show_trending_column_new_pill
			}).pluck("show_trending_column_new_pill").subscribe(function() {
				P.reMapDisplayOrder()
			}), D.trendsAndBeta$.subscribe(function(e) {
				var t = e.trendsInColumnEnabled,
					i = e.betaEnabled;
				P.trendsColumnEnabled = t, P.reMapDisplayOrder(i)
			}), P.checkColumns(), TD.controller.scheduler.schedulePeriodicTask(60, P.reportColumns, !0), b.default.subscribe("/storage/client/column_order_changed", U), b.default.subscribe("/storage/client/change", U), b.default.subscribe("/storage/column/feeds_changed", function(e, t, i) {
				var n = P.get(i.getKey());
				n && n.loadFeeds()
			}), b.default.subscribe("/storage/column/change", function(e) {
				var i = P.get(e.getKey());
				if (i instanceof TD.vo.Column) {
					var n = i.model.getFeedKeys(),
						s = e.getFeedKeys();
					(0, v.default)(n, s) || i.loadFeeds(), e.managed && e.hasApiid() && (i = P.getByApiid(e.getApiid()), TD.ui.columns.refreshTitle(i)), i.loadFilters()
				} else t.stateLog("loading new new column", e), U()
			}), b.default.subscribe("/cache/names/change", P.refreshColumnTitles), b.default.subscribe("/storage/account/change", P.refreshColumnTitles), b.default.subscribe("/storage/account/new", function(e) {
				1 === TD.storage.accountController.getAll().length && P.checkColumns()
			}), (0, b.default)(document).on("uiNeedsScheduledColumnVisible", this.handleMakeOrRefreshScheduledColumn), (0, b.default)(document).on("uiNeedsColumnOrder", P.handleUiNeedsColumnOrder), (0, b.default)(document).on("uiNeedsColumns", P.handleUiNeedsColumns)
		}, P.setupCommands = function() {
			var e = P.getAllOrdered(),
				t = String(e.length).length,
				i = e.map(function(e, i) {
					var n = (0, g.default)(i + 1, t, "0"),
						s = _.default.getColumnTitleArgs(e),
						r = s && s.needsUserAttribution ? s.screenName : "",
						a = (0, p.default)(s, "title", "");
					return _.default.getColumnType(e) === _.default.columnMetaTypes.SEARCH ? {
						column: e,
						title: n + ": " + (0, w.default)("Search") + " “" + a + "”"
					} : {
						column: e,
						title: n + ": " + a + " " + r
					}
				}),
				n = [].concat((0, r.default)(i.map(function(e, t) {
					var i = e.column,
						n = e.title;
					return {
						label: (0, w.default)("Go to column — {{title}}", {
							title: n
						}),
						shortcut: t < 9 ? {
							key: String(t + 1)
						} : null,
						apply: function() {
							return P.showColumn(i.model.getKey())
						}
					}
				})), [{
					label: (0, w.default)("Go to final column"),
					shortcut: {
						key: "0"
					},
					apply: function() {
						return (0, b.default)(document).trigger("uiColumnFocus", {
							last: !0
						})
					}
				}]),
				s = i.map(function(e) {
					var t = e.column;
					return {
						label: "Remove column — " + e.title,
						apply: function() {
							return P.deleteColumn(t.model.getKey())
						}
					}
				});
			P.commands.removeAll(), P.commands.add([].concat((0, r.default)(n), (0, r.default)(s)))
		}, P.refreshColumnTitles = (0, f.default)(function() {
			(0, T.default)(P.getAll(), function(e) {
				TD.ui.columns.refreshTitle(e)
			}), P.setupCommands()
		}, 100), P.handleUiNeedsColumns = function() {
			P.sendColumns()
		}, P.handleUiNeedsColumnOrder = function() {
			P.sendColumnOrder()
		}, P.reportColumns = function() {
			var e = {};
			if ((0, T.default)(P._aColumnIndex, function(t) {
					var i = _.default.getColumnType(t).replace(/^col_/, "");
					(0, T.default)(t.getFeeds(), function(t) {
						var n = t.getAccountKey().replace(/^twitter:/, "");
						e[n] || (e[n] = {}), e[n][i] = (e[n][i] || 0) + 1
					})
				}), TD.controller.stats.generic({
					page: "main",
					component: "column_manager",
					action: "report_columns"
				}, {
					custom_json_payload: e
				}), TD.decider.get("report_column_usage_stats")) {
				var t = (0, m.default)(P._aColumnIndex, function(e) {
					return _.default.getColumnType(e)
				});
				(0, T.default)((0, h.default)(t), function(e, t) {
					var i = t.replace(/^col_/, "");
					TD.util.metric("column:stats:active_usage:" + i, [e], "metric"), TD.util.metric("column:stats:active_usage:" + i + ":" + e)
				})
			}
		}, P.sendColumnOrder = function() {
			(0, b.default)(document).trigger("dataColumnOrder", {
				columnOrder: P._columnOrder
			})
		}, P.sendColumns = function() {
			(0, b.default)(document).trigger("dataColumns", {
				columns: P.getAllOrdered()
			})
		}, P.checkColumns = function() {
			var t = TD.storage.accountController.getPreferredAccount("twitter");
			0 === e.clientController.client.getColumnOrder().length && t && P.makeDefaultColumns(t)
		}, P.get = function(e) {
			return P._aColumnIndex[e]
		}, P.getByApiid = function(e) {
			return (0, d.default)(P._aColumnIndex, function(t) {
				return t.model.hasApiid() && t.model.getApiid() === e ? t : null
			})
		}, P.getAll = function() {
			return (0, u.default)(P._aColumnIndex)
		}, P.getAllOrdered = function() {
			var e = this.getAll();
			return P._columnOrder.map(function(t) {
				return e[t]
			})
		}, P.add = function(e) {
			P._aColumnIndex[e.model.getKey()] = e
		}, P.addMany = function(e) {
			e.forEach(P.add)
		}, P.deleteColumn = function(t) {
			var i = P._aColumnIndex[t];
			i && !i.temporary && TD.controller.stats.removeColumn(_.default.getColumnType(i)), e.clientController.client.removeColumn(t)
		}, P.removeFromAppLayer = function(t) {
			var i = P._aColumnIndex[t],
				n = i instanceof TD.vo.Column;
			i && n && i.removeSubscriptions(), delete P._aColumnIndex[t], e.columnController.remove(t), TD.controller.feedScheduler.removeColumn(t), TD.ui.columns.removeColumn(t)
		}, P.move = function(e, t) {
			if (t) {
				var i = P._columnOrder.indexOf(e),
					n = P._columnOrder.concat(),
					s = "right" === t ? Math.min(i + 1, P._columnOrder.length - 1) : "left" === t ? Math.max(i - 1, 0) : void 0,
					r = P._columnOrder[s];
				n[s] = n[i], n[i] = r, TD.storage.clientController.client.setColumnOrder(n), U(), P.showColumn(e)
			}
		};
		var U = function(t) {
				var i = e.clientController.client.getColumnOrder();
				!(0, v.default)(P._columnOrder, i) && L(i, t), (0, b.default)(document).trigger("dataColumnsLoaded")
			},
			L = function(i) {
				var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
					r = (0, c.default)(P._columnOrder, i),
					a = (0, c.default)(i, P._columnOrder);
				(0, T.default)(r, function(e) {
					P.removeFromAppLayer(e), TD.ui.columns.removeColumn(e)
				});
				var o = a.filter(function(n) {
					var s = e.columnController.get(n);
					return s || t.stateLog("WARNING: column not found for", n, "all columns:", e.columnController.getAll(), "in column_order", i), s
				}).map(function(t) {
					return P.get(t) || P.createColumn(e.columnController.get(t))
				});
				P.addMany(o), TD.ui.columns.addColumnsToView(o), P._columnOrder = i, P.sendColumnOrder(), P.sendColumns(), (0, T.default)(a, function(e) {
					var t = P.get(e);
					t instanceof TD.vo.Column && TD.controller.feedScheduler.addColumn(t, (0, s.default)({}, n, {
						doStartStreaming: !0
					}))
				}), P.setupCommands()
			};
		return P.createColumn = function(e, t) {
			var i = e.getType();
			return (0, n.default)(_.default.simpleColumnTypes).includes(i) ? new C.default(e) : new TD.vo.Column(e, t)
		}, P.addColumnToUI = function(t) {
			var i, n = t.model.getKey();
			return t.temporary = !1, P.add(t), e.feedController.manageFeeds(t.getFeeds()), e.columnController.manage(t.model), i = e.clientController.client.appendColumn(n), U(), (0, l.default)(P.showColumn, n), TD.controller.stats.addColumn(_.default.getColumnType(t)), i
		}, P.addColumnToUIAfterColumnKey = function(e, t) {
			if (t) {
				var i = TD.storage.clientController.client.getColumnOrder(),
					n = i.indexOf(t),
					s = e.model.getKey();
				i.splice(n + 1, 0, s), TD.storage.clientController.client.setColumnOrder(i)
			}
			P.addColumnToUI(e)
		}, P.makeColumnFor = function(t) {
			var i, n, s, r = t.metadata || {},
				a = t.searchFilter,
				o = e.accountController.getAccountsForService("twitter");
			if ("tweetdeck" === t.service) switch (t.type) {
				case "me":
					n = e.columnController.getMeFeeds(o), i = P.makeColumn("me", n);
					break;
				case "privateMe":
					n = e.columnController.getInboxFeeds(o), i = P.makeColumn("privateMe", n);
					break;
				case "scheduled":
					n = e.columnController.getScheduledFeeds(), i = P.makeColumn("scheduled", n);
					break;
				case "trends":
				case "analytics":
				case "whatshappening":
					i = P.makeColumn(t.type, [])
			} else {
				switch (t.type) {
					case "usertimeline":
					case "favorites":
					case "usertweets":
						t.metaString && (r.id = t.metaString);
						break;
					case "event":
					case "search":
						a = new TD.vo.SearchFilter, r.searchFilterData = a.toJSONObject(), r.baseQuery = t.metaString;
						break;
					case "list":
						s = t.metaString.split("/"), TD.sync.util.assert(2 === s.length, "List meta should contain both ownerId and listId", s), r.ownerId = s[0], r.listId = s[1];
						break;
					case "customtimeline":
						s = t.metaString.split("/"), TD.sync.util.assert(2 === s.length, "Collection meta should contain both ownerId and id", s), r.ownerId = s[0], r.id = s[1]
				}
				i || (i = P.makeOtherColumnAndFeeds({
					type: t.type,
					service: t.service,
					accountKey: t.accountKey,
					metadata: r,
					searchFilter: a
				}))
			}
			return i
		}, P.makeDefaultColumns = function(e) {
			var t = [];
			"twitter" === e.getType() && (t = P.trendsColumnEnabled ? ["home", "interactions", "direct", "trends"] : ["home", "interactions", "direct", "networkactivity"]), (0, T.default)(t, function(t) {
				var i = P.makeColumnFor({
					type: t,
					service: "trends" === t ? "tweetdeck" : e.getType(),
					accountKey: e.getKey()
				});
				P.addColumnToUI(i)
			})
		}, P.reMapDisplayOrder = function(e) {
			P.DISPLAY_ORDER = P.DISPLAY_ORDER.map(function(t) {
				if (t.type !== P.TRENDS) return t;
				var i = P.trendsColumnEnabled && TD.settings.getShowTrendingColumnNewPill();
				return (0, s.default)({}, t, {
					newColumnType: i && !e,
					premiumColumnType: P.trendsColumnEnabled && e
				})
			})
		}, P.makeColumn = function(t, i, n) {
			var s = {
				type: t,
				feedkeys: [],
				settings: {}
			};
			return n && (s.filters = n), P.createColumn(new e.Column(s), i)
		}, P.makeOtherColumnAndFeeds = function(t) {
			var i = e.feedController,
				n = [];
			n.push(i.getOrCreateFeed(t.type, t.service, t.accountKey, t.metadata));
			var s = t.searchFilter ? t.searchFilter.toJSONObject() : null;
			return P.makeColumn("other", n, s)
		}, P.handleMakeOrRefreshScheduledColumn = function(e, t) {
			t = t || {};
			var i = TD.storage.columnController.getColumnsByType("scheduled");
			if (!i.length && !TD.settings.getScheduledColAdded() && t.allowAdd) {
				var n = P.makeColumnFor({
					type: "scheduled",
					service: "tweetdeck"
				});
				return P.addColumnToUI(n), void TD.settings.setScheduledColAdded(!0)
			}
			i.forEach(function(e) {
				try {
					TD.controller.feedScheduler.refreshColumn(e.getKey(), {
						reset: t.reset
					})
				} catch (e) {
					console.error("Refreshing scheduled column failed", e)
				}
			})
		}, P.showColumn = function(e) {
			(0, b.default)(document).trigger("uiColumnFocus", {
				columnKey: e
			})
		}, P.getColumnsByAccountKey = function(e) {
			return (0, o.default)(P._aColumnIndex).filter(function(t) {
				return t.getFeeds().some(function(t) {
					return t.getAccountKey() === e
				})
			})
		}, P.findChirpByAccountKey = function(e) {
			var t = e.chirpId,
				i = e.accountKey,
				n = e.columnKey,
				s = P.getColumnsByAccountKey(i);
			return n ? s.find(function(e) {
				return e.model.getKey() === n
			}).findChirp(t) : s.find(function(e) {
				return Boolean(e.findChirp(t))
			}).findChirp(t)
		}, P
	}(TD.storage, TD.sync.util, TD.core.defer)
}, , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(14)),
		s = r(i(16));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = function() {
		function e(t) {
			(0, n.default)(this, e), this.model = t
		}
		return (0, s.default)(e, [{
			key: "getSearchFilter",
			value: function() {
				var e = this.model.getFilters();
				return e || (e = {
					content: {
						value: {
							accountId: String(TD.storage.accountController.getPreferredAccount("twitter").getUserID())
						}
					}
				}), e
			}
		}, {
			key: "updateSearchFilter",
			value: function(e) {
				this.model.setFilters(e)
			}
		}, {
			key: "getFeeds",
			value: function() {
				return []
			}
		}, {
			key: "reapplyFilters",
			value: function() {}
		}]), e
	}();
	t.default = a
}, function(e, t, i) {
	"use strict";
	var n, s, r = d(i(282)),
		a = d(i(2)),
		o = d(i(0)),
		l = i(19),
		c = i(58),
		u = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(831));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.controller.auth = (s = {
		twitter: "TwitterAuth",
		bitly: "BitlyValidate"
	}, (n = {}).create = function(e, t) {
		return TD.sync.util.assert(s[e], 'bad name for auth "' + e + '"'), new TD.controller.auth[s[e]](t)
	}, n), TD.controller.auth.AuthorisationProcessor = function() {
		this.start = function(e, t, i) {
			TD.util.isChromeApp() ? this.start_chrome(e, t, i) : TD.util.isWrapperApp() ? this.start_wrapper(e, t, i) : this.start_web(e, t, i)
		}, this.start_wrapper = function(e, t, i) {
			var n = deck.authenticateOn(this.getAuthURL(e, i)),
				s = this;
			n.loadedUrl.connect(function(i) {
				var r = s.getTokenFromURL(e.getType(), i);
				r && (r.access_token ? s.updateAccount(r.access_token, t) : s.updateAccount(r.oauth_token, r.oauth_token_secret, t), n.hide(), n.deleteLater())
			}), n.show()
		}, this.start_web = function(e, t, i) {
			var n = window.open(this.getAuthURL(e, i), "mywindow", "width=800,height=450"),
				s = this;
			setTimeout(function i() {
				var r, a;
				try {
					n && n.location && n.location.href && (r = n.location.href)
				} catch (e) {}
				if (r && (a = s.getTokenFromURL(e.getType(), r))) return a.access_token ? s.updateAccount(a.access_token, t) : s.updateAccount(a.oauth_token, a.oauth_token_secret, t), void n.close();
				setTimeout(i, 250)
			}, 500)
		}, this.getAuthURL = function(e, t) {
			var i = e.getType(),
				n = {};
			if ("twitter" === i) {
				var s = Boolean(t),
					r = e.getUsername();
				s && (n.force_login = s), r && (n.screen_name = r)
			}
			return TD.net.util.addURLParameters(TD.config.api_root + "/oauth/authorize/" + i, n)
		}, this.getTokenFromURL = function(e, t) {
			var i, n;
			return ((0, r.default)(t, "/oauth/success/" + e) || (0, r.default)(t, "/oauth2/success/" + e)) && (n = t.split("?")[1], i = TD.net.util.formDecode(n)), i
		}, this.start_chrome = function(e, t, i) {
			var n, s, r = this;
			chrome.tabs.getSelected(null, function(e) {
				n = e.id
			}), s = {
				url: this.getAuthURL(e, i)
			}, chrome.tabs.create(s, function(i) {
				var s = i.id;
				chrome.tabs.onUpdated.addListener(function(i, a, o) {
					var l;
					i === s && o.url && "complete" == o.status && (l = r.getTokenFromURL(e.getType(), o.url)) && (l.access_token ? r.updateAccount(l.access_token, t) : r.updateAccount(l.oauth_token, l.oauth_token_secret, t), chrome.tabs.update(n, {
						selected: !0
					}), chrome.tabs.remove(i))
				})
			})
		}
	}, TD.controller.auth.TwitterAuth = function(e) {
		var t = this;
		t.account = e, this.verifyAccount = function(e, i) {
			(0, o.default)(document).trigger("metric", {
				key: "auth:twitter:verify:start"
			});
			var n = t.account,
				s = TD.config.twitter_api_base + "/" + TD.config.twitter_api_version + "/account/verify_credentials.json",
				r = TD.net.ajax.request(s, {
					account: n,
					isSigned: !0,
					settings: {
						timeout: 6e3
					}
				});
			r.addCallback(function(s) {
				var r = s.data,
					a = n.getUserID();
				a && a != r.id ? (console.log("Attempting to update wrong account:", n, "Using data:", r), (0, o.default)(document).trigger("metric", {
					key: "auth:twitter:verify:wrong_account"
				}), TD.sync.util.printStacktrace(), (0, l.showErrorNotification)({
					message: "Failed to add account. Please try again later."
				}), i()) : ((0, o.default)(document).trigger("metric", {
					key: "auth:twitter:verify:success"
				}), t.updateAccountFromVerifySuccess(n, r), e(n))
			}), r.addErrback(function(e) {
				return (0, o.default)(document).trigger("metric", {
					key: "auth:twitter:verify:fail"
				}), (0, l.showErrorNotification)({
					message: "Failed to verify account. Please try again later."
				}), e
			}), i && r.addErrback(i)
		}, this.verifyCookieAccount = function() {
			TD.util.metric("auth:twitter:verify-cookie:start");
			var e = !!(0, c.getValueForFeatureFlag)("tweetdeck_graphql_login");
			return (0, o.default)(document).trigger("dataUsingGraphQL", {
				isUsingGraphQL: e
			}), (e ? u.getLoggedInUser() : TD.net.ajax.getCookieUser().addCallback(function(e) {
				return e.data
			})).addCallbackWith(this, function(e) {
				TD.util.metric("auth:twitter:verify-cookie:success"), this.updateAccountFromVerifySuccess(this.account, e)
			}).addErrback(TD.util.effect(function(e) {
				TD.util.metric("auth:twitter:verify-cookie:fail")
			}))
		}, this.updateAccountFromVerifySuccess = function(e, t) {
			e.setUsername(t.screen_name), e.setName(t.name), e.setProfileImageURL(t.profile_image_url_https), e.setUserID(t.id_str), e.setIsPrivate(t.protected), e.setIsVerified(t.verified), e.setUpdated(Date.now()), e.computeKey(), e.set("require_some_consent", t.require_some_consent)
		}, this.updateAccount = function(e, i, n) {
			var s = t.account;
			s.setUsername(""), s.setUserID(""), s.setType("twitter"), s.setOAuthToken(e), s.setTokenSecret(i), this.verifyAccount(n)
		}, this.becomeContributor = function() {
			var e, t = TD.storage.store.getTwitterLoginAccount();
			return TD.decider.get("convert_new_oauth_account_to_contributor") && !this.account.isContributor() && t && this.account.getUserID() !== t.getUserID() ? ((e = this.becomeContributorApiRequest(t.getUserID())).addCallbackWith(this, function() {
				this.account.makeContributor(), this.account.setTokenSecret(void 0)
			}), e.addCallbacks(this.handleBecomeContributorSuccess.bind(this), this.handleBecomeContributorError.bind(this)), e) : TD.core.defer.succeed()
		}.bind(this), this.becomeContributorApiRequest = function(e) {
			var t = TD.config.twitter_api_base + "/" + TD.config.twitter_api_version + "/users/contributors/update.json";
			return TD.net.ajax.request(t, {
				account: this.account,
				isSigned: !0,
				method: "POST",
				params: {
					user_id: e,
					admin: !0
				}
			})
		}, this.handleBecomeContributorSuccess = function(e) {
			return (0, o.default)(document).trigger("metric", {
				key: "account:become_contributor:success"
			}), e
		}, this.handleBecomeContributorError = function(e) {
			var t, i = e.req.responseJSON.errors[0],
				n = "unknown",
				s = e.req.status;
			if (i) switch (n = i.code || n, i.code) {
				case 317:
					t = (0, a.default)("@{{username}} may not have any more Team members.", {
						username: this.account.getUsername()
					});
					break;
				case 318:
					t = (0, a.default)("You cannot join any more Teams.");
					break;
				case 330:
					t = (0, a.default)("You have privacy settings enabled preventing you from joining this Team. Visit twitter.com/settings to adjust.");
					break;
				default:
					t = i.message
			}
			return t = t || (0, a.default)("An unknown error occurred. Please try again shortly."), (0, l.showErrorNotification)({
				message: t
			}), (0, o.default)(document).trigger("metric", {
				key: "account:become_contributor:error:" + s + ":" + n
			}), e
		}
	}, TD.controller.auth.BitlyValidate = function(e) {
		var t = this;
		t.account = e, this.updateAccount = function(e, t) {
			this.verifyAccount(t)
		}, this.verifyAccount = function(e, i) {
			var n = t.account,
				s = {
					x_login: n.get("userId"),
					x_apiKey: n.get("oauth_token"),
					apiKey: "R_b8032856b71a14fabfe64f6845689ddf",
					login: "tweetdeckapi",
					format: "json"
				},
				r = TD.net.ajax.jsonp("https://api-ssl.bitly.com/v3/validate", s);
			r.addCallback(function(t) {
				var s = t.data;
				s.data && 1 == s.data.valid ? (n.setUpdated((new Date).getTime()), n.computeKey(), e(n)) : i()
			}), r.addErrback(i)
		}
	}, TD.controller.auth.TwitterAuth.prototype = new TD.controller.auth.AuthorisationProcessor
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	t.default = TD.services.ChirpBase = function(e) {
		this.account = e
	}, TD.services.ChirpBase.kMEDIA_CLASS = "s-media", TD.services.ChirpBase.RETWEET_CLASS = "is-retweet", TD.services.ChirpBase.FAVORITE_CLASS = "is-favorite", TD.services.ChirpBase.UNREAD_CLASS = "is-unread", TD.services.ChirpBase.TWEET = "tweet", TD.services.ChirpBase.GAP = "gap", TD.services.ChirpBase.CONVERSATION_JOIN = "conversation_participants_join", TD.services.ChirpBase.CONVERSATION_PARTICIPANTS_JOIN = "conversation_participants_join", TD.services.ChirpBase.CONVERSATION_PARTICIPANTS_FAILED = "conversation_participants_failed", TD.services.ChirpBase.CONVERSATION_NAME_UPDATE = "conversation_name_update", TD.services.ChirpBase.MESSAGE = "message", TD.services.ChirpBase.MESSAGE_THREAD = "message_thread", TD.services.ChirpBase.SCHEDULED_STATUS = "scheduled_status", TD.services.ChirpBase.SCHEDULED_GROUP = "scheduled_group", TD.services.ChirpBase.SCHEDULED_TWEET = "scheduled_tweet", TD.services.ChirpBase.SCHEDULED_TWEET_GROUP = "scheduled_tweet_group", TD.services.ChirpBase.DATAMINR_ALERT = "dataminr_alert", TD.services.ChirpBase.prototype.id = "", TD.services.ChirpBase.prototype.chirpType = "unknown", TD.services.ChirpBase.prototype.text = "", TD.services.ChirpBase.prototype.created = null, TD.services.ChirpBase.prototype.htmlText = "", TD.services.ChirpBase.prototype.creatorAccount = null, TD.services.ChirpBase.prototype.embeds = null, TD.services.ChirpBase.prototype.isQuoteStatus = !1, TD.services.ChirpBase.prototype.isListAction = !1, TD.services.ChirpBase.prototype.apiBounds = null, TD.services.ChirpBase.prototype.getApiBounds = function(e) {
		return this.apiBounds = this.apiBounds || {}, this.apiBounds[e] || {}
	}, TD.services.ChirpBase.prototype.setApiBounds = function(e, t) {
		return this.apiBounds = this.apiBounds || {}, this.apiBounds[e] = t, this
	}, TD.services.ChirpBase.prototype.apiSource = "rest", TD.services.ChirpBase.prototype.cursor = null, TD.services.ChirpBase.prototype.sortIndex = null, TD.services.ChirpBase.prototype._hasImage = null, TD.services.ChirpBase.prototype._hasVideo = null, TD.services.ChirpBase.prototype._hasAnimatedGif = null, TD.services.ChirpBase.prototype._hasVine = null, TD.services.ChirpBase.prototype._hasLink = null, TD.services.ChirpBase.prototype.fromJSONObject = function() {
		throw new Error("fromJSONObject Not Implemented")
	}, TD.services.ChirpBase.prototype.isOwnChirp = function() {
		throw new Error("isOwnChirp Not Implemented")
	}, TD.services.ChirpBase.prototype.destroy = function() {
		throw new Error("destroy Not Implemented")
	}, TD.services.ChirpBase.prototype.render = function() {
		throw new Error("render Not Implemented")
	}, TD.services.ChirpBase.prototype.getNotificationData = function() {
		return null
	}, TD.services.ChirpBase.prototype.email = function() {
		throw new Error("email Not Implemented")
	}, TD.services.ChirpBase.prototype.postComment = function() {
		throw new Error("postComment Not Implemented")
	}, TD.services.ChirpBase.prototype.getChirpURL = function() {
		throw new Error("getChirpURL Not Implemented")
	}, TD.services.ChirpBase.prototype.isTranslatable = function() {
		return !1
	}, TD.services.ChirpBase.prototype.translate = function() {
		throw new Error("translate Not Implemented")
	}, TD.services.ChirpBase.prototype.getChirpType = function() {
		return this.chirpType
	}, TD.services.ChirpBase.prototype.getScribeItemData = function() {
		throw new Error("getScribeItemData not implemented")
	}, TD.services.ChirpBase.prototype.getDOMChirps = function() {
		var e = "[data-key$='" + this.id + "'][data-account-key='" + this.account.getKey() + "']";
		return (0, r.default)(e)
	}, TD.services.ChirpBase.prototype.passFilters = function(e) {
		return TD.controller.filterManager.pass(this, e)
	}, TD.services.ChirpBase.prototype._generateHTMLText = function() {
		this.htmlText = TD.util.transform(this.text)
	}, TD.services.ChirpBase.prototype.createdPretty = function() {
		return TD.util.prettyDate(this.created)
	}, TD.services.ChirpBase.prototype.createdPrettyFull = function() {
		return TD.util.prettyTimeString(this.created)
	}, TD.services.ChirpBase.prototype.createdPrettyTimeOrDate = function() {
		return TD.util.prettyTimeOrDateString(this.created)
	}, TD.services.ChirpBase.prototype.getSinceId = function() {
		return this.id
	}, TD.services.ChirpBase.prototype.getUnreadChirps = function(e) {
		var t = !e || this.belongsAbove(e);
		return !this.isOwnChirp() && t ? [this] : []
	}, TD.services.ChirpBase.prototype.getSortIndex = function() {
		return this.sortIndex || (this.sortIndex = {
			value: this.created.getTime(),
			type: "milliseconds"
		}), this.sortIndex
	}, TD.services.ChirpBase.prototype.belongsAbove = function(e) {
		return TD.util.chirpColumnSort(this, e) < 0
	}, TD.services.ChirpBase.prototype.belongsBelow = function(e) {
		return TD.util.chirpColumnSort(this, e) > 0
	}, TD.services.ChirpBase.prototype.getFilterableText = function() {
		return this.text
	}, TD.services.ChirpBase.prototype.getSenders = function() {
		return null
	}, TD.services.ChirpBase.prototype.isRetweetedStatus = function() {
		return null
	}, TD.services.ChirpBase.prototype.getRelatedTweet = function() {
		return null
	}, TD.services.ChirpBase.prototype.getMedia = function() {
		return this._media ? this._media : []
	}, TD.services.ChirpBase.prototype.getCardsForGallery = function() {
		return []
	}, TD.services.ChirpBase.prototype.hasMedia = function() {
		return this.getMedia().length > 0
	}, TD.services.ChirpBase.prototype.hasCard = function() {
		return Boolean(this.card)
	}, TD.services.ChirpBase.prototype.isMediaGridContent = function() {
		return TD.decider.get("multi_photo_media_grid") && this.getMedia().length > 1
	}, TD.services.ChirpBase.prototype.mediaLength = function() {
		return this.getMedia().length
	}, TD.services.ChirpBase.prototype.hasImage = function() {
		return null === this._hasImage && (this._hasImage = this.getMedia().some(function(e) {
			return !e.isVideo
		})), this._hasImage
	}, TD.services.ChirpBase.prototype.hasVideo = function() {
		return null === this._hasVideo && (this._hasVideo = this.getMedia().some(function(e) {
			return e.isVideo
		})), this._hasVideo
	}, TD.services.ChirpBase.prototype.hasVine = function() {
		return null === this._hasVine && (this._hasVine = this.getMedia().some(function(e) {
			return e.isVine
		})), this._hasVine
	}, TD.services.ChirpBase.prototype.hasAnimatedGif = function() {
		return null === this._hasAnimatedGif && (this._hasAnimatedGif = this.getMedia().some(function(e) {
			return e.isAnimatedGif
		})), this._hasAnimatedGif
	}, TD.services.ChirpBase.prototype.hasLink = function() {
		return null === this._hasLink && (this._hasLink = twttrTxt.extractUrls(this.text).length > 0), this._hasLink
	}, TD.services.ChirpBase.prototype.isFromVerifiedUser = function() {
		return !1
	}, TD.services.ChirpBase.msFudge = 0, TD.services.ChirpBase.prototype.fudgeCreatedTime = function(e) {
		var t = TD.services.ChirpBase.msFudge;
		e.setMilliseconds(t), t++, t %= 1e3, TD.services.ChirpBase.msFudge = t
	}, TD.services.ChirpBase.prototype.scribeMediaImpression = function() {}, TD.services.ChirpBase.prototype.isStreamed = function() {
		return "realtime" === this.apiSource
	}, TD.services.ChirpBase.prototype.isFromContent = function() {
		return "graphql" === this.apiSource
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(46),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.GapChirp = function(e, t) {
		t = t || {}, this.id = (0, r.default)("gap_"), this.gapCursor = e, this.gapSize = this.processGapSize(t.gapSize), this.sortIndex = {
			type: t.sortIndex.type,
			value: t.sortIndex.value,
			conflictResolution: "after"
		}
	}, TD.services.GapChirp.prototype = new TD.services.ChirpBase, TD.services.GapChirp.prototype.chirpType = TD.services.ChirpBase.GAP, TD.services.GapChirp.prototype.processGapSize = function(e) {
		return "number" != typeof e ? 0 : 10 * ~~(Math.max(e, 0) / 10)
	}, TD.services.GapChirp.prototype.render = function() {
		return TD.ui.template.render("status/gap_in_stream", {
			id: this.id,
			showSize: this.gapSize > 10,
			size: TD.util.truncateNumber(this.gapSize)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = y(i(65)),
		s = y(i(833)),
		r = y(i(122)),
		a = y(i(2211)),
		o = y(i(15)),
		l = y(i(2212)),
		c = y(i(112)),
		u = y(i(13)),
		d = y(i(2)),
		h = y(i(0)),
		m = y(i(2213)),
		f = y(i(839)),
		p = y(i(6)),
		g = y(i(279)),
		v = i(19),
		T = y(i(840)),
		w = i(841),
		b = i(168),
		tweetUtil = i(230),
		configUtil = i(360);

	function y(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterStatus = function(e) {
		this.account = e
	}, TD.services.TwitterStatus.prototype = new TD.services.ChirpBase, TD.services.TwitterStatus.prototype.chirpType = TD.services.ChirpBase.TWEET, TD.services.TwitterStatus.prototype.user = null, TD.services.TwitterStatus.prototype.inReplyToID = "", TD.services.TwitterStatus.prototype.inReplyToUserID = "", TD.services.TwitterStatus.prototype.inReplyToScreenName = "", TD.services.TwitterStatus.prototype.isFavorite = !1, TD.services.TwitterStatus.prototype.isRetweeted = !1, TD.services.TwitterStatus.prototype.retweetCount = 0, TD.services.TwitterStatus.prototype.likeCount = 0, TD.services.TwitterStatus.prototype.replyCount = 0, TD.services.TwitterStatus.prototype.retweetedStatus = null, TD.services.TwitterStatus.prototype.quotedTweet = null, TD.services.TwitterStatus.prototype.entities = null, TD.services.TwitterStatus.prototype.poll = null, TD.services.TwitterStatus.prototype.sourceUrl = "", TD.services.TwitterStatus.prototype.sourceNoHTML = "", TD.services.TwitterStatus.prototype._media = null, TD.services.TwitterStatus.prototype._filterableText = null, TD.services.TwitterStatus.prototype.fromJSONObject = function(e) {
		this.id = e.id_str || e.id, this.sortIndex = {
			value: this.id,
			type: "numericString"
		}, e.user && (this.user = new TD.services.TwitterUser(this.account).fromJSONObject(e.user), this.creatorAccount = TD.storage.accountController.get(TD.storage.Account.generateKeyFor("twitter", this.user.id))), e.source && (this.sourceNoHTML = e.source.replace(/<[^>]*>/g, ""), this.sourceUrl = "https://help.twitter.com/en/using-twitter/how-to-tweet#source-labels"), this._addPrettyEngagementCounts(e), this.inReplyToUserID = e.in_reply_to_user_id_str, this.inReplyToScreenName = e.in_reply_to_screen_name, this.isFavorite = e.favorited, this.isRetweeted = e.retweeted, this.retweetCount = e.retweet_count, this.likeCount = e.favorite_count, this.replyCount = e.reply_count, this.currentUserRetweet = e.current_user_retweet, this.possiblySensitive = e.possibly_sensitive, this.inReplyToID = e.in_reply_to_status_id_str || e.in_reply_to_status_id;
		var t = (0, u.default)(e, "retweeted_status.self_thread.id_str", !1);
		return this.selfThreadId = (0, u.default)(e, "self_thread.id_str", t), e.retweeted_status ? (this.retweetedStatus = new TD.services.TwitterStatus(this.account).fromJSONObject(e.retweeted_status), this.text = this.retweetedStatus.text, this.entities = this.retweetedStatus.entities) : (this.text = f.default.getTweetText(e), this.entities = f.default.getTweetEntities(e)), this.retweetedStatus ? (this.quotedTweet = this.retweetedStatus.quotedTweet, this.isQuoteStatus = this.retweetedStatus.isQuoteStatus, this.quotedTweetMissing = this.retweetedStatus.quotedTweetMissing) : (this.isQuoteStatus = Boolean(e.quoted_status_id_str || e.is_quote_status), this.quotedTweet = e.quoted_status ? new TD.services.TwitterStatus(this.account).fromJSONObject(e.quoted_status) : null, this.quotedStatusId = e.quoted_status_id_str, this.quotedTweetMissing = Boolean(this.isQuoteStatus && !this.quotedTweet)), this._media = TD.services.TwitterMedia.getMediaFromEntities(this.entities), this.lang = e.lang, this.place = e.place || {}, this.created = TD.util.parseDateString(e.created_at), this.card = e.card, (0, u.default)(e, "card.name", "").includes("poll") && (this.poll = m.default.getPollDataFromCard(e.card)), this.conversationMuted = e.conversation_muted, this._generateHTMLText(), this
	}, TD.services.TwitterStatus.prototype.fromGraphQLJSONObject = function(e) {
		var t = e.rest_id,
			i = e.legacy,
			n = e.quoted_tweet,
			s = e.core,
			r = i;
		this.id = t, this.apiSource = "graphql", this.sortIndex = {
			value: this.id,
			type: "numericString"
		}, s && s.user && (this.user = new TD.services.TwitterUser(this.account).fromGraphQLJSONObject(s.user), this.creatorAccount = TD.storage.accountController.get(TD.storage.Account.generateKeyFor("twitter", this.user.id))), r.source && (this.sourceNoHTML = r.source.replace(/<[^>]*>/g, ""), this.sourceUrl = "https://help.twitter.com/en/using-twitter/how-to-tweet#source-labels"), this._addPrettyEngagementCounts(r), this.inReplyToUserID = r.in_reply_to_user_id_str, this.inReplyToScreenName = r.in_reply_to_screen_name, this.isFavorite = r.favorited, this.isRetweeted = r.retweeted, this.retweetCount = r.retweet_count, this.likeCount = r.favorite_count, this.replyCount = r.reply_count, this.possiblySensitive = r.possibly_sensitive, this.inReplyToID = r.in_reply_to_status_id_str;
		var a = (0, u.default)(r, "retweeted_status.legacy.self_thread.id_str", !1);
		return this.selfThreadId = (0, u.default)(r, "self_thread.id_str", a), r.retweeted_status ? (this.retweetedStatus = new TD.services.TwitterStatus(this.account).fromGraphQLJSONObject(r.retweeted_status), this.text = this.retweetedStatus.text, this.entities = this.retweetedStatus.entities) : (this.text = f.default.getTweetText(r), this.entities = f.default.getTweetEntities(r)), r.quoted_status_id_str && (n ? TD.util.metric("project-content:success:quoted_tweet") : (0, u.default)(this, "retweetedStatus.quotedTweet") || TD.util.metric("project-content:errors:missing_quoted_tweet")), this.retweetedStatus ? (this.quotedTweet = this.retweetedStatus.quotedTweet, this.isQuoteStatus = this.retweetedStatus.isQuoteStatus, this.quotedTweetMissing = this.retweetedStatus.quotedTweetMissing) : (this.isQuoteStatus = Boolean(r.quoted_status_id_str), this.quotedTweet = n ? new TD.services.TwitterStatus(this.account).fromGraphQLJSONObject(n) : null, this.quotedStatusId = r.quoted_status_id_str, this.quotedTweetMissing = Boolean(this.isQuoteStatus && !this.quotedTweet)), this._media = TD.services.TwitterMedia.getMediaFromEntities(this.entities), this.lang = r.lang, this.place = r.place || {}, this.created = TD.util.parseDateString(r.created_at), r.card && (this.card = (0, b.convertCardFromGraphQL)(r.card)), (0, u.default)(r, "card.name", "").includes("poll") && (this.poll = m.default.getPollDataFromCard(r.card)), this.conversationMuted = r.conversation_muted, this._generateHTMLText(), this
	}, TD.services.TwitterStatus.prototype._addPrettyEngagementCounts = function(e) {
		if (TD.controller.stats.isInExperimentBucket("live_engagement_in_column_8020", "live_engagement_enabled")) {
			var t = parseInt(e.retweet_count, 10),
				i = parseInt(e.favorite_count || (0, u.default)(e, "retweeted_status.favorite_count") || (0, u.default)(e, "retweeted_status.legacy.favorite_count"), 10),
				n = parseInt(e.reply_count || (0, u.default)(e, "retweeted_status.reply_count") || (0, u.default)(e, "retweeted_status.legacy.reply_count"), 10),
				s = (0, w.getHumanFormatOptions)();
			this.prettyRetweetCount = !!t && (0, T.default)(t, s), this.prettyLikeCount = !!i && (0, T.default)(i, s), this.prettyReplyCount = !!n && (0, T.default)(n, s), this.withPrettyEngagements = !0
		} else this.withPrettyEngagements = !1
	}, TD.services.TwitterStatus.prototype._generateHTMLText = function() {
		this.htmlText = TD.util.transform(this.text, this.entities);
		let cleanText = this.text.replace(/\shttps:\/\/t.co\/[a-zA-Z0-9\-]{8,10}$/, "");
		if(cleanText.endsWith("…")) {
			var tweetLength = tweetUtil.getTweetLength(this.text.trim(), configUtil.getConfiguration());
			if(tweetLength >= 275 && tweetLength < 400) {
				let id = this.retweetedStatus ? this.retweetedStatus.id : this.id;
				this.htmlText += ` <a href="https://twitter.com/${this.user.screenName}/status/${id}" onclick="expandTweet(event, '${id}')">Expand tweet</a>`;
			};
		}
	}, TD.services.TwitterStatus.prototype.getMainUser = function() {
		return this.retweetedStatus ? this.retweetedStatus.user : this.user
	}, TD.services.TwitterStatus.prototype.getCreator = function() {
		return this.user
	}, TD.services.TwitterStatus.prototype.getRelatedTweet = function() {
		return this
	}, TD.services.TwitterStatus.prototype.getMainTweet = function() {
		return this.retweetedStatus ? this.retweetedStatus : this
	}, TD.services.TwitterStatus.prototype.getReplyContext = function() {
		if (!this.inReplyToID) return "";
		var e = g.default.getRecipientsToDisplay(this.getReplyingToUsers());
		return e.users.length > 0 ? p.default.render("compose/reply_info", {
			recipients: e
		}) : void 0
	}, TD.services.TwitterStatus.prototype.isInThread = function() {
		return Boolean(this.selfThreadId)
	}, TD.services.TwitterStatus.prototype.hasLocationData = function() {
		var e = this.getMainTweet();
		return !(!e.place.full_name && !e.place.country)
	}, TD.services.TwitterStatus.prototype.getLocationName = function() {
		return this.getMainTweet().place.name
	}, TD.services.TwitterStatus.prototype.getLocationFullName = function() {
		var e = this.getMainTweet();
		return e.place.full_name && e.place.country ? [e.place.full_name, e.place.country].join(", ") : e.place.country ? e.place.country : ""
	}, TD.services.TwitterStatus.prototype.getLocationURL = function() {
		var e;
		switch (this.getMainTweet().place.place_type) {
			case "admin":
				e = 10;
				break;
			case "city":
				e = 12;
				break;
			case "country":
				e = 6;
				break;
			case "neighbourhood":
				e = 13;
				break;
			case "poi":
			case "default":
				e = 15
		}
		return "https://maps.google.com/maps?q=" + encodeURIComponent(this.getLocationFullName()) + "&z=" + e
	}, TD.services.TwitterStatus.prototype.getLocationSearchEncodedURL = function() {
		return "https://twitter.com/search?q=" + encodeURIComponent('near:"' + this.getLocationFullName() + '"')
	}, TD.services.TwitterStatus.prototype.isOwnChirp = function() {
		return Boolean(this.creatorAccount)
	}, TD.services.TwitterStatus.prototype.isRetweetedStatus = function() {
		return Boolean(this.retweetedStatus)
	}, TD.services.TwitterStatus.prototype.isTranslatable = function() {
		var e = this.getMainTweet();
		return TD.decider.get("machine_translated_tweets") && e.lang && e.lang !== TD.languages.getSystemLanguageCode(!0) && TD.languages.isSupportedTranslationSourceLanguage(e.lang) && TD.languages.isSystemLangSupportedDestinationLanguage() && !e.isOwnChirp() && !e.user.isProtected && !e.getTranslation()
	}, TD.services.TwitterStatus.prototype.translate = function() {
		var e = TD.controller.clients.getClient(this.account.getKey()),
			t = this.getMainTweet().lang,
			i = TD.languages.getSupportedDestinationSystemLanguage(),
			n = function(e) {
				var t, n, s = this.getDOMChirps().add(this.getMainTweet().getDOMChirps()),
					r = s.find(".js-translate-call-to-action");
				s = s.filter(function(e) {
					return 0 === (0, h.default)(".js-tweet-translation", this).length
				}), this.lang = e.translated_lang || this.lang, r.remove(), e.translated_lang !== i && (e.htmltext = TD.util.transform(e.text, e.entities), e.localizedLanguageName = this.getLocalizedLanguageName(), (t = s.find(".js-tweet-text")).after(TD.ui.template.render("status/tweet_translation", e)), n = s.find(".js-tweet-translation").find(".js-tweet-translation-text"), t.addClass("tweet-translation-original-text margin-bn"), n.html(e.htmltext), this.setTranslation(e))
			}.bind(this);
		e.translateTweet(this.getMainTweet().id, i, n, function(e) {
			(0, v.showErrorNotification)({
				message: (0, d.default)("Translation failed")
			})
		}), TD.controller.stats.translate(this.getMainUser().id, this.id, this.account.getUserID(), i, t)
	}, TD.services.TwitterStatus.prototype.setTranslation = function(e) {
		this.getMainTweet().translation = e
	}, TD.services.TwitterStatus.prototype.getTranslation = function() {
		return this.getMainTweet().translation
	}, TD.services.TwitterStatus.prototype.getChirpURL = function() {
		var e = this.getMainTweet();
		return "https://twitter.com/" + e.user.screenName + "/status/" + e.id
	}, TD.services.TwitterStatus.prototype.getLightChirpURL = function() {
		var e = this.getMainTweet();
		return "twitter.com/" + e.user.screenName + "/status/" + e.id
	}, TD.services.TwitterStatus.prototype.getLocalizedLanguageName = function() {
		var e = TD.languages.getLanguageFromISOCode(this.getMainTweet().lang);
		return e ? e.localized_name : ""
	}, TD.services.TwitterStatus.prototype.destroy = function() {
		this.isOwnChirp() ? this._action("delete", function(e) {
			TD.controller.feedManager.deleteChirp(e.id)
		}) : (0, v.showErrorNotification)({
			message: (0, d.default)("You don't own this account - can't delete")
		})
	}, TD.services.TwitterStatus.prototype.getQuoteText = function() {
		var e = {
			username: this.user.screenName,
			text: TD.util.removeHTMLCodes(this.text)
		};
		return TD.ui.template.toHtml("RT @{{username}}: {{{text}}}", e)
	}, TD.services.TwitterStatus.prototype.renderMinimalist = function(e) {
		return e.isMinimalist = !0, this.render(e)
	}, TD.services.TwitterStatus.prototype.render = function(e) {
		e = e || {};
		var t = TD.settings.getDisplaySensitiveMedia(),
			i = {
				tweet: this,
				withMediaPreview: !0,
				isMediaPreviewOff: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_OFF,
				isMediaPreviewSmall: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL,
				isMediaPreviewLarge: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE,
				mediaPreviewSrc: function() {
					return this.getMediaSrcForPreviewSize(e.mediaPreviewSize)
				},
				altText: function() {
					return this.getAltText()
				},
				renderQuoted: function() {
					return this.renderQuotedTweet(e)
				},
				thumbSizeClass: TD.services.TwitterMedia.thumbSizeClasses[e.mediaPreviewSize],
				isPossiblySensitive: (this.possiblySensitive || (0, u.default)(this.retweetedStatus, "possiblySensitive")) && !t,
				isMinimalist: Boolean(e.isMinimalist),
				withDragHandle: !1,
				withRemove: !1,
				withTweetActions: !0,
				withFooter: !0,
				withAvatar: !0,
				withLinebreaks: !0,
				isFavorited: this.isFavorite,
				isRetweeted: this.isRetweet
			};
		TD.config.debug_highlight_streamed_chirps && (this.isStreamed() ? e.chirpClassnames = "is-streamed" : this.isFromContent() ? e.chirpClassnames = "is-contented" : e.chirpClassnames = "");
		var n = this.getMedia().find(function(e) {
				return e.isAnimatedGif
			}),
			s = n ? n.getAnimatedGifForPreview() : {},
			r = h.default.extend({}, i, s, e);
		if ((0, b.isHorizonWebCardTypeEnabled)(this.card) && r.isMediaPreviewOff) {
			var a = (0, u.default)(this, "entities.urls", []);
			a.length && (a.forEach(function(e) {
				e.isUrlForAttachment = !1
			}), this._generateHTMLText())
		}
		return TD.ui.template.render("status/tweet_in_stream", r).trim()
	}, TD.services.TwitterStatus.prototype.renderInMediaGallery = function() {
		return TD.ui.template.render("status/tweet_in_box", {
			tweet: this,
			withTweetActions: !0,
			withTweetActionsVisible: !0,
			withFooter: !0,
			withAvatar: !0,
			withMediaPreview: !1,
			actionsMenuPosition: "pos-l pos-t",
			inDialog: !0
		})
	}, TD.services.TwitterStatus.prototype.renderQuotedTweet = function(e) {
		(e = e || {}).mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE && (e.mediaPreviewSize = TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM), e.isMediaPreviewLarge = !1, e.thumbSizeClass = TD.services.TwitterMedia.thumbSizeClasses[e.mediaPreviewSize], e.withAvatar = !1, e.isMediaPreviewCompact = !1, e.isMediaPreviewInQuoted = !0;
		var t = TD.settings.getDisplaySensitiveMedia(),
			i = {
				tweet: this,
				withAvatar: !1,
				withInlinedUsername: !0,
				withMediaPreview: !0,
				isMediaPreviewOff: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_OFF,
				isMediaPreviewSmall: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL,
				altText: function() {
					return this.getAltText()
				},
				mediaPreviewSrc: function() {
					return this.getMediaSrcForPreviewSize(e.mediaPreviewSize)
				},
				isPossiblySensitive: this.possiblySensitive && !t
			},
			n = this.getMedia().find(function(e) {
				return e.isAnimatedGif
			}),
			s = n ? n.getAnimatedGifForPreview() : {},
			r = h.default.extend({}, i, s, e),
			a = r.tweet,
			o = (0, u.default)(a, "entities.urls", []);
		return o.length && (o.forEach(function(e) {
			e.isUrlForAttachment = !1
		}), a._generateHTMLText()), TD.ui.template.render("status/quoted_tweet", r)
	}, TD.services.TwitterStatus.prototype.getNotificationData = function() {
		var e, t = this.getMainTweet(),
			i = {};
		return t.sender ? (e = t.recipient ? t.recipient.screenName : t.account.getUsername(), i.title = t.sender.screenName + " > " + e) : t.user && t.user.screenName && (i.title = t.user.screenName), i.img = t.getMainUser().profileImageURL, i.text = (0, h.default)("<div>" + t.htmlText + "</div>").text(), i
	}, TD.services.TwitterStatus.prototype.favorite = function(e) {
		var t, i, n, s = this.isFavorite,
			r = TD.controller.clients.getClient(this.account.getKey());
		this.setFavorite(!this.isFavorite), this.animateFavorite(e.element), n = function() {
			(0, v.showErrorNotification)({
				message: s ? (0, d.default)("Unlike failed") : (0, d.default)("Like failed")
			})
		}, i = function(e) {
			var t = TD.core.defer.fail();
			403 !== e.status && 404 !== e.status || (t = this.refreshFavorite(r)), t.addErrback(function() {
				this.setFavorite(s), n()
			}.bind(this))
		}.bind(this), t = function(e) {
			e.error && i()
		}, s ? (r.unfavorite(this.id, t, i), TD.controller.stats.unlike(this.getScribeItemData(), this.account.getUserID())) : (r.favorite(this.id, t, i), TD.controller.stats.like(this.getScribeItemData(), this.account.getUserID()))
	}, TD.services.TwitterStatus.prototype.refreshFavorite = function(e) {
		var t = new TD.core.defer.Deferred;
		return e.show(this.id, t.callback.bind(t), t.errback.bind(t)), t.addCallback(function(e) {
			this.setFavorite(e.isFavorite)
		}.bind(this)), t
	}, TD.services.TwitterStatus.prototype.animateFavorite = function(e) {
		if (TD.decider.get("heartfave_animation") && !e.find(".js-like-count").length) {
			var t = e.find('a[rel="favorite"]'),
				i = t.find("i");
			if (!this.isFavorite) return t.blur(), t.find(".heartsprite").remove(), void i.toggleClass("is-invisible", !1);
			window.requestAnimationFrame(function() {
				var e = (0, h.default)(TD.ui.template.render("heartsprite"));
				i.toggleClass("is-invisible", !0), t.blur(), t.append(e)
			})
		} else {
			window.requestAnimationFrame(function() {
				e.find('a[rel="favorite"]').toggleClass("anim anim-slower anim-bounce-in", this.isFavorite).blur()
			}.bind(this))
		}
	}, TD.services.TwitterStatus.prototype.email = function() {
		var e, t = (0, d.default)("Tweet forwarded by @{{1}}", {
				1: this.account.getUsername()
			}),
			i = [];
		i.push(this.text), i.push((0, d.default)("Original Tweet: {{1}}", {
			1: this.getChirpURL()
		})), i.push((0, d.default)("Sent via TweetDeck")), e = i.join("\n\n"), TD.util.openEmail(null, t, e)
	}, TD.services.TwitterStatus.prototype.retweet = function() {
		var e = 1 === TD.storage.accountController.getAccountsForService("twitter").length;
		if (!this.isRetweeted || !e) {
			var t = (0, d.default)("Retweet this to your followers?");
			return new TD.components.ActionDialog({
				tweet: this,
				title: t
			})
		}
		this.setRetweeted(!1), (0, h.default)(document).trigger("uiUndoRetweet", {
			tweetId: this.getMainTweet().id,
			retweetId: this.id,
			from: this.account.getKey()
		})
	}, TD.services.TwitterStatus.prototype.quoteTo = function(e) {
		TD.controller.stats.quoteTweet(), (0, h.default)(document).trigger("uiComposeTweet", {
			type: "tweet",
			from: e,
			quotedTweet: this.getMainTweet()
		})
	}, TD.services.TwitterStatus.prototype.messageTo = function() {
		var e = this.getMainTweet();
		TD.controller.stats.shareTweetViaDM(), (0, h.default)(document).trigger("uiComposeTweet", {
			type: "message",
			from: [this.account.getKey()],
			quotedTweet: e
		})
	}, TD.services.TwitterStatus.prototype._action = function(e, t) {
		var i, n, s = this;
		TD.controller.clients.getClient(this.account.getKey());

		function r() {
			(0, v.removeNotification)({
				notification: i,
				timeoutDelayMs: 100
			}), (0, v.showErrorNotification)({
				message: (0, d.default)("{{message}} failed", {
					message: n
				})
			})
		}

		function a(e) {
			e.error ? r() : ((0, v.updateNotification)({
				message: (0, d.default)("Success: {{message}}", {
					message: n
				}),
				notification: i,
				remove: !0
			}), t && t(s))
		}
		switch (e) {
			case "delete":
				n = this.retweetedStatus ? (0, d.default)("Undoing Retweet") : (0, d.default)("Deleting"), TD.controller.clients.getClient(this.creatorAccount.getKey()).destroy(this.id, a, r);
				break;
			case "deleteDM":
				n = (0, d.default)("Deleting"), (0, h.default)(document).trigger("uiDeleteDm", {
					id: this.id,
					accountKey: (this.creatorAccount || this.account).getKey(),
					success: a,
					error: r
				})
		}
		i = (0, v.showNotification)({
			message: n,
			timeoutDelayMs: 1 / 0
		})
	}, TD.services.TwitterStatus.prototype._entitySort = function(e, t) {
		return t.indices[0] - e.indices[0]
	}, TD.services.TwitterStatus.prototype.passFilters = function(e) {
		return TD.controller.filterManager.pass(this, e) && (!this.quotedTweet || TD.controller.filterManager.pass(this.quotedTweet, e))
	}, TD.services.TwitterStatus.prototype.getFilterableText = function() {
		var e, t = "";
		return this._filterableText ? t = this._filterableText : 0 === this.entities.urls.length && 0 === this.entities.media.length ? t = this.text : (e = (e = (e = [this.text]).concat((0, c.default)(this.entities.urls, "expanded_url"))).concat((0, c.default)(this.entities.media, "expanded_url")), t = (e = (0, l.default)(e)).join(" "), this._filterableText = t), t
	}, TD.services.TwitterStatus.prototype.getSenders = function() {
		var e = [this.user.screenName];
		return this.isRetweetedStatus() && e.push(this.retweetedStatus.user.screenName), e
	}, TD.services.TwitterStatus.prototype.lastInSelfThread = function() {
		return this.isSelfThreadEnd
	}, TD.services.TwitterStatus.prototype.isMidSelfThread = function() {
		return this.positionInConversation < this.numberOfTweetsInSelfThread - 1
	}, TD.services.TwitterStatus.prototype.isMidConversation = function() {
		return this.positionInConversation < this.numberOfTweetsInConversation - 1
	}, TD.services.TwitterStatus.prototype.indentedChirp = function() {
		return "ShowMore" === this.cursorType || this.isInThread() && this.hasReplies() && !this.lastInSelfThread()
	}, TD.services.TwitterStatus.prototype.hasReplies = function() {
		var e = this.isInThread() && !this.inReplyToID,
			t = this.isMidConversation();
		return e || t || this.showMoreCursor
	}, TD.services.TwitterStatus.prototype.setPositionInConversation = function(e) {
		this.positionInConversation = e
	}, TD.services.TwitterStatus.prototype.setQuotedStatus = function(e) {
		e && (this.quotedTweet = e, this.quotedTweetMissing = !1)
	}, TD.services.TwitterStatus.prototype.setIsSelfThreadEnd = function(e, t) {
		var i = e.find(function(t, i) {
				var n = e[i + 1],
					s = (0, u.default)(n, "content.item.content.tweet.displayType");
				return "SelfThread" !== (0, u.default)(n, "content.item.content.conversationThread.conversationComponents[0].conversationTweetComponent.tweet.displayType", s)
			}),
			n = (0, u.default)(i, "content.item.content.tweet.id");
		this.isSelfThreadEnd = n === t && !this.isMidSelfThread()
	}, TD.services.TwitterStatus.prototype.setConversationRootId = function(e) {
		this.conversationRootId = e
	}, TD.services.TwitterStatus.prototype.setShowMoreCursor = function(e) {
		this.showMoreCursor = e
	}, TD.services.TwitterStatus.prototype.setNumberOfTweetsInConversation = function(e) {
		var t = e.filter(function(e) {
				return !e.tweetComposerComponent
			}),
			i = t.filter(function(e) {
				return "SelfThread" === (0, u.default)(e, "content.item.content.tweet.displayType", !1)
			});
		this.numberOfTweetsInConversation = t.length, this.numberOfTweetsInSelfThread = i.length
	}, TD.services.TwitterStatus.prototype.setRetweeted = function(e) {
		this.isRetweeted = e;
		var t = this.isRetweeted ? "icon-retweet-filled" : "icon-retweet",
			i = this.isRetweeted ? "icon-retweet" : "icon-retweet-filled";
		this.getDOMChirps().find(".js-tweet").toggleClass(TD.services.ChirpBase.RETWEET_CLASS, e).find(".js-icon-retweet").addClass(t).removeClass(i), this.retweetedStatus && this.retweetedStatus.setRetweeted(e)
	}, TD.services.TwitterStatus.prototype.setFavorite = function(e) {
		this.isFavorite = e;
		var t = this.isFavorite ? "icon-heart-filled" : "icon-favorite",
			i = this.isFavorite ? "icon-favorite" : "icon-heart-filled";
		this.getDOMChirps().find(".js-tweet").toggleClass(TD.services.ChirpBase.FAVORITE_CLASS, e).find('a[rel="favorite"]').attr("title", TD.ui.template.render("text/favorite_action", this)).find(".js-icon-favorite").addClass(t).removeClass(i)
	}, TD.services.TwitterStatus.prototype.isMention = function() {
		for (var e, t = String(this.account.getUserID()), i = this.account.getUsername().toLowerCase(), n = this.entities.user_mentions.length, s = 0; s < n; s++)
			if ((e = this.entities.user_mentions[s]).id_str) {
				if (e.id_str === t) return !0
			} else if (e.screen_name.toLowerCase() === i) return !0;
		return !1
	}, TD.services.TwitterStatus.prototype.getMedia = function() {
		return this.retweetedStatus ? this.retweetedStatus.getMedia() : this._media || []
	}, TD.services.TwitterStatus.prototype.getUniqueMedia = function() {
		var e = this.getMedia(),
			t = {},
			i = [],
			n = this.id;
		return (0, o.default)(e, function(e) {
			t[e.shortUrl] || i.push({
				media: e,
				chirpId: n
			})
		}), i
	}, TD.services.TwitterStatus.prototype.getAllTaggedUsers = function() {
		var e = this.getMedia().map(function(e) {
				return e.getTaggedUsers()
			}),
			t = (0, a.default)(e);
		return (0, r.default)(t, "id")
	}, TD.services.TwitterStatus.prototype.getReplyingToUsers = function() {
		var e = this,
			t = this.getReplyUsers().filter(function(t) {
				return t.id === e.inReplyToUserID
			}),
			i = g.default.getImplicitMentions(this.entities.user_mentions),
			s = i.filter(function(t) {
				return t.id === e.account.getUserID()
			});
		return (0, r.default)([].concat((0, n.default)(t), (0, n.default)(s), (0, n.default)(i)), "id")
	}, TD.services.TwitterStatus.prototype.getReplyUsers = function() {
		var e = this.getMainTweet(),
			t = [(0, s.default)(e.user, ["id", "screenName", "name"])];
		this.retweetedStatus && t.push((0, s.default)(this.user, ["id", "screenName", "name"]));
		var i = (0, u.default)(e, "entities.user_mentions", []);
		return t = (t = t.concat(i.map(function(e) {
			return {
				id: e.id_str,
				screenName: e.screen_name,
				name: e.name
			}
		}))).concat(this.getAllTaggedUsers()), t = (0, r.default)(t, "id")
	}, TD.services.TwitterStatus.prototype.hasLink = function() {
		var e = this.entities.media || [],
			t = this.entities.urls || [];
		return Boolean(e.length || t.length)
	}, TD.services.TwitterStatus.prototype.isFromVerifiedUser = function() {
		return this.getMainTweet().user.isVerified
	}, TD.services.TwitterStatus.prototype.hasImage = function() {
		return null === this._hasImage && (this._hasImage = TD.services.ChirpBase.prototype.hasImage.call(this) || TD.services.TwitterMedia.entitiesContainImage(this.entities)), this._hasImage
	}, TD.services.TwitterStatus.prototype.hasVideo = function() {
		return null === this._hasVideo && (this._hasVideo = TD.services.ChirpBase.prototype.hasVideo.call(this) || TD.services.TwitterMedia.entitiesContainVideo(this.entities)), this._hasVideo
	}, TD.services.TwitterStatus.prototype.getScribeItemData = function(e) {
		var t;
		return this.isRetweetedStatus() ? (t = this.getMainTweet().getScribeItemData(e)).retweeting_tweet_id = this.id : (t = {
			item_type: 0,
			id: this.id
		}, e && (t.visibility_start = e.visibilityStart, t.visibility_end = e.visibilityEnd)), t
	}, TD.services.TwitterStatus.prototype.scribeMediaImpression = function() {
		TD.controller.stats.mediaImpression(this.getScribeItemData())
	}, TD.services.TwitterStatus.prototype.muteConversation = function(e) {
		return TD.controller.clients.getClient(e.getKey()).muteConversation(this.id).addCallbackWith(this, TD.util.effect(function() {
			this.conversationMuted = !0, (0, v.showNotification)({
				message: (0, d.default)("Muted conversation")
			})
		}))
	}, TD.services.TwitterStatus.prototype.unmuteConversation = function(e) {
		return TD.controller.clients.getClient(e.getKey()).unmuteConversation(this.id).addCallbackWith(this, TD.util.effect(function() {
			this.conversationMuted = !1, (0, v.showNotification)({
				message: (0, d.default)("Unmuted conversation")
			})
		}))
	}
}, , , function(e, t, i) {
	"use strict";
	var n = c(i(2214)),
		s = c(i(2219)),
		r = c(i(13)),
		a = c(i(2223)),
		o = c(i(112)),
		l = c(i(2224));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = i(17);
	t.getPollDataFromCard = function(e) {
		var i = t.parsePollCardResponse(e),
			n = (0, l.default)((0, o.default)(i.choices, "count")),
			s = t.insertPercentages(i.choices);
		i.countsAreFinal && n > 0 && (s = t.insertWinner(i.choices)), s = s.map(function(e) {
			return e.label = u.cleanWithEmoji(e.label), e
		});
		var r = i.endDatetimeUTC && TD.util.timeLeft(new Date(i.endDatetimeUTC), {
			longForm: !0,
			adjustSystemTime: !0
		});
		return {
			choices: s,
			hasCount: n > 0,
			hasTimeLeft: r && "now" !== r,
			prettyCount: u.prettyNumber(n) + " vote" + (1 === n ? "" : "s"),
			prettyTimeLeft: r
		}
	}, t.parsePollCardResponse = function(e) {
		var t = e.binding_values,
			i = [];
		return (0, a.default)(1, 5).forEach(function(e) {
			var n = (0, r.default)(t, "choice" + e + "_label.string_value"),
				s = (0, r.default)(t, "choice" + e + "_count.string_value", "0"),
				a = (0, r.default)(t, "selected_choice.string_value");
			n && i.push({
				label: n,
				count: Number(s),
				isSelectedChoice: Number(a) === e
			})
		}), {
			countsAreFinal: (0, r.default)(t, "counts_are_final.boolean_value"),
			endDatetimeUTC: (0, r.default)(t, "end_datetime_utc.string_value"),
			choices: i
		}
	}, t.insertPercentages = function(e) {
		var t = (0, l.default)((0, o.default)(e, "count")),
			i = e.map(function(e) {
				return 0 === t ? e.percentage = 0 : e.count >= t ? e.percentage = 100 : e.percentage = Math.round(e.count / t * 100), e
			}),
			n = (0, l.default)((0, o.default)(i, "percentage")),
			r = (0, s.default)(i, function(e) {
				return e.count > 0
			});
		return t > 0 && 100 !== n && (r.percentage += 100 - n), i
	}, t.insertWinner = function(e) {
		var t = (0, n.default)((0, o.default)(e, "count"));
		return e.map(function(e) {
			return e.isWinner = e.count === t, e
		})
	}
}, , , , , , , , , , , , , , , function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterConversationNameUpdateEvent = function(e, t) {
		this.sender = t, this.account = e
	}, TD.services.TwitterConversationNameUpdateEvent.prototype = new TD.services.ChirpBase, TD.services.TwitterConversationNameUpdateEvent.prototype.chirpType = TD.services.ChirpBase.CONVERSATION_NAME_UPDATE, TD.services.TwitterConversationNameUpdateEvent.prototype.messageThreadId = null, TD.services.TwitterConversationNameUpdateEvent.prototype.previewText = null, TD.services.TwitterConversationNameUpdateEvent.prototype.getNotificationData = function() {
		return {
			img: this.sender.profileImageURL,
			title: this.conversationName,
			text: this.sender.name + " " + (0, r.default)("has renamed the group conversation.")
		}
	}, TD.services.TwitterConversationNameUpdateEvent.prototype.fromJSONObject = function(e) {
		return this.id = e.id, this.conversationId = e.conversation_id, this.created = new Date(parseInt(e.time, 10)), this.messageThreadId = TD.services.TwitterConversation.getConversationId({
			account: this.account,
			conversationId: this.conversationId
		}), this.conversationName = e.conversation_name, this.sanitizedConversationName = TD.util.transform(e.conversation_name || ""), this.previewText = this.generatePreviewText(), this
	}, TD.services.TwitterConversationNameUpdateEvent.prototype.generatePreviewText = function() {
		return TD.ui.template.render("status/conversation_name_update_preview", {
			chirp: this
		})
	}, TD.services.TwitterConversationNameUpdateEvent.prototype.isOwnChirp = function() {
		return this.sender && this.sender.id === this.account.getUserID()
	}, TD.services.TwitterConversationNameUpdateEvent.prototype.render = function() {
		return TD.ui.template.render("status/conversation_name_update", {
			chirp: this
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = o(i(9)),
		s = o(i(32)),
		r = o(i(0)),
		a = i(839);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterConversationMessageEvent = function(e, t) {
		this.account = e, this.sender = t
	}, TD.services.TwitterConversationMessageEvent.prototype = new TD.services.TwitterStatus, TD.services.TwitterConversationMessageEvent.prototype.chirpType = TD.services.ChirpBase.MESSAGE, TD.services.TwitterConversationMessageEvent.prototype.messageThreadId = null, TD.services.TwitterConversationMessageEvent.prototype.htmlText = null, TD.services.TwitterConversationMessageEvent.prototype.fromJSONObject = function(e) {
		if (this.id = e.id_str || String(e.id), this.text = e.message_data.text, this.conversationId = e.conversation_id, this.messageThreadId = TD.services.TwitterConversation.getConversationId({
				account: this.account,
				conversationId: e.conversation_id
			}), this.created = new Date(parseInt(e.time, 10)), this.entities = e.message_data.entities || {}, this.attachment = e.message_data.attachment, this.createdDate = TD.util.prettyDate(this.created), this._media = TD.services.TwitterMedia.getMediaFromEntities(this.entities).concat(TD.services.TwitterMedia.getMediaFromAttachment(this.attachment)).map(function(e) {
				return "twitter" !== e.service || e.isVideo || e.isAnimatedGif || (e.needsSecureUrl = !0), e
			}), this.attachment && this.attachment.tweet) {
			this.quotedTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(this.attachment.tweet.status);
			(0, a.identifyQuoteTweetAttachmentUrls)(this.entities, [0, 0], this.quotedTweet.id)
		}
		return this.htmlText = TD.util.transform(this.text, this.entities), this
	}, TD.services.TwitterConversationMessageEvent.prototype.hasLocationData = function() {
		return !1
	}, TD.services.TwitterConversationMessageEvent.prototype.getMainUser = function() {
		return this.sender
	}, TD.services.TwitterConversationMessageEvent.prototype.isOwnChirp = function() {
		return this.sender.id === this.account.getUserID()
	}, TD.services.TwitterConversationMessageEvent.prototype.dm = function() {
		(0, r.default)(document).trigger("uiComposeTweet", {
			type: "message",
			from: [this.account.getKey()],
			messageRecipients: [{
				screenName: this.sender.screenName
			}]
		})
	}, TD.services.TwitterConversationMessageEvent.prototype.getChirpURL = function() {
		return ""
	}, TD.services.TwitterConversationMessageEvent.prototype.destroy = function() {
		var e = this;
		this._action("deleteDM", function() {
			TD.controller.clients.getClient(e.account.getKey()).deleteMessage(e.id)
		})
	}, TD.services.TwitterConversationMessageEvent.prototype.render = function() {
		var e = this.getMedia().find(function(e) {
				return e.isAnimatedGif
			}),
			t = e ? e.getAnimatedGifForPreview() : {},
			i = TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM,
			a = this.account.getKey();
		return TD.ui.template.render("status/message_in_stream", (0, n.default)({
			message: this,
			withFooter: !0,
			withAvatar: !0,
			withMediaPreview: !0,
			isMediaPreviewSmall: i === TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL,
			isMediaPreviewLarge: i === TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE,
			mediaPreviewSrc: function() {
				var e = this.getMediaSrcForPreviewSize(i);
				return this.needsSecureUrl && (0, s.default)(function() {
					(0, r.default)(document).trigger("uiNeedsSecureImageUrl", {
						accountKey: a,
						url: e
					})
				}), e
			},
			isGifActive: !0,
			withAutoplay: TD.settings.getAutoPlayGifs(),
			renderQuoted: function() {
				return this.renderQuotedTweet({
					mediaPreviewSize: i
				})
			},
			thumbSizeClass: TD.services.TwitterMedia.thumbSizeClasses[i],
			accountKey: this.account.getKey()
		}, t))
	}, TD.services.TwitterConversationMessageEvent.prototype.renderInMediaGallery = function() {
		return TD.ui.template.render("status/message_in_box", {
			message: this,
			withFooter: !0,
			withAvatar: !0,
			withMediaPreview: !1,
			withTweetActions: !0,
			withTweetActionsVisible: !0
		})
	}, TD.services.TwitterConversationMessageEvent.prototype.getSenders = function() {
		return [this.sender.screenName]
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterConversationJoinEvent = function(e) {
		this.sender = e.sender, this.account = e.account
	}, TD.services.TwitterConversationJoinEvent.prototype = new TD.services.ChirpBase, TD.services.TwitterConversationJoinEvent.prototype.chirpType = TD.services.ChirpBase.CONVERSATION_JOIN, TD.services.TwitterConversationJoinEvent.prototype.messageThreadId = null, TD.services.TwitterConversationJoinEvent.prototype.previewText = null, TD.services.TwitterConversationJoinEvent.prototype.getNotificationData = function() {
		return {
			img: this.sender.profileImageURL,
			title: this.notificationTitle.withSender,
			text: this.sender.name + " " + (0, r.default)("has added you to a group conversation.")
		}
	}, TD.services.TwitterConversationJoinEvent.prototype.fromJSONObject = function(e) {
		this.id = e.id, this.conversationId = e.conversation_id, this.created = new Date(parseInt(e.time, 10)), this.messageThreadId = TD.services.TwitterConversation.getConversationId({
			account: this.account,
			conversationId: this.conversationId
		}), this.previewText = this.generatePreviewText();
		var t = TD.controller.clients.getClient(this.account.getKey());
		return this.conversation = t.conversations.getConversation(this.conversationId), this
	}, TD.services.TwitterConversationJoinEvent.prototype.getParticipants = function() {
		var e = this.conversation.participants.length,
			t = Math.ceil(e / Math.ceil(e / 8));
		return this.conversation.participants.map(function(e, i) {
			return {
				participant: e,
				isEndOfRow: !((i + 1) % t)
			}
		})
	}, TD.services.TwitterConversationJoinEvent.prototype.generatePreviewText = function() {
		return TD.ui.template.render("status/conversation_join_preview", {
			chirp: this
		})
	}, TD.services.TwitterConversationJoinEvent.prototype.isOwnChirp = function() {
		return this.sender.id === this.account.getUserID()
	}, TD.services.TwitterConversationJoinEvent.prototype.render = function() {
		return TD.ui.template.render("status/conversation_join", {
			numberOfParticipants: this.conversation.participants.length,
			chirp: this
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterConversationParticipantsJoinEvent = function(e) {
		this.sender = e.sender, this.account = e.account, this.addedParticipants = e.addedParticipants
	}, TD.services.TwitterConversationParticipantsJoinEvent.prototype = new TD.services.ChirpBase, TD.services.TwitterConversationParticipantsJoinEvent.prototype.chirpType = TD.services.ChirpBase.CONVERSATION_PARTICIPANTS_JOIN, TD.services.TwitterConversationParticipantsJoinEvent.prototype.messageThreadId = null, TD.services.TwitterConversationParticipantsJoinEvent.prototype.previewText = null, TD.services.TwitterConversationParticipantsJoinEvent.prototype.getNotificationData = function() {
		var e = this.addedParticipants[this.addedParticipants.length - 1];
		return {
			img: e.profileImageURL,
			title: this.notificationTitle.withoutSender,
			text: e.name + " " + (0, r.default)("has beed added to the group conversation.")
		}
	}, TD.services.TwitterConversationParticipantsJoinEvent.prototype.fromJSONObject = function(e) {
		return this.id = e.id, this.conversationId = e.conversation_id, this.created = new Date(parseInt(e.time, 10)), this.messageThreadId = TD.services.TwitterConversation.getConversationId({
			account: this.account,
			conversationId: this.conversationId
		}), this.previewText = this.generatePreviewText(), this
	}, TD.services.TwitterConversationParticipantsJoinEvent.prototype.generatePreviewText = function() {
		return TD.ui.template.render("status/conversation_participants_join_preview", {
			chirp: this,
			numberOfOtherParticipants: this.addedParticipants.length - 1
		})
	}, TD.services.TwitterConversationParticipantsJoinEvent.prototype.isOwnChirp = function() {
		return this.sender.id === this.account.getUserID()
	}, TD.services.TwitterConversationParticipantsJoinEvent.prototype.render = function() {
		return TD.ui.template.render("status/conversation_participants_join", {
			chirp: this
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(17));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterConversationParticipantsLeaveEvent = function(e, t) {
		this.account = e, this.leftParticipants = t, this.leftParticipants.forEach(function(e) {
			e.emojifiedName = s.default.cleanWithEmoji(e.name)
		})
	}, TD.services.TwitterConversationParticipantsLeaveEvent.prototype = new TD.services.ChirpBase, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.chirpType = TD.services.ChirpBase.CONVERSATION_PARTICIPANT_REMOVED, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.messageThreadId = null, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.previewText = null, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.getNotificationData = function() {
		return this.leftParticipants.map(function(e) {
			return {
				img: e.profileImageURL,
				title: this.notificationTitle.withoutSender,
				text: e.name + " " + (0, n.default)("has left the group conversation.")
			}
		}, this).pop()
	}, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.fromJSONObject = function(e) {
		return this.id = e.id, this.conversationId = e.conversation_id, this.created = new Date(parseInt(e.time, 10)), this.messageThreadId = TD.services.TwitterConversation.getConversationId({
			account: this.account,
			conversationId: this.conversationId
		}), this.previewText = this.generatePreviewText(), this
	}, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.generatePreviewText = function() {
		return TD.ui.template.render("status/conversation_participants_leave_preview", {
			chirp: this
		})
	}, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.isOwnChirp = function() {
		return !1
	}, TD.services.TwitterConversationParticipantsLeaveEvent.prototype.render = function() {
		return TD.ui.template.render("status/conversation_participants_leave", {
			chirp: this
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(46),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterConversationFailedParticipantsEvent = function(e) {
		this.id = (0, r.default)("failedParticipants"), this.account = e.account, this.failedParticipants = e.failedParticipants.map(function(t, i) {
			return {
				participant: t,
				isLastItem: i === e.failedParticipants.length - 1
			}
		}), this.conversationId = e.conversationId, this.messageThreadId = TD.services.TwitterConversation.getConversationId({
			account: this.account,
			conversationId: this.conversationId
		}), this.previewText = this.generatePreviewText(), this.created = new Date
	}, TD.services.TwitterConversationFailedParticipantsEvent.prototype = new TD.services.ChirpBase, TD.services.TwitterConversationFailedParticipantsEvent.prototype.chirpType = TD.services.ChirpBase.CONVERSATION_PARTICIPANTS_FAILED, TD.services.TwitterConversationFailedParticipantsEvent.prototype.messageThreadId = null, TD.services.TwitterConversationFailedParticipantsEvent.prototype.previewText = null, TD.services.TwitterConversationFailedParticipantsEvent.prototype.getParticipants = function() {
		var e = this.failedParticipants.length,
			t = Math.ceil(e / Math.ceil(e / 8));
		return this.failedParticipants.map(function(e, i) {
			return {
				participant: e,
				isEndOfRow: !((i + 1) % t)
			}
		})
	}, TD.services.TwitterConversationFailedParticipantsEvent.prototype.generatePreviewText = function() {
		return TD.ui.template.render("status/conversation_failed_participants_preview")
	}, TD.services.TwitterConversationFailedParticipantsEvent.prototype.isOwnChirp = function() {
		return !0
	}, TD.services.TwitterConversationFailedParticipantsEvent.prototype.render = function() {
		return TD.ui.template.render("status/conversation_failed_participants", {
			chirp: this
		})
	}
}, function(e, t, i) {
	"use strict";
	TD.services.TwitterConversationReadEvent = function(e) {
		this.account = e
	}, TD.services.TwitterConversationReadEvent.prototype = new TD.services.ChirpBase, TD.services.TwitterConversationReadEvent.prototype.chirpType = TD.services.ChirpBase.CONVERSATION_READ, TD.services.TwitterConversationReadEvent.prototype.messageThreadId = null, TD.services.TwitterConversationReadEvent.prototype.fromJSONObject = function(e) {
		return this.id = e.id, this.conversationId = e.conversation_id, this.created = new Date(parseInt(e.time, 10)), this.lastReadEventId = e.last_read_event_id, this.messageThreadId = TD.services.TwitterConversation.getConversationId({
			account: this.account,
			conversationId: this.conversationId
		}), this
	}
}, function(e, t, i) {
	"use strict";
	var n = a(i(44)),
		s = a(i(0)),
		r = a(i(21));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.Conversations = function(e, t) {
		this.client = t, this.account = e, this.conversationCache = {}, this.accessLevel = {
			oneToOne: !1,
			groupRead: !1
		}, this.currentUsers = {}
	}, TD.services.Conversations.prototype.getConversation = function(e) {
		return this.conversationCache[e]
	}, TD.services.Conversations.prototype.getAllConversations = function() {
		return (0, n.default)(this.conversationCache).map(function(e) {
			return this.conversationCache[e]
		}, this)
	}, TD.services.Conversations.prototype.setAccessLevel = function(e) {
		e.oneToOne === this.accessLevel.oneToOne && e.groupRead === this.accessLevel.groupRead || (this.destroyAll(), this.accessLevel = e, TD.controller.columnManager.getColumnsByAccountKey(this.account.getKey()).filter(function(e) {
			return r.default.isMessageColumn(e)
		}).forEach(function(e) {
			e.model.getFeedKeys().map(TD.controller.feedManager.getPoller).forEach(function(e) {
				e.refresh({
					reset: !0
				})
			})
		}))
	}, TD.services.Conversations.prototype.destroyAll = function() {
		var e = (0, n.default)(this.conversationCache).map(function(e) {
			return this.conversationCache[e]
		}, this);
		e.length && this.client.publishChirpsInternal("remove", "direct", e), this.conversationCache = {}
	}, TD.services.Conversations.prototype.processUserUpdates = function(e, t) {
		var i = {},
			s = [];
		if (e && (this.conversationCache = {}), t = t.user_inbox ? t.user_inbox : t.user_events ? t.user_events : t.conversation_timeline) {
			if (t.users && (this.currentUsers = {}, this.processUsers(t.users)), t.conversations && (s = this.processConversations(t.conversations, t.users), this.cacheConversations(s)), t.cursor && (0, n.default)(this.conversationCache).forEach(function(e) {
					this.conversationCache[e].cursor = t.cursor
				}, this), this.updateMinEntryIds(t), t.entries && (i = this.processConversationEntries(t.entries, t.users)), t.failed_participants && 1 === s.length) {
				var r = s[0].conversationId,
					a = this.processFailedParticipants(t.failed_participants, r);
				i[r] = i[r] || [], i[r] = i[r].concat([a])
			}
			return this.addEventsToConversations(i).forEach(function(e) {
				-1 === s.indexOf(e) && s.push(e)
			}), t.unread_conversations && (0, n.default)(t.unread_conversations).forEach(function(e) {
				var t = this.conversationCache[e];
				t && (t.unread = !0)
			}, this), s
		}
	}, TD.services.Conversations.prototype.markAllRead = function() {
		var e = this.getAllConversations();
		if (e.length) {
			var t = e.map(function(e) {
				return e.getMaxEntryId()
			}).sort(TD.util.numericStringComparator).pop();
			(0, s.default)(document).trigger("uiMarkAllDmsAsRead", {
				lastReadEventId: t,
				accountKey: this.account.getKey(),
				success: function() {
					var t = e.filter(function(e) {
						return !0 === e.unread
					});
					t.length && (t.forEach(function(e) {
						e.unread = !1, e.messages.forEach(function(e) {
							e.read = !0
						})
					}), this.client.publishChirpsInternal("publish", "direct", t))
				}.bind(this)
			})
		}
	}, TD.services.Conversations.prototype.updateMinEntryIds = function(e) {
		var t = (0, n.default)(this.conversationCache),
			i = t.length > 0 ? this.conversationCache[t[0]].minEntryId : null;
		(!i || e.min_entry_id && TD.util.numericStringComparator(i, e.min_entry_id) > 0) && (0, n.default)(this.conversationCache).forEach(function(t) {
			this.conversationCache[t].minEntryId = e.min_entry_id
		}, this)
	}, TD.services.Conversations.prototype.processUsers = function(e) {
		(0, n.default)(e).forEach(function(t) {
			this.currentUsers[t] || (this.currentUsers[t] = e[t] ? this.client.processUser(e[t]) : this.client.processDeletedUser(t))
		}.bind(this))
	}, TD.services.Conversations.prototype.addEventsToConversations = function(e) {
		var t = [];
		return (0, n.default)(e).forEach(function(i) {
			var n = this.conversationCache[i];
			n && n.addMessages(e[i]) && t.push(n)
		}, this), t
	}, TD.services.Conversations.prototype.processConversations = function(e, t) {
		return (0, n.default)(e).map(function(i) {
			var n = e[i];
			try {
				var s = this.conversationCache[i];
				if (s) {
					s = this.conversationCache[i].fromJSONObject(n);
					var r = this.inflateParticipants(n, t);
					s.setParticipants(r)
				} else s = this.processConversation(n, t);
				return s
			} catch (e) {
				this.logProcessingError("conversation", e)
			}
		}, this).filter(function(e) {
			return e
		})
	}, TD.services.Conversations.prototype.logProcessingError = function(e, t) {
		TD.sync.util.warn("Threw on processing conversation", e, t), (0, s.default)(document).trigger("metric", {
			key: "conversation:processing-error:" + e
		})
	}, TD.services.Conversations.prototype.cacheConversations = function(e) {
		e.forEach(function(e) {
			e instanceof TD.services.TwitterConversation && !this.conversationCache[e.conversationId] && (this.conversationCache[e.conversationId] = e)
		}, this)
	}, TD.services.Conversations.prototype.processConversationEntries = function(e, t) {
		var i = {};
		return e.forEach(function(e) {
			var n;
			try {
				n = e.message && this.processMessage(e.message, t) || e.conversation_read && this.processConversationReadEvent(e.conversation_read) || e.participants_join && this.processConversationParticipantsJoinEvent(e.participants_join) || e.join_conversation && this.processConversationJoinEvent(e.join_conversation) || e.participants_leave && this.processConversationParticipantsLeaveEvent(e.participants_leave) || e.conversation_name_update && this.processConversationNameUpdate(e.conversation_name_update) || e.remove_conversation && this.processRemoveConversation(e.remove_conversation)
			} catch (e) {
				this.logProcessingError("entry", e)
			}
			n && (i[n.conversationId] = i[n.conversationId] || [], i[n.conversationId].push(n))
		}, this), i
	}, TD.services.Conversations.prototype.processFailedParticipants = function(e, t) {
		var i = (0, n.default)(e).map(function(e) {
			return this.currentUsers[e]
		}, this);
		return new TD.services.TwitterConversationFailedParticipantsEvent({
			account: this.account,
			conversationId: t,
			failedParticipants: i
		})
	}, TD.services.Conversations.prototype.inflateParticipants = function(e, t) {
		var i = this.account.getUserID();
		return e.participants.filter(function(t) {
			return t.user_id !== i || 1 === e.participants.length
		}).sort(function(t, i) {
			return t.user_id === e.created_by_user_id ? -1 : i.user_id === e.created_by_user_id ? 1 : TD.util.numericStringComparator(t.join_time, i.join_time) || TD.util.numericStringComparator(t.user_id, i.user_id)
		}).map(function(e) {
			return this.currentUsers[e.user_id] || t[e.user_id] ? this.client.processUser(t[e.user_id]) : this.client.processDeletedUser(e.user_id)
		}, this)
	}, TD.services.Conversations.prototype.processConversation = function(e, t) {
		var i = this.inflateParticipants(e, t);
		return new TD.services.TwitterConversation(this.account, i).fromJSONObject(e)
	}, TD.services.Conversations.prototype.processConversationReadEvent = function(e) {
		return new TD.services.TwitterConversationReadEvent(this.account).fromJSONObject(e)
	}, TD.services.Conversations.prototype.processConversationNameUpdate = function(e) {
		var t = this.currentUsers[e.by_user_id];
		return new TD.services.TwitterConversationNameUpdateEvent(this.account, t).fromJSONObject(e)
	}, TD.services.Conversations.prototype.processConversationJoinEvent = function(e) {
		var t = this.currentUsers[e.sender_id];
		return new TD.services.TwitterConversationJoinEvent({
			account: this.account,
			sender: t
		}).fromJSONObject(e)
	}, TD.services.Conversations.prototype.processConversationParticipantsJoinEvent = function(e) {
		var t = [];
		e.participants.forEach(function(e) {
			t.push(this.currentUsers[e.user_id])
		}.bind(this));
		var i = this.currentUsers[e.sender_id];
		return new TD.services.TwitterConversationParticipantsJoinEvent({
			account: this.account,
			sender: i,
			addedParticipants: t
		}).fromJSONObject(e)
	}, TD.services.Conversations.prototype.processConversationParticipantsLeaveEvent = function(e) {
		var t = [];
		return e.participants.forEach(function(e) {
			t.push(this.currentUsers[e.user_id])
		}.bind(this)), new TD.services.TwitterConversationParticipantsLeaveEvent(this.account, t).fromJSONObject(e)
	}, TD.services.Conversations.prototype.processRemoveConversation = function() {
		var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).conversation_id;
		this.conversationCache[e] && this.deleteConversation(e)
	}, TD.services.Conversations.prototype.processMessage = function(e) {
		var t = e.message_data.sender_id,
			i = this.currentUsers[t];
		if (i) return new TD.services.TwitterConversationMessageEvent(this.account, i).fromJSONObject(e)
	}, TD.services.Conversations.prototype.deleteMessageByIdAndReturnChangedConversations = function(e) {
		return (0, n.default)(this.conversationCache).map(function(e) {
			return this.conversationCache[e]
		}.bind(this)).filter(function(t) {
			return t.removeMessage(e)
		})
	}, TD.services.Conversations.prototype.renameConversation = function(e) {
		var t = this.getConversation(e.conversationId);
		t.name = e.name, this.client.publishChirpsInternal("publish", "direct", [t])
	}, TD.services.Conversations.prototype.deleteConversation = function(e) {
		var t = this.getConversation(e);
		TD.controller.feedManager.deleteChirp(t.id), delete this.conversationCache[e]
	}, TD.services.Conversations.prototype.getUnreadCount = function() {
		return (0, n.default)(this.conversationCache).reduce(function(e, t) {
			return e + (this.conversationCache[t].unread ? 1 : 0)
		}.bind(this), 0)
	}
}, function(e, t, i) {
	"use strict";
	var n = l(i(32)),
		s = l(i(2)),
		r = l(i(0)),
		a = l(i(17)),
		o = i(19);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterConversation = function(e, t) {
		this.unread = !1, this.messages = [], this.messageIndex = {}, this.account = e, this.participants = t || [], this.hasValidParticipant = !(1 === this.participants.length && t[0].isDeleted), this.sortIndex = {
			type: "milliseconds"
		}
	}, TD.services.TwitterConversation.CONVERSATION_STATUS_AT_END = "AT_END", TD.services.TwitterConversation.CONVERSATION_ENTRY_COUNT = 100, TD.services.TwitterConversation.getConversationId = function(e) {
		return TD.ui.template.toHtml("conversation-{{accountId}}-{{conversationId}}", {
			accountId: e.account.getUserID(),
			conversationId: e.conversationId
		})
	}, TD.services.TwitterConversation.prototype = new TD.services.ChirpBase, TD.services.TwitterConversation.prototype.fromJSONObject = function(e) {
		return this.type = e.type, this.conversationId = e.conversation_id, this.notificationsDisabled = !!e.notifications_disabled, this.name = e.name, this.lastReadEventId = e.last_read_event_id, this.sortTimestamp = new Date(parseInt(e.sort_timestamp, 10)), this.id = TD.services.TwitterConversation.getConversationId({
			conversationId: this.conversationId,
			account: this.account
		}), this.calculateAttributes(), this
	}, TD.services.TwitterConversation.prototype.chirpType = TD.services.ChirpBase.MESSAGE_THREAD, TD.services.TwitterConversation.prototype.participants = null, TD.services.TwitterConversation.prototype.unread = !1, TD.services.TwitterConversation.prototype.replied = !1, TD.services.TwitterConversation.prototype.messages = null, TD.services.TwitterConversation.prototype.messageIndex = null, TD.services.TwitterConversation.prototype.conversationId = null, TD.services.TwitterConversation.prototype.name = null, TD.services.TwitterConversation.prototype.getAUserThatIsNotMe = function() {
		for (var e = this.account.getUserID(), t = 0; t < this.participants.length; t++)
			if (this.participants[t].id !== e) return this.participants[t]
	}, TD.services.TwitterConversation.prototype.getNotificationTitle = function(e) {
		var t = this.getConversationTitleInformation(),
			i = t.name;
		if (!i) {
			var n = t.numberOfOtherParticipants,
				s = n > 1 ? " +" + n : "";
			i = (e || this.getAUserThatIsNotMe() || this.participants[0]).name + s
		}
		return i
	}, TD.services.TwitterConversation.prototype.isOneToOne = function() {
		return 1 === this.participants.length
	}, TD.services.TwitterConversation.prototype.getConversationTitleInformation = function() {
		var e = this.participants.length;
		return {
			name: a.default.cleanWithEmoji(this.name),
			isOneToOne: 1 === e,
			isThreeway: 2 === e,
			isOneToMany: e > 2,
			numberOfOtherParticipants: e - 1,
			isDeleted: 1 === e && this.participants[0].isDeleted
		}
	}, TD.services.TwitterConversation.prototype.isCorrectThreadForMessage = function(e) {
		return e.messageThreadId === this.id
	}, TD.services.TwitterConversation.prototype.setLastReadEventId = function(e) {
		if (TD.util.numericStringComparator(e, this.lastReadEventId) > 0) return this.lastReadEventId = e, this.getUnreadChirps().forEach(function(t) {
			TD.util.numericStringComparator(t.id, e) < 1 && (t.read = !0)
		}), !0
	}, TD.services.TwitterConversation.prototype.addNotificationTitleInfo = function(e) {
		e.notificationTitle || (e.notificationTitle = {
			withSender: this.getNotificationTitle(e.sender),
			withoutSender: this.getNotificationTitle()
		})
	}, TD.services.TwitterConversation.prototype.addMessages = function(e) {
		var t, i, n = !1,
			s = [];
		if (e && 0 !== e.length) {
			for (t = 0, i = e.length; t < i; t++) {
				var a = e[t];
				if (!this.messageIndex[a.id]) {
					if (!this.isCorrectThreadForMessage(a)) throw new Error("Wrong thread!");
					a instanceof TD.services.TwitterConversationReadEvent ? n = this.setLastReadEventId(a.lastReadEventId) : (n = !0, a.messageThreadId = this.id, this.messages.push(a), this.messageIndex[a.id] = a, a.read = a.isOwnChirp() || TD.util.numericStringComparator(a.id, this.lastReadEventId) < 1)
				}
			}
			return this.messages.sort(TD.util.chirpColumnSort), this.calculateAttributes(), n && (0, r.default)(document).trigger("uiConversationChanged", {
				chirp: this
			}), s.length && (0, r.default)(document).trigger("uiMessageThreadNotifications", {
				notifications: s
			}), n
		}
	}, TD.services.TwitterConversation.prototype.setParticipants = function(e) {
		this.participants = e
	}, TD.services.TwitterConversation.prototype.removeMessage = function(e) {
		return !!this.messageIndex[e] && (delete this.messageIndex[e], this.messages = this.messages.filter(function(t) {
			return t.id !== e
		}), this.calculateAttributes(), (0, r.default)(document).trigger("uiMessageThreadRead", {}), !0)
	}, TD.services.TwitterConversation.prototype.getMainUser = function() {
		return this.participants[0]
	}, TD.services.TwitterConversation.prototype.isUnread = function() {
		return this.getUnreadChirps().length > 0
	}, TD.services.TwitterConversation.prototype.replied = function() {
		return this.messages[0] && this.messages[0].isOwnChirp()
	}, TD.services.TwitterConversation.prototype.updateSender = function() {
		var e = this.messages[0];
		!e || e.isOwnChirp() ? (this.sender = null, this.showSenderName = !1) : this.participants.length > 1 && (this.showSenderName = e instanceof TD.services.TwitterConversationMessageEvent, this.sender = e.sender)
	}, TD.services.TwitterConversation.prototype.updateSortIndex = function() {
		this.created = this.sortTimestamp, this.sortIndex.value = this.sortTimestamp.getTime(), this.messages.length > 0 && this.messages[0].belongsAbove(this) && (this.sortIndex.value = this.messages[0].sortIndex.value)
	}, TD.services.TwitterConversation.prototype.updateContent = function() {
		var e = this.messages[0];
		if (this.attachmentOnly = !1, this.hasQuotedTweet = !1, e) {
			this.text = e.text || "", this.htmlText = e.htmlText, this.previewText = e.previewText, this._media = e._media, this.hasQuotedTweet = Boolean(e.quotedTweet);
			var t = !1,
				i = !1;
			if (this._media && this._media.length) {
				var n = this.text;
				i = this._media.some(function(e) {
					if (e.entity && e.entity.indices && e.entity.indices[1] === this.text.length) return n = this.text.substr(0, e.entity.indices[0]), !0
				}.bind(this))
			}
			this.text.length > 140 && (n = this.text.substr(0, 140) + "…", t = !0), (t || i) && (this.text = n.trim(), this.htmlText = TD.util.transform(this.text, this.entities)), !this.text && !this.previewText && this._media && this._media.length && (this.attachmentOnly = !0)
		} else this.text = "", this.htmlText = "", this.previewText = ""
	}, TD.services.TwitterConversation.prototype.calculateAttributes = function() {
		this.unread = this.isUnread(), this.updateSender(), this.updateSortIndex(), this.updateContent()
	}, TD.services.TwitterConversation.prototype.render = function(e) {
		var t = this.account.getKey(),
			i = Math.min(this.participants.length, 3),
			s = "media-grid-" + i + "-mirror",
			a = e.templateName || "status/conversation";
		return TD.ui.template.render(a, {
			chirp: this,
			mediaPreviewSrc: function() {
				var e = this.getMediaSrcForPreviewSize("small");
				return this.needsSecureUrl && (0, n.default)(function() {
					(0, r.default)(document).trigger("uiNeedsSecureImageUrl", {
						accountKey: t,
						url: e
					})
				}), e
			},
			withMultipleAvatars: i > 1,
			avatars: this.participants.slice(0, 3),
			avatarsClass: s,
			accountKey: t
		})
	}, TD.services.TwitterConversation.prototype.renderThread = function() {
		var e = [];
		return this.messages.forEach(function(t) {
			e.push(t.render())
		}), e.join("")
	}, TD.services.TwitterConversation.prototype.setStatus = function(e) {
		this.status = e
	}, TD.services.TwitterConversation.prototype.isAtEnd = function() {
		return this.status === TD.services.TwitterConversation.CONVERSATION_STATUS_AT_END
	}, TD.services.TwitterConversation.prototype.updateConversation = function() {
		var e, t = TD.controller.clients.getClient(this.account.getKey()),
			i = {
				ext: "altText"
			};
		return this.isAtEnd() ? e = TD.core.defer.succeed() : (i.count = TD.services.TwitterConversation.CONVERSATION_ENTRY_COUNT, this.messages.length && (i.max_id = this.messages[this.messages.length - 1].id), e = t.getDmConversation(this.conversationId, i)), e
	}, TD.services.TwitterConversation.prototype.isOwnChirp = function() {
		return !1
	}, TD.services.TwitterConversation.prototype.getUnreadChirps = function(e) {
		return e && this.notificationsDisabled ? [] : this.messages.filter(function(t) {
			var i = !e || t.belongsAbove(e);
			return t.chirpType === TD.services.ChirpBase.MESSAGE && !t.isOwnChirp() && !t.read && i
		})
	}, TD.services.TwitterConversation.prototype.getMaxEntryId = function() {
		for (var e = null, t = 0; !e && this.messages[t];) this.messages[t].chirpType === TD.services.ChirpBase.MESSAGE && (e = this.messages[t].id), t++;
		return e || 0
	}, TD.services.TwitterConversation.prototype.markAsRead = function() {
		var e = this.getUnreadChirps();
		if (!(e.length <= 0)) {
			this.getDOMChirps().removeClass(TD.services.ChirpBase.UNREAD_CLASS), e.forEach(function(e) {
				e.read = !0
			}), this.unread = !1, (0, r.default)(document).trigger("uiMessageThreadRead", {});
			var t = function(t) {
				this.unread = !0, e && e.forEach(function(e) {
					e.read = !1
				}), (0, o.showErrorNotification)({
					message: (0, s.default)("Failed to mark message as read.")
				}), this.getDOMChirps().addClass(TD.services.ChirpBase.UNREAD_CLASS)
			};
			this.conversationId ? (0, r.default)(document).trigger("uiMarkDmAsRead", {
				lastReadEventId: this.getMaxEntryId(),
				conversationId: this.conversationId,
				error: t.bind(this),
				accountKey: this.account.getKey()
			}) : t.call(this)
		}
	}, TD.services.TwitterConversation.prototype.getSenders = function() {
		return 1 !== this.participants.length || this.participants[0].isDeleted ? [] : [this.participants[0].screenName]
	}
}, function(e, t, i) {
	"use strict";
	var n = b(i(65)),
		s = b(i(9)),
		r = b(i(111)),
		a = b(i(461)),
		o = b(i(122)),
		l = b(i(13)),
		c = b(i(99)),
		u = b(i(2238)),
		d = b(i(516)),
		h = b(i(120)),
		m = b(i(110)),
		f = b(i(241)),
		p = b(i(43)),
		g = b(i(15)),
		v = i(283),
		T = i(2239),
		w = i(37);

	function b(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterMedia = function() {}, TD.services.TwitterMedia.TWITPIC_RE = /(http:\/\/|www.)?twitpic.com\/(\w+)/, TD.services.TwitterMedia.YFROG_RE = /(http:\/\/|www.)?yfrog.com\/\w+/, TD.services.TwitterMedia.PLIXI_RE = /(http:\/\/|www.)?plixi.com\/p\/[0-9]+/, TD.services.TwitterMedia.LOCKERZ_RE = /(http:\/\/|www.)?lockerz.com\/s\/[0-9]+/, TD.services.TwitterMedia.YOUTUBE_LONG_RE = /(?:(?:https?\:\/\/)?(?:www\.)?)?youtube\.com\/watch[a-zA-Z0-9_\-\?\&\=\/]+/, TD.services.TwitterMedia.YOUTUBE_TINY_RE = /(http:\/\/|www.)?youtu\.be\/([a-zA-Z0-9_\-\?\&\=\/]+)/, TD.services.TwitterMedia.YOUTUBE_RE = new RegExp(TD.services.TwitterMedia.YOUTUBE_LONG_RE.source + "|" + TD.services.TwitterMedia.YOUTUBE_TINY_RE.source), TD.services.TwitterMedia.YOUTUBE_STARTTIME = /^(?:(\d+)h)?(?:(\d+)m)?(?:(\d+)s?)?$/, TD.services.TwitterMedia.VIMEO_RE = /https?:\/\/(www\.|player\.)?vimeo\.com\/(.+)/i, TD.services.TwitterMedia.VINE_RE = /https?:\/\/(www\.)?vine\.co\/v\/(.+)/i, TD.services.TwitterMedia.FLICKR_RE = /https?:\/\/(www\.)?(flic.kr|flickr.com\/photos)\/(.+)/i, TD.services.TwitterMedia.IMGUR_RE = /https?:\/\/([a-z0-9]+\.)?imgur.com\/(.+)/i, TD.services.TwitterMedia.PHOTOZOU_RE = /https?:\/\/photozou\.jp\/photo\/(show|photo_only)\/(.+)/i, TD.services.TwitterMedia.FILTERABLE_VIDEO_SERVICES = [TD.services.TwitterMedia.VIMEO_RE, TD.services.TwitterMedia.VINE_RE, TD.services.TwitterMedia.YOUTUBE_TINY_RE, TD.services.TwitterMedia.YOUTUBE_RE, TD.services.TwitterMedia.YOUTUBE_LONG_RE], TD.services.TwitterMedia.FILTERABLE_IMAGE_SERVICES = [TD.services.TwitterMedia.FLICKR_RE, TD.services.TwitterMedia.IMGUR_RE, TD.services.TwitterMedia.PHOTOZOU_RE], TD.services.TwitterMedia.YOUTUBE_GALLERY_WIDTH = 640, TD.services.TwitterMedia.YOUTUBE_GALLERY_HEIGHT = 390, TD.services.TwitterMedia.VINE_GALLERY_WIDTH = 540, TD.services.TwitterMedia.VINE_GALLERY_HEIGHT = 540, TD.services.TwitterMedia.AVAILABLE_COLUMN_SPACE = {
		narrow: 250,
		medium: 290,
		wide: 330,
		temporary: 350
	}, TD.services.TwitterMedia.MAX_THUMB_WIDTH = 90, TD.services.TwitterMedia.MAX_THUMB_HEIGHT = 65, TD.services.TwitterMedia.THUMBNAIL_CONTAINER_CLASS = "media-thumb-container", TD.services.TwitterMedia.THUMBNAIL_IMG_CLASS = "media-thumb-img", TD.services.TwitterMedia.thumbSizeClasses = {
		off: "",
		small: "media-size-small",
		medium: "media-size-medium",
		large: "media-size-large"
	}, TD.services.TwitterMedia.IMAGE_CLASS = "media-img", TD.services.TwitterMedia.SERVICES = {
		twitpic: TD.services.TwitterMedia.TWITPIC_RE,
		yfrog: TD.services.TwitterMedia.YFROG_RE,
		lockerz: TD.services.TwitterMedia.LOCKERZ_RE,
		youtube: TD.services.TwitterMedia.YOUTUBE_RE,
		vine: TD.services.TwitterMedia.VINE_RE
	}, TD.services.TwitterMedia.COLUMN_WIDTH_MEDIA_SIZE_MAP = {
		narrow: {
			stream: {
				small: {
					width: 102,
					height: 64
				},
				medium: {
					width: 204,
					height: 108
				},
				large: {
					width: 270,
					height: 270
				}
			},
			detail: {
				width: 250,
				height: 250
			}
		},
		medium: {
			stream: {
				small: {
					width: 122,
					height: 77
				},
				medium: {
					width: 244,
					height: 130
				},
				large: {
					width: 310,
					height: 350
				}
			},
			detail: {
				width: 290,
				height: 290
			}
		},
		wide: {
			stream: {
				small: {
					width: 142,
					height: 91
				},
				medium: {
					width: 248,
					height: 153
				},
				large: {
					width: 350,
					height: 350
				}
			},
			detail: {
				width: 330,
				height: 330
			}
		}
	}, TD.services.TwitterMedia.NativeVideoPlayerEnabled = !1, TD.services.TwitterMedia.UIVEnabled = !1, w.unifiedImageVariants$.subscribe(function(e) {
		TD.services.TwitterMedia.UIVEnabled = e
	}), w.nativeVideoPlayer$.subscribe(function(e) {
		TD.services.TwitterMedia.NativeVideoPlayerEnabled = e
	}), TD.services.TwitterMedia.getMediaFromAttachment = function(e) {
		var t = [];
		return e && (e.photo ? t.push((new TD.services.TwitterMedia).fromPhotoAttachment(e.photo)) : e.video ? t.push((new TD.services.TwitterMedia).fromVideoAttachment(e.video)) : e.animated_gif && t.push((new TD.services.TwitterMedia).fromAnimatedGIFAttachment(e.animated_gif))), t
	}, TD.services.TwitterMedia.getMediaFromEntities = function(e, t) {
		var i = [],
			n = {};
		t = t || {}, (0, g.default)(e.media, function(e) {
			i.push((new TD.services.TwitterMedia).fromMediaEntity(e))
		});
		var s = (0, p.default)(e.urls, function(e) {
			var t = e.expanded_url || e.url;
			return n[t] = e.url, (0, f.default)(t, "http") || (t = "http://" + t), t
		});
		(0, g.default)(s, function(e) {
			var t;
			for (var s in TD.services.TwitterMedia.SERVICES)(t = e.match(TD.services.TwitterMedia.SERVICES[s])) && 0 === e.indexOf(t[0]) && i.push((new TD.services.TwitterMedia).fromURL(s, n[e], e, t))
		}), (0, g.default)(i, function(e) {
			(0, m.default)(e, t)
		});
		var r = TD.services.TwitterMedia._entitiesContainNativeMultiPhoto(i);
		if (r.length > 0) return r;
		var a = TD.services.TwitterMedia._entitiesContainMultiPhoto(i);
		if (a.length > 0) return a.pop();
		var o = TD.services.TwitterMedia._entitiesContainNativeVideo(i);
		if (o.length > 0) return o;
		var l = TD.services.TwitterMedia._entitiesContainAnimatedGif(i);
		if (l.length > 0) return l;
		var c = TD.services.TwitterMedia._entitiesContainVideo(i);
		return c.length > 0 ? [c.pop()] : i
	}, TD.services.TwitterMedia.entitiesContainImage = function(e) {
		return TD.services.TwitterMedia.FILTERABLE_IMAGE_SERVICES.some(function(t) {
			return e.urls.some(function(e) {
				return t.test(e.expanded_url)
			})
		})
	}, TD.services.TwitterMedia.entitiesContainVideo = function(e) {
		return TD.services.TwitterMedia.FILTERABLE_VIDEO_SERVICES.some(function(t) {
			return e.urls.some(function(e) {
				return t.test(e.expanded_url)
			})
		})
	}, TD.services.TwitterMedia._entitiesContainVideo = function(e) {
		return (0, h.default)(e, function(e) {
			var t;
			return (0, d.default)(TD.services.TwitterMedia.FILTERABLE_VIDEO_SERVICES, function(i) {
				i.test(e.url) && (t = e)
			}), t
		})
	}, TD.services.TwitterMedia._entitiesContainNativeMultiPhoto = function(e) {
		return (0, h.default)(e, function(e) {
			if (e.nativePhotoCapable() && !1 === e.referenced_media) return e
		})
	}, TD.services.TwitterMedia._entitiesContainMultiPhoto = function(e) {
		var t = (0, u.default)(e, function(e) {
			return e.nativePhotoCapable() && !0 === e.referenced_media ? e.url : "__delete"
		});
		return delete t.__delete, (0, c.default)(t)
	}, TD.services.TwitterMedia._entitiesContainNativeVideo = function(e) {
		return e.filter(function(e) {
			return e.nativeVideoCapable()
		})
	}, TD.services.TwitterMedia._entitiesContainAnimatedGif = function(e) {
		return e.filter(function(e) {
			return e.animatedGifCapable()
		})
	}, TD.services.TwitterMedia.prototype = {
		flaggedNSFW: !1,
		isVideo: !1,
		isAnimatedGif: !1,
		isVine: !1
	}, TD.services.TwitterMedia.prototype.nativePhotoCapable = function() {
		return "twitter" === this.service && "photo" === this.entity.type
	}, TD.services.TwitterMedia.prototype.nativeVideoCapable = function() {
		return "twitter" === this.service && "video" === this.entity.type
	}, TD.services.TwitterMedia.prototype.animatedGifCapable = function() {
		return "twitter" === this.service && "animated_gif" === this.entity.type
	}, TD.services.TwitterMedia.prototype.fromMediaEntity = function(e) {
		return this.entity = e, this.service = "twitter", this.isVideo = "video" === e.type, this.isAnimatedGif = "animated_gif" === e.type, this.url = this.shortUrl = e.url, this.sizes = e.sizes, this.needsSecureUrl = !1, this.isScheduled = !1, this.mediaId = e.id_str, this.taggedUsers = this.getTaggedUsers(), this.hasTaggedUsers = Boolean(this.taggedUsers.length), e.source_status_id ? this.referenced_media = !0 : this.referenced_media = !1, this
	}, TD.services.TwitterMedia.prototype.fromPhotoAttachment = function(e) {
		return this.entity = e, this.service = "twitter", this.url = e.media_url_https, this.shortUrl = e.display_url, this.sizes = e.sizes, this.needsSecureUrl = !1, this.isScheduled = !1, this.mediaId = e.id_str, this.referenced_media = !1, this
	}, TD.services.TwitterMedia.prototype.fromVideoAttachment = function(e) {
		return this.fromMediaEntity(e)
	}, TD.services.TwitterMedia.prototype.fromAnimatedGIFAttachment = function(e) {
		return this.fromMediaEntity(e)
	}, TD.services.TwitterMedia.prototype.fromURL = function(e, t, i, n) {
		if (this.url = i, this.urlMatches = n, this.shortUrl = t, this.service = e, "vine" === this.service) this.isVine = !0, this.isVideo = !0, this.mediaId = this.url.split("/").pop();
		else if ("youtube" === this.service) {
			if (this.isVideo = !0, this.url.match(TD.services.TwitterMedia.YOUTUBE_LONG_RE) ? this.mediaId = TD.net.util.decodeURL(this.url).v : this.mediaId = this.url.split("/").pop().split("?")[0], this.startTimeInUrl = TD.net.util.decodeURL(this.url).t, !this.startTimeInUrl) {
				var s = this.url.split("#")[1] || "";
				this.startTimeInUrl = TD.net.util.formDecode(s).t
			}
			if (this.startTimeInUrl) {
				var r = this.startTimeInUrl.match(TD.services.TwitterMedia.YOUTUBE_STARTTIME),
					a = r[1] ? parseInt(3600 * r[1], 10) : 0,
					o = r[2] ? parseInt(60 * r[2], 10) : 0,
					l = r[3] ? parseInt(r[3], 10) : 0;
				this.startTime = a + o + l
			}
		}
		return this
	}, TD.services.TwitterMedia.prototype.getTwitterPreviewUrl = function() {
		var e, t, i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
			n = i.name,
			s = i.format;
		return this.isScheduled ? this.entity.url : this.entity.media_url_https.includes("twimg.com") ? this.entity.media_url_https.match(/(^.*?)(?:\.[^/]+)?$/).pop() + (e = {
			format: s || function(e) {
				var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "jpg";
				return (e.match(/^.+[^/]+\.([^/]+)$/) || [t]).pop()
			}(this.entity.media_url_https),
			name: n
		}, (t = (0, a.default)(e).filter(function(e) {
			var t = (0, r.default)(e, 2);
			return t[0], void 0 !== t[1]
		}).map(function(e) {
			var t = (0, r.default)(e, 2),
				i = t[0],
				n = t[1];
			return encodeURIComponent(i) + "=" + encodeURIComponent(n)
		}).join("&")) ? "?" + t : "") : this.entity.media_url_https
	}, TD.services.TwitterMedia.prototype.thumb = function() {
		switch (this.service) {
			case "twitter":
				return this.getTwitterPreviewUrl({
					name: "120x120"
				});
			case "twitpic":
				return "https://twitpic.com/show/thumb/" + this.urlMatches[2];
			case "yfrog":
				return this.url.replace("http://", "https://") + ":small";
			case "lockerz":
				return "https://api.plixi.com/api/tpapi.svc/imagefromurl?size=thumbnail&url=" + this.url;
			case "youtube":
				return "https://img.youtube.com/vi/" + this.mediaId + "/default.jpg";
			case "vine":
				return this.large()
		}
	}, TD.services.TwitterMedia.prototype.small = function() {
		switch (this.service) {
			case "twitter":
				return this.getTwitterPreviewUrl({
					name: "small"
				});
			case "twitpic":
			case "yfrog":
			case "lockerz":
			case "vine":
				return this.large();
			case "youtube":
				return "https://img.youtube.com/vi/" + this.mediaId + "/mqdefault.jpg"
		}
	}, TD.services.TwitterMedia.prototype.medium = function() {
		switch (this.service) {
			case "twitter":
				return this.getTwitterPreviewUrl();
			case "twitpic":
			case "yfrog":
			case "lockerz":
			case "vine":
				return this.large();
			case "youtube":
				return "https://img.youtube.com/vi/" + this.mediaId + "/mqdefault.jpg"
		}
	}, TD.services.TwitterMedia.prototype.large = function() {
		switch (this.service) {
			case "twitter":
				return this.getTwitterPreviewUrl({
					name: "large"
				});
			case "twitpic":
				return "https://twitpic.com/show/full/" + this.urlMatches[2];
			case "yfrog":
				return this.url.replace("http://", "https://") + ":iphone";
			case "lockerz":
				return "https://api.plixi.com/api/tpapi.svc/imagefromurl?size=medium&url=" + this.url;
			case "youtube":
				return "https://img.youtube.com/vi/" + this.mediaId + "/hqdefault.jpg";
			case "vine":
				return "https://vine.co/v/" + this.mediaId + "/thumb"
		}
	}, TD.services.TwitterMedia.prototype.bestUnifiedImageVariant = function(e, t) {
		var i = TD.util.isRetina(),
			n = {
				mediaUrl: this.entity.media_url_https,
				originalInfo: {
					width: (0, l.default)(this.entity, "original_info.width", this.sizes.medium.w),
					height: (0, l.default)(this.entity, "original_info.height", this.sizes.medium.h)
				},
				isRetina: i,
				containerWidth: e,
				containerHeight: t
			};
		return (0, T.getUnifiedImageVariant)(n).url
	}, TD.services.TwitterMedia.prototype.chooseVideoVariant = function() {
		return this.entity.video_info.variants.filter(function(e) {
			return "video/mp4" === e.content_type
		}).sort(function(e, t) {
			return ~~e.bitrate - ~~t.bitrate
		}).pop()
	}, TD.services.TwitterMedia.prototype.getContainerForPreviewSize = function(e) {
		var t = TD.settings.getColumnWidth(),
			i = TD.services.TwitterMedia.COLUMN_WIDTH_MEDIA_SIZE_MAP[t].stream[e];
		return {
			containerWidth: i.width,
			containerHeight: i.height
		}
	}, TD.services.TwitterMedia.prototype.getContainerForDetail = function() {
		var e = TD.settings.getColumnWidth(),
			t = TD.services.TwitterMedia.COLUMN_WIDTH_MEDIA_SIZE_MAP[e].detail;
		return {
			containerWidth: t.width,
			containerHeight: t.height
		}
	}, TD.services.TwitterMedia.prototype.getAltText = function() {
		return (0, l.default)(this.entity, "ext_alt_text", "")
	}, TD.services.TwitterMedia.prototype.getMediaSrcForPreviewSize = function(e) {
		var t = TD.controller.stats.isInExperimentBucket("tweetdeck_uiv_7739", "uiv_images");
		if ((TD.services.TwitterMedia.UIVEnabled || t) && "twitter" === this.service && (0, l.default)(this, "entity.original_info", !1)) {
			var i = this.getContainerForPreviewSize(e),
				n = i.containerWidth,
				s = i.containerHeight;
			return this.bestUnifiedImageVariant(n, s)
		}
		var r = TD.util.isRetina();
		switch (e) {
			case TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL:
				return this.small();
			case TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM:
				return r ? this.medium() : this.small();
			case TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE:
				return r ? this.large() : this.medium()
		}
	}, TD.services.TwitterMedia.prototype.getAnimatedGifForPreview = function() {
		var e = this.chooseVideoVariant();
		return {
			src: e.url,
			imageSrc: this.getTwitterPreviewUrl(),
			contentType: e.content_type
		}
	}, TD.services.TwitterMedia.prototype.renderAnimatedGifPlaceholder = function(e) {
		var t = {
			imageSrc: this.getTwitterPreviewUrl(),
			thumbSizeClass: TD.services.TwitterMedia.thumbSizeClasses[e]
		};
		return TD.ui.template.render("media/animated_gif", t)
	}, TD.services.TwitterMedia.prototype.renderThumb = function(e) {
		var t;
		if ("twitter" === this.service && "animated_gif" === this.entity.type) {
			var i = this.chooseVideoVariant();
			return t = {
				src: i.url,
				contentType: i.content_type,
				isGifActive: !0,
				imageSrc: this.getTwitterPreviewUrl(),
				thumbSizeClass: TD.services.TwitterMedia.thumbSizeClasses[e]
			}, TD.ui.template.render("media/animated_gif", t)
		}
		return t = {
			url: this.url,
			altText: this.getAltText(),
			imageSrc: this.thumb(),
			isVideo: this.isVideo,
			thumbSizeClass: TD.services.TwitterMedia.thumbSizeClasses[e]
		}, TD.ui.template.render("status/media_thumb", t)
	}, TD.services.TwitterMedia.prototype.renderGridView = function(e) {
		var t = e.isPossiblySensitive,
			i = {
				mediaId: this.mediaId,
				altText: this.getAltText(),
				isPossiblySensitive: t,
				url: this.url,
				imageSrc: this.small(),
				isVideo: this.isVideo,
				thumbClass: TD.services.TwitterMedia.IMAGE_CLASS
			};
		return TD.ui.template.render("status/media_image_container", i)
	}, TD.services.TwitterMedia.prototype.getDetailViewTemplateAndParams = function(e, t) {
		var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
			n = this.service,
			r = this.isAnimatedGif,
			a = void 0 !== r && r,
			o = this.isVideo,
			l = void 0 !== o && o,
			c = i.usingNarrowColumns,
			u = void 0 !== c && c,
			d = i.columnWidth,
			h = void 0 === d ? "medium" : d;
		if ("twitter" === n) {
			if (a) {
				var m = this.getAnimatedGifForPreview();
				return ["status/media_thumb", (0, s.default)({
					isPossiblySensitive: t,
					isAnimatedGif: !0,
					isGifActive: !0,
					withAutoplay: !0,
					detailView: !0
				}, m)]
			}
			if (l) {
				var f = this.entity.video_info.aspect_ratio[0] / this.entity.video_info.aspect_ratio[1],
					p = TD.services.TwitterMedia.AVAILABLE_COLUMN_SPACE[h],
					g = this.chooseVideoVariant();
				return ["media/native_video", {
					chirpId: e,
					imageSrc: this.entity.media_url_https,
					videoUrl: g.url,
					contentType: g.content_type,
					isPossiblySensitive: t,
					mediaId: this.mediaId,
					autoplay: 1,
					width: p,
					height: p / f,
					useNativePlayer: TD.services.TwitterMedia.NativeVideoPlayerEnabled
				}]
			}
		}
		return "vine" !== n || u ? "youtube" !== n || u ? ["status/media_thumb", {
			mediaId: this.mediaId,
			altText: this.getAltText(),
			isPossiblySensitive: t,
			url: this.url,
			imageSrc: this.small(),
			isVideo: this.isVideo,
			withAutoplay: !0,
			thumbClass: TD.services.TwitterMedia.IMAGE_CLASS,
			hasTaggedUsers: this.hasTaggedUsers,
			showTaggedUsers: !0,
			renderTaggedUsers: this.renderTaggedUsers()
		}] : ["media/youtube", {
			id: this.mediaId,
			startTime: this.startTime,
			autoplay: 0,
			width: "100%",
			height: "auto"
		}] : ["media/vine", {
			id: this.mediaId,
			width: "100%",
			height: "auto"
		}]
	}, TD.services.TwitterMedia.prototype.getTaggedUsers = function() {
		var e = (0, l.default)(this.entity, "features.all.tags", []).filter(function(e) {
			return "user" === e.type
		}).map(function(e) {
			return {
				id: e.user_id,
				screenName: e.screen_name,
				name: e.name
			}
		});
		return (0, o.default)(e, "id")
	}, TD.services.TwitterMedia.prototype.renderTaggedUsers = function() {
		var e = (this.taggedUsers || []).map(function(e, t, i) {
			var n = i.length;
			return (0, s.default)({}, e, {
				userLink: (0, v.linkifyUser)(e),
				isBeforeLast: t === n - 2,
				isLast: t === n - 1
			})
		});
		return TD.ui.template.render("media/tagged_users", {
			hasTwoOrMoreUsers: e.length >= 2,
			taggedUsers: e
		})
	}, TD.services.TwitterMedia.prototype.renderDetailView = function(e) {
		var t, i = e.chirpId,
			s = e.isPossiblySensitive;
		return (t = TD.ui.template).render.apply(t, (0, n.default)(this.getDetailViewTemplateAndParams(i, s, {
			usingNarrowColumns: "narrow" === TD.settings.getColumnWidth(),
			columnWidth: TD.settings.getColumnWidth()
		})))
	}, TD.services.TwitterMedia.prototype.renderGallery = function() {
		var e, t, i, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
			s = "twitter" === this.service && this.isVideo;
		if ("twitter" === this.service && "animated_gif" === this.entity.type) e = "media/animated_gif", t = {
			gifSrc: (i = this.chooseVideoVariant()).url,
			contentType: i.content_type
		};
		else if (s && this.isScheduled) e = "media/scheduled_video";
		else if (s) {
			e = "media/native_video";
			var r = 410 * (this.entity.video_info.aspect_ratio[0] / this.entity.video_info.aspect_ratio[1]);
			i = this.chooseVideoVariant(), t = {
				chirpId: n.chirpId,
				imageSrc: this.entity.media_url_https,
				videoUrl: i.url,
				contentType: i.content_type,
				mediaId: this.mediaId,
				autoplay: 1,
				height: 410,
				width: r,
				isDM: n.isDM,
				useNativePlayer: TD.services.TwitterMedia.NativeVideoPlayerEnabled
			}
		} else "youtube" === this.service ? (e = "media/youtube", t = {
			id: this.mediaId,
			startTime: this.startTime,
			autoplay: 1,
			width: TD.services.TwitterMedia.YOUTUBE_GALLERY_WIDTH,
			height: TD.services.TwitterMedia.YOUTUBE_GALLERY_HEIGHT
		}) : "vine" === this.service ? (e = "media/vine", t = {
			id: this.mediaId,
			width: TD.services.TwitterMedia.VINE_GALLERY_WIDTH,
			height: TD.services.TwitterMedia.VINE_GALLERY_HEIGHT
		}) : (e = "status/media_thumb", t = {
			url: this.url,
			altText: this.getAltText(),
			imageSrc: this.large(),
			thumbClass: TD.services.TwitterMedia.IMAGE_CLASS,
			needsSecureUrl: this.needsSecureUrl,
			isGalleryView: !0,
			isDM: n.isDM,
			isFromProtectedUser: n.isFromProtectedUser
		});
		return TD.ui.template.render(e, t)
	}
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getUnifiedImageVariant = function(e) {
		for (var t = e.mediaUrl, i = e.originalInfo, s = e.isRetina, r = e.containerHeight, a = e.containerWidth, o = i.width >= i.height, l = i.width / i.height, c = void 0, u = void 0, d = void 0, h = 0; h < n.length; h++) {
			if (d = n[h], o) {
				if (d.size > i.width) {
					c = i.width, u = i.height;
					break
				}
				c = d.size, u = d.size / l
			} else {
				if (d.size > i.height) {
					c = i.width, u = i.height;
					break
				}
				c = d.size * l, u = d.size
			}
			var m = a,
				f = r;
			if (s && (m = 2 * a, f = 2 * r), c >= m && u >= f) break
		}
		return {
			width: c,
			height: u,
			url: t + "?format=jpg&name=" + d.name
		}
	};
	var n = [{
		name: "tiny",
		size: 64
	}, {
		name: "120x120",
		size: 120
	}, {
		name: "240x240",
		size: 240
	}, {
		name: "360x360",
		size: 360
	}, {
		name: "small",
		size: 680
	}, {
		name: "900x900",
		size: 900
	}, {
		name: "medium",
		size: 1200
	}, {
		name: "large",
		size: 2048
	}, {
		name: "4096x4096",
		size: 4096
	}]
}, function(e, t, i) {
	"use strict";
	var n = u(i(9)),
		s = u(i(48)),
		r = u(i(2)),
		a = u(i(0)),
		o = u(i(17)),
		l = u(i(21)),
		c = i(19);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = TD.services.TwitterUser = function(e) {
		this.account = e
	}, TD.services.TwitterUser.MINI_SUFFIX = "_mini", TD.services.TwitterUser.NORMAL_SUFFIX = "_normal", TD.services.TwitterUser.BIGGER_SUFFIX = "_bigger", TD.services.TwitterUser.REASONABLY_SMALL_SUFFIX = "_reasonably_small", TD.services.TwitterUser.NORMAL_SUFFIX_REGEXP = new RegExp(TD.services.TwitterUser.NORMAL_SUFFIX + "(?!.*" + TD.services.TwitterUser.NORMAL_SUFFIX + ")"), TD.services.TwitterUser.BIGGER_SUFFIX_REGEXP = new RegExp(TD.services.TwitterUser.BIGGER_SUFFIX + "(?!.*" + TD.services.TwitterUser.BIGGER_SUFFIX + ")"), TD.services.TwitterUser.prototype.fromJSONObject = function(e, t) {
		return t = (0, s.default)(t || {}, {
			isContributor: !1
		}), this.id = e.id_str, this.screenName = e.screen_name ? e.screen_name.trim() : "", this.profileURL = "https://twitter.com/" + this.screenName, this.profileImageURL = e.profile_image_url_https, this.avatarSuffixRegex = TD.services.TwitterUser.NORMAL_SUFFIX_REGEXP, TD.util.isRetina() && (this.profileImageURL = this.profileImageURL.replace(this.avatarSuffixRegex, TD.services.TwitterUser.BIGGER_SUFFIX), this.avatarSuffixRegex = TD.services.TwitterUser.BIGGER_SUFFIX_REGEXP), this.name = e.name ? e.name.trim() : "", this.emojifiedName = o.default.cleanWithEmoji(e.name), this.location = e.location, this.description = e.description, this.entities = e.entities, this.joinedDate = TD.util.parseDateString(e.created_at), this.friendsCount = e.friends_count, this.listedCount = e.listed_count, this.followersCount = e.followers_count, this.statusesCount = e.statuses_count, this.listedCount = e.listed_count, this.url = e.url, this.isProtected = e.protected, this.isVerified = e.verified, this.isTranslator = e.is_translator, this.isBadged = Boolean(e.verified || e.is_translator), this.following = e.following, this.lang = e.lang, this.withheldScope = e.withheld_scope, this.profileColor = e.profile_link_color, this.bannerUrl = e.profile_banner_url, this.bannerUrlSmall = this.bannerUrl ? this.bannerUrl + "/" + (TD.util.isRetina() ? "600x200" : "300x100") : null, this._profileBannerURL = e.profile_banner_url ? e.profile_banner_url + "/web" : null, TD.util.isRetina() && this._profileBannerURL && (this._profileBannerURL += "_retina"), this._profileBannerURL = this._profileBannerURL ? this._profileBannerURL : TD.util.isRetina() ? i(521) : i(522), e.status && (this.lastStatus = new TD.services.TwitterStatus(this.account).fromJSONObject(e.status), this.lastStatus.user = this), t.isContributor || TD.cache.twitterUsers.add(this), this
	}, TD.services.TwitterUser.prototype.fromGraphQLJSONObject = function(e, t) {
		var s = e.rest_id,
			r = e.legacy;
		return t = (0, n.default)({
			isContributor: !1
		}, t), this.id = s, this.screenName = r.screen_name ? r.screen_name.trim() : "", this.profileURL = "https://twitter.com/" + this.screenName, this.profileImageURL = r.profile_image_url_https, this.avatarSuffixRegex = TD.services.TwitterUser.NORMAL_SUFFIX_REGEXP, TD.util.isRetina() && (this.profileImageURL = this.profileImageURL.replace(this.avatarSuffixRegex, TD.services.TwitterUser.BIGGER_SUFFIX), this.avatarSuffixRegex = TD.services.TwitterUser.BIGGER_SUFFIX_REGEXP), this.name = r.name ? r.name.trim() : "", this.emojifiedName = o.default.cleanWithEmoji(r.name), this.location = r.location, this.description = r.description, this.entities = r.entities, this.joinedDate = TD.util.parseDateString(r.created_at), this.friendsCount = r.friends_count, this.listedCount = r.listed_count, this.followersCount = r.followers_count, this.statusesCount = r.statuses_count, this.listedCount = r.listed_count, this.url = r.url, this.isProtected = r.protected, this.isVerified = r.verified, this.isTranslator = r.is_translator, this.isBadged = Boolean(r.verified || r.is_translator), this.following = r.following, this.lang = r.lang, this.muting = r.muting, this.blocking = r.blocking, this.withheldScope = r.withheld_scope, this.profileColor = r.profile_link_color, this.bannerUrl = r.profile_banner_url, this.bannerUrlSmall = this.bannerUrl ? this.bannerUrl + "/" + (TD.util.isRetina() ? "600x200" : "300x100") : null, this._profileBannerURL = r.profile_banner_url ? r.profile_banner_url + "/web" : null, TD.util.isRetina() && this._profileBannerURL && (this._profileBannerURL += "_retina"), this._profileBannerURL = this._profileBannerURL ? this._profileBannerURL : TD.util.isRetina() ? i(521) : i(522), t.isContributor || TD.cache.twitterUsers.add(this), this
	}, TD.services.TwitterUser.prototype.isSameUser = function(e) {
		var t;
		return t = e instanceof TD.services.TwitterUser ? e.screenName.toLowerCase() : e.toLowerCase(), this.screenName.toLowerCase() === t
	}, TD.services.TwitterUser.prototype.isMe = function() {
		return this.account.getUserID() == this.id
	}, TD.services.TwitterUser.prototype.isBlockingOrMuting = function() {
		return this.blocking || this.muting
	}, TD.services.TwitterUser.prototype.reasonablySmallProfileImageURL = function() {
		return this.profileImageURL.replace(this.avatarSuffixRegex, TD.services.TwitterUser.REASONABLY_SMALL_SUFFIX)
	}, TD.services.TwitterUser.prototype.biggerProfileImageURL = function() {
		return TD.util.isRetina() ? this.reasonablySmallProfileImageURL() : this.profileImageURL.replace(this.avatarSuffixRegex, TD.services.TwitterUser.BIGGER_SUFFIX)
	}, TD.services.TwitterUser.prototype.miniProfileImageURL = function() {
		return TD.util.isRetina() ? this.profileImageURL.replace(this.avatarSuffixRegex, TD.services.TwitterUser.NORMAL_SUFFIX) : this.profileImageURL.replace(this.avatarSuffixRegex, TD.services.TwitterUser.MINI_SUFFIX)
	}, TD.services.TwitterUser.prototype.prettyFollowersCount = function() {
		return TD.util.prettyNumber(this.followersCount, {
			noNegativeNumbers: !0
		})
	}, TD.services.TwitterUser.prototype.prettyFriendsCount = function() {
		return TD.util.prettyNumber(this.friendsCount, {
			noNegativeNumbers: !0
		})
	}, TD.services.TwitterUser.prototype.prettyListedCount = function() {
		return TD.util.prettyNumber(this.listedCount, {
			noNegativeNumbers: !0
		})
	}, TD.services.TwitterUser.prototype.prettyStatusesCount = function() {
		return TD.util.prettyNumber(this.statusesCount, {
			noNegativeNumbers: !0
		})
	}, TD.services.TwitterUser.prototype.prettyJoinedDate = function() {
		return TD.util.prettyDateShortString(this.joinedDate)
	}, TD.services.TwitterUser.prototype.prettyTimeDateJoinedDate = function() {
		return TD.util.prettyTimeString(this.joinedDate)
	}, TD.services.TwitterUser.prototype.follow = function(e, t, i, n) {
		var s, a = this;
		TD.controller.clients.getClient(e.getKey()).followUser(this.screenName, function(e) {
			a.following = !0, n && (s = (0, r.default)("Successfully followed @{{screenName}}", a), e.isProtected && (s = (0, r.default)("Follower request sent to @{{screenName}}", a)), (0, c.showNotification)({
				message: s
			})), t && t(e)
		}, function(e) {
			n && (s = (0, r.default)("Unable to follow @{{screenName}}", a), (0, c.showErrorNotification)({
				message: s
			})), i && i()
		})
	}, TD.services.TwitterUser.prototype.unfollow = function(e, t, i, n) {
		var s, a = this;
		TD.controller.clients.getClient(e.getKey()).unfollowUser(this.screenName, function(i) {
			a.removeFromView(e, {
				feedTypes: l.default.followingFeedTypes
			}), a.following = !1, n && (s = (0, r.default)("Successfully unfollowed @{{screenName}}", a), (0, c.showNotification)({
				message: s
			})), t && t(i)
		}, function() {
			n && (s = (0, r.default)("Unable to unfollow @{{screenName}}", a), (0, c.showErrorNotification)({
				message: s
			})), i && i()
		})
	}, TD.services.TwitterUser.prototype.unblock = function(e, t, i) {
		var n = TD.controller.clients.getClient(e.getKey()),
			s = function(e) {
				delete n.blocks[this.id], t && t(e)
			}.bind(this);
		n.unblockUser(this.screenName, s, i), a.default.publish("/user/" + this.screenName + "/unblock", [this.account])
	}, TD.services.TwitterUser.prototype.block = function(e, t, i, n) {
		var s, o = TD.controller.clients.getClient(e.getKey()),
			l = function(e) {
				(0, c.showNotification)({
					message: s
				}), self.following = !1, a.default.publish("/user/" + this.screenName + "/blocked", [this.account]), o.addIdToBlockList(this.id), i && i(e)
			}.bind(this);
		a.default.publish("/user/" + this.screenName + "/block", [this.account]), t ? (o.blockAndReportUser(this.screenName, l, n), s = (0, r.default)("Successfully blocked and reported @{{screenName}}", {
			screenName: this.screenName
		})) : (o.blockUser(this.screenName, l, n), s = (0, r.default)("Successfully blocked @{{screenName}}", {
			screenName: this.screenName
		}))
	}, TD.services.TwitterUser.prototype.mute = function(e) {
		var t = TD.controller.clients.getClient(e.getKey());
		return t.muteUser(this.id).addCallbackWith(this, TD.util.effect(function() {
			(0, c.showNotification)({
				message: (0, r.default)("Muted @{{screenName}}", {
					screenName: this.screenName
				})
			}), t.addIdToMuteList(this.id)
		}))
	}, TD.services.TwitterUser.prototype.unmute = function(e) {
		var t = TD.controller.clients.getClient(e.getKey());
		return t.unmuteUser(this.id).addCallbackWith(this, TD.util.effect(function() {
			(0, c.showNotification)({
				message: (0, r.default)("Unmuted @{{screenName}}", {
					screenName: this.screenName
				})
			}), delete t.mutes[this.id]
		}))
	}, TD.services.TwitterUser.prototype.removeFromView = function(e, t) {
		a.default.publish("/user/removeTweets", [this.id, e.getUserID(), t])
	}, TD.services.TwitterUser.prototype.bio = function() {
		var e = this.entities && this.entities.description || {};
		return TD.util.transform(this.description, e)
	}, TD.services.TwitterUser.prototype.htmlLocation = function() {
		var e = this.entities && this.entities.location || {};
		return TD.util.transform(this.location, e)
	}, TD.services.TwitterUser.prototype.hasLocation = function() {
		return Boolean(this.htmlLocation())
	}, TD.services.TwitterUser.prototype.getFollowerURL = function() {
		return this.profileURL + "/followers"
	}, TD.services.TwitterUser.prototype.getFriendURL = function() {
		return this.profileURL + "/following"
	}, TD.services.TwitterUser.prototype.getProfileURL = function() {
		return this.profileURL
	}, TD.services.TwitterUser.prototype.getMediaURL = function() {
		return this.profileURL + "/media"
	}, TD.services.TwitterUser.prototype.getMediaSearchQuery = function() {
		return TD.ui.template.toHtml("from:{{screenName}} (filter:images OR filter:videos)", {
			screenName: this.screenName
		})
	}, TD.services.TwitterUser.prototype.getListedURL = function() {
		return this.profileURL + "/memberships"
	}, TD.services.TwitterUser.prototype.getDisplayURL = function() {
		var e = this.entities;
		return e && e.url && e.url.urls && e.url.urls.length && e.url.urls[0].display_url ? e.url.urls[0].display_url : this.url
	}, TD.services.TwitterUser.prototype.profileBannerURL = function() {
		return this._profileBannerURL
	}, TD.services.TwitterUser.prototype.isWithHeld = function() {
		return !!this.withheldScope
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterDeletedUser = function(e, t) {
		return this.id = t, this.isDeleted = !0, this.screenName = "", this.name = (0, r.default)("Unknown user"), this.isProtected = !1, this.isVerified = !1, this.isTranslator = !1, this.isBadged = !1, this.followersCount = 0, this.friendsCount = 0, this.listedCount = 0, this.statusesCount = 0, this.joinedDate = new Date, this
	}, TD.services.TwitterDeletedUser.prototype.isSameUser = function() {
		return !1
	}, TD.services.TwitterDeletedUser.prototype.isMe = function() {
		return !1
	}, TD.services.TwitterDeletedUser.prototype.reasonablySmallProfileImageURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.biggerProfileImageURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.miniProfileImageURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.follow = function() {}, TD.services.TwitterDeletedUser.prototype.unfollow = function() {}, TD.services.TwitterDeletedUser.prototype.unblock = function() {}, TD.services.TwitterDeletedUser.prototype.block = function(e, t, i, n) {}, TD.services.TwitterDeletedUser.prototype.removeFromView = function(e, t) {}, TD.services.TwitterDeletedUser.prototype.bio = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.htmlLocation = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.hasLocation = function() {
		return !1
	}, TD.services.TwitterDeletedUser.prototype.getFollowerURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.getFriendURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.getProfileURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.getMediaURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.getMediaSearchQuery = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.getListedURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.getDisplayURL = function() {
		return ""
	}, TD.services.TwitterDeletedUser.prototype.profileBannerURL = function() {
		return ""
	}
}, function(e, t, i) {
	"use strict";
	TD.services.TwitterList = function(e) {
		this.account = e
	}, TD.services.TwitterList.prototype.fromJSONObject = function(e) {
		return this.id = e.id_str, this.name = e.name, this.description = e.description, this.slug = e.slug, this.fullName = e.full_name, this.memberCount = e.member_count, this.isPrivate = "private" === e.mode, this.user = new TD.services.TwitterUser(this.account).fromJSONObject(e.user), this
	}, TD.services.TwitterList.prototype.isOwnList = function() {
		var e = TD.storage.Account.generateKeyFor("twitter", this.user.id),
			t = TD.storage.accountController.get(e);
		return Boolean(t)
	}
}, function(e, t, i) {
	"use strict";
	TD.services.CustomTimeline = function(e) {
		this.account = e
	}, TD.services.CustomTimeline.prototype.fromJSONObject = function(e) {
		return this.id = e.id_str || e.id, this.name = e.name, this.description = e.description, this.url = e.collection_url, this.ordering = e.timeline_order, this.user = new TD.services.TwitterUser(this.account).fromJSONObject(e.user), this
	}, TD.services.CustomTimeline.prototype.isOwnCustomTimeline = function() {
		return String(this.account.getUserID()) === this.user.id
	}, TD.services.CustomTimeline.prototype.isCurationOrdering = function() {
		return "curation_reverse_chron" === this.ordering
	}
}, function(e, t, i) {
	"use strict";
	var n = l(i(2245)),
		s = l(i(63)),
		r = l(i(2247)),
		a = l(i(189)),
		o = l(i(170));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterSearchParser = function(e) {
		this.query = e, this.terms = [], this.init()
	}, TD.services.TwitterSearchParser.PUNCT = new RegExp("[" + twttrTxt.regexen.punct.source + "]", "g"), TD.services.TwitterSearchParser.ALLOWED_CHARS = ["@", "#", '"', "-"], TD.services.TwitterSearchParser.isStreamable = function(e) {
		var t = e.match(TD.services.TwitterSearchParser.PUNCT);
		return 0 === (0, o.default)(t, TD.services.TwitterSearchParser.ALLOWED_CHARS).length
	}, TD.services.TwitterSearchParser.prototype.PHRASE = "phrase", TD.services.TwitterSearchParser.prototype.NEGATIVE_PHRASE = "negPhrase", TD.services.TwitterSearchParser.prototype.AND = "and", TD.services.TwitterSearchParser.prototype.OR = "or", TD.services.TwitterSearchParser.prototype.query = "", TD.services.TwitterSearchParser.prototype.trackQuery = "", TD.services.TwitterSearchParser.prototype.thePhrase = "", TD.services.TwitterSearchParser.prototype.type = "", TD.services.TwitterSearchParser.prototype.init = function() {
		var e, t;
		if (!this.trackQuery)
			if (0 === (t = "string" == typeof this.query ? TD.services.TwitterSearchParser.extractPhrases(this.query, !1) : this.query).length);
			else if (1 === t.length) this.thePhrase = t[0].toLowerCase(), "-" === this.thePhrase.charAt(0) && -1 === this.thePhrase.indexOf(" ") ? (this.type = this.NEGATIVE_PHRASE, this.thePhrase = this.thePhrase.slice(1), this.trackQuery = "") : (this.type = this.PHRASE, this.trackQuery = this.thePhrase);
		else {
			var i, n = [
					[]
				],
				o = !0;
			for (i = 0; i < t.length; i++) "OR" !== (e = t[i]) ? "AND" !== e && (o ? (0, a.default)(n).push(e) : n.push([e]), o = !1) : ((0, a.default)(n).push(e), o = !0);
			if ((n = (0, r.default)(n, function(e) {
					return (0, s.default)(e)
				})).length > 1) {
				for (this.type = this.AND, i = 0; i < n.length; i++) {
					var l = n[i];
					l.length > 0 && this.terms.push(new TD.services.TwitterSearchParser(l))
				}
				this.trackQuery = this.calculateANDTrackQuery(n)
			} else
				for (this.type = this.OR, i = 0; i < n[0].length; i++) "OR" != (e = n[0][i]) && (this.terms.push(new TD.services.TwitterSearchParser([e])), "-" != e.charAt(0) && (this.trackQuery && (this.trackQuery += ","), this.trackQuery += e))
		}
	}, TD.services.TwitterSearchParser.prototype.calculateANDTrackQuery = function(e) {
		for (var t = [""], i = 0; i < e.length; i++) {
			for (var n = e[i], s = [], r = 0; r < n.length; r++) {
				var a = n[r];
				if ("OR" != a)
					if ("-" == a.charAt(0)) s = t;
					else
						for (var o = 0; o < t.length; o++) {
							var l = t[o],
								c = l ? l + " " : "";
							c += a, s.push(c)
						}
			}
			t = s
		}
		return t.join(",")
	}, TD.services.TwitterSearchParser.extractPhrases = function(e, t) {
		for (var i, n = [], s = e.split('"'), r = 0; r < s.length; r++)
			if (s[r])
				if (r % 2 == 1 && r < s.length - 1)(i = s[r].trim()) && (t && (i = '"' + i + '"'), n.push(i));
				else
					for (var a = s[r].split(" "), o = 0; o < a.length; o++)(i = (i = a[o]).trim()) && n.push(i);
		return n
	}, TD.services.TwitterSearchParser.prototype.match = function(e, t) {
		var i, s = new RegExp("(^|[^\\w])" + (0, n.default)(this.thePhrase) + "($|[^\\w])");
		switch (t || (e = e.toLowerCase()), this.type) {
			case this.PHRASE:
				return -1 !== e.indexOf(this.thePhrase) && s.test(e);
			case this.NEGATIVE_PHRASE:
				return -1 === e.indexOf(this.thePhrase);
			case this.AND:
				for (i = 0; i < this.terms.length; i++)
					if (!this.terms[i].match(e, !0)) return !1;
				return !0;
			case this.OR:
				for (i = 0; i < this.terms.length; i++)
					if (this.terms[i].match(e, !0)) return !0;
				return !1;
			default:
				return !1
		}
	}
}, , , , function(e, t, i) {
	"use strict";
	var n = i(17);
	TD.services.TwitterAction = function(e) {
		this.account = e
	}, TD.services.TwitterAction.FAVORITE = "favorite", TD.services.TwitterAction.FAVORITED_RETWEET = "favorited_retweet", TD.services.TwitterAction.FAVORITED_MENTION = "favorited_mention", TD.services.TwitterAction.FAVORITED_MEDIA = "favorited_media_tagged", TD.services.TwitterAction.RETWEET = "retweet", TD.services.TwitterAction.RETWEETED_RETWEET = "retweeted_retweet", TD.services.TwitterAction.RETWEETED_MENTION = "retweeted_mention", TD.services.TwitterAction.RETWEETED_MEDIA = "retweeted_media_tagged", TD.services.TwitterAction.MENTION = "mention", TD.services.TwitterAction.REPLY = "reply", TD.services.TwitterAction.FOLLOW = "follow", TD.services.TwitterAction.LIST_MEMBER_ADDED = "list_member_added", TD.services.TwitterAction.LIST_CREATED = "list_created", TD.services.TwitterAction.UNFAVORITE = "unfavorite", TD.services.TwitterAction.LIST_MEMBER_REMOVED = "list_member_removed", TD.services.TwitterAction.LIST_DESTROYED = "list_destroyed", TD.services.TwitterAction.QUOTED_TWEET = "quoted_tweet", TD.services.TwitterAction.QUOTE = "quote", TD.services.TwitterAction.UNFOLLOW = "unfollow", TD.services.TwitterAction.processRESTAction = function(e, t) {
		var i = TD.services.TwitterAction._getActionConstructor(e.action);
		if (!i) return [];
		for (var n = e.sources, s = e.targets_size > 0 ? e.targets : [void 0], r = e.target_objects_size > 0 ? e.target_objects : [void 0], a = [], o = 0; o < n.length; o++)
			if (e.action !== TD.services.TwitterAction.RETWEET)
				for (var l = 0; l < s.length; l++)
					for (var c = 0; c < r.length; c++) e.action === TD.services.TwitterAction.LIST_MEMBER_ADDED && n[o].id !== r[c].user.id || a.push([e, n[o], s[l], r[c]]);
			else {
				if (r[0].user.id != t.getUserID()) continue;
				a.push([e, n[o], s[o], r[0]])
			} return a.map(function(n) {
			return new i(t).fromJSONObject(e, n, !1)
		})
	}, TD.services.TwitterAction._getActionConstructor = function(e) {
		switch (e) {
			case TD.services.TwitterAction.MENTION:
			case TD.services.TwitterAction.REPLY:
				return TD.services.TwitterActionMention;
			case TD.services.TwitterAction.FAVORITE:
			case TD.services.TwitterAction.UNFAVORITE:
				return TD.services.TwitterActionFavorite;
			case TD.services.TwitterAction.FAVORITED_RETWEET:
			case TD.services.TwitterAction.FAVORITED_MENTION:
			case TD.services.TwitterAction.FAVORITED_MEDIA:
				return TD.services.TwitterActionFavoritedInteraction;
			case TD.services.TwitterAction.RETWEET:
				return TD.services.TwitterActionRetweet;
			case TD.services.TwitterAction.RETWEETED_RETWEET:
			case TD.services.TwitterAction.RETWEETED_MENTION:
			case TD.services.TwitterAction.RETWEETED_MEDIA:
				return TD.services.TwitterActionRetweetedInteraction;
			case TD.services.TwitterAction.QUOTED_TWEET:
			case TD.services.TwitterAction.QUOTE:
				return TD.services.TwitterActionQuotedTweet;
			case TD.services.TwitterAction.FOLLOW:
			case TD.services.TwitterAction.UNFOLLOW:
				return TD.services.TwitterActionFollow;
			case TD.services.TwitterAction.LIST_MEMBER_ADDED:
			case TD.services.TwitterAction.LIST_MEMBER_REMOVED:
				return TD.services.TwitterActionListMemberAdded;
			case TD.services.TwitterAction.LIST_CREATED:
			case TD.services.TwitterAction.LIST_DESTROYED:
				return TD.services.TwitterActionListCreated;
			default:
				return null
		}
	}, TD.services.TwitterAction.prototype = new TD.services.ChirpBase, TD.services.TwitterAction.prototype.getChirpType = function() {
		return this.action
	}, TD.services.TwitterAction.prototype.action = null, TD.services.TwitterAction.prototype.maxPosition = null, TD.services.TwitterAction.prototype.minPosition = null, TD.services.TwitterAction.msFudge = 0, TD.services.TwitterAction.prototype.fromJSONObject = function(e, t, i) {
		if (i) throw (0, n.metric)("action:from-json-object:from-stream"), new Error("`fromStream` is deprecated");
		return this.fromRESTData.apply(this, t), this.created = TD.util.parseDateString(e.created_at), this.maxPosition = e.max_position || this.created.getTime().toString(), this.minPosition = e.min_position || this.created.getTime().toString(), this.generateInternalID(), this.generateText(), this
	}, TD.services.TwitterAction.prototype.fromRESTData = function(e, t, i, n) {
		throw new Error("TwitterAction.fromRESTData not implemented")
	}, TD.services.TwitterAction.prototype.generateInternalID = function() {
		throw new Error("TwitterAction.generateInternalID not implemented")
	}, TD.services.TwitterAction.prototype.generateText = function() {}, TD.services.TwitterAction.prototype.render = function() {
		throw new Error("TwitterAction.render not implemented")
	}, TD.services.TwitterAction.prototype.isAboutYou = function() {
		throw new Error("TwitterAction.isAboutYou not implemented")
	}, TD.services.TwitterAction.prototype.isOwnChirp = function() {
		throw new Error("TwitterAction.isOwnChirp not implemented")
	}, TD.services.TwitterAction.prototype.getChirpURL = function() {
		return "https://twitter.com/activity"
	}, TD.services.TwitterAction.prototype.getCreator = function() {
		throw new Error("TwitterAction.getCreator not implemented")
	}, TD.services.TwitterAction.prototype.getSenders = function() {
		return [this.getCreator().screenName]
	}, TD.services.TwitterAction.prototype.isFromVerifiedUser = function() {
		return this.getCreator().isVerified
	}, TD.services.TwitterAction.prototype.getTargetUsers = function() {
		throw new Error("TwitterAction.getTargetUsers not implemented")
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterActionOnTweet = function(e) {
		this.account = e
	}, TD.services.TwitterActionOnTweet.prototype = new TD.services.TwitterAction, TD.services.TwitterActionOnTweet.prototype.sourceUser = null, TD.services.TwitterActionOnTweet.prototype.targetTweet = null, TD.services.TwitterActionOnTweet.prototype.generateInternalID = function() {
		this.id = [this.action, this.sourceUser.id, this.targetTweet.id].join("_")
	}, TD.services.TwitterActionOnTweet.prototype.isAboutYou = function() {
		return this.targetTweet.user.id == this.account.getUserID()
	}, TD.services.TwitterActionOnTweet.prototype.isOwnChirp = function() {
		return this.sourceUser.id == this.account.getUserID()
	}, TD.services.TwitterActionOnTweet.prototype.getRelatedTweet = function() {
		return this.targetTweet
	}, TD.services.TwitterActionOnTweet.prototype.getCreator = function() {
		return this.sourceUser
	}, TD.services.TwitterActionOnTweet.prototype.passFilters = function(e) {
		var t = TD.controller.filterManager.pass(this, e);
		return this.targetTweet && this.targetTweet.quotedTweet ? t && TD.controller.filterManager.pass(this.targetTweet.quotedTweet, e) : t
	}, TD.services.TwitterActionOnTweet.prototype.render = function(e, t) {
		e = e || {}, t = t || "status/tweet_activity_in_stream", TD.config.debug_highlight_streamed_chirps && (this.isStreamed() ? e.chirpClassnames = "is-streamed" : e.chirpClassnames = "");
		var i = TD.settings.getDisplaySensitiveMedia(),
			n = this.isAboutYou(),
			s = this.action === TD.services.TwitterAction.MENTION,
			a = this.action === TD.services.TwitterAction.FAVORITE,
			o = this.action === TD.services.TwitterAction.QUOTED_TWEET,
			l = !!this.targetTweet.quotedTweet,
			c = !!this.retweet,
			u = !n && !s,
			d = n && s,
			h = !0;
		(s || o) && (h = !1);
		var m = !0;
		u || d ? m = !1 : o && (m = !1);
		var f = !1;
		return s || o ? f = !0 : !n && a && (f = !0), TD.ui.template.render(t, r.default.extend(e, {
			chirp: this,
			sourceAvatar: n ? this.sourceUser.miniProfileImageURL() : null,
			withActivityHeader: h,
			isAboutYou: n,
			isMention: s,
			isFavorite: a,
			isRetweet: c,
			isTweetActivity: u,
			isNotification: d,
			withTweetActions: !0,
			withFooter: !0,
			withAvatar: f,
			withSourceMute: !n,
			withContentMute: m,
			withMediaPreview: !0,
			isMediaPreviewOff: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_OFF,
			isMediaPreviewSmall: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL,
			isMediaPreviewLarge: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE,
			isQuotedTweet: l,
			mediaPreviewSrc: function() {
				return this.getMediaSrcForPreviewSize(e.mediaPreviewSize)
			},
			renderQuoted: function() {
				return this.renderQuotedTweet(e)
			},
			thumbSizeClass: TD.services.TwitterMedia.thumbSizeClasses[e.mediaPreviewSize],
			isPossiblySensitive: this.targetTweet.possiblySensitive && !i,
			withLinebreaks: !0,
			icon: this.iconClass,
			isFavorited: this.targetTweet.isFavorite,
			isRetweeted: this.targetTweet.isRetweet
		}))
	}, TD.services.TwitterActionOnTweet.prototype.getNotificationData = function() {
		return {
			title: this.text,
			img: this.targetTweet.user.profileImageURL,
			text: (0, r.default)("<div>" + this.targetTweet.htmlText + "</div>").text()
		}
	}, TD.services.TwitterActionOnTweet.prototype.getMedia = function() {
		return this.getRelatedTweet().getMedia()
	}, TD.services.TwitterActionOnTweet.prototype.getTargetUsers = function() {
		return [this.targetTweet.user]
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(17));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterActionRetweet = function(e) {
		this.account = e
	}, TD.services.TwitterActionRetweet.prototype = new TD.services.TwitterActionOnTweet, TD.services.TwitterActionRetweet.prototype.action = TD.services.TwitterAction.RETWEET, TD.services.TwitterActionRetweet.prototype.iconClass = "icon-retweet-filled icon-retweet-color", TD.services.TwitterActionRetweet.prototype.retweet = null, TD.services.TwitterActionRetweet.prototype.fromRESTData = function(e, t, i, n) {
		this.sourceUser = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.retweet = new TD.services.TwitterStatus(this.account).fromJSONObject(i), this.targetTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(n)
	}, TD.services.TwitterActionRetweet.prototype.fromRetweet = function(e) {
		return this.sourceUser = e.user, this.retweet = e, this.targetTweet = e.retweetedStatus, this.created = new Date(e.created), this.generateInternalID(), this.generateText(), this.maxPosition = this.minPosition = this.created.getTime().toString(), this
	}, TD.services.TwitterActionRetweet.prototype.generateText = function() {
		var e = (0, n.default)("{{{user}}} Retweeted", null, !0);
		this.text = TD.ui.template.toHtml(e, {
			user: this.sourceUser.name
		}), this.htmlText = TD.ui.template.toHtml(e, {
			user: TD.ui.template.render("text/user_link_fullname", {
				name: s.default.cleanWithEmoji(this.sourceUser.name),
				profileUrl: this.sourceUser.getProfileURL(),
				withBold: this.isAboutYou()
			})
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterActionMention = function(e) {
		this.account = e
	}, TD.services.TwitterActionMention.prototype = new TD.services.TwitterActionOnTweet, TD.services.TwitterActionMention.prototype.action = TD.services.TwitterAction.MENTION, TD.services.TwitterActionMention.prototype.iconClass = "icon-mention icon-mention-color", TD.services.TwitterActionMention.prototype.fromRESTData = function(e, t, i, n) {
		var s = this;
		"reply" === e.action ? this.targetTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(i) : this.targetTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(n), this.sourceUser = new TD.services.TwitterUser(this.account).fromJSONObject(t);
		var r = n.card;
		this.card = r, this.possiblySensitive = this.targetTweet.possiblySensitive, this.getMainUser = function() {
			return s.sourceUser
		}
	}, TD.services.TwitterActionMention.prototype.generateText = function() {
		var e = (0, r.default)("{{{user}}} mentioned you", null, !0);
		this.text = TD.ui.template.toHtml(e, {
			user: this.sourceUser.name
		}), this.htmlText = TD.ui.template.toHtml(e, {
			user: TD.ui.template.render("text/user_link_fullname", {
				name: this.sourceUser.name,
				profileUrl: this.sourceUser.getProfileURL(),
				withBold: this.isAboutYou()
			})
		})
	}, TD.services.TwitterActionMention.prototype.isAboutYou = function() {
		return !0
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.TwitterActionListCreated = function(e) {
		this.account = e
	}, TD.services.TwitterActionListCreated.prototype = new TD.services.TwitterAction, TD.services.TwitterActionListCreated.prototype.action = TD.services.TwitterAction.LIST_CREATED, TD.services.TwitterActionListCreated.prototype.owner = null, TD.services.TwitterActionListCreated.prototype.list = null, TD.services.TwitterActionListCreated.prototype.isListAction = !0, TD.services.TwitterActionListCreated.prototype.fromRESTData = function(e, t, i) {
		this.owner = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.list = new TD.services.TwitterList(this.account).fromJSONObject(i)
	}, TD.services.TwitterActionListCreated.prototype.generateInternalID = function() {
		this.id = [this.action, this.owner.id, this.list.id].join("_")
	}, TD.services.TwitterActionListCreated.prototype.generateText = function() {
		var e = (0, r.default)("{{{owner}}} created the List {{{list}}}", null, !0);
		this.text = TD.ui.template.toHtml(e, {
			owner: this.owner.name,
			list: this.list.fullName
		}), this.htmlText = TD.ui.template.toHtml(e, {
			owner: TD.ui.template.render("text/user_link_fullname", {
				name: this.owner.name,
				profileUrl: this.owner.getProfileURL(),
				withBold: !0
			}),
			list: TD.ui.template.render("text/list_link_real_name", this.list)
		})
	}, TD.services.TwitterActionListCreated.prototype.isOwnChirp = function() {
		return this.owner.id == this.account.getUserID()
	}, TD.services.TwitterActionListCreated.prototype.isAboutYou = function() {
		return !1
	}, TD.services.TwitterActionListCreated.prototype.getCreator = function() {
		return this.owner
	}, TD.services.TwitterActionListCreated.prototype.getTargetUsers = function() {
		return []
	}, TD.services.TwitterActionListCreated.prototype.render = function() {
		var e = {
			chirp: this,
			sourceAvatar: this.owner.miniProfileImageURL()
		};
		return TD.ui.template.render("status/list_activity", e)
	}, TD.services.TwitterActionListCreated.prototype.getNotificationData = function() {
		return {
			title: this.text,
			img: null,
			text: this.list.description
		}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(283);
	TD.services.TwitterActionListMemberAdded = function(e) {
		this.account = e
	}, TD.services.TwitterActionListMemberAdded.prototype = new TD.services.TwitterAction, TD.services.TwitterActionListMemberAdded.prototype.action = TD.services.TwitterAction.LIST_MEMBER_ADDED, TD.services.TwitterActionListMemberAdded.prototype.owner = null, TD.services.TwitterActionListMemberAdded.prototype.added = null, TD.services.TwitterActionListMemberAdded.prototype.list = null, TD.services.TwitterActionListMemberAdded.prototype.isListAction = !0, TD.services.TwitterActionListMemberAdded.prototype.fromRESTData = function(e, t, i, n) {
		this.owner = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.added = new TD.services.TwitterUser(this.account).fromJSONObject(i), this.list = new TD.services.TwitterList(this.account).fromJSONObject(n)
	}, TD.services.TwitterActionListMemberAdded.prototype.generateInternalID = function() {
		this.id = [this.action, this.owner.id, this.added.id, this.list.id].join("_")
	}, TD.services.TwitterActionListMemberAdded.prototype.generateText = function() {
		var e;
		e = this.isAboutYou() ? (0, r.default)("{{{owner}}} added you to their List {{{list}}}", null, !0) : (0, r.default)("{{{owner}}} added {{{added}}} to their List {{{list}}}", null, !0), this.text = TD.ui.template.toHtml(e, {
			owner: this.owner.name,
			added: this.added.name,
			list: this.list.name
		}), this.htmlText = TD.ui.template.toHtml(e, {
			owner: (0, a.linkifyUser)(this.owner, {
				withBold: !0
			}),
			added: (0, a.linkifyUser)(this.added, {
				withBold: !0
			}),
			list: TD.ui.template.render("text/list_link_real_name", this.list)
		})
	}, TD.services.TwitterActionListMemberAdded.prototype.isOwnChirp = function() {
		return this.owner.id == this.account.getUserID()
	}, TD.services.TwitterActionListMemberAdded.prototype.isAboutYou = function() {
		return this.added.id == this.account.getUserID()
	}, TD.services.TwitterActionListMemberAdded.prototype.getCreator = function() {
		return this.owner
	}, TD.services.TwitterActionListMemberAdded.prototype.getTargetUsers = function() {
		return [this.added]
	}, TD.services.TwitterActionListMemberAdded.prototype.render = function() {
		var e = {
			chirp: this,
			sourceAvatar: this.owner.miniProfileImageURL()
		};
		return TD.ui.template.render("status/list_activity", e)
	}, TD.services.TwitterActionListMemberAdded.prototype.getNotificationData = function() {
		return {
			title: this.text,
			img: null,
			text: this.list.description
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = o(i(15)),
		s = o(i(112)),
		r = o(i(43)),
		a = o(i(2));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterActionMultiListMemberAdded = function(e) {
		this.account = e
	}, TD.services.TwitterActionMultiListMemberAdded.prototype = new TD.services.TwitterAction, TD.services.TwitterActionMultiListMemberAdded.prototype.action = "multi_list_member_added", TD.services.TwitterActionMultiListMemberAdded.prototype.owner = null, TD.services.TwitterActionMultiListMemberAdded.prototype.added = null, TD.services.TwitterActionMultiListMemberAdded.prototype.lists = null, TD.services.TwitterActionMultiListMemberAdded.prototype.isListAction = !0, TD.services.TwitterActionMultiListMemberAdded.prototype.fromRESTData = function(e) {
		this.owner = new TD.services.TwitterUser(this.account).fromJSONObject(e.sources[0]), this.added = (0, r.default)(e.targets, function(e) {
			return new TD.services.TwitterUser(this.account).fromJSONObject(e)
		}.bind(this)), this.lists = (0, r.default)(e.target_objects, function(e) {
			return new TD.services.TwitterList(this.account).fromJSONObject(e)
		}.bind(this))
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.generateInternalID = function() {
		var e = (0, s.default)(this.added, "id").sort().join("-"),
			t = (0, s.default)(this.lists, "id").sort().join("-");
		this.id = [this.action, this.owner.id, e, t].join("_")
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.generateText = function() {
		var e = (0, a.default)("{{{owner}}} added {{{added}}} to the Lists {{{lists}}}", null, !0),
			t = [],
			i = [],
			s = [],
			r = [];
		(0, n.default)(this.added, function(e) {
			t.push(e.name), i.push(TD.ui.template.render("text/user_link_fullname", {
				name: e.name,
				profileUrl: e.getProfileURL(),
				withBold: !0
			}))
		}), (0, n.default)(this.lists, function(e) {
			s.push(e.fullName), r.push(TD.ui.template.render("text/list_link_real_name", e))
		}), this.text = TD.ui.template.toHtml(e, {
			owner: this.owner.name,
			added: t.join(", "),
			lists: s.join(", ")
		}), this.htmlText = TD.ui.template.toHtml(e, {
			owner: TD.ui.template.render("text/user_link_fullname", {
				name: this.owner.name,
				profileUrl: this.owner.getProfileURL(),
				withBold: this.isAboutYou()
			}),
			added: i.join(", "),
			lists: r.join(", ")
		})
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.isOwnChirp = function() {
		return !1
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.isAboutYou = function() {
		return !1
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.getCreator = function() {
		return this.owner
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.getTargetUsers = function() {
		return this.added
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.render = function() {
		var e = {
			chirp: this,
			sourceAvatar: this.owner.miniProfileImageURL()
		};
		return TD.ui.template.render("status/action_list", e)
	}, TD.services.TwitterActionMultiListMemberAdded.prototype.getNotificationData = function() {
		return {
			title: null,
			img: null,
			text: this.text
		}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(283);
	TD.services.TwitterActionFavorite = function(e) {
		this.account = e
	}, TD.services.TwitterActionFavorite.prototype = new TD.services.TwitterActionOnTweet, TD.services.TwitterActionFavorite.prototype.action = TD.services.TwitterAction.FAVORITE, TD.services.TwitterActionFavorite.prototype.iconClass = "icon-heart-filled icon-favorite-color", TD.services.TwitterActionFavorite.prototype.fromRESTData = function(e, t, i, n) {
		this.sourceUser = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.targetTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(i)
	}, TD.services.TwitterActionFavorite.prototype.generateText = function() {
		var e = (0, r.default)("{{{user}}} liked", null, !0);
		this.text = TD.ui.template.toHtml(e, {
			user: this.sourceUser.name
		}), this.htmlText = TD.ui.template.toHtml(e, {
			user: (0, a.linkifyUser)(this.sourceUser, {
				withBold: this.isAboutYou()
			})
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = a(i(13)),
		s = a(i(2)),
		r = i(283);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterActionFavoritedInteraction = function(e) {
		this.account = e
	}, TD.services.TwitterActionFavoritedInteraction.prototype = new TD.services.TwitterActionOnTweet, TD.services.TwitterActionFavoritedInteraction.prototype.action = TD.services.TwitterAction.FAVORITED_RETWEET, TD.services.TwitterActionFavoritedInteraction.prototype.iconClass = "icon-heart-filled icon-favorite-color", TD.services.TwitterActionFavoritedInteraction.prototype.fromRESTData = function(e, t, i, s) {
		var r = i.retweeted_status,
			a = r || i,
			o = (0, n.default)(i, "extended_entities.media[0].features.all.tags", []),
			l = this.account.getUserID();
		if (r || (this.action = TD.services.TwitterAction.FAVORITED_MENTION), o.length) {
			var c = o.find(function(e) {
				return e.user_id === l
			});
			this.mediaTagged = c, this.action = TD.services.TwitterAction.FAVORITED_MEDIA
		}
		this.sourceUser = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.targetUser = new TD.services.TwitterUser(this.account).fromJSONObject(s), this.targetTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(a), this.hasRetweet = i.retweeted_status
	}, TD.services.TwitterActionFavoritedInteraction.prototype.isAboutYou = function() {
		return this.targetUser.isMe()
	}, TD.services.TwitterActionFavoritedInteraction.prototype.generateText = function() {
		var e = "{{{user}}} liked your Retweet";
		this.hasRetweet || (e = this.mediaTagged ? "{{{user}}} liked a Tweet you were tagged in" : "{{{user}}} liked a Tweet you were mentioned in");
		var t = (0, s.default)(e, null, !0);
		this.text = TD.ui.template.toHtml(t, {
			user: this.sourceUser.name
		}), this.htmlText = TD.ui.template.toHtml(t, {
			user: (0, r.linkifyUser)(this.sourceUser, {
				withBold: this.isAboutYou()
			})
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(283);
	TD.services.TwitterActionFollow = function(e) {
		this.account = e
	}, TD.services.TwitterActionFollow.prototype = new TD.services.TwitterAction, TD.services.TwitterActionFollow.prototype.action = TD.services.TwitterAction.FOLLOW, TD.services.TwitterActionFollow.prototype.following = null, TD.services.TwitterActionFollow.prototype.followed = null, TD.services.TwitterActionFollow.prototype.fromRESTData = function(e, t, i, n) {
		this.following = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.followed = new TD.services.TwitterUser(this.account).fromJSONObject(i)
	}, TD.services.TwitterActionFollow.prototype.generateInternalID = function() {
		this.id = [this.action, this.following.id, this.followed.id].join("_")
	}, TD.services.TwitterActionFollow.prototype.generateText = function() {
		var e;
		e = this.isAboutYou() ? (0, r.default)("{{{user}}} followed you", null, !0) : (0, r.default)("{{{user}}} followed", null, !0), this.text = TD.ui.template.toHtml(e, {
			user: this.following.name
		}), this.htmlText = TD.ui.template.toHtml(e, {
			user: (0, a.linkifyUser)(this.following, {
				withBold: this.isAboutYou()
			})
		})
	}, TD.services.TwitterActionFollow.prototype.render = function() {
		return TD.ui.template.render("status/follow_activity_in_stream", {
			data: this,
			iconClass: "icon-user-filled icon-follow-color",
			withoutAvatar: !1,
			withSourceMute: !0,
			withContentMute: this.isAboutYou(),
			withActivityHeader: !0,
			withUserMenu: !0,
			withUserBio: !0,
			isInline: !0
		})
	}, TD.services.TwitterActionFollow.prototype.isAboutYou = function() {
		return this.followed.id == this.account.getUserID()
	}, TD.services.TwitterActionFollow.prototype.isOwnChirp = function() {
		return this.following.id == this.account.getUserID()
	}, TD.services.TwitterActionFollow.prototype.getNotificationData = function() {
		var e = this.getRelatedUser(),
			t = null !== e.description ? "\n" + e.description : "";
		return {
			title: this.text,
			img: e.profileImageURL,
			text: "@" + e.screenName + t
		}
	}, TD.services.TwitterActionFollow.prototype.getTargetUsers = function() {
		return [this.followed]
	}, TD.services.TwitterActionFollow.prototype.getRelatedUser = function() {
		return this.isAboutYou() ? this.following : this.followed
	}, TD.services.TwitterActionFollow.prototype.getCreator = function() {
		return this.following
	}, TD.services.TwitterActionFollow.prototype.getFilterableText = function() {
		return this.followed.screenName
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(13)),
		s = r(i(2));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterActionRetweetedInteraction = function(e) {
		this.account = e
	}, TD.services.TwitterActionRetweetedInteraction.prototype = new TD.services.TwitterActionOnTweet, TD.services.TwitterActionRetweetedInteraction.prototype.action = TD.services.TwitterAction.RETWEETED_RETWEET, TD.services.TwitterActionRetweetedInteraction.prototype.iconClass = "icon-retweet-filled icon-retweet-color", TD.services.TwitterActionRetweetedInteraction.prototype.fromRESTData = function(e, t, i, s) {
		var r = i.retweeted_status,
			a = r || i,
			o = (0, n.default)(i, "extended_entities.media[0].features.all.tags", []),
			l = this.account.getUserID();
		if (r || (this.action = TD.services.TwitterAction.RETWEETED_MENTION), o.length) {
			var c = o.find(function(e) {
				return e.user_id === l
			});
			this.mediaTagged = c, this.action = TD.services.TwitterAction.RETWEETED_MEDIA
		}
		this.sourceUser = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.targetUser = new TD.services.TwitterUser(this.account).fromJSONObject(s), this.targetTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(a), this.hasRetweet = i.retweeted_status
	}, TD.services.TwitterActionRetweetedInteraction.prototype.isAboutYou = function() {
		return this.targetUser.isMe()
	}, TD.services.TwitterActionRetweetedInteraction.prototype.generateText = function() {
		var e = "{{{user}}} Retweeted your Retweet";
		this.hasRetweet || (e = this.mediaTagged ? "{{{user}}} Retweeted a Tweet you were tagged in" : "{{{user}}} Retweeted a Tweet you were mentioned in");
		var t = (0, s.default)(e, null, !0);
		this.htmlText = TD.ui.template.toHtml(t, {
			user: TD.ui.template.render("text/user_link_fullname", {
				name: this.sourceUser.name,
				profileUrl: this.sourceUser.getProfileURL(),
				withBold: this.isAboutYou()
			})
		})
	}
}, function(e, t, i) {
	"use strict";
	TD.services.TwitterActionQuotedTweet = function(e) {
		this.account = e
	}, TD.services.TwitterActionQuotedTweet.prototype = new TD.services.TwitterActionOnTweet, TD.services.TwitterActionQuotedTweet.prototype.action = TD.services.TwitterAction.QUOTED_TWEET, TD.services.TwitterActionQuotedTweet.prototype.iconClass = "icon-content color-twitter-darker-gray", TD.services.TwitterActionQuotedTweet.prototype.fromRESTData = function(e, t, i, n) {
		this.sourceUser = new TD.services.TwitterUser(this.account).fromJSONObject(t), this.targetUser = new TD.services.TwitterUser(this.account).fromJSONObject(n.user), this.targetTweet = new TD.services.TwitterStatus(this.account).fromJSONObject(i)
	}, TD.services.TwitterActionQuotedTweet.prototype.isAboutYou = function() {
		return this.targetUser.isMe()
	}
}, function(e, t, i) {
	"use strict";
	var n = a(i(44)),
		s = a(i(2)),
		r = a(i(17));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = {
		AlreadyRetweeted: (0, s.default)("Already Retweeted"),
		InvalidUrl: (0, s.default)("Contained an invalid URL"),
		UserSuspended: (0, s.default)("User has been suspended"),
		Duplicate: (0, s.default)("Status was a duplicate"),
		InvalidImage: (0, s.default)("Invalid image"),
		RateLimitExceeded: (0, s.default)("Rate limit exceeded"),
		TextTooLong: (0, s.default)("Text too long"),
		Unknown: (0, s.default)("Unknown error")
	};
	TD.services.ScheduledTweet = function() {}, TD.services.ScheduledTweet.prototype.chirpType = TD.services.ChirpBase.SCHEDULED_TWEET, TD.services.ScheduledTweet.prototype.fromStratoJSONObject = function(e) {
		var t = e.tweet_create_request,
			i = e.scheduling_info;
		if (this.id = e.rest_id, this.text = t.status, this.state = i.state.toLowerCase(), this.executeAt = new Date(Number(i.execute_at)), this.timestamp = TD.util.iso8601(this.executeAt), this.autoPopulateReplyMetadata = t.auto_populate_reply_metadata, this.inReplyToStatusId = t.in_reply_to_status_id, this.excludedRecipientIds = t.exclude_reply_user_ids, this.retweetedStatusId = null, this.tweetCreateState = this.state, this.attachmentUrl = t.attachment_url, "failed" === this.state) {
			var n = o[this.tweetCreateState] || o.Unknown;
			this.reasonText = (0, s.default)("Tweet cannot be sent: {{reasonText}}", {
				reasonText: n
			})
		}
		this.account = TD.storage.accountController.getAccountFromId(e.user.legacy.id_str);
		var a = (e.media_entities || []).map(function(e, i) {
			var n = e.media_info;
			switch (n.__typename) {
				case "ApiImage":
					return {
						id_str: t.media_ids[i], url: n.original_img_url, type: "photo", media_url_https: n.original_img_url, sizes: {
							medium: {
								w: n.original_img_width,
								h: n.original_img_height
							}
						}
					};
				case "ApiVideo":
					return {
						id_str: t.media_ids[0], url: n.preview_image.original_img_url, type: "video", media_url_https: n.preview_image.original_img_url, video_info: {
							variants: n.variants.map(function(e) {
								return {
									content_type: e.content_type,
									bitrate: e.bit_rate || 0,
									url: e.url
								}
							}),
							aspect_ratio: [n.numerator, n.denominator]
						}
					};
				case "ApiGif":
					return {
						id_str: t.media_ids[0], url: n.original_img_url, type: "animated_gif", media_url_https: n.original_img_url, video_info: {
							variants: n.variants.map(function(e) {
								return {
									content_type: e.content_type,
									bitrate: e.bit_rate || 0,
									url: e.url
								}
							})
						}, sizes: {
							medium: {
								w: n.original_img_width,
								h: n.original_img_height
							}
						}
					}
			}
		});
		return this._media = TD.services.TwitterMedia.getMediaFromEntities({
			media: a
		}, {
			isScheduled: !0
		}), this.user = {
			avatar: TD.util.transformTwitterAvatar(this.account.getProfileImageURL(), "mini"),
			screenName: this.account.getUsername(),
			emojifiedName: r.default.cleanWithEmoji(this.account.getName()),
			isProtected: this.account.getIsPrivate(),
			isVerified: this.account.getIsVerified(),
			profileURL: "https://twitter.com/" + this.account.getUsername()
		}, this.token = TD.core.sha1([this.id].join(":")), this
	}, TD.services.ScheduledTweet.prototype.fromJSONObject = function(e) {
		if (this.id = e.id_str, this.text = e.text, this.state = e.state, this.createdAt = new Date(e.created_at_ms), this.created = TD.util.iso8601(this.createdAt), this.executeAt = new Date(e.execute_at_ms), this.timestamp = TD.util.iso8601(this.executeAt), this.autoPopulateReplyMetadata = e.auto_populate_reply_metadata, this.inReplyToStatusId = e.in_reply_to_status_id_str, this.excludedRecipientIds = e.exclude_reply_user_ids_str, this.retweetedStatusId = e.retweeted_status_id_str, this.mediaId = e.media_id, this.tweetCreateState = e.tweet_create_state, this.attachmentUrl = e.attachment_url, "failed" === this.state) {
			var t = o[this.tweetCreateState] || o.Unknown;
			this.reasonText = (0, s.default)("Tweet cannot be sent: {{reasonText}}", {
				reasonText: t
			})
		}
		this.account = TD.storage.accountController.getAccountFromId(e.user_id_str);
		var i = e.media_entities || {},
			a = (0, n.default)(i).map(function(e) {
				var t = i[e],
					n = t.sizes,
					s = t.media_url_https,
					r = t.media_type,
					a = t.video_info,
					o = n.find(function(e) {
						return "Medium" === e.type
					});
				return {
					id_str: e,
					url: s,
					type: r,
					media_url_https: s,
					video_info: a,
					sizes: {
						medium: {
							w: o.width,
							h: o.height
						}
					}
				}
			});
		return this._media = TD.services.TwitterMedia.getMediaFromEntities({
			media: a
		}, {
			isScheduled: !0
		}), this.user = {
			avatar: TD.util.transformTwitterAvatar(this.account.getProfileImageURL(), "mini"),
			screenName: this.account.getUsername(),
			emojifiedName: r.default.cleanWithEmoji(this.account.getName()),
			isProtected: this.account.getIsPrivate(),
			isVerified: this.account.getIsVerified(),
			profileURL: "https://twitter.com/" + this.account.getUsername()
		}, this.token = TD.core.sha1([this.id].join(":")), this
	}
}, function(e, t, i) {
	"use strict";
	var n = c(i(43)),
		s = c(i(0)),
		r = c(i(279)),
		a = i(207),
		o = c(i(6)),
		l = i(357);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function u(e) {
		this.token = e, this.id = e, this.updates = [], this.inReplyToStatus = void 0, this.thumbSizeClass = TD.services.TwitterMedia.thumbSizeClasses.medium
	}
	TD.services.ScheduledTweetGroup = u, u.prototype = new TD.services.ChirpBase, u.prototype.chirpType = TD.services.ChirpBase.SCHEDULED_TWEET_GROUP, u.prototype.addUpdate = function(e) {
		this.time || (this.time = TD.util.parseISO8601(e.timestamp), this.created = this.time, this.sortIndex = this.sortIndex = {
			value: -this.created.getTime(),
			type: "number"
		}), this.text = this.text || e.text, this.state = this.state || e.state, this._media = this._media || e._media, this.attachmentUrl = this.attachmentUrl || e.attachmentUrl, this.htmlText = this.htmlText || TD.util.transform(this.text), this.hasText = Boolean(this.text.length), this.autoPopulateReplyMetadata = this.autoPopulateReplyMetadata || e.autoPopulateReplyMetadata, this.inReplyToStatusId = this.inReplyToStatusId || e.inReplyToStatusId, this.excludedRecipientIds = this.excludedRecipientIds || e.excludedRecipientIds, this.retweetedStatusId = this.retweetedStatusId || e.retweetedStatusId, this.avatarURL = this.avatarURL || e.user.avatar, this.reasonText = this.reasonText || e.reasonText, this.updates.push(e)
	}, u.prototype.render = function() {
		try {
			return TD.ui.template.render("status/scheduled_tweet", {
				chirp: this,
				inStream: !0
			})
		} catch (e) {
			console.error(e)
		}
	}, u.prototype.getReplyContext = function() {
		if (!this.inReplyToStatusId) return "";
		if (!this.inReplyToStatus || !this.autoPopulateReplyMetadata) return o.default.render("compose/reply_info");
		var e = this.updates.map(function(e) {
				return e.account.getKey()
			}),
			t = (0, l.recipientsWithoutSelfMention)(this.inReplyToStatus.getReplyUsers(), e),
			i = r.default.getRecipientsToDisplay(t, this.excludedRecipientIds);
		return o.default.render("compose/reply_info", {
			recipients: i,
			recipientIds: t.map(function(e) {
				return e.id
			}).join(",")
		})
	}, u.prototype.renderInMediaGallery = function() {
		return TD.ui.template.render("status/scheduled_tweet", {
			chirp: this,
			withTweetActionsVisible: !0,
			inBox: !0
		})
	}, u.prototype.edit = function() {
		(0, s.default)(document).trigger("uiEditScheduledTweetGroup", {
			scheduledTweetGroup: this
		})
	}, u.prototype.destroy = function() {
		confirm("Are you sure you wish to delete this scheduled Tweet?") && (0, s.default)(document).trigger("uiDeleteScheduledTweetGroup", {
			scheduledTweetGroup: this
		})
	}, u.prototype.prettyTime = function() {
		return TD.util.prettyTimeString(this.time)
	}, u.prototype.formattedTime = function() {
		return (0, a.getFormattedDateTime)({
			time: this.time,
			fullMonth: !0
		})
	}, u.prototype.isOwnChirp = function() {
		return !0
	}, u.prototype.getSenders = function() {
		return (0, n.default)(this.updates, function(e) {
			return e.user.screenName
		})
	}, u.prototype.mediaPreviewSrc = function() {
		return this.url
	}, u.prototype.canEdit = function() {
		return !this.hasMedia() && TD.decider.hasAccessLevel("scheduler", "WRITE")
	}
}, function(e, t, i) {
	"use strict";
	TD.services.TweetDeckClient = function() {
		var e = {},
			t = TD.sync.tdapi;
		return e.type = "tweetdeck", e.statusMenuTemplate = "", e.getChirpsForFeed = function() {
			return TD.core.defer.succeed([])
		}, e.forgotPassword = function(e, i, n) {
			var s = {
					type: "DELETE",
					headers: {
						Authorization: "x-td-basic " + TD.core.base64.encode(e + ":junk")
					}
				},
				r = t.drequest("/password", s);
			return r.addCallback(function(t) {
				return {
					httpStatus: 200,
					email: e
				}
			}), r.addErrback(function(t) {
				return {
					httpStatus: t.number,
					message: t.message,
					data: t.req.responseJSON,
					email: e
				}
			}), r
		}, e
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.services.DataminrAlert = function(e) {
		this.account = e
	}, TD.services.DataminrAlert.prototype = new TD.services.TwitterStatus, TD.services.DataminrAlert.prototype.chirpType = TD.services.ChirpBase.DATAMINR_ALERT, TD.services.DataminrAlert.prototype.dataminr = null, TD.services.DataminrAlert.prototype.fromJSONObject = function(e) {
		return TD.services.TwitterStatus.prototype.fromJSONObject.call(this, e.displayTweet), this.sortIndex = {
			value: e.eventTime,
			type: "milliseconds"
		}, this.dataminr = {}, e.alertType && (this.dataminr.alertType = e.alertType, this.dataminr.alertType.alertTypeSprite = this.getAlertTypeSpriteClass(e.alertType.id)), this.dataminr.created = new Date(e.eventTime), this.dataminr.createdAt = TD.util.prettyTimeOfDayString(this.dataminr.created), this.dataminr.eventVolume = e.eventVolume, this.dataminr.eventLocation = e.eventLocation, this.dataminr.publisherCategory = e.publisherCategory, this.dataminr.headerLabel = e.headerLabel, this.dataminr.expandAlertURL = e.expandAlertURL, this.dataminr.eventMapSmallImageURL = e.eventMapSmallURL, this.dataminr.eventMapLargeImageURL = e.eventMapLargeURL, this.dataminr.expandMapURL = e.expandMapURL, this.dataminr.relatedTerms = e.relatedTerms, this.dataminr.userTopHashtags = e.userTopHashtags, this.dataminr.userRecentImages = e.userRecentImages, this.dataminr.userTopHashtags.forEach(function(e) {
			e.text = e.text.replace(/^#?/, "#")
		}), e.publisherCategory.shortName && (this.dataminr.publisherCategory.shortName = e.publisherCategory.shortName.toLowerCase()), this.dataminr.relatedTerms.forEach(this.augmentWithQueryTermAndTwitterSearchUrl), this.dataminr.userTopHashtags.forEach(this.augmentWithQueryTermAndTwitterSearchUrl), this.dataminr.allRelatedTermsQuery = this.getQueryStringForAllRelatedTerms(), this.dataminr.anyRelatedTermsQuery = this.getQueryStringForAnyRelatedTerms(), this.dataminr.allRelatedTermsTwitterUrl = TD.net.util.addURLParam("https://twitter.com/search", "q", this.dataminr.allRelatedTermsQuery), this.dataminr.anyRelatedTermsTwitterUrl = TD.net.util.addURLParam("https://twitter.com/search", "q", this.dataminr.anyRelatedTermsQuery), this
	}, TD.services.DataminrAlert.prototype.getAlertTypeSpriteClass = function(e) {
		var t;
		switch (e) {
			case "urgentUpdate":
				t = "sprite-dataminr-plus";
				break;
			case "flash":
				t = "sprite-flash";
				break;
			case "momentum":
				t = "sprite-dataminr-momentum-dot";
				break;
			default:
				t = "sprite-dataminr-dot"
		}
		return t
	}, TD.services.DataminrAlert.prototype.augmentWithQueryTermAndTwitterSearchUrl = function(e) {
		e.query = -1 !== e.text.indexOf(" ") ? '"' + e.text + '"' : e.text, e.twitterUrl = TD.net.util.addURLParam("https://twitter.com/search", "q", e.query)
	}, TD.services.DataminrAlert.prototype.getQueryStringForAnyRelatedTerms = function() {
		return this.dataminr.relatedTerms.map(function(e) {
			return e.query
		}).join(" OR ")
	}, TD.services.DataminrAlert.prototype.getQueryStringForAllRelatedTerms = function() {
		return this.dataminr.relatedTerms.map(function(e) {
			return e.query
		}).join(" ")
	}, TD.services.DataminrAlert.prototype.render = function(e) {
		e = e || {};
		var t = TD.settings.getDisplaySensitiveMedia();
		return TD.ui.template.render("status/dataminr_in_stream", {
			chirp: this,
			withTweetActions: !0,
			withFooter: !0,
			withAvatar: !0,
			withDragHandle: !0,
			withMediaPreview: !0,
			isMediaPreviewOff: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_OFF,
			isMediaPreviewSmall: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_SMALL,
			isMediaPreviewLarge: e.mediaPreviewSize === TD.vo.Column.MEDIA_PREVIEW_SIZE_LARGE,
			mediaPreviewSrc: function() {
				return this.getMediaSrcForPreviewSize(e.mediaPreviewSize)
			},
			renderQuoted: function() {
				return this.renderQuotedTweet(e)
			},
			thumbSizeClass: TD.services.TwitterMedia.thumbSizeClasses[e.mediaPreviewSize],
			isPossiblySensitive: this.getRelatedTweet().possiblySensitive && !t,
			withLinebreaks: !0
		})
	}, TD.services.DataminrAlert.prototype.getNotificationData = function() {
		var e = [TD.ui.template.toHtml("@{{username}}{{#categoryName}} ({{categoryName}}){{/categoryName}}", {
			username: this.user.screenName,
			categoryName: this.dataminr.publisherCategory && this.dataminr.publisherCategory.name
		}), (0, r.default)("{{count}} followers", {
			count: TD.util.prettyNumber(this.user.followersCount, {
				noNegativeNumbers: !0
			})
		}), (0, r.default)("{{count}} Tweets", {
			count: TD.util.prettyNumber(this.user.statusesCount, {
				noNegativeNumbers: !0
			})
		})];
		return {
			title: this.text,
			text: e.join(" • "),
			img: i(843)
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = x(i(331)),
		s = x(i(713)),
		r = x(i(9)),
		a = x(i(44)),
		o = x(i(122)),
		l = x(i(32)),
		c = x(i(2265)),
		u = x(i(132)),
		d = x(i(241)),
		h = x(i(55)),
		m = x(i(43)),
		f = x(i(88)),
		p = x(i(110)),
		g = x(i(99)),
		v = x(i(63)),
		T = x(i(13)),
		w = x(i(15)),
		b = x(i(48)),
		y = x(i(2)),
		_ = x(i(0)),
		C = x(i(2266)),
		S = i(37),
		D = x(i(284)),
		k = x(i(844)),
		E = x(i(193)),
		I = i(278),
		A = x(i(2267));

	function x(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.services.TwitterClient = function(e) {
		var t = this,
			i = this;
		this.type = "twitter", this.streamingActivity$ = S.activityStreaming$.subscribe(function(e) {
			t.streamActivity = e
		}), this.newSchedulingApi$ = S.tweetdeckScheduledNewApi$.subscribe(function(e) {
			t.newSchedulingApi = e
		}), this.conversations = new TD.services.Conversations(e, this), this.friends = {}, this.blocks = {}, this.mutes = {}, this.retweetBlocks = {}, this.publishQueue = {}, this.flushPending = !1, this.searches = [], this.customTimelines = [], this.defaultRequestCount = 40, this.logoutTimeout = 5e3, this.cacheReloadPeriod = 900, this.scheduledTasks = [], this.cachedScheduledGroups = [], this.cachedScheduledLastModifiedDate = new Date(0), this.FEED_TYPES = TD.controller.FeedPoller.FEED_TYPES, this.NETWORK_ACTIVITY_EVENT_TYPES = {
			favorite: !0,
			follow: !0,
			list_member_added: !0,
			list_created: !0,
			retweet: !0,
			quoted_tweet: !0
		}, this.oauth = TD.controller.auth.create("twitter", e), this.loadCaches(), this.scheduledTasks.push(TD.controller.scheduler.schedulePeriodicTask(this.cacheReloadPeriod, function() {
			TD.decider.get("disable_twitter_cache_reload") || this.loadCaches()
		}.bind(this))), this.getChirpsForFeed = function(e, t) {
			var i = new TD.core.defer.Deferred;
			return this.refreshFeed(e, i.callback.bind(i), i.errback.bind(i), t), i
		}, this.refreshFeed = function(e, t, n, s) {
			s = s || {};
			var r, a = e.bounds.lower,
				o = e.bounds.upper,
				l = s.poller.feed,
				c = s.feedType,
				u = s.metadata,
				d = s.forceFetch;
			if (TD.controller.feedManager.isContentStreaming(l) && !(o || d)) return TD.util.metric("api:client:refresh:is-content-streaming"), TD.util.metric("api:client:refresh:is-content-streaming:" + c), n(), this;
			var h = TD.storage.accountController.get(l.getAccountKey()).getIsVerified(),
				m = TD.controller.FeedPoller.NOTIFICATION_FEED_TYPES.includes(c),
				f = e.interval.from.finite,
				p = e.interval.to.finite,
				g = f && !p,
				v = f && p,
				T = !f && p;
			switch (TD.util.metric("api:client:refresh:request"), TD.util.metric("api:client:refresh:request:" + c), g && (TD.util.metric("api:client:refresh:poll"), TD.util.metric("api:client:refresh:poll:" + c), h && m && TD.util.metric("api:client:refresh:poll:" + c + ":verified")), v && (TD.util.metric("api:client:refresh:gapfill"), TD.util.metric("api:client:refresh:gapfill:" + c)), T && (TD.util.metric("api:client:refresh:infinitescroll"), TD.util.metric("api:client:refresh:infinitescroll:" + c)), c) {
				case this.FEED_TYPES.home:
					i.getHomeTimeline(a, o, null, t, n);
					break;
				case this.FEED_TYPES.direct:
					1 !== a && !o ? this.getDMUserUpdates(a, t, n) : this.getDMUserInbox(a, o, t, n);
					break;
				case this.FEED_TYPES.favorites:
					i.getFavoritesTimeline(a, u.id, o, 40, t, n);
					break;
				case this.FEED_TYPES.list:
					i.getListTimeline(u.listId, u.screenName, u.slug, a, o, null, t, n);
					break;
				case this.FEED_TYPES.customTimeline:
					i.get3NFTimeline({
						id: u.id,
						minPosition: a,
						maxPosition: o
					}, t, n);
					break;
				case this.FEED_TYPES.event:
				case this.FEED_TYPES.search:
					var w = u.baseQuery,
						b = u.searchFilterData,
						y = u.term,
						C = u.id,
						S = w || "",
						D = c === this.FEED_TYPES.event ? "entity_id:" + C + " " + S : w;
					if (D && b) {
						var k = new TD.vo.SearchFilter(b).getQueryString();
						r = [D, k].join(" "), (0, _.default)(document).trigger("dataSearchPoll", {
							baseFeedQuery: D,
							uiQuery: k
						})
					} else r = y;
					TD.decider.get("universal_search_timelines") ? i.getUniversalSearchTimeline(r, a, o, null, t, n) : i.getSearchTimeline(r, a, o, null, t, n);
					break;
				case this.FEED_TYPES.usertweets:
					i.getProfileTimeline(u.id, 40, a, o, t, n);
					break;
				case this.FEED_TYPES.usertimeline:
					i.getUserTimeline(u.id, a, o, null, t, n);
					break;
				case this.FEED_TYPES.mentions:
					i.getMentionsTimeline({
						sinceID: a,
						maxID: o,
						count: null,
						following: u.usersIFollowFilter
					}, t, n);
					break;
				case this.FEED_TYPES.interactions:
					i.getInteractionsTimeline({
						minID: a,
						maxID: o,
						count: 40,
						following: u.usersIFollowFilter
					}, t, n);
					break;
				case this.FEED_TYPES.networkactivity:
					i.getNetworkActivityTimeline(a, o, 40, t, n);
					break;
				case this.FEED_TYPES.scheduled:
					TD.decider.hasAccessLevel("scheduler", "READ_BACKGROUND") && i.getScheduledGroups({
						since_execute_at: o
					}, {
						forceFetch: d
					}).addCallbacks(t, n);
					break;
				case this.FEED_TYPES.dataminr:
					i.getDataminrAlerts(a, o, s.metadata.watchlist.id, t, n);
					break;
				case this.FEED_TYPES.livevideo:
					i.getLiveVideoTimeline({
						id: u.id,
						maxID: o,
						minID: a,
						timelineId: u.timelineId
					}, t, n);
					break;
				default:
					n()
			}
			return this
		}
	}, TD.services.TwitterClient.prototype.API_BASE_URL = [TD.config.twitter_api_base, TD.config.twitter_api_version, ""].join("/"), TD.services.TwitterClient.prototype.URT_BASE_URL = TD.config.twitter_api_base + "/2/", TD.services.TwitterClient.prototype.makeTwitterCall = function(e, t, i, n, s, r, a) {
		s = s || function() {}, r = r || function() {};
		var o = this.request(e, {
			method: i,
			params: t,
			processor: n,
			feedType: a
		});
		return o.addCallbacks(function(e) {
			s(e.data)
		}, function(e) {
			r(e.req, "", e.msg, e.req.errors)
		}), o
	}, TD.services.TwitterClient.prototype.request = function(e, t) {
		if (!e) throw Error("Request needs a URL");
		if ("string" != typeof e) throw Error("Request URL must be a string");
		var i = "DELETE" === (t = (0, b.default)(t || {}, {
			method: "GET",
			handleSuccess: !0,
			handleError: !0
		})).method ? {} : {
			cards_platform: "Web-13",
			include_entities: 1,
			include_user_entities: 1,
			include_cards: 1,
			send_error_codes: 1,
			tweet_mode: "extended",
			include_ext_alt_text: !0,
			include_reply_count: !0
		};
		if (t.params = (0, b.default)(t.params || {}, i), t.headers = (0, b.default)(t.headers || {}, {}), t.account = this.oauth.account, t.processor && "function" != typeof t.processor) throw new Error("Request processor must be a function");
		var n = TD.net.ajax.request(e, t);
		return n.addCallbacks(function(i) {
			return D.default.processSuccessResponse(e, t, i, this)
		}.bind(this), function(i) {
			D.default.processErrorResponse(e, t, i, this.oauth.account)
		}.bind(this)), n
	}, TD.services.TwitterClient.prototype.loadCaches = function() {
		this.getListOwnerships(null, function(e) {
			(0, w.default)(e, TD.cache.lists.add)
		}), this.getListSubscriptions(null, function(e) {
			(0, w.default)(e, TD.cache.lists.add)
		}), this.getSavedSearches(function(e) {
			this.searches = e
		}.bind(this)), this.getCustomTimelines(this.oauth.account.getUserID(), null, function(e) {
			this.customTimelines = e
		}.bind(this)), this.populateBlockList(), this.populateMuteList(), this.populateRetweetBlockList()
	}, TD.services.TwitterClient.prototype.processTweet = function(e) {
		try {
			return new TD.services.TwitterStatus(this.oauth.account).fromJSONObject(e)
		} catch (t) {
			return D.default.logTweetProcessingError(e, t), null
		}
	}, TD.services.TwitterClient.prototype.processDataminrAlert = function(e) {
		return new TD.services.DataminrAlert(this.oauth.account).fromJSONObject(e)
	}, TD.services.TwitterClient.prototype.deleteMessage = function(e) {
		var t = this.conversations.deleteMessageByIdAndReturnChangedConversations(e);
		this.publishChirpsInternal("publish", "direct", t)
	}, TD.services.TwitterClient.prototype.processPlaces = function(e) {
		return e.result.places
	}, TD.services.TwitterClient.prototype.processTimeline = function(e) {
		var t = this,
			i = (0, T.default)(e, "globalObjects.tweets"),
			n = (0, T.default)(e, "globalObjects.users"),
			s = (0, T.default)(e, "timeline.instructions"),
			r = !(0, v.default)(i);
		if (r && (e = (0, g.default)(i).map(function(e) {
				var t = n[e.user_id_str];
				return (0, p.default)(e, {
					user: t
				})
			})), !e.length) return [];
		var a = e.reduce(function(e, i) {
			var n = i.sender ? t.processDM(i) : t.processTweet(i);
			return n ? e.concat([n]) : e
		}, []);
		return r ? {
			tweets: a,
			instructions: s
		} : a
	}, TD.services.TwitterClient.prototype.process3NFTimeline = function(e) {
		var t = e.objects || e.twitter_objects,
			i = this.hydrateTimeline(e.response.timeline, t);
		return i.length && e.response.position ? (i[0].cursor = e.response.position.max_position, i[i.length - 1].cursor = e.response.position.min_position) : i.length && e.response.cursor && (i[0].cursor = e.response.cursor.top, i[i.length - 1].cursor = e.response.cursor.bottom), i
	}, TD.services.TwitterClient.prototype.processLiveVideoEvent = function(e) {
		if (e.objects || e.twitter_objects) return e.twitter_objects.events
	}, TD.services.TwitterClient.prototype.hydrateTimeline = function(e, t) {
		return e.map(function(e) {
			try {
				var i = e.tweet.id_str || e.tweet.id,
					n = this.hydrateTweet(t.tweets[i], t),
					s = this.processTweet(n)
			} catch (e) {
				return null
			}
			return e.tweet.sort_index && (s.sortIndex = {
				value: e.tweet.sort_index,
				type: "numericString"
			}), s
		}, this).filter(Boolean)
	}, TD.services.TwitterClient.prototype.hydrateTweet = function(e, t) {
		if (!e || !e.id_str) return null;
		var i = e.id_str;
		return (e = (0, f.default)(t.tweets[i] || e)).user = this.hydrateUser(e.user, t), ["retweeted_status", "quoted_status"].forEach(function(i) {
			e[i] = this.hydrateTweet(e[i], t)
		}, this), e
	}, TD.services.TwitterClient.prototype.hydrateUser = function(e, t) {
		if (!e || !e.id_str) return null;
		var i = e.id_str;
		return (e = (0, f.default)(t.users[i] || e)).status = null, e
	}, TD.services.TwitterClient.prototype.processList = function(e) {
		return new TD.services.TwitterList(this.oauth.account).fromJSONObject(e)
	}, TD.services.TwitterClient.prototype.processCustomTimeline = function(e) {
		return new TD.services.CustomTimeline(this.oauth.account).fromJSONObject(e)
	}, TD.services.TwitterClient.prototype.process3NFCustomTimeline = function(e) {
		var t = e.objects.timelines[e.response.timeline_id];
		return t.id = e.response.timeline_id, t.user = e.objects.users[t.user_id], this.processCustomTimeline(t)
	}, TD.services.TwitterClient.prototype.process3NFCustomTimelines = function(e) {
		return e.response.results.map(function(t) {
			var i = e.objects.timelines[t.timeline_id];
			return i.id = t.timeline_id, i.user = e.objects.users[i.user_id], this.processCustomTimeline(i)
		}.bind(this))
	}, TD.services.TwitterClient.prototype.processLists = function(e) {
		return (0, m.default)(e, (0, h.default)(this.processList, this))
	}, TD.services.TwitterClient.prototype.processUser = function(e) {
		return new TD.services.TwitterUser(this.oauth.account).fromJSONObject(e)
	}, TD.services.TwitterClient.prototype.processDeletedUser = function(e) {
		return new TD.services.TwitterDeletedUser(this.oauth.account, e)
	}, TD.services.TwitterClient.prototype.processUsers = function(e) {
		for (var t = [], i = 0; i < e.length; i++) t.push(this.processUser(e[i]));
		return t
	}, TD.services.TwitterClient.prototype.processActions = function(e) {
		for (var t = [], i = 0; i < e.length; i++) {
			var n = e[i];
			if (n.action === TD.services.TwitterAction.LIST_MEMBER_ADDED && n.targets_size > 1 && n.target_objects_size > 1) {
				var s = new TD.services.TwitterActionMultiListMemberAdded(this.oauth.account);
				s.fromJSONObject(n, [n], !1), t.push(s)
			} else {
				var r = TD.services.TwitterAction.processRESTAction(n, this.oauth.account);
				r && (t = t.concat(r))
			}
		}
		return t
	}, TD.services.TwitterClient.prototype.showUser = function(e, t, i, n) {
		var s = {};
		e ? s.user_id = e : s.screen_name = t, this.makeTwitterCall(this.API_BASE_URL + "users/show.json", s, "GET", this.processUser, i, n)
	}, TD.services.TwitterClient.prototype.getUsersByIds = function(e, t, i) {
		var n = {
			user_id: e.join(",")
		};
		this.makeTwitterCall(this.API_BASE_URL + "users/lookup.json", n, "POST", this.processUsers, t, i)
	}, TD.services.TwitterClient.prototype.followUser = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "friendships/create.json", {
			screen_name: e
		}, "POST", this.processUser, t, i)
	}, TD.services.TwitterClient.prototype.unfollowUser = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "friendships/destroy.json", {
			screen_name: e
		}, "POST", this.processUser, t, i)
	}, TD.services.TwitterClient.prototype.typeaheadSearch = function(e, t, i) {
		if (!e.query && !e.prefetch) throw new Error("Typeahead API needs a query");
		this.makeTwitterCall(this.API_BASE_URL + "search/typeahead.json", {
			q: e.query,
			count: e.count || 10,
			prefetch: !!e.prefetch
		}, "GET", null, function(i) {
			t(i, e)
		}, i)
	}, TD.services.TwitterClient.prototype.userSearch = function(e, t, i) {
		var n = this;
		if(e.startsWith('!')) {
			this.makeTwitterCall(this.API_BASE_URL + "users/show.json", {
				screen_name: e.slice(1)
			}, "GET", function(t) {
				t = [t];
				var i, s, r = e.toLowerCase();
				for (t = n.processUsers(t), i = 0; i < t.length; i++)
					if ((s = t[i]).screenName.toLowerCase() == r && 0 !== i) {
						t.splice(i, 1), t = [s].concat(t);
						break
					} return t
			}, t, i)
		} else {
			this.makeTwitterCall(this.API_BASE_URL + "users/search.json", {
				q: e
			}, "GET", function(t) {
				var i, s, r = e.toLowerCase();
				for (t = n.processUsers(t), i = 0; i < t.length; i++)
					if ((s = t[i]).screenName.toLowerCase() == r && 0 !== i) {
						t.splice(i, 1), t = [s].concat(t);
						break
					} return t
			}, t, i)
		}
	}, TD.services.TwitterClient.prototype.getRetweetedBy = function(e, t, i, n, s) {
		var r = {
			count: t || 12,
			page: i || 1
		};
		this.makeTwitterCall(this.API_BASE_URL + "statuses/" + e + "/retweeted_by.json", r, "GET", this.processUsers, n, s)
	}, TD.services.TwitterClient.prototype.showFriendship = function(e, t, i, n, s) {
		var r = {
			source_id: e
		};
		null !== t ? r.target_id = t : null !== i && (r.target_screen_name = i), this.makeTwitterCall(this.API_BASE_URL + "friendships/show.json", r, "GET", null, n, s)
	}, TD.services.TwitterClient.prototype.showFriendshipForScreenName = function(e, t, i, n) {
		this.makeTwitterCall(this.API_BASE_URL + "friendships/show.json", {
			source_id: e,
			target_screen_name: t
		}, "GET", null, i, n)
	}, TD.services.TwitterClient.prototype.blockUser = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "blocks/create.json", {
			screen_name: e
		}, "POST", this.processUser, t, i)
	}, TD.services.TwitterClient.prototype.unblockUser = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "blocks/destroy.json", {
			screen_name: e
		}, "POST", this.processUser, t, i)
	}, TD.services.TwitterClient.prototype.muteUser = function(e) {
		return this.request(this.API_BASE_URL + "mutes/users/create.json", {
			method: "POST",
			params: {
				user_id: e
			},
			processor: this.processUser
		})
	}, TD.services.TwitterClient.prototype.unmuteUser = function(e) {
		return this.request(this.API_BASE_URL + "mutes/users/destroy.json", {
			method: "POST",
			params: {
				user_id: e
			},
			processor: this.processUser
		})
	}, TD.services.TwitterClient.prototype.muteConversation = function(e) {
		return this.request(this.API_BASE_URL + "mutes/conversations/create.json", {
			method: "POST",
			params: {
				tweet_id: e
			}
		})
	}, TD.services.TwitterClient.prototype.unmuteConversation = function(e) {
		return this.request(this.API_BASE_URL + "mutes/conversations/destroy.json", {
			method: "POST",
			params: {
				tweet_id: e
			}
		})
	}, TD.services.TwitterClient.prototype.blockAndReportUser = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "users/report_spam.json", {
			screen_name: e
		}, "POST", this.processUser, t, i)
	}, TD.services.TwitterClient.prototype.reportDMSpam = function(e, t, i) {
		var n = e.reportType,
			s = e.blockUser,
			r = e.dmId,
			a = e.conversationId,
			o = {
				report_as: n,
				block_user: s
			};
		r ? o.dm_id = r : a && (o.conversation_id = a);
		var l = TD.net.util.addURLParameters(this.API_BASE_URL + "direct_messages/report_spam.json", o);
		this.makeTwitterCall(l, {}, "POST", null, t, i)
	}, TD.services.TwitterClient.prototype.flagTweet = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "statuses/flag_possibly_sensitive.json", {
			id: e
		}, "POST", null, t, i)
	}, TD.services.TwitterClient.prototype.getList = function(e, t, i, n, s) {
		var r = {};
		e ? r.list_id = e : (r.slug = i, r.owner_screen_name = t), this.makeTwitterCall(this.API_BASE_URL + "lists/show.json", r, "GET", this.processList, n, s)
	}, TD.services.TwitterClient.prototype.createList = function(e, t, i, n, s) {
		var r = {
			name: e,
			description: t || "",
			mode: i ? "private" : "public"
		};
		this.makeTwitterCall(this.API_BASE_URL + "lists/create.json", r, "POST", this.processList, function(e) {
			TD.cache.lists.add(e), n(e), TD.controller.stats.listCreated()
		}, s)
	}, TD.services.TwitterClient.prototype.updateList = function(e, t, i, n, s, r) {
		var a = {
			list_id: e,
			name: t,
			description: i || "",
			mode: n ? "private" : "public"
		};
		this.makeTwitterCall(this.API_BASE_URL + "lists/update.json", a, "POST", this.processList, function(e) {
			TD.cache.lists.add(e), s(e), TD.controller.stats.listUpdated()
		}, r)
	}, TD.services.TwitterClient.prototype.destroyList = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "lists/destroy.json", {
			list_id: e
		}, "POST", this.processList, function(e) {
			TD.cache.lists.purge(e.id), t(e), TD.controller.stats.listDeleted()
		}, i)
	}, TD.services.TwitterClient.prototype.getListMembers = function(e, t, i) {
		var n = this,
			s = {
				list_id: e.id,
				skip_status: 1,
				cursor: e.cursor ? e.cursor : -1,
				count: e.count || 20
			};
		this.makeTwitterCall(this.API_BASE_URL + "lists/members.json", s, "GET", null, function(e) {
			e.users = n.processUsers(e.users), t(e)
		}, i)
	}, TD.services.TwitterClient.prototype.subscribeToList = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "lists/subscribers/create.json", {
			list_id: e
		}, "POST", this.processList, function(e) {
			TD.cache.lists.add(e), t(e)
		}, i)
	}, TD.services.TwitterClient.prototype.addUserToList = function(e, t, i, n) {
		this.makeTwitterCall(this.API_BASE_URL + "lists/members/create.json", {
			screen_name: t,
			list_id: e
		}, "POST", this.processList, function(e) {
			TD.cache.lists.add(e), i(e)
		}, n)
	}, TD.services.TwitterClient.prototype.addUsersToList = function(e, t, i, n) {
		this.makeTwitterCall(this.API_BASE_URL + "lists/members/create_all.json", {
			screen_name: t.join(","),
			list_id: e
		}, "POST", this.processList, function(e) {
			TD.cache.lists.add(e), i(e)
		}, n)
	}, TD.services.TwitterClient.prototype.removeUserFromList = function(e, t, i, n) {
		this.makeTwitterCall(this.API_BASE_URL + "lists/members/destroy.json", {
			screen_name: t,
			list_id: e
		}, "POST", this.processList, function(e) {
			TD.cache.lists.add(e), i(e)
		}, n)
	}, TD.services.TwitterClient.prototype.getBlockIDs = function(e, t, i) {
		var n = {
			stringify_ids: !0,
			cursor: e || -1
		};
		this.makeTwitterCall(this.API_BASE_URL + "blocks/ids.json", n, "GET", null, t, i)
	}, TD.services.TwitterClient.prototype.getMuteIDs = function(e) {
		var t = {
			stringify_ids: !0,
			cursor: e || "-1"
		};
		return this.request(this.API_BASE_URL + "mutes/users/ids.json", {
			method: "GET",
			params: t
		})
	}, TD.services.TwitterClient.prototype.getNoRetweetIDs = function(e, t) {
		this.makeTwitterCall(this.API_BASE_URL + "friendships/no_retweets/ids.json", null, "GET", null, e, t)
	}, TD.services.TwitterClient.prototype.getTweetSummary = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "statuses/" + e + "/activity/summary.json", {
			stringify_ids: 1
		}, "GET", null, t, i)
	}, TD.services.TwitterClient.prototype.getEmbeddedTweet = function(e, t, i, n, s, r) {
		var a;
		if (!e) throw new Error("getEmbeddedTweet: tweetID is a required parameter");
		a = {
			id: e,
			partner: "tweetdeck"
		}, t && (a.hide_thread = t), i && (a.hide_media = i), n && (a.maxwidth = n), this.makeTwitterCall(this.API_BASE_URL + "statuses/oembed.json", a, "GET", null, s, r)
	}, TD.services.TwitterClient.prototype.translateTweet = function(e, t, i, n) {
		var s;
		if (!e) throw new Error("translateTweet: tweetID is a required parameter");
		if (!t) throw new Error("translateTweet: destLang is a required parameter");
		s = {
			id: e,
			dest: t,
			use_display_text: !0
		}, this.makeTwitterCall(this.API_BASE_URL + "translations/show.json", s, "GET", null, i, n)
	}, TD.services.TwitterClient.prototype.getFollowingFollowersOf = function(e, t, i) {
		var n;
		if (!e) throw new Error("getFollowingFollowersOf: screenName is a required parameter");
		n = {
			screen_name: e
		}, this.makeTwitterCall(this.API_BASE_URL + "friends/following/list.json", n, "GET", null, t, i)
	}, TD.services.TwitterClient.prototype.getHomeTimeline = function(e, t, i, n, s) {
		this.getTimeline("statuses/home_timeline.json", e, t, i, n, s, {}, this.FEED_TYPES.home)
	}, TD.services.TwitterClient.prototype.getUserTimeline = function(e, t, i, n, s, r) {
		var a = {
			user_id: e
		};
		this.getTimeline("statuses/following_timeline.json", t, i, n, s, r, a, this.FEED_TYPES.usertimeline)
	}, TD.services.TwitterClient.prototype.getMentionsTimeline = function(e, t, i) {
		var n = e.sinceID,
			s = e.maxID,
			r = e.count,
			a = {};
		e.following && (a.filters = "following"), this.getTimeline("statuses/mentions_timeline.json", n, s, r, t, i, a, this.FEED_TYPES.mentions)
	}, TD.services.TwitterClient.prototype.getInteractionsTimeline = function(e, t, i) {
		var n = e.minID,
			s = e.maxID,
			r = e.count,
			a = {
				model_version: 7
			};
		e.following && (a.filters = "following");
		this.getActivityTimeline("activity/about_me.json", n, s, r, function(e) {
			e = e.filter(function(e) {
				return !e.isListAction || !TD.decider.get("notification_disable_list_events")
			}), t(e)
		}, i, a, null)
	}, TD.services.TwitterClient.prototype.getNetworkActivityTimeline = function(e, t, i, n, s) {
		this.getActivityTimeline("activity/by_friends.json", e, t, i, n, s, {}, this.FEED_TYPES.networkactivity)
	}, TD.services.TwitterClient.prototype.getActivityTimeline = function(e, t, i, n, s, r, a, o) {
		a = a || {}, i && (a.max_id = i), Number(t) > 1 && (a.since_id = t), a.count = n || this.defaultRequestCount, a.skip_aggregation = !0, this.makeTwitterCall(this.API_BASE_URL + e, a, "GET", this.processActions, s, r, o)
	}, TD.services.TwitterClient.prototype.getDMUserInbox = function(e, t, i, n) {
		var s = {
			max_conv_count: 20,
			include_groups: !0
		};
		e && 1 !== e && (s.min_id = e), t && (s.max_id = t);
		var r = 1 === e;
		this.makeTwitterCall(this.API_BASE_URL + "dm/user_inbox.json", s, "GET", this.conversations.processUserUpdates.bind(this.conversations, r), i, n, this.FEED_TYPES.direct)
	}, TD.services.TwitterClient.prototype.getDMUserUpdates = function(e, t, i) {
		var n = {
			cursor: e,
			include_groups: !0,
			ext: "altText"
		};
		this.makeTwitterCall(this.API_BASE_URL + "dm/user_updates.json", n, "GET", this.conversations.processUserUpdates.bind(this.conversations, !1), t, i, this.FEED_TYPES.direct)
	}, TD.services.TwitterClient.prototype.getDmConversation = function(e, t) {
		var i = this.request(this.API_BASE_URL + "dm/conversation/" + e + ".json", {
			params: t
		});
		return i.addCallback(this.getDataFromDeferred), i.addCallback(this.conversations.processUserUpdates.bind(this.conversations, !1)), i
	}, TD.services.TwitterClient.prototype.getFavoritesTimeline = function(e, t, i, n, s, r) {
		var a = {};
		t && (a.user_id = t), this.getTimeline("favorites/list.json", e, i, n, s, r, a, this.FEED_TYPES.favorites)
	}, TD.services.TwitterClient.prototype.getListTimeline = function(e, t, i, n, s, r, a, o) {
		var l = {
			include_rts: 1
		};
		e ? l.list_id = e : (l.owner_screen_name = t, l.slug = i), this.getTimeline("lists/statuses.json", n, s, r, a, o, l, this.FEED_TYPES.list)
	}, TD.services.TwitterClient.prototype.getProfileTimeline = function(e, t, i, n, s, r) {
		var a = {
			include_rts: 1
		};
		e && e !== this.oauth.account.getUserID() && (a.user_id = e), this.getTimeline("statuses/user_timeline.json", i, n, t, s, r, a, this.FEED_TYPES.usertweets)
	}, TD.services.TwitterClient.prototype.getSearchTimeline = function(e, t, i, n, s, r) {
		var a, o = {
				count: n || this.defaultRequestCount,
				q: e,
				result_type: "recent"
			},
			l = this;
		a = l.API_BASE_URL + "search/tweets.json";
		i && (o.max_id = i), t && 1 != t && (o.since_id = t), this.makeTwitterCall(a, o, "GET", function(e) {
			return l.processTimeline(e.statuses)
		}, s, function(e, t, i) {
			e && e.errors && e.errors[0] === k.default.INVALID_SEARCH_QUERY ? s([]) : r.apply(null, arguments)
		}, this.FEED_TYPES.search)
	}, TD.services.TwitterClient.prototype.getUniversalSearchTimeline = function(e, t, i, n, s, r) {
		var a, o = {
				q: e,
				count: n || this.defaultRequestCount,
				modules: "status",
				result_type: "recent",
				pc: !1,
				ui_lang: TD.languages.getSystemLanguageCode()
			},
			l = this;
		a = l.API_BASE_URL + "search/universal.json";
		i && (TD.decider.get("universal_search_timelines_by_id") ? o.q += " max_id:" + i : o.until_time = i), t && 1 != t && (TD.decider.get("universal_search_timelines_by_id") ? o.q += " since_id:" + t : o.since_time = t), this.makeTwitterCall(a, o, "GET", function(e) {
			var t = [];
			return e.modules.forEach(function(e) {
				e.status && t.push(e.status.data)
			}), l.processTimeline(t)
		}, s, function(e, t, i) {
			e && e.errors && e.errors[0] === k.default.INVALID_SEARCH_QUERY ? s([]) : r.apply(null, arguments)
		}, this.FEED_TYPES.search)
	}, TD.services.TwitterClient.prototype.getDataminrAlerts = function(e, t, i, n, s) {
		(0, _.default)(document).trigger("uiNeedsDataminrAlerts", {
			params: {
				start_time: e,
				end_time: t,
				lists: [i]
			},
			success: function(e) {
				this.inflateDataminrAlerts(e, n, s)
			}.bind(this),
			error: s
		})
	}, TD.services.TwitterClient.prototype.inflateDataminrAlerts = function(e, t, i) {
		var n = e.map(function(e) {
			return e.displayTweet.id_str
		});
		this.lookupTweets(n, function(i) {
			var n = i.reduce(function(e, t) {
					return e[t.id_str] = t, e
				}, {}),
				s = e.filter(function(e) {
					return !!n[e.displayTweet.id_str]
				}).map(function(e) {
					return e.displayTweet = n[e.displayTweet.id_str], this.processDataminrAlert(e)
				}.bind(this));
			t(s)
		}.bind(this), i, null)
	}, TD.services.TwitterClient.prototype.getTimeline = function(e, t, i, n, s, r, a, o) {
		var l = {
				count: n || this.defaultRequestCount,
				include_my_retweet: 1
			},
			c = "";
		c = (0, d.default)(e, "https://") ? e : this.API_BASE_URL + e, t && (l.since_id = t), i && (l.max_id = i), a && (0, p.default)(l, a), this.makeTwitterCall(c, l, "GET", this.processTimeline, s, r, o)
	}, TD.services.TwitterClient.prototype.pendingConversation = {}, TD.services.TwitterClient.prototype.getConversation = function(e) {
		var t = this;
		if (!this.pendingConversation[e]) {
			this.pendingConversation[e] = !0;
			var i = this.URT_BASE_URL + "timeline/conversation/" + e + ".json";
			this.makeTwitterCall(i, {
				include_reply_count: !0
			}, "GET", this.processTimeline, function(i) {
				delete t.pendingConversation[e];
				var n = {
						ancestors: [],
						descendants: [],
						root: null
					},
					s = i.instructions[0],
					r = (0, T.default)(s, "addEntries.entries", []),
					a = !1;
				r.forEach(function(t, s) {
					var o = t.entryId,
						l = [];
					if (o.includes("conversationThread-")) {
						var c = (0, T.default)(t, "content.item.content.conversationThread.conversationComponents", []),
							d = (0, T.default)(t, "content.item.content.conversationThread.showMoreCursor", null);
						if (l = c.map(function(t, n) {
								var s = (0, T.default)(t, "conversationTweetComponent.tweet.id"),
									r = (0, u.default)(i.tweets, {
										id: s
									});
								if (!r) return null;
								if (r.setPositionInConversation(n), r.setNumberOfTweetsInConversation(c), r.setConversationRootId(e), r.setShowMoreCursor(d), r.isQuoteStatus) {
									var a = (0, u.default)(i.tweets, {
										id: r.quotedStatusId
									});
									r.setQuotedStatus(a)
								}
								return r
							}), d) {
							var h = (0, T.default)(d, "displayTreatment.actionText", "");
							l.push({
								showMore: !0,
								actionText: (0, y.default)(h)
							})
						}
					} else if (o.includes("tweet-")) {
						var m = o.replace("tweet-", ""),
							f = (0, u.default)(i.tweets, {
								id: m
							});
						if (!f) return null;
						if ("SelfThread" === (0, T.default)(t, "content.item.content.tweet.displayType") && f.setIsSelfThreadEnd(r, e), r.length > 2 && (f.setPositionInConversation(s), f.setNumberOfTweetsInConversation(r), f.setConversationRootId(e)), f.isQuoteStatus) {
							var p = (0, u.default)(i.tweets, {
								id: f.quotedStatusId
							});
							f.setQuotedStatus(p)
						}
						l = [f]
					} else o.includes("cursor-top-") && l.push({
						topCursor: !0
					});
					l.forEach(function(t) {
						t && (t.topCursor ? n.ancestors.unshift(t) : a ? n.descendants.push(t) : t.id === e ? (a = !0, n.root = t) : n.ancestors.push(t))
					})
				}), _.default.publish("/tweets/conversation/" + e, [n])
			}, function() {
				delete t.pendingConversation[e];
				_.default.publish("/tweets/conversation/" + e, [{
					ancestors: [],
					descendants: [],
					root: null
				}])
			})
		}
	}, TD.services.TwitterClient.prototype.destroy = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "statuses/destroy/:id.json".replace(":id", e), {}, "POST", this.processTweet, t, i)
	}, TD.services.TwitterClient.prototype.show = function(e, t, i) {
		this.makeTwitterCall(this.API_BASE_URL + "statuses/show.json", {
			id: e
		}, "GET", this.processTweet, t, i)
	}, TD.services.TwitterClient.prototype.lookupTweets = function(e, t, i, n) {
		this.makeTwitterCall(this.API_BASE_URL + "statuses/lookup.json", {
			id: e.join(",")
		}, "POST", void 0 !== n ? n : this.processTimeline, t, i)
	}, TD.services.TwitterClient.prototype.createCustomTimeline = function(e, t, i) {
		var n = {
				name: (e = e || {}).name || "New Collection",
				description: e.description || "",
				url: e.url || ""
			},
			s = function(e) {
				this.customTimelines.push(e), t(e), (0, _.default)(document).trigger("dataCustomTimelineCreateSuccess")
			}.bind(this);
		this.makeTwitterCall(this.API_BASE_URL + "collections/create.json", n, "POST", this.process3NFCustomTimeline, s, i)
	}, TD.services.TwitterClient.prototype.updateCustomTimeline = function(e, t, i, n) {
		var s = {
			id: e
		};
		"string" == typeof(t = t || {}).name && (s.name = t.name || "New Collection"), "string" == typeof t.description && (s.description = t.description || ""), "string" == typeof t.url && (s.url = t.url || "");
		var r = function(t) {
			TD.cache.names.updateCustomTimelineName(t.id, t.name), this.customTimelines = this.customTimelines.filter(function(t) {
				return t.id !== e
			}), this.customTimelines.push(t), i(t), (0, _.default)(document).trigger("dataCustomTimelineUpdateSuccess")
		}.bind(this);
		this.makeTwitterCall(this.API_BASE_URL + "collections/update.json", s, "POST", this.process3NFCustomTimeline, r, n)
	}, TD.services.TwitterClient.prototype.deleteCustomTimeline = function(e, t, i) {
		var n = {
				id: e
			},
			s = function(i) {
				this.customTimelines = this.customTimelines.filter(function(t) {
					return t.id !== e
				}), t(i), (0, _.default)(document).trigger("dataCustomTimelineDeleteSuccess")
			}.bind(this);
		this.makeTwitterCall(this.API_BASE_URL + "collections/destroy.json", n, "POST", null, s, i)
	}, TD.services.TwitterClient.prototype.getCustomTimelines = function(e, t, i, n) {
		var s = {
			count: 200
		};
		e && (s.user_id = e), t && (s.tweet_id = t), this.makeTwitterCall(this.API_BASE_URL + "collections/list.json", s, "GET", this.process3NFCustomTimelines, i, n)
	}, TD.services.TwitterClient.prototype.getCustomTimeline = function(e, t, i) {
		var n = {
			id: e
		};
		this.makeTwitterCall(this.API_BASE_URL + "collections/show.json", n, "GET", this.process3NFCustomTimeline, t, i)
	}, TD.services.TwitterClient.prototype.addOrMoveTweetToCustomTimeline = function() {
		var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
			i = this,
			n = arguments[1],
			s = arguments[2];
		if (!t.customTimelineId || !t.tweetId) throw Error("Required fields are missing");
		n = n || function() {}, s = s || function() {}, "move" === t.actionType ? e = this.moveTweetWithinCustomTimeline(t) : (e = this.addTweetToCustomTimeline(t)).addCallback(function(e) {
			if (i.didAddReturnDuplicateResponse(e)) throw Error("duplicate");
			return e
		}), e.addCallbacks(n, s)
	}, TD.services.TwitterClient.prototype.addTweetToCustomTimeline = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		arguments[1], arguments[2];
		if (!e.customTimelineId || !e.tweetId) throw Error("Required fields are missing");
		var t = {
			id: e.customTimelineId,
			tweet_id: e.tweetId
		};
		return e.relativeToId && !e.above && (t.relative_to = e.relativeToId, t.above = !1), this.request(this.API_BASE_URL + "collections/entries/add.json", {
			method: "POST",
			params: t
		}).addCallback(function(e) {
			return e.data
		})
	}, TD.services.TwitterClient.prototype.didAddReturnDuplicateResponse = function(e) {
		return !!(0, T.default)(e, "response.errors") && e.response.errors.map(function(e) {
			return e.reason
		}).includes("duplicate")
	}, TD.services.TwitterClient.prototype.moveTweetWithinCustomTimeline = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		if (!e.customTimelineId || !e.relativeToId || !e.relativeToId) throw Error("Required fields are missing");
		var t = {
			id: e.customTimelineId,
			tweet_id: e.tweetId,
			relative_to: e.relativeToId,
			above: e.above
		};
		return this.request(this.API_BASE_URL + "collections/entries/move.json", {
			method: "POST",
			params: t
		})
	}, TD.services.TwitterClient.prototype.removeTweetFromCustomTimeline = function(e, t, i, n) {
		i = i || function() {}, n = n || function() {};
		var s = {
			id: e,
			tweet_id: t
		};
		this.makeTwitterCall(this.API_BASE_URL + "collections/entries/remove.json", s, "POST", null, i, n)
	}, TD.services.TwitterClient.prototype.bulkAddToCustomTimeline = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
			t = arguments[1],
			i = arguments[2],
			n = e.tweetIdsToAdd.map(function(e) {
				return {
					op: "add",
					tweet_id: e
				}
			}),
			s = {
				id: e.customTimelineId,
				changes: n
			},
			r = this.API_BASE_URL + "collections/entries/curate.json",
			a = {
				params: s,
				headers: {
					"content-type": "application/json"
				},
				handleSuccess: !0,
				method: "POST",
				account: this.oauth.account
			},
			o = TD.net.ajax.request(r, a);
		return o.addCallbacks(function(e) {
			t(e.data)
		}, function(e) {
			i(e.req, "", e.msg, e.req.errors)
		}), o
	}, TD.services.TwitterClient.prototype.get3NFTimeline = function(e, t, i) {
		var n = {
			id: (e = e || {}).id
		};
		e.maxCount && (n.max_count = e.maxCount), e.minPosition && (n.min_position = e.minPosition), e.maxPosition && (n.max_position = e.maxPosition), this.makeTwitterCall(this.API_BASE_URL + "collections/entries.json", n, "GET", this.process3NFTimeline, t, i)
	}, TD.services.TwitterClient.prototype.getLiveEvents = function() {
		return this.request(this.API_BASE_URL + "live_video/1/events.json", {
			method: "GET"
		})
	}, TD.services.TwitterClient.prototype.getLiveVideoTimeline = function(e, t, i) {
		var n = {
			up_cursor: e.minID,
			down_cursor: e.maxID
		};
		e.timelineId && (n.timeline_id = e.timelineId), this.makeTwitterCall(this.API_BASE_URL + "live_video/1/" + e.id + "/timeline.json", n, "GET", this.process3NFTimeline, t, i)
	}, TD.services.TwitterClient.prototype.getScheduledTweets = function(e, t) {
		var i = this;
		if (e = e || {}, (0, b.default)(e, {
				count: 200,
				state: "scheduled,failed",
				since_execute_at: void 0,
				ascending: 1
			}), t = t || {}, (0, b.default)(t, {
				isPoll: !1,
				forceFetch: !1
			}), t.forceFetch && (this.cachedScheduledLastModifiedDate = new Date(0)), !e.since_execute_at) {
			var n = new Date;
			n.setMonth(n.getMonth() - 1), e.since_execute_at = ~~(n.getTime() / 1e3)
		}
		e = (0, a.default)(e).reduce(function(t, i) {
			return void 0 !== e[i] && null !== e[i] && (t[i] = e[i]), t
		}, {});
		var s = {};
		if (t.isPoll && (s["if-modified-since"] = this.cachedScheduledLastModifiedDate.toUTCString()), this.newSchedulingApi) return (0, I.graphqlRequest)((0, r.default)({}, A.default, {
			variables: {
				ascending: !0,
				min_execute_at_secs: e.since_execute_at,
				states: ["Scheduled", "Failed"],
				limit: e.count
			},
			account: this.oauth.account
		})).then(function(e) {
			return i.processScheduledTweetsFromStrato(e)
		});
		var o = this.request(this.API_BASE_URL + "schedule/status/list.json", {
			method: "GET",
			params: e,
			processor: this.processScheduledTweets,
			headers: s
		});
		return t.isPoll && o.addCallbackWith(this, this.cacheScheduledLastModifiedDate), o.addCallbackWith(this, this.getResultsFromDeferred), o
	}, TD.services.TwitterClient.prototype.getScheduledGroups = function(e, t) {
		var i = this;
		e = e || {}, t = t || {}, (0, b.default)(t, {
			forceFetch: !1,
			isPoll: !e.since_execute_at
		});
		var n = this.getScheduledTweets(e, t),
			s = void 0;
		return this.newSchedulingApi ? (s = new E.default.Deferred, n.then(function(e) {
			s.callback(e)
		})) : s = n, s.addCallbackWith(this, this.groupScheduledTweets), s.addCallbackWith(this, function(e) {
			var t = 0 === e.length;
			return (0, _.default)(document).trigger("dataThrottleFeed", {
				feedType: "scheduled",
				accountKey: this.oauth.account.getKey(),
				doThrottle: t
			}), TD.decider.hasAccessLevel("scheduler", "READ_VISIBLE") ? e : (e.forEach(function(e) {
				TD.controller.feedManager.deleteChirp(e.token)
			}), [])
		}), s.addCallback(TD.util.effect(function(e) {
			TD.decider.get("scheduler_hydrate_replies") && i.hydrateScheduledTweetReplyStatus(e)
		})), s
	}, TD.services.TwitterClient.prototype.hydrateScheduledTweetReplyStatus = function() {
		for (var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], i = t.filter(function(e) {
				return e.autoPopulateReplyMetadata
			}).map(function(e) {
				return e.inReplyToStatusId
			}).filter(Boolean), r = (0, s.default)(new n.default(i)); r.length;) {
			var a = r.slice(0, 100);
			r = r.slice(100), this.lookupTweets(a, function(i) {
				var n = (0, c.default)(i, "id"),
					s = t.filter(function(e) {
						var t = n[e.inReplyToStatusId],
							i = e.inReplyToStatus !== t;
						return e.inReplyToStatus = t, i
					});
				e.publishChirpsInternal("publish", "scheduled", s)
			})
		}
	}, TD.services.TwitterClient.prototype.cacheScheduledLastModifiedDate = function(e) {
		var t = e.xhr.getResponseHeader("last-modified");
		return t && (this.cachedScheduledLastModifiedDate = new Date(t)), e
	}, TD.services.TwitterClient.prototype.processScheduledTweetsFromStrato = function(e) {
		return (e && e.data && e.data.viewer && e.data.viewer.scheduled_tweet_list ? e.data.viewer.scheduled_tweet_list : []).map(this.processScheduledTweetFromStrato, this)
	}, TD.services.TwitterClient.prototype.processScheduledTweetFromStrato = function(e) {
		return (new TD.services.ScheduledTweet).fromStratoJSONObject(e)
	}, TD.services.TwitterClient.prototype.processScheduledTweets = function(e) {
		return (e = e || {}).results = e.results || [], {
			results: e.results.map(this.processScheduledTweet, this)
		}
	}, TD.services.TwitterClient.prototype.processScheduledTweet = function(e) {
		return (new TD.services.ScheduledTweet).fromJSONObject(e)
	}, TD.services.TwitterClient.prototype.groupScheduledTweets = function(e) {
		if (!e) return [];
		var t = Date.now(),
			i = function(e) {
				return e instanceof TD.services.ScheduledTweetGroup && "scheduled" === e.state && e.time < t
			};
		TD.storage.feedController.getAll().filter(function(e) {
			return "twitter" === e.getService() && "scheduled" === e.getType()
		}).forEach(function(e) {
			TD.controller.feedManager.getPoller(e.getKey()).removeWhere(i)
		});
		var n = {
				canceled: !0,
				completed: !0,
				dismissed: !0
			},
			s = e.reduce(function(e, t) {
				if (t.retweetedStatusId) return e;
				try {
					e[t.token] || (e[t.token] = new TD.services.ScheduledTweetGroup(t.token)), e[t.token].addUpdate(t)
				} catch (e) {
					console.log("Error processing scheduled update", t, e)
				}
				return e
			}, {});
		return (0, g.default)(s).filter(function(e) {
			var t = !n[e.state];
			return t || TD.controller.feedManager.deleteChirp(e.token), t
		})
	}, TD.services.TwitterClient.prototype.update = function(e, t, i, n, s, r, a) {
		var o = {
			status: e
		};
		o.in_reply_to_status_id = t, o.lat = i, o.long = n, o.place_id = s, this.makeTwitterCall(this.API_BASE_URL + "statuses/update.json", o, "POST", this.processTweet, r, a)
	}, TD.services.TwitterClient.prototype.getLists = function(e, t, i) {
		var n = {
			reverse: !0
		};
		e && (n.screen_name = e), this.makeTwitterCall(this.API_BASE_URL + "lists/list.json", n, "GET", this.processLists, t, i)
	}, TD.services.TwitterClient.prototype.getListMemberships = function(e, t, i, n) {
		var s = {},
			r = this;
		e && (s.screen_name = e), t && (s.filter_to_owned_lists = 1);
		this.makeTwitterCall(this.API_BASE_URL + "lists/memberships.json", s, "GET", function(e) {
			return r.processLists(e.lists)
		}, i, n)
	}, TD.services.TwitterClient.prototype.getListOwnerships = function(e, t, i) {
		var n = {
				count: 1e3
			},
			s = this;
		e && (n.screen_name = e), this.makeTwitterCall(this.API_BASE_URL + "lists/ownerships.json", n, "GET", function(e) {
			return s.processLists(e.lists)
		}, t, i)
	}, TD.services.TwitterClient.prototype.getListSubscriptions = function(e, t, i) {
		var n = {
				count: 1e3
			},
			s = this;
		e && (n.screen_name = e), this.makeTwitterCall(this.API_BASE_URL + "lists/subscriptions.json", n, "GET", function(e) {
			return s.processLists(e.lists)
		}, t, i)
	}, TD.services.TwitterClient.prototype.getSavedSearches = function(e, t) {
		this.makeTwitterCall(this.API_BASE_URL + "saved_searches/list.json", {}, "GET", null, e, t)
	}, TD.services.TwitterClient.prototype.favorite = function(e, t, i) {
		var n = this;
		this.makeTwitterCall(this.API_BASE_URL + "favorites/create.json", {
			id: e
		}, "POST", this.processTweet, function(e) {
			n.updateFavoriteInternal(e, !0), t(e)
		}, i)
	}, TD.services.TwitterClient.prototype.unfavorite = function(e, t, i) {
		var n = this;
		this.makeTwitterCall(this.API_BASE_URL + "favorites/destroy.json", {
			id: e
		}, "POST", this.processTweet, function(e) {
			n.updateFavoriteInternal(e, !1), t(e)
		}, i)
	}, TD.services.TwitterClient.prototype.destroyDM = function(e, t, i) {
		(0, _.default)(document).trigger("uiDeleteDm", {
			id: e,
			accountKey: this.oauth.account.getKey(),
			success: t,
			error: i
		})
	}, TD.services.TwitterClient.prototype.markMessagesAsRead = function(e, t, i, n) {
		var s = {
			last_message_id: e
		};
		t && (s.sender_id = t), this.makeTwitterCall(this.API_BASE_URL + "direct_messages/read.json", s, "POST", null, i, n)
	}, TD.services.TwitterClient.prototype.geoSearch = function(e, t, i, n, s, r, a) {
		var o = {};
		t && (o.lat = t), i && (o.long = i), n && (o.accuracy = n), e && (o.query = e), o.granularity = s || "neighborhood", this.makeTwitterCall(this.API_BASE_URL + "geo/search.json", o, "GET", this.processPlaces, r, a)
	}, TD.services.TwitterClient.prototype.updateFavoriteInternal = function(e, t) {
		(e = e.retweetedStatus ? e.retweetedStatus : e).setFavorite(t);
		var i = t ? "publish" : "remove";
		this.publishChirpsInternal(i, "favorites", [e])
	}, TD.services.TwitterClient.prototype.queueChirpsForDispatch = function(e, t) {
		this.publishQueue[e] = (this.publishQueue[e] || []).concat(t), this.flushPending || (this.flushPending = !0, (0, l.default)(function() {
			this.flushPending = !1, (0, a.default)(this.publishQueue).forEach(function(e) {
				var t = void 0,
					i = [];
				try {
					if (!(t = TD.controller.feedManager.getPoller(e))) return;
					var n = t.feed.getType(),
						s = "interactions" === n || "mentions" === n;
					if (s) return;
					i = this.publishQueue[e].filter(C.default.chirpPasses.bind(C.default, this.blocks)).filter(C.default.chirpPasses.bind(C.default, this.mutes)).filter(function(e) {
						return !(s && e.isListAction && TD.decider.get("notification_disable_list_events"))
					}), t.acceptStreamChirps(i)
				} catch (e) {
					var r = t ? t.feed.getType() : "unknown_feed_type",
						a = (0, o.default)(i.map(function(e) {
							return e.getChirpType()
						})),
						l = 1 === a.length ? a[0] : "unknown_chirp_type";
					(0, _.default)(document).trigger("metric", {
						key: "client:publish:error:" + r + ":" + l
					})
				} finally {
					delete this.publishQueue[e]
				}
			}.bind(this))
		}.bind(this)))
	}, TD.services.TwitterClient.prototype.publishChirpsInternal = function(e, t, i, n) {
		var s = TD.storage.Feed.generateKeyFor(this.oauth.account.getKey(), t, n);
		if ("publish" === e) this.queueChirpsForDispatch(s, i);
		else if ("remove" === e) {
			var r = TD.controller.feedManager.getPoller(s);
			r && (0, w.default)(i, function(e) {
				r.removeChirp(e.id)
			})
		}
	}, TD.services.TwitterClient.prototype.addIdToBlockList = function(e) {
		this.blocks[e] || (this.blocks[e] = !0, _.default.publish("/user/removeTweets", [e, this.oauth.account.getUserID()]))
	}, TD.services.TwitterClient.prototype.blockListNextCursor = -1, TD.services.TwitterClient.prototype.populateBlockList = function() {
		var e = function(t) {
			var i, n = t.ids;
			for (-1 === this.blockListNextCursor && (this.blocks = {}), i = 0; i < n.length; i++) this.addIdToBlockList(n[i]);
			t.next_cursor_str && "0" !== t.next_cursor_str ? this.blockListNextCursor = t.next_cursor_str : this.blockListNextCursor = -1, TD.decider.get("fetch_entire_blocklist") && -1 !== this.blockListNextCursor && this.getBlockIDs(this.blockListNextCursor, e)
		}.bind(this);
		this.getBlockIDs(this.blockListNextCursor, e)
	}, TD.services.TwitterClient.prototype.addIdToMuteList = function(e) {
		this.mutes[e] || (this.mutes[e] = !0, _.default.publish("/user/removeTweets", [e, this.oauth.account.getUserID()]))
	}, TD.services.TwitterClient.prototype.populateMuteList = function(e) {
		e = e || "-1";
		this.getMuteIDs(e).addCallbackWith(this, function(t) {
			var i = t.data;
			if ("-1" === e && (this.mutes = {}), i.ids.forEach(this.addIdToMuteList, this), i.next_cursor_str && "0" !== i.next_cursor_str) return this.populateMuteList(i.next_cursor_str)
		})
	}, TD.services.TwitterClient.prototype.populateRetweetBlockList = function() {
		this.getNoRetweetIDs(function(e) {
			var t;
			for (this.retweetBlocks = {}, t = 0; t < e.length; t++) this.retweetBlocks[e[t]] = !0
		}.bind(this))
	}, TD.services.TwitterClient.prototype.processDeleteChirpEvent = function(e) {
		e.status ? TD.controller.feedManager.deleteChirp(e.status.id_str) : e.direct_message ? this.deleteMessage(e.direct_message.id_str) : e.conversationId && this.conversations.deleteConversation(e.conversationId)
	}, TD.services.TwitterClient.prototype.getResultsFromDeferred = function(e) {
		var t = this.getDataFromDeferred(e);
		if (t && void 0 !== t.results) return t.results
	}, TD.services.TwitterClient.prototype.getDataFromDeferred = function(e) {
		if (e && void 0 !== e.data) return e.data;
		throw TypeError("deferred result is missing data")
	}, TD.services.TwitterClient.prototype.cleanUp = function() {
		this.scheduledTasks.forEach(function(e) {
			TD.controller.scheduler.removePeriodicTask(e)
		}), this.streamingActivity$ && this.streamingActivity$.unsubscribe(), this.newSchedulingApi$ && this.newSchedulingApi$.unsubscribe()
	}
}, , function(e, t, i) {
	"use strict";
	var n = {
		chirpPasses: function(e, t) {
			return t instanceof TD.services.TwitterStatus ? n.tweetPasses(e, t) : !(t instanceof TD.services.TwitterAction) || n.actionPasses(e, t)
		},
		userPasses: function(e, t) {
			return !t || !e[t.id]
		},
		tweetPasses: function(e, t) {
			return !t || n.userPasses(e, t.user) && n.tweetPasses(e, t.retweetedStatus) && n.tweetPasses(e, t.quotedTweet)
		},
		actionPasses: function(e, t) {
			return !t || n.userPasses(e, t.getCreator()) && t.getTargetUsers().every(n.userPasses.bind(n, e))
		}
	};
	e.exports = n
}, function(e, t) {
	e.exports = {
		queryId: "UDppj2K3dwXDD5Y6JOj1uQ",
		operationName: "FetchScheduledTweets"
	}
}, function(e, t, i) {
	"use strict";
	var n, s = u(i(85)),
		r = u(i(189)),
		a = u(i(2)),
		o = u(i(0)),
		l = i(37),
		c = u(i(25));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.ui.main = ((n = {}).init = function() {
		var e = (0, o.default)("body"),
			t = (0, o.default)(TD.ui.template.render("topbar/app_header", {
				searchInputClassName: "js-app-search-input app-search-input",
				searchInputPlaceholder: (0, a.default)("Search Twitter")
			})),
			i = (0, o.default)(TD.ui.template.render("app_container", {
				isMac: "osx" === TD.util.getOSName()
			})),
			c = t.find(".js-logo"),
			u = t.find(".js-beta-logo");
		l.tweetdeckBeta$.subscribe(function(e) {
			c.toggleClass("is-hidden", e), u.toggleClass("is-hidden", !e)
		}), (0, o.default)(".js-app").append(t), (0, o.default)(".js-app").append(i), TD.util.isTouchDevice() && window.navigator.standalone && t.on("touchmove", function(e) {
			0 === (0, o.default)(e.target).closest(".js-column-nav-scroller").length && e.preventDefault()
		}), TD.util.isWrapperApp() && deck.closeLoadingScreen && deck.closeLoadingScreen(), (0, o.default)(document).on("click", "a", function(e) {
			TD.util.maybeOpenClickExternally(e)
		}), TD.ui.columns.init(), TD.ui.updates.init(), TD.ui.openColumn.init(), TD.util.isTouchDevice() || e.tooltip({
			selector: ".js-show-tip",
			container: "body",
			delay: {
				show: 500
			},
			suppressFadeOut: !0
		}), (0, o.default)(document).on("click", "a", function(e) {
			var t = (0, o.default)(e.currentTarget),
				i = t.attr("rel"),
				n = !1;
			switch (i) {
				case "tweets":
					TD.storage.notification.notify(TD.components.OpenColumn.GO_EVENT, {
						data: TD.components.OpenColumnHome.URL_BASE + "/" + i + "?screenName=" + t.attr("data-screen-name")
					}), n = !0;
					break;
				case "user":
					var s = t.data("user-name") || (0, r.default)(t.attr("href").split("/"));
					s = "" + s, (0, o.default)(document).trigger("uiShowProfile", {
						id: s
					}), n = !0;
					break;
				case "hashtag":
					(0, o.default)(document).trigger("uiPerformSearch", {
						query: t.text(),
						columnKey: t.closest(".column").data("column")
					}), n = !0;
					break;
				case "search":
					(0, o.default)(document).trigger("uiPerformSearch", {
						query: t.attr("data-search-term")
					}), n = !0
			}
			n && e.preventDefault(), !1 === e.isDefaultPrevented() && (TD.util.openURL(t.attr("href")), e.preventDefault())
		}), (0, o.default)(document).on("submit", function(e) {
			e.preventDefault()
		}), o.default.subscribe("/storage/client/settings/column_width", n.updateColumnSize), n.updateColumnSize(), o.default.subscribe("/storage/client/settings/font_size", n.updateFontSize), n.updateFontSize(), o.default.subscribe("/storage/client/settings/theme", n.updateTheme), n.updateTheme();
		var d = (0, s.default)(function(e) {
			(0, o.default)(document).trigger("uiMainWindowResized")
		}, 50);
		(0, o.default)(window).on("resize", d), (0, o.default)(document).on("uiColumnNavSizeOverflow", function(e, t) {
			(0, o.default)(".js-app-add-column").removeClass("is-hidden")
		}.bind(this)), (0, o.default)(document).on("uiColumnNavSizeNormal", function(e, t) {
			(0, o.default)(".js-app-add-column").addClass("is-hidden")
		}.bind(this))
	}, n.updateColumnSize = function() {
		var e = TD.settings.getColumnWidth(),
			t = (0, o.default)(document.body);
		switch (t.removeClass("is-narrow-columns is-medium-columns is-wide-columns"), e) {
			case "narrow":
				t.addClass("is-narrow-columns");
				break;
			case "medium":
				t.addClass("is-medium-columns");
				break;
			case "wide":
				t.addClass("is-wide-columns")
		}(0, o.default)(document).trigger("uiColumnWidthChange", {
			columnWidth: e
		})
	}, n.updateFontSize = function() {
		var e = TD.settings.getFontSize(),
			t = (0, o.default)("html");
		switch (c.default.setScale(TD.settings.getHorizonWebFontSize(e)), t.removeClass("txt-size--12 txt-size--13 txt-size--14 txt-size--15 txt-size--16"), e) {
			case "smallest":
				t.addClass("txt-size--12");
				break;
			case "small":
				t.addClass("txt-size--13");
				break;
			case "medium":
				t.addClass("txt-size--14");
				break;
			case "large":
				t.addClass("txt-size--15");
				break;
			case "largest":
				t.addClass("txt-size--16")
		}
	}, n.updateTheme = function() {
		var e = TD.settings.getTheme(),
			t = (0, o.default)("html");
		c.default.setTheme(e), t.toggleClass("dark", "dark" === e)
	}, n)
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	TD.ui.openColumn = function() {
		var e, t = {};

		function i(t, i) {
			var n = t.split("?"),
				s = n[0].split("/").slice(1),
				a = n[1] || "",
				o = TD.net.util.formDecode(a),
				l = s.shift();
			switch (l) {
				case "add":
					if ("search" !== s[0]) {
						var c = TD.components.OpenColumn.instance;
						c && !c.canGo(l, s) && (c.destroy(), c = null), c || (c = new TD.components.OpenColumn), c.go(l, s, o, i), c.setAndShowContainer(e, !1)
					} else(0, r.default)(document).trigger("uiAppSearchFocus")
			}
		}
		return t.init = function() {
			e = (0, r.default)("#open-modal"), r.default.subscribe(TD.components.OpenColumn.GO_EVENT, function(e) {
				i(e.data, e.history)
			})
		}, t.showOpenColumn = function() {
			i("/add/home")
		}, t.showTwitterProfile = function(e) {
			i("/profile/twitter/" + e)
		}, t.showLists = function() {
			i("/add/lists")
		}, t.showSearch = function(e) {
			i("/search?q=" + e)
		}, t.showCustomTimelines = function(e, t) {
			2 === arguments.length ? i("/add/customtimelines?screenName=" + TD.util.deMentionify(e) + "&slug=" + t) : i("/add/customtimelines")
		}, t.showList = function(e, t) {
			i("/add/lists?screenName=" + TD.util.deMentionify(e) + "&slug=" + t)
		}, t
	}()
}, function(e, t, i) {
	"use strict";
	var n = o(i(0)),
		s = i(275),
		r = i(19),
		a = o(i(21));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.ui.updates = function() {
		var e = {
			allowRetweetsAndReplies: !0,
			init: function() {
				(0, n.default)(document).on("click", ".js-show-detail", function(t) {
					var i = window.getSelection(),
						s = 0 !== i.rangeCount && i.getRangeAt(0);
					if (!s || s.endOffset === s.startOffset) {
						var r = e.findParentArticle((0, n.default)(this)),
							a = TD.controller.columnManager.get(r.column);
						if (a) {
							var o = a.findMostInterestingChirp(r.statusKey),
								l = a.findChirp(r.statusKey);
							e.showDetailView(a, o, l)
						}
					}
					return !1
				}), (0, n.default)(document).on("uiDockedComposeSendingVideoInProgress", function() {
					e.allowRetweetsAndReplies = !1
				}), (0, n.default)(document).on("uiDockedComposeSendingVideoComplete", function() {
					e.allowRetweetsAndReplies = !0
				}), (0, n.default)(document).on("click", ".js-expand-gap", function(t) {
					var i = e.findParentArticle((0, n.default)(this));
					e.trackGapClick(), i.element.addClass("gap-chirp--loading"), TD.controller.columnManager.get(i.column).fillGap(i.statusKey)
				}), (0, n.default)(document).delegate(".js-stream-item a, .js-stream-item button, .js-detail-view-inline, .js-quote-detail", "click", t), n.default.subscribe("chirp/click", function(e, i, n) {
					t(e, i, n)
				}), n.default.subscribe("chirp/action", i), TD.controller.scheduler.schedulePeriodicTask(30, TD.ui.updates.refreshTimestamps)
			},
			trackGapClick: function() {
				TD.util.metric("column:ui:gap:click"), (0, n.default)(document).trigger("scribeEvent", {
					terms: {
						page: "main",
						component: "column",
						element: "gap",
						action: "click"
					}
				})
			}
		};
		return e.refreshTimestamps = (0, s.makeDOMMutator)(function() {
			(0, n.default)(".js-timestamp").each(function() {
				var e = (0, n.default)(this),
					t = e.attr("data-time"),
					i = new Date(Number(t)),
					s = TD.util.prettyDate(i);
				e.find("a,span").text(s)
			})
		}), e.findParentArticle = function(e) {
			var t = e.closest(".js-stream-item,.js-tweet-box");
			return {
				element: t,
				statusKey: t.attr("data-key"),
				column: t.closest(".js-chirp-container, .js-column").data("column")
			}
		}, e.showDetailView = function(e, t, i) {
			var n = e.model.getKey(),
				s = TD.ui.columns.getColumnElementByKey(n);
			s.trigger("uiExitSettings"), e.detailViewComponent && e.detailViewComponent.destroy(), i instanceof TD.services.TwitterConversationMessageEvent && t.quotedTweet ? TD.controller.stats.sharedTweetDM() : t instanceof TD.services.DataminrAlert ? e.detailViewComponent = new TD.components.DataminrDetailView(e, s) : t instanceof TD.services.TwitterStatus ? e.detailViewComponent = new TD.components.TweetDetailView(e, s) : t instanceof TD.services.TwitterConversation && (e.detailViewComponent = new TD.components.ConversationDetailView(e, s)), e.detailViewComponent.showChirp(t, i)
		}, e.showSensitiveMedia = function(e) {
			var t = e.getDOMChirps();
			t.find(".js-media-sensitive-overlay").addClass("is-hidden"), t.find(".js-media-preview-container, .js-media-sensitive-content").removeClass("media-size-medium media-sensitive-detail"), t.find(".js-media-image-link, .js-media-native-video, .js-media-gif, .js-media-sensitive-content").removeClass("is-invisible"), e.possiblySensitive = !1
		}, e.alwaysShowSensitiveMedia = function(e) {
			TD.settings.setDisplaySensitiveMedia(!0)
		}, e;

		function t(t, s, a, o) {
			var l, c, u, d, h, m, f = (0, n.default)(t.target),
				p = !1;
			if (!((0, n.default)(".js-stream-item", t.target).length > 0) && (f.attr("rel") || (f = f.closest("a,button,[data-tweet-id]")), c = f.attr("rel"), l = e.findParentArticle(f), s || (a || (a = TD.controller.columnManager.get(l.column)), a && (o = a.findChirp(l.statusKey), ((s = a.findMostInterestingChirp(l.statusKey)) instanceof TD.services.TwitterStatus || s instanceof TD.services.TwitterConversationMessageEvent) && (m = !0), (d = f.closest(".js-quote-detail")).length && m && (h = d.attr("data-tweet-id"), s.quotedTweet && s.quotedTweet.id === h ? s = s.quotedTweet : (c = "tweet", f = d)))), s)) {
				switch (t.shiftKey && "favorite" === c && (c = "favoriteFromAccounts"), c) {
					case "skipToReplies":
						(0, n.default)(document).trigger("uiSkipToReplies", {
							columnKey: a.model.getKey()
						});
						break;
					case "viewCustomTimeline":
						TD.ui.openColumn.showCustomTimelines(f.attr("data-screen-name"), f.attr("data-slug"));
						break;
					case "list":
						TD.ui.openColumn.showList(f.attr("data-screen-name"), f.attr("data-slug"));
						break;
					case "actionsMenu":
						f.trigger("uiShowActionsMenu");
						break;
					case "mediaPreview":
						p = function(e, t, i, n) {
							if (n.temporary) return TD.util.openURL(t), !0;
							return new TD.components.MediaGallery(e, t, i, n), !1
						}(s, f.attr("href"), f.attr("data-media-entity-id"), a);
						break;
					case "retweet":
					case "like":
					case "favorite":
					case "destroy":
					case "edit":
					case "reply":
					case "viewDetails":
					case "followStatus":
					case "dm":
					case "showSensitiveMedia":
					case "alwaysShowSensitiveMedia":
					case "customTimeline":
					case "removeFromCustomTimeline":
						if (("retweet" === c || "reply" === c) && !e.allowRetweetsAndReplies) {
							(0, r.showNotification)({
								title: "Hang on a minute...",
								message: "Please wait for your video to finish uploading"
							});
							break
						}
						i(c, s, o, a, l);
						break;
					case "globalSettings":
						(0, n.default)(document).trigger("uiShowGlobalSettings");
						break;
					case "tweet":
						u = f.attr("data-tweet-id"), TD.controller.clients.getClient(s.account.getKey()).show(u, function(e) {
							i("viewDetails", e, o, a, l)
						}, function() {
							TD.util.openURL(f.attr("href"))
						});
						break;
					case "pause":
						f.closest(".js-media-preview-container").addClass("is-paused is-manually-paused").removeClass("is-manually-played").find(".js-media-gif").get(0).pause();
						break;
					case "play":
						f.closest(".js-media-preview-container").removeClass("is-paused is-manually-paused").addClass("is-manually-played").find(".js-media-gif").get(0).play();
						break;
					case "viewConversationParticipants":
						(0, n.default)(document).trigger("uiShowDmParticipants", {
							columnKey: a.model.getKey(),
							conversationId: s.conversationId,
							accountKey: s.account.getKey()
						});
						break;
					case "favoriteFromAccounts":
						(0, n.default)(document).trigger("uiShowFavoriteFromOptions", {
							tweet: s
						});
						break;
					default:
						p = !0
				}
				return p || (t.preventDefault(), t.stopPropagation()), !1
			}
		}

		function i(t, i, s, r, o) {
			if (t.match(/favorite|retweet|reply/)) {
				var l = t;
				"favorite" === t && (l = i.isFavorite ? "unlike" : "like"), TD.controller.stats.scribeChirpAction({
					action: l,
					columnType: a.default.getColumnType(r),
					userId: i.account.getUserID()
				})
			}
			switch (t) {
				case "retweet":
				case "like":
				case "favorite":
				case "destroy":
				case "edit":
					t in i && i[t](o);
					break;
				case "reply":
					var c = i.getMainTweet();
					(0, n.default)(document).trigger("uiComposeTweet", {
						type: "reply",
						from: [i.account.getKey()],
						inReplyTo: {
							id: i.id,
							htmlText: c.htmlText,
							user: {
								screenName: c.user.screenName,
								name: c.user.name,
								profileImageURL: c.user.profileImageURL
							},
							chirp: c
						},
						mentions: i.getReplyUsers(),
						element: o && o.element
					});
					break;
				case "viewDetails":
					e.showDetailView(r, i, s);
					break;
				case "followStatus":
					(0, n.default)(document).trigger("uiShowFollowFromOptions", {
						userToFollow: i
					});
					break;
				case "dm":
					var u = i.getMainUser(),
						d = u.account;
					(0, n.default)(document).trigger("uiComposeTweet", {
						type: "message",
						from: [d.getKey()],
						messageRecipients: [u],
						conversationId: i.conversationId
					});
					break;
				case "showSensitiveMedia":
					e.showSensitiveMedia(i);
					break;
				case "alwaysShowSensitiveMedia":
					e.alwaysShowSensitiveMedia(i);
					break;
				case "customTimeline":
					new TD.components.AddToCustomTimelineDialog(i.getMainTweet());
					break;
				case "removeFromCustomTimeline":
					var h = o.element;
					if (!h) break;
					(0, n.default)(h).trigger("uiRemoveTweetFromCustomTimeline", {
						tweetId: i.getMainTweet().id
					})
			}
		}
	}()
}, function(e, t, i) {
	"use strict";
	var n, s = o(i(572)),
		r = o(i(0)),
		a = o(i(58));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.globalRenderOptions = (n = {
		styledScrollbar: TD.util.hasFixedScrollBars(),
		isTouchDevice: TD.util.isTouchDevice(),
		asset: function() {
			return function(e) {
				return i(2272)("./assets" + e)
			}
		},
		decider: {},
		featureFlag: {}
	}, (0, r.default)(document).on("dataDeciderUpdated", function() {
		n.decider = TD.decider.getAllWithOverlay()
	}), (0, a.default)().subscribe(function(e) {
		(0, s.default)(e.config, function(e, t) {
			t.includes("tweetdeck") && (n.featureFlag[t] = e.value)
		})
	}), n)
}, function(e, t, i) {
	var n = {
		"./assets/fonts/tweetdeck-regular-webfont.woff": 2273,
		"./assets/fonts/tweetdeck-regular-webfont.woff2": 2274,
		"./assets/global/backgrounds/default_profile.png": 2275,
		"./assets/global/backgrounds/dmr_growl_icon.png": 843,
		"./assets/global/backgrounds/grad_top_dark.png": 2276,
		"./assets/global/backgrounds/hidden-selected.png": 845,
		"./assets/global/backgrounds/hidden-unselected.png": 846,
		"./assets/global/backgrounds/large-selected.png": 847,
		"./assets/global/backgrounds/large-unselected.png": 848,
		"./assets/global/backgrounds/login_bg.jpg": 2277,
		"./assets/global/backgrounds/medium-selected.png": 849,
		"./assets/global/backgrounds/medium-unselected.png": 850,
		"./assets/global/backgrounds/migration-arrow.png": 2278,
		"./assets/global/backgrounds/small-selected.png": 851,
		"./assets/global/backgrounds/small-unselected.png": 852,
		"./assets/global/backgrounds/spinner-666-on-eee.gif": 2279,
		"./assets/global/backgrounds/spinner-888-on-ddd.gif": 2280,
		"./assets/global/backgrounds/spinner-fff-2595be.gif": 2281,
		"./assets/global/backgrounds/spinner-fff-on-005675.gif": 2282,
		"./assets/global/backgrounds/spinner-fff-on-198cd8.gif": 2283,
		"./assets/global/backgrounds/spinner-fff-on-292F33.gif": 2284,
		"./assets/global/backgrounds/spinner-fff-on-2f7bad.gif": 2285,
		"./assets/global/backgrounds/spinner-fff-on-3b94d9.gif": 2286,
		"./assets/global/backgrounds/spinner-fff-on-55acee.gif": 2287,
		"./assets/global/backgrounds/spinner-fff-on-5e727e.gif": 2288,
		"./assets/global/backgrounds/spinner_2b7bb9_on_ccd6dd.gif": 2289,
		"./assets/global/backgrounds/spinner_blue.gif": 2290,
		"./assets/global/backgrounds/spinner_dark.gif": 2291,
		"./assets/global/backgrounds/spinner_large_dark.gif": 2292,
		"./assets/global/backgrounds/spinner_large_grey.gif": 2293,
		"./assets/global/backgrounds/spinner_large_grey_light.gif": 2294,
		"./assets/global/backgrounds/spinner_large_white.gif": 2295,
		"./assets/global/backgrounds/spinner_light.gif": 2296,
		"./assets/global/backgrounds/spinner_small_blue_dark_bg.gif": 2297,
		"./assets/global/backgrounds/spinner_small_blue_light_bg.gif": 2298,
		"./assets/global/backgrounds/spinner_small_dark.gif": 2299,
		"./assets/global/backgrounds/spinner_small_light.gif": 2300,
		"./assets/global/backgrounds/spinner_small_trans.gif": 2301,
		"./assets/global/backgrounds/sprite_sheet_@1x.png": 2302,
		"./assets/global/backgrounds/sprite_sheet_@2x.png": 2303,
		"./assets/global/backgrounds/step3_highlight_@1x.png": 2304,
		"./assets/global/backgrounds/step3_highlight_@2x.png": 2305,
		"./assets/global/backgrounds/td_profile_empty.jpg": 522,
		"./assets/global/backgrounds/td_profile_empty@2x.jpg": 521,
		"./assets/global/backgrounds/td_screenshot@1x.png": 853,
		"./assets/global/backgrounds/td_screenshot@2x.png": 854,
		"./assets/global/backgrounds/td_share_collection.png": 2306,
		"./assets/global/backgrounds/td_web_dark_dropdown_bg.png": 2307,
		"./assets/global/backgrounds/td_whatsnew_01.png": 2308,
		"./assets/global/backgrounds/td_whatsnew_02.png": 2309,
		"./assets/global/backgrounds/td_whatsnew_03.png": 2310,
		"./assets/global/backgrounds/td_whatsnew_curate.png": 2311,
		"./assets/global/backgrounds/td_whatsnew_search.png": 2312,
		"./assets/global/backgrounds/td_whatsnew_share.png": 2313,
		"./assets/global/backgrounds/triangle-15202b.svg": 2314,
		"./assets/global/backgrounds/triangle-ffffff.svg": 2315,
		"./assets/global/backgrounds/warning-icon.svg": 2316,
		"./assets/global/backgrounds/web_heart_animation.png": 2317,
		"./assets/global/backgrounds/yellow-highlight.png": 2318,
		"./assets/global/sparkles-icon.svg": 855,
		"./assets/global/tweetdeck-optin-nux.png": 856,
		"./assets/global/tweetdeck-pride.svg": 2319,
		"./assets/global/tweetdeck.svg": 2320,
		"./assets/logos/128.png": 2321,
		"./assets/logos/16.png": 2322,
		"./assets/logos/24.png": 2323,
		"./assets/logos/32.png": 825,
		"./assets/logos/48.png": 2324,
		"./assets/logos/64.png": 2325,
		"./assets/logos/ios-icon-ipad.png": 2326,
		"./assets/logos/ios-icon-ipad@2x.png": 2327,
		"./assets/logos/ios-icon-iphone.png": 2328,
		"./assets/logos/ios-icon-iphone@2x.png": 2329,
		"./assets/logos/start_logo.png": 2330,
		"./assets/logos/start_logo@2x.png": 2331,
		"./assets/sounds/tweet.mp3": 2332,
		"./assets/sounds/tweet.ogg": 2333
	};

	function s(e) {
		var t = r(e);
		return i(t)
	}

	function r(e) {
		var t = n[e];
		if (!(t + 1)) {
			var i = new Error("Cannot find module '" + e + "'");
			throw i.code = "MODULE_NOT_FOUND", i
		}
		return t
	}
	s.keys = function() {
		return Object.keys(n)
	}, s.resolve = r, e.exports = s, s.id = 2272
}, function(e, t, i) {
	e.exports = i.p + "web/assets/fonts/tweetdeck-regular-webfont.415903392f.woff"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/fonts/tweetdeck-regular-webfont.c5ff89eb07.woff2"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/default_profile.772aa70942.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/grad_top_dark.55171c59ce.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/login_bg.691f441cab.jpg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/migration-arrow.1c0b55765b.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-666-on-eee.70c835d1ef.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-888-on-ddd.b68ec7f981.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-2595be.dc82d1cc8e.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-on-005675.c9241b3eeb.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-on-198cd8.04d11d3182.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-on-292F33.1b552f315c.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-on-2f7bad.9730298bd3.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-on-3b94d9.69b9628eb9.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-on-55acee.8a191bd390.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner-fff-on-5e727e.25c38ee90d.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_2b7bb9_on_ccd6dd.aa3f98de4f.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_blue.0f83d5101b.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_dark.330c2ed8c1.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_large_dark.c87be38d72.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_large_grey.51ac632933.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_large_grey_light.4f36c94184.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_large_white.2381f5091a.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_light.ac8adb62d1.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_small_blue_dark_bg.b90f3245df.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_small_blue_light_bg.3cb87aa201.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_small_dark.cace27b168.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_small_light.7bab7c9869.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/spinner_small_trans.e0c5a65bc6.gif"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/sprite_sheet_@1x.948c9b4228.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/sprite_sheet_@2x.fe37b69f3d.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/step3_highlight_@1x.1742d792f4.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/step3_highlight_@2x.f948be0723.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_share_collection.b5df2a4945.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_web_dark_dropdown_bg.46a7b4d407.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_whatsnew_01.fabfe059e5.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_whatsnew_02.87a4c15505.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_whatsnew_03.216e02c098.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_whatsnew_curate.b6aa3ea2b3.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_whatsnew_search.2ceab1e8cc.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/td_whatsnew_share.593d15846a.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/triangle-15202b.ec7c018bf6.svg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/triangle-ffffff.9e63cecfcf.svg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/warning-icon.557d0b2546.svg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/web_heart_animation.339ba7969e.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/backgrounds/yellow-highlight.aa166c086c.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/tweetdeck-pride.5f6bd95f75.svg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/global/tweetdeck.a58ac4ebe4.svg"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/128.aa828cd8d7.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/16.06e956e27c.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/24.27ad89f766.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/48.e1e9f431a8.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/64.ee7b64f179.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/ios-icon-ipad.f98c6da5d0.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/ios-icon-ipad@2x.992bd475a2.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/ios-icon-iphone.374457286f.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/ios-icon-iphone@2x.736a7a7698.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/start_logo.61e35e6015.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/logos/start_logo@2x.de3931a362.png"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/sounds/tweet.a0da953980.mp3"
}, function(e, t, i) {
	e.exports = i.p + "web/assets/sounds/tweet.8c519d390a.ogg"
}, function(e, t, i) {
	"use strict";
	var n = T(i(9)),
		s = T(i(108)),
		r = T(i(519)),
		a = T(i(110)),
		o = T(i(32)),
		l = T(i(13)),
		c = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(164)),
		u = T(i(2)),
		d = T(i(0)),
		h = T(i(512)),
		m = i(33),
		f = T(i(21)),
		p = i(275),
		g = i(168),
		v = i(344);

	function T(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	TD.ui.Column = function(e) {
		this.chirpContainerSelector = '.js-chirp-container[data-column="' + e + '"]', this.infiniteSpinnerSelector = ".js-infinitespinner", this.globalTpmSlidingLimit = 2e3, this.columnTpmSlidingLimit = 120, this.queuedSlidingLimit = 15, this.chirpStaggeringInterval = 400, this.$moreTweetsButtonContainer = null, this.fadeInClass = "column-opacity-transition", this.state = {
			columnKey: e,
			$noResults: null,
			sliding: !1,
			slidingQueue: []
		}, this.newTweetsTemplates = {
			default: (0, u.default)("New Tweets", null, !0),
			"plural tweet": (0, u.default)("{{numberNew}} New Tweets", null, !0),
			"singular tweet": (0, u.default)("1 New Tweet", null, !0),
			"plural notification": (0, u.default)("{{numberNew}} New Notifications", null, !0),
			"singular notification": (0, u.default)("1 New Notification", null, !0),
			"plural activity": (0, u.default)("New Activity", null, !0),
			"singular activity": (0, u.default)("New Activity", null, !0),
			"plural follower": (0, u.default)("{{numberNew}} New Followers", null, !0),
			"singular follower": (0, u.default)("1 New Follower", null, !0),
			"plural message": (0, u.default)("New Messages", null, !0),
			"singular message": (0, u.default)("New Messages", null, !0)
		}, this.setupMoreTweets()
	}, TD.ui.Column.prototype.setupMoreTweets = function() {
		var e = this;

		function t(t, i) {
			return function() {
				e.getMoreTweetsButtonContainer().toggleClass(t, i)
			}
		}

		function i(t, i, n) {
			if ("hidden" === n) return window.requestAnimationFrame(function() {
				e.getMoreTweetsButtonContainer().addClass("more-tweets-btn-container--out"), e.getMoreTweetsButtonContainer().find(".js-more-tweets-glow").width(0), setTimeout(e.moreTweetsState.transition.bind(e.moreTweetsState), 550)
			}), StateMachine.ASYNC
		}
		this.moreTweetsState = StateMachine.create({
			initial: "hidden",
			error: function() {},
			events: [{
				from: "hidden",
				name: "unread",
				to: "visible"
			}, {
				from: "hidden",
				name: "mouseScrollToTop",
				to: "mouseReleaseToRefresh"
			}, {
				from: "visible",
				name: "unread",
				to: "visible"
			}, {
				from: "visible",
				name: "trackingRealtime",
				to: "hidden"
			}, {
				from: "visible",
				name: "read",
				to: "hidden"
			}, {
				from: "visible",
				name: "mouseScrollToTop",
				to: "mouseReleaseToRefresh"
			}, {
				from: "mouseReleaseToRefresh",
				name: "mouseScrollAwayFromTop",
				to: "hidden"
			}, {
				from: "mouseReleaseToRefresh",
				name: "upwardScroll",
				to: "hidden"
			}, {
				from: "mouseReleaseToRefresh",
				name: "trackingRealtime",
				to: "hidden"
			}],
			callbacks: {
				onenterhidden: (0, p.makeDOMMutator)(function() {
					t("more-tweets-btn-container--hidden", !0)(), t("more-tweets-btn-container--out", !1)(), t("more-tweets-btn-container--visible", !1)(), t("more-tweets-btn-container--mouse-release", !1)()
				}),
				onleavehidden: (0, p.makeDOMMutator)(t("more-tweets-btn-container--hidden", !1)),
				onentervisible: (0, p.makeDOMMutator)(function() {
					t("more-tweets-btn-container--visible", !0)(), TD.util.metric("column:ui:more-tweets:impression")
				}),
				onleavevisible: i,
				onunread: (0, p.makeDOMMutator)(function(t, i, n, s) {
					e.getMoreTweetsButtonContainer().find(".js-more-tweets-btn-text").text(e.getMoreTweetsButtonText(s)), e.getMoreTweetsButtonContainer().find(".js-more-tweets-glow").width(50 + 8 * s.numUnseenChirps)
				}),
				onbeforemouseScrollToTop: function() {
					if (!TD.decider.get("column_release_to_refresh")) return !1
				},
				onentermouseReleaseToRefresh: (0, p.makeDOMMutator)(t("more-tweets-btn-container--mouse-release", !0)),
				onleavemouseReleaseToRefresh: i
			}
		})
	}, TD.ui.Column.prototype.getChirpContainer = function() {
		return this._$chirpContainer && 0 !== this._$chirpContainer.length || (this._$chirpContainer = (0, d.default)(this.chirpContainerSelector)), this._$chirpContainer
	}, TD.ui.Column.prototype.getChirpScroller = function() {
		return this._$columnScroller && 0 !== this._$columnScroller.length || (this._$columnScroller = this.getChirpContainer().closest(".js-column-scroller")), this._$columnScroller
	}, TD.ui.Column.prototype.getChirpById = function(e) {
		return this.getChirpContainer().find('[data-key="' + e + '"]')
	}, TD.ui.Column.prototype.pause = function() {
		return this.getChirpScroller().scrollTop(1)
	}, TD.ui.Column.prototype.unpause = function() {
		return this.getChirpScroller().scrollTop(0)
	}, TD.ui.Column.prototype.removeChirp = function(e, t) {
		var i = this.getChirpById(e);
		this.unloadVideos(i), this.teardownCard(e), TD.ui.columns.alterColumnContents(this.state.columnKey, i, function(e) {
			e.remove()
		}, t)
	}, TD.ui.Column.prototype.removeChirps = function(e, t) {
		var i = this,
			n = this.getChirpContainer().find(".js-stream-item").filter(function() {
				return e.indexOf((0, d.default)(this).attr("data-key")) > -1
			});
		this.unloadVideos(n), e.forEach(function(e) {
			return i.teardownCard(e)
		}), TD.ui.columns.alterColumnContents(this.state.columnKey, n.eq(0), function() {
			n.remove()
		}, t)
	}, TD.ui.Column.prototype.unloadVideos = function(e) {
		e.find("video, video source").attr("src", "")
	}, TD.ui.Column.prototype.loadGif = function(e) {
		var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).mediaPreviewSize;
		if (!1 !== e.hasMedia()) {
			var i = this.getChirpById(e.id).find(".js-media-gif-container");
			if (!(i.find(".js-media-gif").length > 0)) {
				var n = e.getMedia()[0].renderThumb(t);
				i.replaceWith(n)
			}
		}
	}, TD.ui.Column.prototype.unloadGif = function(e) {
		var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).mediaPreviewSize;
		if (!1 !== e.hasMedia()) {
			var i = this.getChirpById(e.id),
				n = i.find(".js-media-gif-container"),
				s = e.getMedia()[0].renderAnimatedGifPlaceholder(t);
			i.find(".js-media-preview-container").removeClass("is-manually-played"), this.unloadVideos(n), n.replaceWith(s)
		}
	}, TD.ui.Column.prototype.pauseGif = function(e) {
		var t = this.getChirpById(e.id),
			i = t.find(".js-media-preview-container"),
			n = t.find(".js-media-gif").get(0);
		i.hasClass("is-manually-played") || (n && !n.paused && n.pause(), i.addClass("is-paused"))
	}, TD.ui.Column.prototype.playGifIfNotManuallyPaused = function(e) {
		var t = this.getChirpById(e.id).find(".js-media-preview-container"),
			i = void 0;
		if (TD.settings.getAutoPlayGifs() && !t.hasClass("is-manually-paused") && t.removeClass("is-paused"), (i = t.not(".is-paused").find(".js-media-gif").get(0)) && i.paused) {
			var n = i.play();
			n && void 0 !== s.default && n instanceof s.default && n.catch(function(e) {
				e.name
			})
		}
	}, TD.ui.Column.prototype.loadCard = function(e, t) {
		arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
		if ((0, g.shouldShowCard)(e)) {
			var i = this.getChirpById(e.id).find(".js-card-container"),
				s = (0, l.default)(m.columnNamespaces, [t, "namespace"], {});
			(0, v.renderCardForChirp)(e, i, {
				context: "column",
				scribeNamespace: (0, n.default)({
					page: "column"
				}, s)
			})
		}
	}, TD.ui.Column.prototype.teardownCard = function(e) {
		var t = this.getChirpById(e).find(".js-card-container");
		0 !== t.length && c.unmountComponentAtNode(t[0])
	}, TD.ui.Column.prototype.slideInChirps = function(e, t, i, n, s) {
		var r = this,
			a = TD.ui.columns.isScrolledToTop(this.state.columnKey),
			o = !(t && this.getChirpContainer().closest(".is-hidden").length) && i < this.globalTpmSlidingLimit && n < this.columnTpmSlidingLimit;
		if (e && !s.insertAtBottom) {
			var l = e.concat();
			l.reverse(), l.forEach(function(e) {
				e.$node.css("display", "none")
			});
			var c = !a || TD.ui.columns.columnIsLockedToElement(this.state.columnKey) || !s.containsNewChirps;
			s && s.insertAtTop && c ? l.forEach(function(e) {
				this.shortcircuitChirpSlide(e.$node, !0)
			}, this) : this.state.slidingQueue = this.state.slidingQueue.concat(l).slice(-this.queuedSlidingLimit)
		}
		if (!this.state.sliding) {
			var u;
			a || (this.state.slidingQueue = this.processOffScreenSlidingQueue(this.state.slidingQueue)), this.state.slidingQueue = this.state.slidingQueue.filter(function(e) {
				var t = s && !s.insertAtTop;
				return t && this.slideInChirp(e.$node, o), !t
			}, this);
			do {
				u = this.state.slidingQueue.shift()
			} while (this.state.slidingQueue.length && !this.elementIsInDOM(u.$node));
			u && (this.slideInChirp(u.$node, o), this.state.sliding = !0, setTimeout(function() {
				r.state.sliding = !1, r.slideInChirps(null, t, i, n)
			}, this.chirpStaggeringInterval))
		}
	}, TD.ui.Column.prototype.elementIsInDOM = function(e) {
		return e && e.length && d.default.contains(document.documentElement, e[0])
	}, TD.ui.Column.prototype.processOffScreenSlidingQueue = function(e) {
		return e.filter(function(e) {
			var t = e.$node.position().top < 0;
			return t && this.shortcircuitChirpSlide(e.$node, t), !t
		}.bind(this))
	}, TD.ui.Column.prototype.shortcircuitChirpSlide = function(e, t) {
		TD.ui.columns.alterColumnContents(this.state.columnKey, e, function(e) {
			e.css("display", "")
		}, {
			willBreakScrollPosition: t
		})
	}, TD.ui.Column.prototype.slideInChirp = function(e, t) {
		var i = this;
		(0, d.default)(document).trigger("incrementTpmCounter", {
			columnKey: this.state.columnKey
		}), t = !document.hidden && t, h.default.mutate(function() {
			e.css("display", ""), (0, o.default)(function() {
				(0, d.default)(document).trigger("uiColumnChirpsChanged", {
					id: i.state.columnKey
				})
			})
		})
	}, TD.ui.Column.prototype.renderChirps = function(e, t) {
		var i, n, s, r, o = [];
		for (n = 0; n < e.length; n++) {
			r = (s = e[n]).getMainUser && s.getMainUser().isProtected;
			try {
				i = s.render({
					isTemporaryColumn: t.isTemporaryColumn,
					mediaPreviewSize: t.mediaPreviewSize,
					isMinimalist: t.doRenderMinimalist,
					withShowVerified: t.showVerifiedBadge,
					withRemove: t.isOwnCustomTimeline,
					withDragHandle: this.shouldRenderDragHandle((0, a.default)({}, t, {
						isProtectedUser: r
					}))
				}), o.push(i)
			} catch (e) {
				TD.util.metric("column:ui:chirp-render:error")
			}
		}
		return o.join("")
	}, TD.ui.Column.prototype.shouldRenderDragHandle = function(e) {
		if (TD.controller.stats.isInExperimentBucket("live_engagement_in_column_8020", "live_engagement_enabled") && "narrow" === TD.settings.getColumnWidth()) return !1;
		var t = !e.isTemporaryColumn,
			i = !e.isOwnCustomTimeline,
			n = e.isOwnReorderableCustomTimeline,
			s = !e.isProtectedUser;
		return t && (i || n) && s
	}, TD.ui.Column.prototype.hideChirpContainer = function() {
		var e = this.getChirpContainer();
		e.css("opacity", 0), (0, o.default)(function() {
			e.addClass(this.fadeInClass)
		}.bind(this))
	}, TD.ui.Column.prototype.fadeInChirpContainer = function() {
		var e = this.getChirpContainer(),
			t = (0, r.default)(function() {
				e.removeClass(this.fadeInClass).removeAttr("style"), (0, d.default)(document).trigger("uiColumnChirpsChanged", {
					id: this.state.columnKey
				})
			}.bind(this));
		(0, o.default)(function() {
			e.css("opacity", 1), e.one("transitionend", t), setTimeout(t, 350)
		})
	}, TD.ui.Column.prototype.addInfiniteScrollSpinner = function() {
		this.getChirpContainer().append(TD.ui.template.render("spinner_large"))
	}, TD.ui.Column.prototype.removeInfiniteScrollSpinner = function() {
		(0, d.default)(this.infiniteSpinnerSelector, this.getChirpContainer()).remove()
	}, TD.ui.Column.prototype.showIsUpdatingMessage = function() {
		var e = (0, d.default)(TD.ui.template.render("column_loading_placeholder", {
			isUpdating: !0
		}));
		this.getChirpContainer().html(e)
	}, TD.ui.Column.prototype.hideIsUpdatingMessage = function() {
		this.getChirpContainer().find(".js-column-loading-placeholder").remove()
	}, TD.ui.Column.prototype.showNoResultsMessage = function(e, t) {
		var i = this.getChirpContainer();
		i.css("opacity", 1).removeClass(this.fadeInClass), this.state.$noResults = (0, d.default)(TD.ui.template.render("search_no_tweets_placeholder", {
			isDropTarget: !e && t,
			withAddByUrl: !e && t
		})), i.html(this.state.$noResults)
	}, TD.ui.Column.prototype.hideNoResultsMessage = function() {
		this.state.$noResults && this.state.$noResults.remove()
	}, TD.ui.Column.prototype.getMoreTweetsButtonContainer = function() {
		if (this.$moreTweetsButtonContainer && this.$moreTweetsButtonContainer.length) return this.$moreTweetsButtonContainer;
		var e = this.getChirpContainer().closest(".js-column").find(".js-more-tweets-btn-container");
		return e.length ? (this.$moreTweetsButtonContainer = e, this.$moreTweetsButtonContainer) : e
	}, TD.ui.Column.prototype.getMoreTweetsButtonText = function(e) {
		return TD.ui.template.toHtml(this.getMoreTweetsTemplate(e), {
			numberNew: TD.util.truncateNumber(e.numUnseenChirps) + (e.gappy ? "+" : "")
		})
	}, TD.ui.Column.prototype.getMoreTweetsTemplate = function(e) {
		var t = TD.controller.columnManager.get(e.columnKey);
		if (!t) return this.newTweetsTemplates.default;
		var i = "tweet",
			n = f.default.getColumnType(t);
		f.default.isDataminr(t) || n === f.default.columnMetaTypes.INTERACTIONS ? i = "notification" : n === f.default.columnMetaTypes.ACTIVITY ? i = "activity" : n === f.default.columnMetaTypes.FOLLOWERS ? i = "follower" : n !== f.default.columnMetaTypes.MESSAGES && n !== f.default.columnMetaTypes.INBOX || (i = "message");
		var s = [1 === e.numUnseenChirps ? "singular" : "plural", i].join(" ");
		return this.newTweetsTemplates[s] || this.newTweetsTemplates.default
	}, TD.ui.Column.prototype.updateUnreadIndicators = function(e) {
		"number" != typeof(e = e || {}).numUnseenChirps && (e.numUnseenChirps = 0), "boolean" != typeof e.gappy && (e.gappy = !1);
		var t = e.numUnseenChirps > 0;
		this.getChirpContainer().trigger("uiReadStateChange", {
			read: !t,
			columnKey: this.state.columnKey
		}), t ? this.moreTweetsState.unread({
			numUnseenChirps: e.numUnseenChirps,
			gappy: e.gappy,
			columnKey: this.state.columnKey
		}) : this.moreTweetsState.read()
	}
}, function(e, t, i) {
	"use strict";
	TD.debug = {
		spoof_data: null
	}
}, function(e, t, i) {
	"use strict";
	TD.minWrapperVersionMac = "2.8.0", TD.minWrapperVersionWin = "2.8.0"
}, , function(e, t, i) {
	"use strict";
	var n = i(0),
		s = i(2339);
	n(document).ready(function() {
		TD.config.disable_metrics_error || TD.metrics.error.attach(), TD.config.disable_metrics_event || TD.metrics.event.attach(), TD.controller.init.preload(), TD.util.checkAPIRoot(), s.attachTo(document), TD.controller.init.start()
	})
}, function(e, t, i) {
	"use strict";
	var n = f(i(0)),
		s = f(i(4)),
		r = f(i(101)),
		a = f(i(7)),
		o = i(2340),
		l = f(i(208)),
		c = f(i(2342)),
		u = f(i(2354)),
		d = f(i(2356)),
		h = i(324),
		m = f(i(2358));

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var p = i(5).registry,
		g = i(5).compose,
		v = i(5).advice,
		T = i(5).debug,
		w = i(2359),
		b = i(2461),
		y = i(2462),
		_ = i(2465),
		C = i(2467),
		S = i(2468),
		D = i(2536),
		k = i(2537),
		E = i(2538),
		I = i(2539),
		A = i(2540),
		x = i(2568),
		M = i(2571),
		R = i(2572),
		F = i(2574),
		O = i(2575),
		P = i(2576),
		N = i(531),
		U = i(2578),
		L = i(2580),
		j = i(2581),
		B = i(2584),
		$ = i(2585),
		z = i(2598),
		H = i(2599),
		K = i(2600),
		V = i(2601),
		q = i(2602),
		W = i(2635),
		G = i(2636);
	e.exports = a.default.mixin(function() {
		this.attributes({
			modal: "#open-modal",
			appHeader: ".js-app-header",
			searchResults: ".js-search-form",
			message: ".js-message-banner",
			appSearchSourceId: "appSearch",
			searchPopoverSourceId: "searchPopover",
			isHiddenClass: "is-hidden",
			gridFocusId: "grid_focus",
			modalsContainerSelector: ".js-modals-container",
			columnScrollContainerSelector: ".js-app-columns-container",
			gryphonBetaBtnSelector: ".js-gryphon-beta-btn"
		}), this.initSearchInPopover = function() {
			P.attachTo(".js-search-in-popover", {
				popoverPosition: "rt",
				closeModals: !0,
				appSearchSourceId: this.attr.appSearchSourceId,
				searchPopoverSourceId: this.attr.searchPopoverSourceId,
				isHiddenClass: this.attr.isHiddenClass
			}), _.attachTo(".js-search-in-popover", {
				sourceId: this.attr.searchPopoverSourceId
			}), N.attachTo(".js-search-in-popover"), U.attachTo(".js-search-in-popover")
		}, this.attachLoggedInComponents = function() {
			B.attachTo(this.$node), E.attachTo(this.$node), z.attachTo(this.$node), x.attachTo(this.$node), y.attachTo(this.select("message")), I.attachTo(this.$node), K.attachTo(this.$node), V.attachTo(this.$node), S.attachTo(this.$node, {
				focusId: this.attr.gridFocusId
			}), O.attachTo(this.select("columnScrollContainerSelector")), D.attachTo(this.$node, {
				focusId: this.attr.gridFocusId
			}), k.attachTo(this.$node), M.attachTo("#compose-modal"), j.attachTo(".js-app-header"), $.attachTo(".js-app"), q.attachTo(this.$node), c.default.attachTo(".js-app"), F.attachTo("#column-navigator"), _.attachTo(".js-search-form", {
				sourceId: this.attr.appSearchSourceId
			}), this.initSearchInPopover(), L.attachTo(this.$node), b.attachTo(this.$node), W.attachTo(this.$node), G.attachTo(this.$node), this.attachChild(m.default, this.select("gryphonBetaBtnSelector")), this.attachChild(u.default, ".js-send-feedback", {
				props: {
					showSendFeedbackModal: this.showSendFeedbackModal.bind(this)
				}
			}), (0, o.maybeShowMacAppDeprecationBanner)()
		}, this.showSendFeedbackModal = function() {
			this.showModal(d.default, {
				props: {
					closeModal: this.closeSendFeedbackModal.bind(this)
				}
			}, {
				withFooter: !1,
				withDismissButton: !0,
				withBorder: !1
			})
		}, this.closeSendFeedbackModal = function() {
			this.trigger("uiCloseModal")
		}, this.handleLoggedIn = function() {
			this.$node.find(".js-app").removeClass(this.attr.isHiddenClass), (0, n.default)("body", "html").removeClass("scroll-v"), h.hashflags.start(), this.attachLoggedInComponents()
		}, this.attachLoggedOutComponents = function() {
			w.attachTo(this.$node), C.attachTo(this.$node), H.attachTo(this.attr.modalsContainerSelector), R.attachTo(".js-app-loading", {
				teardownOn: "TD.ready"
			})
		}, this.componentDidInitialize = function() {
			var e = document.body.appendChild(document.createElement("div"));
			r.default.render(s.default.createElement("div", {
				onClick: function() {}
			}), e), TD.config.flight_debug && (console.info("Flight debug mode enabled."), T.enable(!0), g.mixin(p, [v.withAdvice])), this.attachLoggedOutComponents(), this.on(document, "TD.ready", this.handleLoggedIn)
		}
	}, A, l.default)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.maybeShowMacAppDeprecationBanner = function() {
		TD.util.isWrapperApp() && (0, n.getValueForFeatureFlag)("tweetdeck_tdfm_deprecation_banner_enabled") && (0, s.default)(document).trigger("dataMessage", {
			message: {
				id: "deprecation-banner",
				text: (0, r.default)("TweetDeck for Mac is saying goodbye"),
				subtext: (0, r.default)("Beginning July 1, the TweetDeck for Mac application will be removed. You can continue accessing TweetDeck on the web."),
				colors: {
					background: "#1D9BF0",
					foreground: "white"
				},
				actions: [{
					id: "deprecation-banner-button",
					action: "url-ext",
					url: "https://tweetdeck.com",
					isExternalUrl: !0,
					label: (0, r.default)("Visit Web"),
					class: "banner-button"
				}],
				isUndismissable: !0
			},
			bannerClasses: ["deprecation-banner"]
		})
	};
	var n = i(58),
		s = a(i(0)),
		r = a(i(2));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, function(e, t, i) {
	"use strict";
	e.exports = function() {
		this.attributes({
			isNonDismissible: !1
		}), this.after("initialize", function() {
			this.trigger("uiModalShowing"), this.trigger("uiCloseModal"), this.on(document, "uiModalShowing", this.teardown), this.attr.isNonDismissible || (this.on(document, "uiCloseModal", this.teardown), this.on(document, "uiCloseTopModal", this.teardown))
		}), this.before("teardown", function() {
			this.trigger("uiModalHiding")
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = p(i(9)),
		s = p(i(2)),
		r = p(i(0)),
		a = p(i(6)),
		o = p(i(7)),
		l = p(i(2343)),
		c = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(152)),
		u = p(i(18)),
		d = i(37),
		h = i(66),
		m = i(33),
		f = p(i(2344));

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var g = c.makeCommandBag(),
		v = {
			label: "Show insights",
			apply: function() {
				return (0, r.default)(document).trigger("uiShowDataDrawer", {
					insightTerm: "otters"
				})
			}
		},
		T = function(e) {
			return g[e]([v])
		},
		w = function(e) {
			return (0, m.generic)((0, n.default)({
				page: "insights_panel"
			}, e))
		};
	e.exports = o.default.mixin(u.default, function() {
		this.attributes({
			template: "data_drawer",
			drawerBodySelector: ".js-drawer-body",
			drawerFooterSelector: ".js-drawer-footer",
			insightsPanelSelector: ".js-insights-panel"
		}), this.initialState({
			enabled: !1,
			insightTerm: ""
		}), this.componentDidInitialize = function() {
			this.subscribeDataDrawerFeatureFlag()
		}, this.handleButtonClick = function() {
			var e = this.state.insightTerm;
			this.trigger(document, "uiComposeTweet", {
				text: e + " "
			}), this.trigger(document, "scribeEvent", {
				terms: {
					page: "insights_panel",
					section: "footer",
					element: "tweet_button",
					action: "click"
				}
			}), this.drawer.close()
		}, this.render = function() {
			var e = this;
			if (this.state.enabled) {
				this.drawer || this.createDrawer();
				var t = (0, r.default)(a.default.render(this.attr.template)).filter(this.attr.drawerBodySelector)[0],
					i = (0, r.default)(a.default.render(this.attr.template, {
						insightTerm: this.state.insightTerm
					})).filter(this.attr.drawerFooterSelector)[0];
				this.drawer.render({
					titleText: (0, s.default)("Insights"),
					bodyEl: t,
					footerEl: i
				}), this.createContents();
				var n = (0, r.default)(i).find(".js-drawer-action");
				n.on("click", function() {
					return e.handleButtonClick()
				})
			} else this.drawer && (this.getPanel().empty(), this.drawer.close(), this.destroyContents())
		}, this.makeContents = function() {
			if (this.state.drawerIsOpen) {
				var e = (0, h.attach)(f.default, this.getPanel(), {
						insightTerm: this.state.insightTerm
					}),
					t = e.teardownEvent;
				return t
			}
		}, this.createContents = function() {
			this.innerPanelTeardownEvent || (this.innerPanelTeardownEvent = this.makeContents())
		}, this.destroyContents = function() {
			this.innerPanelTeardownEvent && (this.trigger(this.innerPanelTeardownEvent), this.innerPanelTeardownEvent = null)
		}, this.getPanel = function() {
			if (this.drawer) return (0, r.default)(this.drawer.el).find(this.attr.insightsPanelSelector)
		}, this.componentWillTeardown = function() {
			this.drawer && this.drawer.remove(), this.destroyContents()
		}, this.subscribeDataDrawerFeatureFlag = function() {
			var e = this;
			this.observe(d.betaAndInsights$).subscribe(function(t) {
				var i = t.betaEnabled,
					n = t.insightsEnabled,
					s = Boolean(i || n);
				e.mergeState({
					enabled: s
				}), T(s ? "add" : "remove")
			})
		}, this.panelParent = function() {
			if (this.drawer) return (0, r.default)(this.drawer.el).find(this.attr.drawerBodySelector).parent()
		}, this.scrollHandler = function() {
			w({
				action: "scroll"
			}), (0, r.default)(this).off("scroll", this.scrollHandler)
		}, this.createDrawer = function() {
			var e = this;
			this.drawer = new l.default, this.on(document, "uiShowDataDrawer", function(t, i) {
				var n = i.insightTerm;
				e.mergeState({
					insightTerm: n
				}), e.drawer.open()
			}), this.drawer.on(l.default.events.BEFORE_OPEN, function() {
				e.panelParent().on("scroll", e.scrollHandler), e.mergeState({
					drawerIsOpen: !0
				})
			}), this.drawer.on(l.default.events.AFTER_CLOSE, function() {
				e.panelParent().off("scroll", e.scrollHandler), e.destroyContents(), e.mergeState({
					drawerIsOpen: !1
				})
			})
		}
	})
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = T(i(108)),
		s = T(i(65)),
		r = T(i(9)),
		a = T(i(13)),
		o = T(i(170)),
		l = T(i(2)),
		c = T(i(0)),
		u = T(i(6)),
		d = T(i(7)),
		h = T(i(131)),
		m = T(i(2345)),
		f = T(i(2346)),
		p = T(i(2353)),
		g = i(207),
		v = i(863);

	function T(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = d.default.mixin(function() {
		this.attributes({
			template: "insights/insights_panel",
			noDataTemplate: "insights/no_data",
			mainChartSelector: ".js-insights-main-chart",
			demographicsAgeSelector: ".js-demographics-age",
			topRelatedSelector: ".js-top-related",
			insightTerm: null,
			noDataSelector: ".js-no-data"
		}), this.initialState({
			demographics: null,
			relatedWords: null,
			mainChartData: [],
			terms: [],
			endTime: new Date,
			startTime: new Date(new Date - (0, g.daysAgoInMilliseconds)(1))
		}), this.addChartDataForTerm = function(e) {
			var t = this,
				i = e.term,
				n = e.startTime,
				s = e.endTime,
				a = (0, g.convertDateToSeconds)(n),
				o = (0, g.convertDateToSeconds)(s);
			return this.getTimeseries({
				search_term: i,
				start_time: a,
				end_time: o,
				granularity: this.getGranularity(a, o)
			}).then(function(e) {
				var n = t.state.mainChartData.some(function(e) {
					return e.label === i
				});
				n ? t.replaceData((0, r.default)({
					term: i
				}, {
					data: e.data
				})) : t.addData(e.data)
			}).catch(function(e) {
				(0, c.default)(document).trigger("metric", {
					key: "insights-panel:timeseries-failure:" + e.message
				})
			})
		}, this.getGranularity = function(e, t) {
			var i = (t - e) / 60 / 60;
			return i <= 12 ? "minutes" : i <= 48 ? "hours" : "days"
		}, this.addData = function(e) {
			this.mergeState({
				mainChartData: [].concat((0, s.default)(this.state.mainChartData), [e])
			})
		}, this.replaceData = function(e) {
			var t = e.term,
				i = e.data,
				n = this.state.mainChartData.map(function(e) {
					return e.label === t ? i : e
				});
			this.mergeState({
				mainChartData: n
			})
		}, this.removeChartDataForTerm = function(e) {
			var t = this.state.mainChartData.filter(function(t) {
				return t.label !== e
			});
			return this.mergeState({
				mainChartData: t
			}), t
		}, this.updateChartTerms = function(e) {
			if (e.length > this.state.terms.length) {
				var t = (0, o.default)(e, this.state.terms)[0];
				this.addChartDataForTerm({
					term: t,
					startTime: this.state.startTime,
					endTime: this.state.endTime
				}), this.trigger("scribeEvent", {
					terms: {
						page: "insights_panel",
						section: "input",
						element: "token",
						action: "add"
					}
				})
			} else {
				var i = (0, o.default)(this.state.terms, e)[0];
				this.removeChartDataForTerm(i), this.trigger("scribeEvent", {
					terms: {
						page: "insights_panel",
						section: "input",
						element: "token",
						action: "remove"
					}
				})
			}
			this.mergeState({
				terms: e
			})
		}, this.updateChartDateRange = function(e) {
			var t = this,
				i = e.startDate,
				n = e.endDate;
			this.state.terms.forEach(function(e) {
				t.addChartDataForTerm({
					term: e,
					startTime: i,
					endTime: n
				})
			}), this.mergeState({
				startTime: i,
				endTime: n
			})
		}, this.componentDidInitialize = function() {
			this.initialRender(), this.fetchRelatedWordsData(this.attr.insightTerm), this.fetchDemographics({
				term: this.attr.insightTerm
			}), this.setupChildComponents(), this.updateChartTerms([this.attr.insightTerm]), this.trigger("scribeEvent", {
				terms: {
					page: "insights_panel",
					action: "impression"
				}
			})
		}, this.setupChildComponents = function() {
			this.setupChartWithControls(), this.setupDemographics(), this.setupRelatedWords()
		}, this.setupChartWithControls = function() {
			var e = this,
				t = this.connect(f.default, {
					mapStateToProps: function(t) {
						return {
							chartData: t.mainChartData,
							updateChartTerms: function(t) {
								e.updateChartTerms(t)
							},
							updateChartDateRange: function(t) {
								e.updateChartDateRange(t)
							}
						}
					}
				});
			this.attachChild(t, this.select("mainChartSelector"), {
				title: (0, l.default)("Tweet volume for") + " " + this.attr.insightTerm,
				initialTerms: [this.attr.insightTerm],
				minDate: new Date(this.state.startTime - (0, g.daysAgoInMilliseconds)(30)),
				maxDate: this.state.endTime
			})
		}, this.setupDemographics = function() {
			var e = this.connect(m.default, {
				mapStateToProps: function() {
					var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
						t = e.demographics;
					return t
				}
			});
			this.attachChild(e, this.select("demographicsAgeSelector"), {
				title: (0, l.default)("Age")
			})
		}, this.setupRelatedWords = function() {
			var e = this.connect(p.default, {
				mapStateToProps: function(e) {
					var t = e.relatedWords;
					return t || {}
				}
			});
			this.attachChild(e, this.select("topRelatedSelector"))
		}, this.getTimeseries = function(e) {
			if (!e) return n.default.reject(new Error("getTimeseries requires params"));
			var t = v.insights + "/timeseries.json";
			return h.default.promised(t, {
				params: e
			})
		}, this.fetchRelatedWordsData = function(e) {
			var t = this;
			h.default.request(v.insights + "/related_keywords.json", {
				params: {
					seed_keyword: e,
					num_related_keywords: 5
				}
			}).addCallbacks(function(e) {
				t.mergeState({
					relatedWords: e.data
				})
			}, function(e) {
				t.mergeState({
					relatedWords: {}
				})
			})
		}, this.fetchDemographics = function(e) {
			var t = this,
				i = e.term;
			e.startTime, e.endTime;
			h.default.request(v.insights + "/demographics.json", {
				params: {
					search_term: i
				}
			}).addCallbacks(function(e) {
				t.mergeState({
					demographics: e.data
				})
			}, function(e) {
				t.mergeState({
					demographics: {}
				})
			})
		}, this.initialRender = function() {
			var e = u.default.render(this.attr.template);
			this.$node.html(e)
		}, this.render = function() {
			if (this.state.demographics && this.state.relatedWords) {
				var e = 0 === (0, a.default)(this.state.demographics, "age.length", 0) && 0 === (0, a.default)(this.state.relatedWords, "keywords.length", 0);
				if (e) {
					var t = u.default.render(this.attr.noDataTemplate, {
						insightTerm: this.attr.insightTerm
					});
					this.select("noDataSelector").html(t)
				} else this.select("noDataSelector").empty()
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(224)),
		s = u(i(44)),
		r = u(i(13)),
		a = u(i(77)),
		o = u(i(2)),
		l = u(i(6)),
		c = u(i(7));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = c.default.mixin(function() {
		this.attributes({
			template: "insights/demographics",
			title: null
		}), this.shouldComponentUpdate = function(e) {
			return !1 === (0, a.default)(this.props, e)
		}, this.getPrettyAgeName = function(e) {
			var t = {
				Age13To17: (0, o.default)("13 to 17"),
				Age18To24: (0, o.default)("18 to 24"),
				Age25To34: (0, o.default)("25 to 34"),
				Age35To44: (0, o.default)("35 to 44"),
				Age45To54: (0, o.default)("45 to 54"),
				Age55To64: (0, o.default)("55 to 64"),
				AgeOver65: (0, o.default)("Over 65")
			};
			return t[e] || ""
		}, this.getAgeInsights = function() {
			var e = this,
				t = (0, r.default)(this.props, "age", []);
			return t.map(function(t, i) {
				var r = e.getPrettyAgeName((0, s.default)(t)[0]),
					a = (0, n.default)(t)[0];
				return {
					name: r,
					percentage: a,
					ordinal: i + 1
				}
			})
		}, this.render = function() {
			var e = this.getAgeInsights();
			if (e.length) {
				var t = this.attr.title,
					i = l.default.render(this.attr.template, {
						ageInsights: e,
						title: t
					});
				this.$node.html(i)
			} else this.$node.empty()
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = f(i(9)),
		s = f(i(2)),
		r = f(i(7)),
		a = f(i(6)),
		o = f(i(524)),
		l = f(i(2348)),
		c = f(i(100)),
		u = f(i(2350)),
		d = i(358),
		h = f(i(861)),
		m = i(207);

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = r.default.mixin(function() {
		this.attributes({
			template: "chart_with_controls",
			gridChartSelector: ".js-insights-grid-chart",
			datePickerSelector: ".js-insights-date-picker",
			title: void 0,
			chartTermsSelector: ".js-chart-terms",
			initialTerms: void 0,
			minDate: void 0,
			maxDate: void 0
		}), this.componentDidInitialize = function() {
			this.initialRender(), this.attachDatePicker(), this.attachTermsInput(), this.attachChart()
		}, this.initialRender = function() {
			var e = a.default.render(this.attr.template, {
				title: this.attr.title
			});
			this.$node.html(e)
		}, this.render = function() {}, this.attachChart = function() {
			var e = this,
				t = this.connect(o.default, {
					mapStateToProps: function() {
						return {
							chartData: e.props.chartData
						}
					}
				});
			this.attachChild(t, this.select("gridChartSelector"))
		}, this.createDatePicker = function(e) {
			var t = e.minDate,
				i = e.maxDate;
			return new l.default({
				dateRangeOptions: {
					datePickerOptions: {
						minDate: t,
						maxDate: i
					},
					customPresetText: "Custom",
					defaultPresetFunction: this.lastDay.bind(this),
					presets: [{
						text: (0, s.default)("Last hour"),
						fn: this.lastHour.bind(this)
					}, {
						text: (0, s.default)("Last 3 hours"),
						fn: this.last3Hours.bind(this)
					}, {
						text: (0, s.default)("Last 24 hours"),
						fn: this.lastDay.bind(this)
					}, {
						text: (0, s.default)("Last 48 hours"),
						fn: this.last2Days.bind(this)
					}, {
						text: (0, s.default)("Last 7 days"),
						fn: this.last7Days.bind(this)
					}, {
						text: (0, s.default)("Last 30 days"),
						fn: this.last30Days.bind(this)
					}]
				},
				targetLabelText: function(e, t, i) {
					return i || (0, c.default)(e).format("ll") + " - " + (0, c.default)(t).format("ll")
				}
			})
		}, this.attachDatePicker = function() {
			var e = this,
				t = this.attr,
				i = t.minDate,
				n = t.maxDate;
			this.datePicker = this.createDatePicker({
				minDate: i,
				maxDate: n
			}), this.datePicker.$el.addClass("Button--small"), this.select("datePickerSelector").append(this.datePicker.$el), this.datePicker.dateRange.on(h.default.events.CHANGE, function(t, i) {
				e.props.updateChartDateRange(i), e.scribeEvent({
					section: "date_picker",
					element: "date_range",
					action: "change"
				})
			}), this.datePicker.dateRange.on(h.default.events.PRESET_SELECT, function(t, i) {
				e.scribeEvent({
					section: "date_picker",
					element: "preset",
					action: "click"
				}, {
					value: i.text
				})
			})
		}, this.attachTermsInput = function() {
			var e = this,
				t = this.select("chartTermsSelector");
			this.tokenInput = new u.default({
				placeholderText: (0, s.default)("Add terms to compare"),
				tokenSelected: function() {
					return !0
				},
				value: this.attr.initialTerms,
				maxLength: 4,
				tokenColor: d.getNamedChartColor
			}), this.tokenInput.on(u.default.events.CHANGE, function(t) {
				e.props.updateChartTerms(t.detail), e.scribeEvent({
					section: "input",
					element: "token",
					action: "change"
				})
			}), t.append(this.tokenInput.el)
		}, this.lastHour = function() {
			var e = this.attr.maxDate,
				t = new Date(this.attr.maxDate - (0, m.hoursAgoInMilliseconds)(1));
			return {
				endDate: e,
				startDate: t
			}
		}, this.last3Hours = function() {
			var e = this.attr.maxDate,
				t = new Date(this.attr.maxDate - (0, m.hoursAgoInMilliseconds)(3));
			return {
				endDate: e,
				startDate: t
			}
		}, this.lastDay = function() {
			var e = this.attr.maxDate,
				t = new Date(this.attr.maxDate - (0, m.daysAgoInMilliseconds)(1));
			return {
				endDate: e,
				startDate: t
			}
		}, this.last2Days = function() {
			var e = this.attr.maxDate,
				t = new Date(this.attr.maxDate - (0, m.daysAgoInMilliseconds)(2));
			return {
				endDate: e,
				startDate: t
			}
		}, this.last7Days = function() {
			var e = this.attr.maxDate,
				t = new Date(this.attr.maxDate - (0, m.daysAgoInMilliseconds)(7));
			return {
				endDate: e,
				startDate: t
			}
		}, this.last30Days = function() {
			var e = this.attr.maxDate,
				t = new Date(this.attr.maxDate - (0, m.daysAgoInMilliseconds)(30));
			return {
				endDate: e,
				startDate: t
			}
		}, this.scribeEvent = function(e, t) {
			this.trigger("scribeEvent", {
				terms: (0, n.default)({
					page: "insights_panel"
				}, e),
				data: (0, n.default)({}, t)
			})
		}
	})
}, , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = l(i(26)),
		s = l(i(14)),
		r = l(i(16)),
		a = l(i(27)),
		o = l(i(28));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "_deleteLastToken",
			value: function() {
				var e = this._getState().value,
					t = e.length - 1,
					i = e[t];
				if (void 0 !== i && 0 !== t) {
					var n = this._tokenIdAccessor(i, t);
					this._deleteTokensWithIds([n])
				}
			}
		}, {
			key: "_deleteFocusedTokens",
			value: function(e) {
				var t = this._getState(),
					i = t.focusedTokenIds,
					n = t.value[0],
					s = i.filter(function(e) {
						return e !== n
					});
				this._deleteTokensWithIds(s, e)
			}
		}]), t
	}(l(i(2351)).default);
	t.default = c
}, , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = c(i(13)),
		s = c(i(77)),
		r = c(i(7)),
		a = c(i(6)),
		o = c(i(524)),
		l = i(358);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = r.default.mixin(function() {
		this.attributes({
			template: "insights/related_words",
			limit: 12
		}), this.shouldComponentUpdate = function(e) {
			return !1 === (0, s.default)(this.props, e)
		}, this.render = function() {
			var e = (0, n.default)(this.props, "keywords", []);
			if (e.length) {
				var t = this.buildRows(e),
					i = a.default.render(this.attr.template, {
						rows: t
					});
				this.$node.html(i), this.attachSparklines(t)
			} else this.$node.empty()
		}, this.buildRows = function(e) {
			return e.slice(0, this.attr.limit).map(function(e, t) {
				return {
					key: "sparkline-related-" + t,
					word: e.label,
					ordinal: t + 1,
					volume: TD.util.truncateNumber(e.total_tweet_volume),
					chartData: {
						label: e.label,
						data: e.data
					}
				}
			})
		}, this.attachSparklines = function(e) {
			var t = this;
			e.forEach(function(e, i) {
				var n = "sparkline-related-" + i,
					s = "#js-sparkline-" + n,
					r = t.connect(o.default, {
						mapStateToProps: function() {
							return {
								chartData: [e.chartData]
							}
						}
					});
				t.attachChild(r, t.$node.find(s), {
					props: {
						chartOptions: (0, l.makeSparklineDefaults)(),
						displayLegend: !1,
						chartHeight: "32px"
					}
				})
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.SendFeedbackButtonReact = void 0;
	var n = T(i(9)),
		s = T(i(26)),
		r = T(i(14)),
		a = T(i(16)),
		o = T(i(27)),
		l = T(i(28)),
		c = i(4),
		u = T(c),
		d = T(i(210)),
		h = T(i(2355)),
		m = i(37),
		f = i(206),
		p = T(i(2)),
		g = i(7),
		v = i(74);

	function T(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var w = function(e) {
		function t() {
			return (0, r.default)(this, t), (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).apply(this, arguments))
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "render",
			value: function() {
				var e = this;
				return u.default.createElement(f.Observe, {
					observable: m.tweetdeckBeta$
				}, function(t) {
					return t ? (0, v.getTwitterLoginAccount)().isProtected ? null : u.default.createElement(d.default, null, function(t) {
						var i = "light" === t,
							s = {
								borderBottomLeftRadius: 20,
								borderBottomRightRadius: 20,
								borderTopLeftRadius: 0,
								borderTopRightRadius: 0,
								position: "absolute",
								bottom: "20%",
								zIndex: 1,
								right: 0,
								transform: [{
									translateX: 51
								}, {
									rotate: "90deg"
								}],
								height: "auto",
								minHeight: "auto",
								padding: "0.6em 1em"
							};
						s = i ? (0, n.default)({}, s, {
							borderWidth: 1
						}) : s;
						var r = (0, p.default)("Send feedback");
						return u.default.createElement(h.default, {
							accessibilityLabel: r,
							label: r,
							icon: u.default.createElement(c.Fragment, null),
							color: i ? "blue" : "white",
							backgroundColor: i ? "white" : "blue",
							style: s,
							testID: "sendFeedbackButton",
							onPress: e.props.showSendFeedbackModal
						})
					}) : null
				})
			}
		}]), t
	}(c.Component);
	t.default = (0, g.reactToUiBase)(w);
	t.SendFeedbackButtonReact = w
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.SendFeedbackReact = void 0;
	var n = p(i(26)),
		s = p(i(14)),
		r = p(i(16)),
		a = p(i(27)),
		o = p(i(28)),
		l = i(4),
		c = p(l),
		u = p(i(2)),
		d = i(7),
		h = p(i(139)),
		m = p(i(171)),
		f = i(2357);

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var g = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, u = Array(l), d = 0; d < l; d++) u[d] = arguments[d];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(u))), r.state = {
				canSend: !1,
				feedback: "",
				feedbackSent: !1
			}, r.feedbackInputRef = c.default.createRef(), o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidMount",
			value: function() {
				this.feedbackInputRef.current.focus()
			}
		}, {
			key: "componentDidUpdate",
			value: function() {
				this.state.feedbackSent || this.feedbackInputRef.current.focus()
			}
		}, {
			key: "handleChange",
			value: function(e) {
				this.setState({
					feedback: e.target.value
				})
			}
		}, {
			key: "canSend",
			value: function() {
				return this.state.feedback.trim().length > 0
			}
		}, {
			key: "sendFeedback",
			value: function() {
				var e = this;
				return (0, f.send)(this.state.feedback).then(function(t) {
					e.setState({
						feedbackSent: !0,
						feedbackError: !1
					})
				}).catch(function(t) {
					e.setState({
						feedbackError: !0
					})
				})
			}
		}, {
			key: "render",
			value: function() {
				return c.default.createElement("div", {
					className: "padding-v--10 txt-center padding-h--50 width--430"
				}, c.default.createElement("div", {
					className: "padding-b--20"
				}, c.default.createElement(m.default, {
					"data-testid": "icon",
					name: "twitter-bird",
					fontSize: 24,
					color: "twitter-blue"
				})), c.default.createElement("p", {
					"data-testid": "text",
					className: "padding-b--20 txt-size--18 txt-bold"
				}, this.state.feedbackSent ? (0, u.default)("Thanks for your feedback!") : c.default.createElement(l.Fragment, null, (0, u.default)("Tell us about your experience"), c.default.createElement("br", null), (0, u.default)("using TweetDeck"))), this.state.feedbackError ? c.default.createElement("p", {
					"data-testid": "errorText",
					className: "padding-v--10 margin-v--10 txt-size--12 bg-color-twitter-red color-twitter-white br--4"
				}, " ", (0, u.default)("Looks like your feedback wasn't sent. Please try again.")) : null, this.state.feedbackSent ? null : c.default.createElement("textarea", {
					ref: this.feedbackInputRef,
					onChange: this.handleChange.bind(this),
					className: "margin-b--10 height--180",
					placeholder: (0, u.default)("Enter your feedback here"),
					maxLength: 1e3,
					"data-testid": "textarea"
				}), c.default.createElement("div", {
					className: "flex flex-justify-content--flex-center padding-v--10"
				}, this.state.feedbackSent ? c.default.createElement(h.default, {
					type: "primary",
					size: "large",
					onPress: this.props.closeModal,
					label: (0, u.default)("Close"),
					"data-testid": "closeButton"
				}, (0, u.default)("Close")) : c.default.createElement(h.default, {
					type: "primary",
					size: "large",
					onPress: this.sendFeedback.bind(this),
					disabled: !this.canSend(),
					label: (0, u.default)("Send"),
					"data-testid": "sendButton"
				}, (0, u.default)("Send"))))
			}
		}]), t
	}(c.default.Component);
	t.default = (0, d.reactToUiBase)(g);
	t.SendFeedbackReact = g
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.send = void 0;
	var n = r(i(68)),
		s = r(i(131));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.send = function(e) {
		var t = TD.config,
			i = t.twitter_api_base + "/" + t.twitter_api_version;
		return s.default.promised(i + "/strato/column/None//tweetdeck/sendFeedback", {
			method: "POST",
			params: (0, n.default)(e)
		})
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.GryphonBetaBtnReact = void 0;
	var n = m(i(26)),
		s = m(i(14)),
		r = m(i(16)),
		a = m(i(27)),
		o = m(i(28)),
		l = m(i(4)),
		c = m(i(2)),
		u = i(7),
		d = i(33),
		h = i(864);

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = i(855),
		p = function(e) {
			function t() {
				return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
			}
			return t;
		}(l.default.Component);
	t.default = (0, u.reactToUiBase)(p);
	t.GryphonBetaBtnReact = p
}, function(e, t, i) {
	"use strict";
	var n = r(i(2360)),
		s = r(i(5));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = [i(2362), i(2363), i(2364), i(2367), i(2368), i(2369), i(2370), i(2371), i(2372), i(2373), i(2374), i(2375), i(2376), i(2378), i(2379), i(2384), i(2385), i(2387), i(2389), i(2390), i(2393), i(2394), i(2395), i(2396), i(2397), i(2398), i(2399), i(2400), i(2401), i(2402), i(2403), i(2404), i(2412), i(2413), i(2414), i(2415), i(2416), i(2417), i(2418), i(2419), i(2420), i(2421), i(2422), i(2423), i(2424), i(2441), i(2443), i(2444), i(2445), i(2447), i(2448), i(2449), i(2450), i(2451), i(2452), i(2453), i(2454), i(2455), i(2456), i(2457), i(2458), i(2459), i(2460)];
	e.exports = s.default.component(function() {
		this.after("initialize", function() {
			(0, n.default)(a, "attachTo", this.$node)
		})
	})
}, , , function(e, t, i) {
	"use strict";
	var n = i(5).component,
		s = i(827).store;
	e.exports = n(function() {
		function e(e) {
			var t;
			try {
				t = s.getJSON(e)
			} catch (t) {
				return void TD.sync.util.stateLog("Error parsing JSON for storage key", e)
			}
			this.trigger(document, "dataStorageItem", {
				name: e,
				value: t
			})
		}
		this.get = function(t, i) {
			i.names && i.names.forEach(e.bind(this)), i.name && e.call(this, i.name)
		}, this.set = function(e, t) {
			for (var i in t)
				if (t.hasOwnProperty(i)) try {
					s.setJSON(i, t[i])
				} catch (e) {
					e.code === DOMException.QUOTA_EXCEEDED_ERR ? this.trigger(document, "dataStorageFull", {
						name: i,
						value: t[i]
					}) : this.trigger(document, "dataStorageSetError", {
						name: i,
						value: t[i]
					})
				}
		}, this.after("initialize", function() {
			this.on("dataStorageSet", this.set), this.on("dataStorageGet", this.get)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(58)),
		s = i(5),
		r = a(i(45));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, s.component)(r.default, function() {
		this.after("initialize", function() {
			this.on("ddgImpression", this.handleImpression), this.provideResource("/1.1/help/settings.json", (0, n.default)())
		}), this.handleImpression = function(e, t) {
			TD.controller.stats.experimentImpression(t.name, t.bucket)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5),
		s = l(i(45)),
		r = l(i(211)),
		a = l(i(2365)),
		o = l(i(2366));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, n.component)(function() {
		this.after("initialize", function() {
			this.provideResource("advanced_filters", a.default), this.provideResource("account.settings", o.default)
		})
	}, s.default, r.default)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(865),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = TD.config.twitter_api_base + "/1.1/mutes/advanced_filters.json",
		o = (0, r.default)(a);
	t.default = o
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(865),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = TD.config.twitter_api_base + "/1.1/account/settings.json",
		o = (0, r.default)(a);
	t.default = o
}, function(e, t, i) {
	"use strict";
	var n = a(i(83)),
		s = a(i(18)),
		r = i(33);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(s.default, function() {
		this.attributes({
			experimentId: "tweetdeck_uiv_7739"
		}), this.after("initialize", function() {
			this.observe(this.requestResource("/1.1/help/settings.json")).pluck("config", this.attr.experimentId, "value").filter(function(e) {
				return void 0 !== e
			}).take(1).subscribe(this.setupExperiment.bind(this))
		}), this.setupExperiment = function() {
			this.on(document, "imageInVisibleColumn", this.ddgImpression)
		}, this.ddgImpression = function() {
			this.trigger("ddgImpression", {
				name: this.attr.experimentId,
				bucket: (0, r.getExperimentBucket)(this.attr.experimentId)
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(83)),
		s = a(i(18)),
		r = i(33);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(s.default, function() {
		this.attributes({
			experimentId: "live_engagement_in_column_8020"
		}), this.after("initialize", function() {
			this.observe(this.requestResource("/1.1/help/settings.json")).pluck("config", this.attr.experimentId, "value").filter(function(e) {
				return void 0 !== e
			}).take(1).subscribe(this.setupExperiment.bind(this))
		}), this.setupExperiment = function() {
			this.on(document, "columnWithTweetsInView", this.ddgImpression)
		}, this.ddgImpression = function() {
			this.trigger("ddgImpression", {
				name: this.attr.experimentId,
				bucket: (0, r.getExperimentBucket)(this.attr.experimentId)
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(83)),
		s = a(i(18)),
		r = i(33);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(s.default, function() {
		this.attributes({
			experimentId: "cards_in_td_columns_8351"
		}), this.after("initialize", function() {
			this.observe(this.requestResource("/1.1/help/settings.json")).pluck("config", this.attr.experimentId, "value").filter(function(e) {
				return void 0 !== e
			}).take(1).subscribe(this.setupExperiment.bind(this))
		}), this.setupExperiment = function() {
			this.on(document, "uiCardsInColumns", this.ddgImpression)
		}, this.ddgImpression = function() {
			this.trigger("ddgImpression", {
				name: this.attr.experimentId,
				bucket: (0, r.getExperimentBucket)(this.attr.experimentId)
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(83)),
		s = a(i(18)),
		r = i(33);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(s.default, function() {
		this.attributes({
			experimentId: "tweetdeck_rweb_composer_8990"
		}), this.after("initialize", function() {
			this.observe(this.requestResource("/1.1/help/settings.json")).pluck("config", this.attr.experimentId, "value").filter(function(e) {
				return void 0 !== e
			}).take(1).subscribe(this.setupExperiment.bind(this))
		}), this.setupExperiment = function() {
			this.on(document, "TD.ready", this.ddgImpression), this.on(document, "uiRwebComposerExperimentImpression", this.ddgImpression)
		}, this.ddgImpression = function() {
			var e = (0, r.getExperimentBucket)(this.attr.experimentId);
			["control", "rweb_composer_treatment"].includes(e) ? this.trigger("ddgImpression", {
				name: this.attr.experimentId,
				bucket: e
			}) : TD.util.metric("tweetdeck-rweb-composer:bad-experiment-impression")
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(83)),
		s = a(i(18)),
		r = i(33);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(s.default, function() {
		this.attributes({
			experimentId: "rweb_a_a_test_1_9176"
		}), this.after("initialize", function() {
			this.observe(this.requestResource("/1.1/help/settings.json")).pluck("config", this.attr.experimentId, "value").filter(function(e) {
				return void 0 !== e
			}).take(1).subscribe(this.setupExperiment.bind(this))
		}), this.setupExperiment = function() {
			this.on(document, "TD.ready", this.ddgImpression)
		}, this.ddgImpression = function() {
			var e = (0, r.getExperimentBucket)(this.attr.experimentId);
			["control", "treatment"].includes(e) ? this.trigger("ddgImpression", {
				name: this.attr.experimentId,
				bucket: e
			}) : TD.util.metric("tweetdeck-rweb-composer:aa1:bad-experiment-impression")
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(83)),
		s = a(i(18)),
		r = i(33);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(s.default, function() {
		this.attributes({
			experimentId: "rweb_a_a_test_2_9177"
		}), this.after("initialize", function() {
			this.observe(this.requestResource("/1.1/help/settings.json")).pluck("config", this.attr.experimentId, "value").filter(function(e) {
				return void 0 !== e
			}).take(1).subscribe(this.setupExperiment.bind(this))
		}), this.setupExperiment = function() {
			this.on(document, "TD.ready", this.ddgImpression), this.on(document, "uiRwebComposerExperimentImpression", this.ddgImpression)
		}, this.ddgImpression = function() {
			var e = (0, r.getExperimentBucket)(this.attr.experimentId);
			["control", "treatment"].includes(e) ? this.trigger("ddgImpression", {
				name: this.attr.experimentId,
				bucket: e
			}) : TD.util.metric("tweetdeck-rweb-composer:aa2:bad-experiment-impression")
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = l(i(44)),
		s = l(i(162)),
		r = l(i(9)),
		a = i(5),
		o = i(47);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = i(137);
	e.exports = (0, a.component)(c, function() {
		this.attributes({
			logoutTimeout: 1e4
		}), this.initialState({
			badAccounts: {}
		}), this.after("initialize", function() {
			this.on(document, "dataTwitterAccountAccessSuccess", this.handleAccessSuccess), this.on(document, "dataTwitterAccountAccessDenied", this.handleAccessDenied), this.after("stateChanged", this.handleStateChanged)
		}), this.handleAccessSuccess = function(e, t) {
			var i = t.account.getKey();
			if (this.state.badAccounts[i]) {
				clearTimeout(this.state.badAccounts[i].logoutTimeoutId);
				var n = (0, r.default)({}, this.state.badAccounts);
				delete n[i], this.replaceState({
					badAccounts: n
				})
			}
		}, this.handleAccessDenied = function(e, t) {
			var i = t.account.getKey();
			if (!this.state.badAccounts[i]) {
				var n = this.addBadAccountFromEventData(this.state, t);
				this.replaceState(n), (0, o.getClientByAccountKey)(i).getHomeTimeline(null, null, 1)
			}
		}, this.handleStateChanged = function(e) {
			var t = this.getBadAccount(e);
			t ? this.trigger("uiShowAccountAccessDeniedBanner", t.eventData) : this.trigger("uiHideAccountAccessDeniedBanner")
		}, this.addBadAccountFromEventData = function(e, t) {
			var i = t.account.getKey(),
				n = {
					eventData: t,
					logoutTimeoutId: t.isLoginAccount ? setTimeout(this.signOut.bind(this), this.attr.logoutTimeout) : null
				};
			return (0, r.default)({}, e, {
				badAccounts: (0, r.default)({}, e.badAccounts, (0, s.default)({}, i, (0, r.default)({}, e.badAccounts[i], n)))
			})
		}, this.getBadAccount = function(e) {
			var t = (0, n.default)(e.badAccounts),
				i = t.find(function(t) {
					return e.badAccounts[t].eventData.isLoginAccount
				}),
				s = i || t[0];
			return e.badAccounts[s]
		}, this.signOut = function() {
			TD.storage.accountController.getCookieAccount() ? this.trigger(document, "uiReload") : this.trigger(document, "uiLogout", {
				allSessions: !0
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = m(i(77)),
		s = m(i(0)),
		r = i(5),
		a = m(i(45)),
		o = m(i(18)),
		l = m(i(36)),
		c = m(i(73)),
		u = i(74),
		d = i(131),
		h = i(47);

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(o.default, a.default, function() {
		this.attributes({
			accountUpdateDebounce: 50
		}), this.after("initialize", function() {
			this.on(document, "TD.ready", this.initializeAccountsState), this.on(document, "TD.ready", this.initializeAccountIntegrityCheck), this.on(document, "uiNeedsSingleAccountStatus", this.handleNeedsSingleAccountStatus), this.accountsStream = new l.default.BehaviorSubject((0, u.getTwitterAccounts)()), this.stateStream = this.accountsStream.map(u.filterAccountsWithClient).distinctUntilChanged(n.default).map(function(e) {
				return {
					accounts: e,
					defaultAccount: e.find(function(e) {
						return e.isDefault
					}),
					loginAccount: e.find(function(e) {
						return e.isTwoginAccount
					})
				}
			}), this.provideResource("accounts.state", this.stateStream), this.observe(this.stateStream).pluck("defaultAccount").filter(Boolean).distinctUntilChanged(c.default.shallowEquals()).subscribe(this.broadcastClient.bind(this)), this.subscription = s.default.subscribe("/storage/client/default_account_changed", this.pushAccounts.bind(this)), this.subscriptionToAccountChange = s.default.subscribe("/storage/account/change", this.pushAccounts.bind(this)), this.on(document, "dataAccountWhitelist dataContributeeInviteSuccess dataClientsUpdated", this.pushAccounts.bind(this)), this.on(document, "uiAccountAction", this.handleAccountAction), this.on(document, "dataContributorActionSuccess", this.handleContributorActionSuccess), this.on(document, "dataTwitterAccountAccessDenied", this.handleTwitterAccountAccessDenied), this.on(document, "dataTwitterAccountAccessSuccess", this.handleTwitterAccountAccessSuccess)
		}), this.before("teardown", function() {
			s.default.unsubscribe(this.subscription), s.default.unsubscribe(this.subscriptionToAccountChange), this.accountsStream.unsubscribe()
		}), this.initializeAccountsState = function() {
			this.pushAccounts()
		}, this.initializeAccountIntegrityCheck = function() {
			this.on(document, "focus", this.validatePrimaryAccountIntegrity)
		}, this.validatePrimaryAccountIntegrity = function() {
			(0, d.checkCookie)()
		}, this.getAndSendAccount = function(e) {
			var t = (0, u.getAccount)(e);
			this.sendAccount(t)
		}, this.pushAccounts = function() {
			this.accountsStream.next((0, u.getTwitterAccounts)())
		}, this.broadcastClient = function() {
			this.trigger("dataTwitterClientChanged", {
				client: (0, h.getTwitterClient)()
			})
		}, this.handleAccountAction = function(e, t) {
			switch (t.action) {
				case "rewriteColumns":
					if (!TD.decider.get("enable_rewrite_columns")) break;
					var i = this.chooseNextAvailableAccount((0, u.getAccountsForService)("twitter"), t.accountKey);
					(0, u.getDefaultAccount)().accountKey === t.accountKey && (0, u.setDefaultAccount)(i.accountKey), this.rewriteColumns(t.accountKey, i.accountKey), (0, u.removeAccount)(t.accountKey);
					break;
				case "remove":
					(0, u.removeAccount)(t.accountKey);
					break;
				case "setDefault":
					(0, u.setDefaultAccount)(t.accountKey)
			}
		}, this.handleContributorActionSuccess = function(e, t) {
			var i = (0, u.getTwitterLoginAccount)();
			if (i) switch (t.request.action) {
				case "remove":
					t.request.userId === i.userId && (0, u.removeAccount)(t.request.accountKey);
					break;
				case "update":
					t.request.userId === i.userId && (0, u.setIsAdmin)(t.request.accountKey, t.request.isAdmin)
			}
		}, this.handleNeedsSingleAccountStatus = function() {
			this.trigger("dataSingleAccountStatus", {
				isSingleAccount: 1 === (0, u.getTwitterAccounts)().length
			})
		}, this.handleTwitterAccountAccessDenied = function(e, t) {
			var i = t.account;
			i && i.setPrivate("isAccessDenied", !0)
		}, this.handleTwitterAccountAccessSuccess = function(e, t) {
			var i = t.account;
			i && i.getPrivate("isAccessDenied") && (i.setPrivate("isAccessDenied", !1), this.trigger("dataTwitterAccountAccessEnabled", {
				accountKey: i.getKey()
			}))
		}, this.rewriteColumns = function(e, t) {
			this.trigger("dataAccountsRewriteColumns", {
				sourceAccountKey: e,
				targetAccountKey: t
			})
		}, this.chooseNextAvailableAccount = function(e, t) {
			return e.find(function(e) {
				return e.accountKey !== t
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = h(i(415)),
		s = h(i(218)),
		r = i(5),
		a = h(i(18)),
		o = h(i(137)),
		l = h(i(45)),
		c = h(i(73)),
		u = i(74),
		d = i(47);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(o.default, function() {
		this.initialState({}), this.after("initialize", function() {
			var e = this;
			this.observe(this.requestResource("accounts.state")).pluck("accounts").flatMap(s.default).filter(this.shouldFetchAccount.bind(this)).do(this.makeSetStateFetchingAccount(!0).bind(this)).flatMap(c.default.makeFromDeferred(function(t) {
				return e.fixAccount(t)
			})).do(this.makeSetStateFetchingAccount(!1).bind(this)).publish().connect()
		}), this.fixAccount = function(e) {
			var t = (0, u.getTwitterLoginAccount)(),
				i = TD.core.defer.succeed();
			return i.addCallbackWith(this, function() {
				return this.fetchUser(e.userId, t.accountKey)
			}), i.addCallbackWith(this, function(t) {
				(0, u.updateAccount)(e.accountKey, t)
			}), i.addBoth((0, n.default)(e)), i
		}, this.fetchUser = function(e, t) {
			var i = new TD.core.defer.Deferred,
				n = (0, d.getClientByAccountKey)(t);
			return n.showUser(e, null, i.callback.bind(i), i.errback.bind(i)), i
		}, this.shouldFetchAccount = function(e) {
			var t = this.state;
			return e.isMissingUserData && !t[e.userId]
		}, this.makeSetStateFetchingAccount = function(e) {
			return function(t) {
				var i = {};
				i[t.userId] = e, this.mergeState(i)
			}
		}
	}, a.default, l.default)
}, function(e, t, i) {
	"use strict";
	var n = l(i(2377)),
		s = l(i(2)),
		r = l(i(0)),
		a = l(i(18)),
		o = i(19);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = i(36),
		u = i(5).component,
		d = i(45),
		h = i(137);
	e.exports = u(h, function() {
		this.attributes({
			collectionUrlRegex: /twitter.com\/([a-z0-9_]+)\/timelines\/(\d+)/i
		}), this.initialState({}), this.after("initialize", function() {
			this.on(document, "dataCustomTimelineSuccess", this.handleCollection), this.on(document, "dataCustomTimelineError", this.handleCollectionError);
			var e = this.observe(this.requestResource("accounts.state")),
				t = c.Observable.fromEvent((0, r.default)(document), "uiAddColumnsByUrl", function(e, t) {
					return t
				}).flatMap(function(e) {
					return e.urls
				}).map(this.matchCollectionUrl, this).filter(Boolean).map(this.makeCollectionFromRegexMatch, this).filter(this.isNewCollection, this).share();
			this.stateUpdater = t.map(function(e) {
				var t = {};
				return t[e.id] = e, t
			}).subscribe(this.mergeState.bind(this)), this.fetcher = t.withLatestFrom(e, function(e, t) {
				return {
					collection: e,
					accountsState: t
				}
			}).subscribe(this.fetchCollection.bind(this))
		}), this.after("teardown", function() {
			this.stateUpdater.unsubscribe(), this.fetcher.unsubscribe()
		}), this.matchCollectionUrl = function(e) {
			return e.match(this.attr.collectionUrlRegex)
		}, this.makeCollectionFromRegexMatch = function(e) {
			return {
				id: "custom-" + e[2],
				screenName: e[1].toLowerCase()
			}
		}, this.isNewCollection = function(e) {
			return !this.state[e.id]
		}, this.fetchCollection = function(e) {
			var t = this.bestAccountForCollection(e.collection, e.accountsState);
			this.trigger(document, "uiNeedsCustomTimeline", {
				id: e.collection.id,
				account: t.accountKey
			})
		}, this.bestAccountForCollection = function(e, t) {
			var i = t.accounts.filter(function(t) {
				return e.screenName === t.screenName.toLowerCase()
			})[0];
			return i || t.defaultAccount
		}, this.handleCollection = function(e, t) {
			var i = t.result.id;
			this.state[i] && (this.addCollectionColumn(t.result), this.removeCollection(i))
		}, this.handleCollectionError = function(e, t) {
			var i = t.action.id;
			this.state[i] && ((0, o.showErrorNotification)({
				message: (0, s.default)("Could not add Collection")
			}), this.removeCollection(i))
		}, this.removeCollection = function(e) {
			this.replaceState((0, n.default)(this.state, e))
		}, this.addCollectionColumn = function(e) {
			var t = new TD.components.TemporaryColumn;
			t.customTimeline(e), t.populate(), t.makePermanent(), setTimeout(function() {
				t.destroy()
			}, 0)
		}
	}, a.default, d)
}, , function(e, t, i) {
	"use strict";
	var n = r(i(68)),
		s = r(i(43));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component;
	e.exports = a(function() {
		this.deleteColumn = function(e, t) {
			var i = t.columnId;
			i && TD.controller.columnManager.deleteColumn(i)
		}, this.moveColumn = function(e, t) {
			var i = t.columnId,
				n = t.action;
			i && n && TD.controller.columnManager.move(i, n)
		}, this.handleUiNeedsSerializedColumn = function(e, t) {
			var i = TD.controller.columnManager.get(t.columnId),
				r = {
					feeds: (0, s.default)(i.getFeeds(), function(e) {
						return e.state
					}),
					filters: i.getSearchFilter().toJSONObject()
				};
			this.trigger("dataSerializedColumn", {
				columnId: t.columnId,
				column: r,
				url: "https://tweetdeck.twitter.com/#column=" + TD.core.base64.encode((0, n.default)(r))
			})
		}, this.after("initialize", function() {
			this.on(document, "uiDeleteColumnAction", this.deleteColumn), this.on(document, "uiMoveColumnAction", this.moveColumn), this.on(document, "uiNeedsSerializedColumn", this.handleUiNeedsSerializedColumn)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(527)),
		s = i(233),
		r = a(i(18));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component,
		l = i(45),
		c = i(36),
		u = i(73);
	e.exports = o(l, function() {
		this.attributes({
			pollIntervalMs: 9e5
		}), this.after("initialize", function() {
			var e = this,
				t = c.Observable.combineLatest([this.observe(c.Observable.timer(0, this.attr.pollIntervalMs)), this.observe(this.requestResource("accounts.state")).pluck("defaultAccount").filter(Boolean).distinctUntilKeyChanged("accountKey"), u.fromEventOnce(this.$node, "TD.ready")], function(e, t) {
					return t
				}).flatMap(function(t) {
					return u.fromDeferred(e.getConfiguration(t)).catch(function(e) {
						return c.Observable.empty()
					})
				}).startWith({
					dm_text_character_limit: 1e4,
					characters_reserved_per_media: 23,
					max_media_per_upload: 1,
					non_username_paths: ["about", "account", "accounts", "activity", "all", "announcements", "anywhere", "api_rules", "api_terms", "apirules", "apps", "auth", "badges", "blog", "business", "buttons", "contacts", "devices", "direct_messages", "download", "downloads", "edit_announcements", "faq", "favorites", "find_sources", "find_users", "followers", "following", "friend_request", "friendrequest", "friends", "goodies", "help", "home", "i", "im_account", "inbox", "invitations", "invite", "jobs", "list", "login", "logo", "logout", "me", "mentions", "messages", "mockview", "newtwitter", "notifications", "nudge", "oauth", "phoenix_search", "positions", "privacy", "public_timeline", "related_tweets", "replies", "retweeted_of_mine", "retweets", "retweets_by_others", "rules", "saved_searches", "search", "sent", "sessions", "settings", "share", "signup", "signin", "similar_to", "statistics", "terms", "tos", "translate", "trends", "tweetbutton", "twttr", "update_discoverability", "users", "welcome", "who_to_follow", "widgets", "zendesk_auth", "media_signup"],
					photo_size_limit: 3145728,
					photo_sizes: {
						thumb: {
							h: 150,
							resize: "crop",
							w: 150
						},
						small: {
							h: 480,
							resize: "fit",
							w: 340
						},
						medium: {
							h: 1200,
							resize: "fit",
							w: 600
						},
						large: {
							h: 2048,
							resize: "fit",
							w: 1024
						}
					},
					short_url_length: 23,
					transformedURLLength: 23,
					client_event_url: "https://twitter.com/scribe"
				}).publishReplay(1).refCount().map(function(e) {
					return "help_configuration_overlay" in TD.config ? (0, n.default)(e, TD.config.help_configuration_overlay || {}) : e
				});
			this.provideResource("/1.1/help/configuration.json", t), this.observe(c.Observable.fromEvent(this.$node, "uiNeedsHelpConfiguration")).withLatestFrom(t, function(e, t) {
				return t
			}).subscribe(function(e) {
				this.trigger("dataHelpConfiguration", e)
			}.bind(this))
		}), this.getConfiguration = function(e) {
			return (0, s.makeTwitterRequest)(e.accountKey, "help/configuration.json").addCallback(function(e) {
				return e.data
			})
		}
	}, r.default)
}, , , , , function(e, t, i) {
	"use strict";
	var n, s = i(111),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(233);
	var o = i(5).component;
	e.exports = o(function() {
		this.attributes({}), this.after("initialize", function() {
			this.on(document, "uiNeedsContributees", this.handleUiNeedsContributees), this.on(document, "uiAcceptContributeeInvite", this.handleUiAcceptContributeeInvite), this.on(document, "uiRemoveContributee", this.handleUiRemoveContributee), this.on(document, "uiNeedsContributors", this.handleUiNeedsContributors), this.on(document, "uiContributorAction", this.handleUiContributorAction)
		}), this.triggerResult = function(e, t, i) {
			this.trigger(e, {
				request: t,
				response: i
			})
		};
		var e = function(e) {
			return {
				id: e.user.id_str,
				isAdmin: !!e.admin
			}
		};
		this.handleUiNeedsContributees = function(t, i) {
			var n = (0, a.makeTwitterRequest)(i.accountKey, "users/contributees/pending.json", {}),
				s = (0, a.makeTwitterRequest)(i.accountKey, "users/contributees.json", {}),
				o = TD.core.defer.gatherResults([n, s]);
			o.addCallback(function(t) {
				var n = (0, r.default)(t, 2),
					s = n[0],
					a = n[1],
					o = a.data.map(e),
					l = s.data.map(e);
				this.trigger("dataContributees", {
					accountKey: i.accountKey,
					contributees: o,
					pending: l
				})
			}.bind(this))
		}, this.handleUiRemoveContributee = function(e, t) {
			var i = (0, a.makeTwitterRequest)(t.accountKey, "users/contributees/destroy.json", {
				method: "POST",
				params: {
					user_id: t.userId
				}
			});
			i.addCallbacks(this.triggerResult.bind(this, "dataContributeeRemoveSuccess", t), this.triggerResult.bind(this, "dataContributeeRemoveError", t))
		}, this.handleUiAcceptContributeeInvite = function(e, t) {
			var i = this,
				n = (0, a.makeTwitterRequest)(t.accountKey, "users/contributees/accept.json", {
					method: "POST",
					params: {
						user_id: t.userId
					}
				});
			n.addCallbacks(function() {
				return i.trigger("dataContributeeAcceptSuccess", t)
			}, function() {
				return i.triggerResult("dataContributeeAcceptError", t)
			})
		}, this.handleUiNeedsContributors = function(e, t) {
			var i = (0, a.makeTwitterRequest)(t.accountKey, "users/contributors/pending.json", {}),
				n = (0, a.makeTwitterRequest)(t.accountKey, "users/contributors.json", {}),
				s = TD.core.defer.gatherResults([i, n]);
			s.addCallback(function(e) {
				var i = (0, r.default)(e, 2),
					n = i[0],
					s = i[1],
					a = this.processContributorsData(s.data, t.accountKey),
					o = this.processContributorsData(n.data, t.accountKey);
				this.trigger("dataContributors", {
					accountKey: t.accountKey,
					contributors: a,
					pending: o
				})
			}.bind(this)), s.addErrback(this.triggerResult.bind(this, "dataContributorsError", t))
		}, this.processContributorsData = function(e, t) {
			var i = TD.storage.accountController.get(t);
			return e.map(function(e) {
				return {
					user: new TD.services.TwitterUser(i).fromJSONObject(e.user, {
						isContributor: !0
					}),
					isAdmin: e.admin
				}
			})
		}, this.handleUiContributorAction = function(e, t) {
			var i;
			t.userId ? i = TD.core.defer.succeed() : (i = TD.cache.twitterUsers.getByScreenName(t.screenName)).addCallback(function(e) {
				t.userId = e.id
			}), i.addCallback(this.performContributorAction.bind(this, t)), i.addCallbacks(this.triggerResult.bind(this, "dataContributorActionSuccess", t), this.triggerResult.bind(this, "dataContributorActionError", t))
		}, this.updateContributor = function(e) {
			var t = (0, a.makeTwitterRequest)(e.accountKey, "users/contributors/update.json", {
				method: "POST",
				params: {
					user_id: e.userId,
					admin: !!e.isAdmin
				}
			});
			return t
		}, this.removeContributor = function(e) {
			return (0, a.makeTwitterRequest)(e.accountKey, "users/contributors/destroy.json", {
				method: "POST",
				params: {
					user_id: e.userId
				}
			})
		}, this.performContributorAction = function(e) {
			var t;
			switch (e.action && this.trigger("metric", {
					key: "contributors:data:action:" + e.action
				}), e.action) {
				case "add":
				case "update":
					t = this.updateContributor(e);
					break;
				case "remove":
					t = this.removeContributor(e);
					break;
				default:
					t = TD.core.defer.fail()
			}
			return t
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(2386)),
		s = r(i(18));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(83),
		o = i(36);
	e.exports = a.mixin(function() {
		this.attributes({
			pollMs: 18e5
		}), this.after("initialize", function() {
			this.observe(o.Observable.timer(0, this.attr.pollMs)).subscribe(this.metricCookieSize.bind(this))
		}), this.metricCookieSize = function() {
			TD.util.metric("cookie-size:all:size", [document.cookie.length], "metric"), TD.util.metric("cookie-size:all:count", [document.cookie.split("; ").length], "metric");
			var e = document.cookie.match(/mp_.+?;/g);
			if (e) {
				var t = e.map(TD.util.pluck("length")),
					i = t.reduce(n.default, 0);
				TD.util.metric("cookie-size:mixpanel:sizes", t, "metric"), TD.util.metric("cookie-size:mixpanel:count", [e.length], "metric"), TD.util.metric("cookie-size:mixpanel:total-size", [i], "metric")
			}
		}
	}, s.default)
}, , function(e, t, i) {
	"use strict";
	var n = o(i(2)),
		s = i(5),
		r = o(i(2388)),
		a = i(19);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, s.component)(function() {
		this.createMoment = function(e, t) {
			var i = t.collection,
				s = i.id,
				o = i.name,
				l = i.description,
				c = i.user,
				u = r.default.create({
					title: o,
					curatorId: c.id,
					collectionId: s,
					description: l
				});
			u.addCallbacks(function(e) {
				var t = e.moment.id;
				TD.util.openURL("https://momentmaker.twitter.com/moment-maker/" + t)
			}, function(e) {
				(0, a.showErrorNotification)({
					message: (0, n.default)("Error creating Moment")
				})
			})
		}, this.after("initialize", function() {
			this.on(document, "uiCreateMomentAction", this.createMoment)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(284));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = TD.config,
		o = a.twitter_api_base + "/" + a.twitter_api_version;
	e.exports = {
		create: function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = o + "/moments/create.json",
				i = e.title,
				r = e.description,
				a = e.collectionId,
				l = e.curatorId,
				c = TD.storage.accountController.getAccountFromId(l);
			if (!e.collectionId || !e.curatorId) throw Error("Required field is missing");
			var u = {
					params: {
						title: i || (0, n.default)("New Moment"),
						description: r || (0, n.default)("Add a description"),
						scratch_buffer_timeline_id: a.replace("custom-", ""),
						curator_id: l,
						is_production_only: !1
					},
					headers: {
						"content-type": "application/json",
						"X-Twitter-UTCOffset": "+0400"
					},
					handleSuccess: !0,
					method: "POST",
					account: c
				},
				d = TD.net.ajax.request(t, u);
			return d.addCallbacks(function(e) {
				return {
					moment: e.data.created_moment.moment
				}
			}, function(e) {
				return s.default.processErrorResponse(t, u, e, c)
			}), d
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = i(47),
		s = i(5).component;
	e.exports = s(function() {
		this.handleEmbeddedTweetFactory = function(e) {
			return function(t) {
				t.request = e, this.trigger(document, "dataEmbeddedTweet", t)
			}
		}, this.handleErrorFactory = function(e) {
			return function() {
				var t = {
					request: e
				};
				this.trigger(document, "dataEmbeddedTweetError", t)
			}
		}, this.getEmbeddedTweet = function(e, t) {
			t && t.tweetID && (0, n.getTwitterClient)().getEmbeddedTweet(t.tweetID, t.hideThread, t.hideMedia, t.maxWidth, this.handleEmbeddedTweetFactory(t).bind(this), this.handleErrorFactory(t).bind(this))
		}, this.after("initialize", function() {
			this.on(document, "uiNeedsEmbeddedTweet", this.getEmbeddedTweet)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(281)),
		s = o(i(356)),
		r = i(5),
		a = i(2391);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(function() {
		this.after("initialize", function() {
			this.on(document, "uiHidingMessageBanner", this.dismissMessage), this.on(document, "dataMessages", this.handleMessages)
		}), this.handleMessages = function(e, t) {
			var i = t.messages;
			i && (i = (i = (i = i.filter(this.satisfiesPlatformRequirements, this)).filter(this.satisfiesVersionRequirements, this)).filter(this.hasNotBeenDismissed, this)).length && this.trigger("dataMessage", i[0])
		}, this.dismissMessage = function(e, t) {
			this.updateIdsForSeenMessages(), this.idsForSeenMessages.push(t.id), TD.settings.setIdsForSeenMessages(this.idsForSeenMessages)
		}, this.satisfiesPlatformRequirements = function(e) {
			if (e.target && e.target.platform) {
				var t = TD.util.getAppEnv();
				return (0, s.default)(e.target.platform, t)
			}
			return !0
		}, this.satisfiesVersionRequirements = function(e) {
			return !e.target || !e.target.version || (0, a.appSatisfiesVersionRequirements)(e.target.version)
		}, this.hasNotBeenDismissed = function(e) {
			if (e.message) {
				this.updateIdsForSeenMessages();
				var t = this.idsForSeenMessages.every(function(t) {
					return e.message.id !== t
				});
				return t
			}
			return !1
		}, this.updateIdsForSeenMessages = function() {
			var e = TD.settings.getIdsForSeenMessages();
			this.idsForSeenMessages = (0, n.default)(this.idsForSeenMessages, e)
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(282)),
		s = r(i(2392));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.appSatisfiesVersionRequirements = function(e) {
		var t = TD.version,
			i = e.split(" ");
		return (0, s.default)(i, function(e) {
			var i = e.match(/[<=>]*/)[0],
				s = e.substr(i.length),
				r = [];
			(0, n.default)(i, ">") ? r.push(1): (0, n.default)(i, "<") && r.push(-1), ((0, n.default)(i, "=") || 0 === i.length) && r.push(0);
			var a = TD.util.versionComparator(t, s);
			return (0, n.default)(r, a)
		})
	}
}, , function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.send = function(e) {
			this.trigger(document, "dataPreferredAccount", {
				account: e
			})
		}, this.getPreferredTwitterAccount = function() {
			this.ready && this.send(TD.storage.accountController.getPreferredAccount("twitter"))
		}, this.tdReady = function() {
			this.ready = !0, this.getPreferredTwitterAccount(), this.off(document, "TD.ready", this.tdReady)
		}, this.after("initialize", function() {
			this.on(document, "uiNeedsPreferredAccount", this.getPreferredTwitterAccount), this.on(document, "TD.ready", this.tdReady), r.default.subscribe("/storage/account/new", this.getPreferredTwitterAccount.bind(this)), r.default.subscribe("/storage/client/default_account_changed", this.getPreferredTwitterAccount.bind(this))
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5),
		s = i(47);
	e.exports = (0, n.component)(function() {
		this.handleRelationship = function(e) {
			this.trigger(document, "dataRelationship", e)
		}, this.handleError = function(e) {
			return function() {
				this.trigger(document, "dataRelationshipError", e)
			}
		}, this.getRelationship = function(e, t) {
			t && t.account && t.screenName && (0, s.getClientByAccount)(t.account).showFriendship(t.account.getUserID(), null, t.screenName, this.handleRelationship.bind(this), this.handleError(t).bind(this))
		}, this.after("initialize", function() {
			this.on(document, "uiNeedsRelationship", this.getRelationship)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(5),
		r = i(47),
		a = i(33),
		o = (n = a) && n.__esModule ? n : {
			default: n
		};
	e.exports = (0, s.component)(function() {
		this.after("initialize", function() {
			this.on("uiNeedsFavoriteState", this.getFavoriteState), this.on("uiFavoriteTweet", this.handleFavoriteTweet), this.on("uiUnfavoriteTweet", this.handleUnfavoriteTweet)
		}), this.handleErrorFactory = function(e, t) {
			return function(i) {
				this.trigger(document, t, {
					request: e,
					error: i
				})
			}.bind(this)
		}, this.handleFavoriteState = function(e) {
			this.trigger("dataFavoriteState", {
				tweetId: e.id,
				isFavorite: e.isFavorite,
				accountKey: e.account.getKey()
			})
		}, this.handleFavoriteTweet = function(e, t) {
			(0, r.getClientByAccountKey)(t.accountKey).favorite(t.tweet.id, this.handleFavoriteSuccessFactory(t, !0), this.handleErrorFactory(t, "dataFavoriteError")), o.default.like(t.tweet.getScribeItemData(), t.tweet.account.getUserID(), {
				component: "like_from_account"
			})
		}, this.handleUnfavoriteTweet = function(e, t) {
			(0, r.getClientByAccountKey)(t.accountKey).unfavorite(t.tweet.id, this.handleFavoriteSuccessFactory(t, !1), this.handleErrorFactory(t, "dataFavoriteError")), o.default.unlike(t.tweet.getScribeItemData(), t.tweet.account.getUserID(), {
				component: "like_from_account"
			})
		}, this.handleFavoriteSuccessFactory = function(e, t) {
			return function() {
				this.trigger("dataFavoriteState", {
					tweetId: e.tweet.id,
					accountKey: e.accountKey,
					isFavorite: t
				})
			}.bind(this)
		}, this.getFavoriteState = function(e, t) {
			(0, r.getClientByAccountKey)(t.accountKey).show(t.tweetId, this.handleFavoriteState.bind(this), this.handleErrorFactory(t, "dataFavoriteStateError").bind(this))
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = d(i(32)),
		s = d(i(0)),
		r = d(i(36)),
		a = d(i(83)),
		o = d(i(18)),
		l = d(i(211)),
		c = d(i(17)),
		u = i(468);

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(o.default, l.default, function() {
		this.attributes({
			streamImpressionScribeQuery: "deck:*:*:stream:*:results"
		}), this.initialState({
			jsExecutionTime: Date.now(),
			interactiveTime: 0,
			firstTweetTime: 0,
			isUsingGraphQL: !1
		}), this.after("initialize", function() {
			var e = this;
			this.on(document, "dataUsingGraphQL", function(t, i) {
				e.mergeState({
					isUsingGraphQL: i.isUsingGraphQL
				})
			}), this.observe(this.getInteractiveObservable()).subscribe(function() {
				e.mergeState({
					interactiveTime: Date.now()
				})
			}), this.observe(this.getFirstTweetObservable()).subscribe(function() {
				e.mergeState({
					firstTweetTime: Date.now()
				})
			}), this.observableState.map(this.stateToResult).filter(this.resultLooksOk).do(this.triggerResult.bind(this)).subscribe(this.done.bind(this))
		}), this.getInteractiveObservable = function() {
			return r.default.Observable.fromEvent((0, s.default)(document), "TD.ready").first()
		}, this.getFirstTweetObservable = function() {
			return r.default.Observable.fromEvent((0, s.default)(document), "scribing", function(e, t) {
				return t
			}).pluck("terms").filter(u.scribeQueryMatch.bind(null, this.attr.streamImpressionScribeQuery)).first()
		}, this.stateToResult = function(e) {
			return {
				timeToInteractive: e.interactiveTime - e.jsExecutionTime,
				timeToFirstTweet: e.firstTweetTime - e.jsExecutionTime
			}
		}, this.resultLooksOk = function(e) {
			return e.timeToInteractive > 0 && e.timeToFirstTweet > 0
		}, this.triggerResult = function(e) {
			var t = this.state.isUsingGraphQL ? "graphql" : "non-graphql";
			c.default.metric("time-to-interactive", [e.timeToInteractive], "metric"), c.default.metric("time-to-interactive:" + t, [e.timeToInteractive], "metric"), c.default.metric("time-to-first-tweet", [e.timeToFirstTweet], "metric"), c.default.metric("time-to-first-tweet:" + t, [e.timeToFirstTweet], "metric")
		}, this.done = function() {
			(0, n.default)(this.teardown.bind(this))
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(19);
	var o = i(5).component;
	e.exports = o(function() {
		this.getTwitterUser = function(e, t) {
			t && (t.id ? TD.cache.twitterUsers.getById(t.id) : TD.cache.twitterUsers.getByScreenName(t.screenName)).addCallbacks(this.handleTwitterUser, this.errorHandlerFactory(t.screenName), null, null, this, this)
		}, this.errorHandlerFactory = function(e) {
			return function(t) {
				var i = t.req.errors,
					n = (0, r.default)("Sorry, we couldn't retrieve user @{{1}}", {
						1: e
					}),
					s = !1;
				i && i.forEach(function(e) {
					63 === e.twitterErrorCode ? s = !0 : e.message && (n += " - " + e.message)
				}), s || (0, a.showErrorNotification)({
					message: n
				}), this.trigger("dataTwitterUserError", {
					screenName: e
				})
			}.bind(this)
		}, this.handleTwitterUser = function(e) {
			e && e.account && this.trigger(document, "dataTwitterUser", e)
		}, this.after("initialize", function() {
			this.on(document, "uiNeedsTwitterUser", this.getTwitterUser)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.attributes({
			actions: {
				follow: {
					userAction: "follow",
					errorEvent: "dataFollowActionError"
				},
				unfollow: {
					userAction: "unfollow",
					errorEvent: "dataUnfollowActionError"
				},
				block: {
					userAction: "block",
					errorEvent: "dataBlockActionError"
				},
				unblock: {
					userAction: "unblock",
					errorEvent: "dataUnblockActionError"
				},
				mute: {
					userAction: "mute",
					errorEvent: "dataMuteActionError"
				},
				unmute: {
					userAction: "unmute",
					errorEvent: "dataUnmuteActionError"
				},
				report: {
					userAction: "report",
					errorEvent: "dataReportActionError"
				},
				reportSpam: {
					userAction: "reportSpam",
					errorEvent: "dataReportSpamActionError"
				},
				reportCompromised: {
					userAction: "reportCompromised",
					errorEvent: "dataReportCompromisedActionError"
				}
			}
		}), this.error = function(e, t) {
			return function(i) {
				var n;
				n = {
					request: t,
					response: i
				}, this.trigger(document, e.errorEvent, n)
			}
		}, this.success = function(e, t) {
			return function(i) {
				this.trigger("dataFollowStateChange", {
					action: e,
					request: t,
					response: i
				})
			}
		}, this.takeAction = function(e, t, i) {
			var n = this.success(e, i).bind(this),
				s = this.error(e, i).bind(this),
				r = e.userAction;
			try {
				switch (r) {
					case "block":
						i.twitterUser.block(i.account, !1, n, s);
						break;
					case "unblock":
						i.twitterUser.unblock(i.account, n, s);
						break;
					case "follow":
						i.twitterUser.follow(i.account, n, s, !0);
						break;
					case "unfollow":
						i.twitterUser.unfollow(i.account, n, s, !1);
						break;
					case "mute":
						i.twitterUser.mute(i.account).addCallbacks(n, s);
						break;
					case "unmute":
						i.twitterUser.unmute(i.account).addCallbacks(n, s);
						break;
					case "reportSpam":
						i.twitterUser.block(i.account, !0, n, s, !1)
				}
			} catch (e) {
				this.error()
			}
		}, this.bindAction = function(e) {
			return this.takeAction.bind(this, e)
		}, this.after("initialize", function() {
			this.on(document, "uiFollowAction uiFollowProtectedUserAction", this.bindAction(this.attr.actions.follow)), this.on(document, "uiUnfollowAction", this.bindAction(this.attr.actions.unfollow)), this.on(document, "uiBlockAction", this.bindAction(this.attr.actions.block)), this.on(document, "uiUnblockAction", this.bindAction(this.attr.actions.unblock)), this.on(document, "uiMuteAction", this.bindAction(this.attr.actions.mute)), this.on(document, "uiUnmuteAction", this.bindAction(this.attr.actions.unmute)), this.on(document, "uiReportSpamAction", this.bindAction(this.attr.actions.reportSpam)), this.on(document, "uiReportCompromisedAction", this.bindAction(this.attr.actions.reportCompromised))
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(121)),
		s = a(i(83)),
		r = i(468);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.attributes({
			typedFilterRegex: /OR|".*\s.*"|(^|\s)-\w|\w:\w/,
			aggregationPeriod: 18e5,
			searchInitiatedScribeQuery: "deck:main::search_box:*:search",
			engagementScribeQueries: ["deck:column:twitter:search:favorite:click", "deck:column:twitter:search:reply:click", "deck:column:twitter:search:retweet:click", "deck:column:twitter:search:tweet_to_user:click", "deck:column:twitter:search:send_a_dm_to_user:click", "deck:column:twitter:search:add_or_remove_from_lists:click", "deck:column:twitter:search:follow_or_unfollow_from_accounts:click", "deck:column:twitter:search:like_or_unlike_from_accounts:click", "deck:column:twitter:search:follow:click", "deck:column:twitter:search:link_to_this_tweet:click", "deck:column:twitter:search:share_via_dm:click", "deck:column:twitter:search:share_via_email:click", "deck:column:twitter:search:add_to_collection:click", "deck:column:twitter:search:embed_this_tweet:click", "deck:column:twitter:search:permalink:click"]
		}), this.initialState({
			isRecording: !1,
			engagementCount: 0,
			usesTypedFilters: !1,
			usesUIFilters: !1
		}), this.after("initialize", function() {
			var e = this,
				t = (0, n.default)(this.recordResult.bind(this), this.attr.aggregationPeriod, {
					leading: !1,
					trailing: !0
				});
			this.on(document, "dataSearchPoll", this.handleSearchPoll), this.on(document, "scribing", function(i, n) {
				(0, r.scribeTermsMatch)(n.terms, e.attr.searchInitiatedScribeQuery) && (e.startRecording(), t())
			}), this.on(document, "scribing", function(t, i) {
				if (e.state.isRecording) {
					var n = e.attr.engagementScribeQueries.some(r.scribeTermsMatch.bind(null, i.terms));
					n && e.incrementCounter()
				}
			})
		}), this.startRecording = function() {
			this.mergeState({
				isRecording: !0
			})
		}, this.stopRecording = function() {
			this.mergeState({
				isRecording: !1
			})
		}, this.resetCounter = function() {
			this.mergeState({
				engagementCount: 0
			})
		}, this.incrementCounter = function() {
			this.mergeState({
				engagementCount: this.state.engagementCount + 1
			})
		}, this.handleSearchPoll = function(e, t) {
			var i = t.baseQuery,
				n = t.uiQuery;
			this.mergeState({
				usesTypedFilters: this.state.usesTypedFilters || this.attr.typedFilterRegex.test(i),
				usesUIFilters: this.state.usesUIFilters || Boolean(n)
			})
		}, this.recordResult = function() {
			var e = this.state.engagementCount;
			this.resetCounter(), this.stopRecording(), TD.decider.get("track_search_engagement") && this.trigger("metric", {
				type: "metric",
				key: ["search", "engagements", this.state.usesUIFilters ? "filter-ui" : "basic", this.state.usesTypedFilters ? "filter-typed" : "basic"].join(":"),
				value: [e]
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(211),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(45);
	e.exports = a(o, r.default, function() {
		this.after("initialize", function() {
			this.on(document, "dataSettingsValues", this.handleDataSettingsValues), this.on(document, "uiNeedsSettings", this.handleUiNeedsSettings), this.on(document, "uiNavbarWidthChangeAction", this.handleNavbarWidthChange), this.provideResource("settings.state", this.observableState)
		}), this.handleDataSettingsValues = function(e, t) {
			this.mergeState(t)
		}, this.handleUiNeedsSettings = function() {
			this.settings = {
				navbarWidth: TD.settings.getNavbarWidth()
			}, this.trigger(document, "dataSettings", this.settings)
		}, this.handleNavbarWidthChange = function(e, t) {
			TD.settings.setNavbarWidth(t.navbarWidth), this.settings.navbarWidth = t.navbarWidth, this.trigger(document, "dataSettings", this.settings)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.attributes({
			updatePeriod: 500,
			aggregationPeriod: 1e4
		}), this.updateStreamCount = function(e, t) {
			this.streamCounter.incrementCounter(t.numStreamItems)
		}, this.after("initialize", function() {
			this.on(document, "dataReceivedStreamData", this.updateStreamCount), this.streamCounter = new TD.util.TpmCounter(this.attr.updatePeriod, this.attr.aggregationPeriod, "dataStreamRate")
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5),
		s = i(47);
	e.exports = (0, n.component)(function() {
		this.handleResponseFactory = function(e, t) {
			return function(i) {
				this.trigger(document, e, {
					request: t,
					result: i
				})
			}.bind(this)
		}, this.doUserSearch = function(e, t) {
			var i = (0, s.getTwitterClient)(),
				n = t.query;
			i ? i.userSearch(n, this.handleResponseFactory("dataUserSearch", t), this.handleResponseFactory("dataUserSearchError", t)) : this.handleResponseFactory("dataUserSearchError", t)()
		}, this.after("initialize", function() {
			this.on(document, "uiNeedsUserSearch", this.doUserSearch)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.saveRecentSearch = function(e, t) {
			TD.storage.clientController.client.addRecentSearch(t.query)
		}, this.getRecentSearches = function(e) {
			var t = {
				recentSearches: TD.storage.clientController.client.getRecentSearches()
			};
			this.trigger("dataRecentSearches", t)
		}, this.clearRecentSearches = function(e) {
			TD.storage.clientController.client.clearRecentSearches()
		}, this.removeRecentSearch = function(e, t) {
			TD.storage.clientController.client.removeRecentSearch(t.query)
		}, this.after("initialize", function() {
			this.on(document, "uiSearch uiSearchNoTemporaryColumn", this.saveRecentSearch), this.on(document, "uiRecentSearchClearAction", this.clearRecentSearches), this.on(document, "uiRecentSearchClearItem", this.removeRecentSearch), this.on(document, "uiNeedsRecentSearches", this.getRecentSearches)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(108)),
		s = u(i(120)),
		r = u(i(88)),
		a = u(i(121)),
		o = u(i(828)),
		l = u(i(0)),
		c = i(47);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var d = i(5).component,
		h = i(2405),
		m = i(2406),
		f = i(2407),
		p = i(2408),
		g = i(2409),
		v = i(2410),
		T = i(2411);
	e.exports = d(function() {
		this.attributes({
			count: 5,
			limits: {
				default: 5,
				lists: 2
			},
			timing: {
				default: 150,
				search: 150,
				compose: 300
			},
			dataSourceToClient: {
				locations: T
			}
		}), this.after("initialize", function() {
			this.currentRequest = {}, this.datasources = {}, this.suggestions = {}, this.userPrefetchComplete = !1, this.getRemoteSuggestionsByType = (0, o.default)(this.attr.timing, function(e, t, i) {
				return e[i] = (0, a.default)(this._getRemoteSuggestions.bind(this), t, {
					leading: !1
				}), e
			}, {}, this), this.on("uiNeedsTypeaheadSuggestions", this.getSuggestions), this.on("uiRecentSearchClearAction", this.updateSuggestions), this.on("uiRecentSearchClearItem", this.updateSuggestions), this.on("dataTypeaheadQueryReset", this.queryReset), this.on("dataTypeaheadUserPrefetchComplete", this.handleUserPrefetchComplete)
		}), this.handleUserPrefetchComplete = function() {
			this.userPrefetchComplete = !0
		}, this.getLimit = function(e) {
			return this.currentRequest.limits[e] || this.currentRequest.limits.default
		}, this.sendSuggestions = function(e) {
			this.trigger("dataTypeaheadSuggestions", {
				query: this.currentRequest.query,
				suggestions: e || this.dedupeSuggestions(this.suggestions),
				datasources: this.currentRequest.datasources,
				dropdownId: this.currentRequest.dropdownId
			})
		}, this.dedupeSuggestions = function(e) {
			var t = {};
			return (e = (0, r.default)(e)).recentSearches = this.dedupeArray(e.recentSearches, null, t), e.savedSearches = this.dedupeArray(e.savedSearches, "query", t), e.topics = this.dedupeArray(e.topics, "topic", t), e
		}, this.dedupeArray = function(e, t, i) {
			return e && 0 !== e.length ? (0, s.default)(e, function(e) {
				var n = t ? e[t] : e,
					s = n.toLowerCase(),
					r = !i[s];
				return i[s] = !0, r
			}) : e
		}, this.processTypeaheadData = function(e, t) {
			t.query === this.currentRequest.query && (t.datasources.forEach(function(t) {
				var i = this.datasources[t],
					n = e[t],
					s = this.getLimit(t);
				i && n && (i.processData(n), this.suggestions[t] = i.getSuggestions(this.currentRequest, s))
			}, this), this.sendSuggestions())
		}, this.updateSuggestions = function() {
			var e = new n.default(function(e) {
				this.userPrefetchComplete ? e() : this.$node.one("dataTypeaheadUserPrefetchComplete", e)
			}.bind(this));
			this.currentRequest && this.currentRequest.datasources && e.then(this.actuallyUpdateSuggestions.bind(this))
		}, this.actuallyUpdateSuggestions = function() {
			this.currentRequest.datasources && (this.currentRequest.datasources.forEach(function(e) {
				var t = this.datasources[e],
					i = this.getLimit(e);
				if (t) {
					var n = t.getSuggestions(this.currentRequest, i);
					n && n.length > 0 && (this.suggestions[e] = n)
				}
			}, this), this.sendSuggestions())
		}, this.handleGetSuggestionsError = function() {
			this.trigger("dataTypeaheadSuggestionsError")
		}, this._getRemoteSuggestions = function() {
			var e = this.currentRequest,
				t = e.datasources,
				i = e.query,
				n = e.limits,
				s = !i || "" === i.trim();
			if (!s) {
				var r = 1 === t.length,
					a = this.attr.dataSourceToClient.hasOwnProperty(t[0]);
				r && a ? this.getRemoteSuggestionsFromClient(t[0], i, n) : this.getRemoteSuggestionsFromTwitterClient()
			}
		}, this.getRemoteSuggestionsFromClient = function(e, t, i) {
			var n = this.attr.dataSourceToClient[e],
				s = n.search({
					query: t,
					maxResults: i[e]
				});
			s.addCallback(this.sendSuggestions.bind(this), this.handleGetSuggestionsError.bind(this))
		}, this.getRemoteSuggestionsFromTwitterClient = function() {
			var e = (0, c.getTwitterClient)();
			e.typeaheadSearch(this.currentRequest, this.processTypeaheadData.bind(this), this.handleGetSuggestionsError.bind(this))
		}, this.getSuggestions = function(e, t) {
			if (t.query !== this.currentRequest.query) {
				var i = l.default.extend({}, this.attr.limits, t.limits);
				this.currentRequest = {
					accountKey: t.accountKey,
					query: t.query,
					datasources: t.datasources,
					count: this.attr.count,
					dropdownId: t.dropdownId,
					limits: i
				}, this.suggestions = {}, this.updateSuggestions(), t.onlyLocalData || this.getRemoteSuggestions(t.type)
			}
		}, this.queryReset = function() {
			this.currentRequest = {}
		}, this.getRemoteSuggestions = function(e) {
			e = e || "default", this.attr.timing[e] || (e = "default");
			var t = this.getRemoteSuggestionsByType[e];
			if (!t) throw new Error("No matching remote suggestion debounce type.");
			return t()
		}
	}, h, m, f, p, g, v)
}, function(e, t, i) {
	"use strict";
	var n = o(i(122)),
		s = o(i(99)),
		r = o(i(15)),
		a = i(47);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function(e) {
		this.attributes({
			usersStorageLimit: 2500,
			storageUserHash: "typeaheadUserHash",
			storageUserLastPrefetch: "typeaheadUserLastPrefetch"
		}), this.after("initialize", function() {
			this.userAdjacencyList = {}, this.userHash = {}, this.blockedUserIds = {}, this.datasources = this.datasources || {}, this.datasources.users = {
				processData: this.processUserData.bind(this),
				getSuggestions: this.getUserSuggestions.bind(this)
			}, this.on(document, "dataStorageItem", this.processUserStorageItem), this.on(document, "TD.ready", this.loadUserData), this.on(document, "dataTwitterClientChanged", this.resetUserData), this.on(document, "dataStorageFull", this.pruneUsers)
		}), this.tokenize = function(e) {
			return e.trim().toLowerCase().split(TD.constants.regexps.tokenSeparator)
		}, this.overwriteUserdata = function(e) {
			this.userHash = {}, this.userAdjacencyList = {}, this.processUserData(e)
		}, this.processUserData = function(e) {
			(0, r.default)(e, function(e) {
				e.tokens = e.tokens.map(function(e) {
					return (e = "string" == typeof e ? e : e.token).toLowerCase()
				}), 0 === e.tokens.length && (e.tokens = this.tokenize(e.name), e.tokens.push(e.screen_name), e.tokens.push(TD.util.atMentionify(e.screen_name)), e.tokens = e.tokens.map(function(e) {
					return e.toLowerCase()
				})), delete e.location, delete e.connecting_user_ids, this.userHash[e.id_str] = e, e.tokens.forEach(function(t) {
					var i = t.charAt(0);
					void 0 === this.userAdjacencyList[i] && (this.userAdjacencyList[i] = []), -1 === this.userAdjacencyList[i].indexOf(e.id_str) && this.userAdjacencyList[i].push(e.id_str)
				}, this)
			}, this);
			var t = {};
			t[this.attr.storageUserHash] = this.userHash, this.trigger("dataStorageSet", t)
		}, this.processPrefetchUserData = function(e) {
			this.processUserData(e.users);
			var t = {};
			t[this.attr.storageUserLastPrefetch] = Date.now(), this.trigger("dataStorageSet", t), this.trigger("dataTypeaheadUserPrefetchComplete")
		}, this.prefetchUserSuggestions = function() {
			var e = (0, a.getTwitterClient)();
			e && e.typeaheadSearch({
				prefetch: !0,
				count: this.attr.usersStorageLimit
			}, this.processPrefetchUserData.bind(this), this.handleGetSuggestionsError.bind(this))
		}, this.pruneUsers = function() {
			var e = (0, s.default)(this.userHash);
			e.sort(this.userSortComparator), e = e.slice(0, Math.floor(e.length / 2)), this.overwriteUserdata(e)
		}, this.getUserSuggestions = function(e, t) {
			var i, n, s, r = [];
			return i = this.tokenize(e.query), n = this.getPotentiallyMatchingUserIds(i), s = this.getUsersFromIds(n), (r = s.filter(this.matchUsers(i))).sort(this.userSortComparator), r = r.slice(0, t)
		}, this.getPotentiallyMatchingUserIds = function(e) {
			var t = [];
			return e.map(function(e) {
				var i = this.userAdjacencyList[e.charAt(0)];
				i && (t = t.concat(i))
			}, this), t = (0, n.default)(t)
		}, this.getUsersFromIds = function(e) {
			var t = [];
			return e.forEach(function(e) {
				var i = this.userHash[e];
				i && !this.isUserBlocked(e) && t.push(i)
			}, this), t
		}, this.matchUsers = function(e) {
			return function(t) {
				var i = t.tokens,
					n = e.every(function(e) {
						var t = i.filter(function(t) {
							return 0 === t.indexOf(e)
						});
						return t.length
					});
				if (n) return t
			}
		}, this.userSortComparator = function(e, t) {
			var i = 0 !== e.rounded_graph_weight,
				n = 0 !== t.rounded_graph_weight;
			return i && !n ? -1 : n && !i ? 1 : i && n ? t.rounded_graph_weight - e.rounded_graph_weight : t.rounded_score - e.rounded_score
		}, this.isUserBlocked = function(e) {
			return !!this.blockedUserIds[e]
		}, this.processUserStorageItem = function(e, t) {
			switch (t.name) {
				case this.attr.storageUserHash:
					this.processUserData(t.value);
					break;
				case this.attr.storageUserLastPrefetch:
					("number" != typeof t.value || Date.now() - t.value > TD.constants.time.oneDay) && this.prefetchUserSuggestions()
			}
		}, this.loadUserData = function() {
			this.trigger("dataStorageGet", {
				names: [this.attr.storageUserHash, this.attr.storageUserLastPrefetch]
			});
			var e = (0, a.getTwitterClient)();
			e && (this.blockedUserIds = e.blocks)
		}, this.resetUserData = function(e, t) {
			t.client && (this.overwriteUserdata([]), this.blockedUserIds = t.client.blocks, this.prefetchUserSuggestions())
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = l(i(65)),
		s = l(i(122)),
		r = l(i(99)),
		a = l(i(15)),
		o = i(47);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		this.attributes({
			storageTopicsHash: "typeaheadTopicsHash",
			storageTopicsLastPrefetch: "typeaheadTopicsLastPrefetch"
		}), this.tokenize = function(e) {
			return e.trim().toLowerCase().split(TD.constants.regexps.tokenSeparator)
		}, this.topicSortComparator = function(e, t) {
			return t.rounded_score - e.rounded_score
		}, this.overwriteTopics = function(e) {
			this.topicsHash = {}, this.topicsAdjacencyList = {}, this.processTopicData(e)
		}, this.processTopicData = function(e) {
			(0, a.default)(e, function(e) {
				var t, i = e.topic;
				this.topicsHash[i] = e, 0 === e.tokens.length && (t = this.tokenize(e.topic), e.tokens = t.map(function(e) {
					return {
						token: e.toLowerCase()
					}
				})), e.tokens.forEach(function(e) {
					var t = e.token.charAt(0).toLowerCase(),
						n = this.topicsAdjacencyList[t] || []; - 1 === n.indexOf(i) && n.push(i), this.topicsAdjacencyList[t] = n
				}, this)
			}, this);
			var t = {};
			t[this.attr.storageTopicsHash] = this.topicsHash, this.trigger("dataStorageSet", t)
		}, this.processPrefetchTopicData = function(e) {
			this.processTopicData(e.topics), this.topicsLastPrefetch = Date.now();
			var t = {};
			t[this.attr.storageTopicsLastPrefetch] = this.topicsLastPrefetch, this.trigger("dataStorageSet", t)
		}, this.pruneTopics = function() {
			var e = (0, r.default)(this.topicsHash);
			e.sort(this.topicSortComparator), e = e.slice(0, Math.floor(e.length / 2)), this.overwriteTopics(e)
		}, this.getTopicSuggestions = function(e, t) {
			var i = e.query.toLowerCase(),
				r = [].concat((0, n.default)(this.topicsAdjacencyList[i.charAt(0)] || []), (0, n.default)(this.topicsAdjacencyList["#"] || [])).filter(function(e) {
					var t = e.toLowerCase();
					return 0 === t.indexOf(i) || 0 === t.indexOf("#" + i)
				}),
				a = this.getTopicObjectsFromStrings((0, s.default)(r));
			return a.sort(this.topicSortComparator), a.slice(0, t)
		}, this.getTopicObjectsFromStrings = function(e) {
			var t = [];
			return e.forEach(function(e) {
				var i = this.topicsHash[e];
				i && t.push(i)
			}, this), t
		}, this.prefetchTopicsSuggestions = function() {
			(0, o.getTwitterClient)().typeaheadSearch({
				query: "",
				prefetch: !0,
				limit: 200,
				datasources: ["topics"]
			}, this.processPrefetchTopicData.bind(this), this.trigger.bind(this, "dataTypeaheadSuggestionsError"))
		}, this.processTopicStorageItem = function(e, t) {
			switch (t.name) {
				case this.attr.storageTopicsHash:
					this.processTopicData(t.value);
					break;
				case this.attr.storageTopicsLastPrefetch:
					this.topicsLastPrefetch = t.value, (!this.topicsLastPrefetch || Date.now() - this.topicsLastPrefetch > TD.constants.time.oneDay) && this.prefetchTopicsSuggestions()
			}
		}, this.loadTopicsData = function() {
			this.trigger("dataStorageGet", {
				names: [this.attr.storageTopicsHash, this.attr.storageTopicsLastPrefetch]
			})
		}, this.resetTopicData = function(e, t) {
			t.client && (this.overwriteTopics([]), this.prefetchTopicsSuggestions())
		}, this.after("initialize", function() {
			this.topicsHash = {}, this.topicsAdjacencyList = {}, this.datasources = this.datasources || {}, this.datasources.topics = {
				getSuggestions: this.getTopicSuggestions.bind(this),
				processData: this.processTopicData.bind(this)
			}, this.on(document, "dataStorageItem", this.processTopicStorageItem), this.on(document, "TD.ready", this.loadTopicsData), this.on(document, "dataTwitterClientChanged", this.resetTopicData), this.on(document, "dataStorageFull", this.pruneTopics)
		})
	}
}, function(e, t, i) {
	"use strict";
	e.exports = function() {
		this.tokenize = function(e) {
			return e.trim().toLowerCase().split(TD.constants.regexps.tokenSeparator)
		}, this.getRecentSearchSuggestions = function(e, t) {
			if (this.trigger("uiNeedsRecentSearches"), !this.recentSearches) return [];
			var i = this.recentSearches,
				n = this.tokenize(e.query);
			return i.filter(function(e) {
				var t = this.tokenize(e);
				return this.recentSearchMatchesQuery(t, n)
			}, this).slice(0, t)
		}, this.recentSearchMatchesQuery = function(e, t) {
			return t.every(function(t) {
				return e.some(function(e) {
					return 0 === e.indexOf(t)
				})
			})
		}, this.handleRecentSearches = function(e, t) {
			t && t.recentSearches && (this.recentSearches = t.recentSearches)
		}, this.processRecentSearchData = function() {}, this.after("initialize", function() {
			this.datasources = this.datasources || {}, this.datasources.recentSearches = {
				getSuggestions: this.getRecentSearchSuggestions.bind(this),
				processData: this.processRecentSearchData.bind(this)
			}, this.on(document, "dataRecentSearches", this.handleRecentSearches)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = i(47);
	e.exports = function() {
		this.tokenize = function(e) {
			return e.trim().toLowerCase().split(TD.constants.regexps.tokenSeparator)
		}, this.savedSearchesComparator = function(e, t) {
			var i = e.query.toLowerCase(),
				n = t.query.toLowerCase();
			return (i > n) - (i < n)
		}, this.updateSavedSearches = function() {
			var e = Date.now() - TD.constants.time.oneHour;
			if (!this.savedSearchesLastFetch || this.savedSearchesLastFetch < e) {
				var t = (0, n.getClientsByService)("twitter");
				this.savedSearches = [], t.forEach(function(e) {
					this.savedSearches = this.savedSearches.concat(e.searches)
				}, this), this.savedSearchesLastFetch = Date.now()
			}
		}, this.getSavedSearchSuggestions = function(e) {
			if ("" === e.query.trim()) return [];
			if (!e.datasources || !e.datasources.some(function(e) {
					return "savedSearches" === e
				})) return [];
			var t = [],
				i = this.tokenize(e.query);
			return this.updateSavedSearches(), this.savedSearches.forEach(function(e) {
				var n = this.tokenize(e.query);
				this.savedSearchMatchesQuery(n, i) && t.push(e)
			}, this), t.sort(this.savedSearchesComparator), t.splice(this.attr.limit), t
		}, this.savedSearchMatchesQuery = function(e, t) {
			return t.every(function(t) {
				return e.some(function(e) {
					return 0 === e.indexOf(t)
				})
			})
		}, this.processSavedSearchData = function() {}, this.after("initialize", function() {
			this.savedSearches = [], this.savedSearchesLastFetch = !1, this.datasources = this.datasources || {}, this.datasources.savedSearches = {
				getSuggestions: this.getSavedSearchSuggestions.bind(this),
				processData: this.processSavedSearchData.bind(this)
			}
		})
	}
}, function(e, t, i) {
	"use strict";
	e.exports = function() {
		this.getListSuggestions = function(e, t) {
			var i = e.query.trim().toLowerCase();
			return this.trigger("uiNeedsSubscribedLists"), this.lists ? this.lists.filter(function(e) {
				return -1 !== e.user.screenName.toLowerCase().indexOf(i) || -1 !== e.name.toLowerCase().indexOf(i)
			}, this).slice(0, t) : []
		}, this.handleSubscribedLists = function(e, t) {
			t && t.lists && (this.lists = t.lists)
		}, this.processListData = function() {}, this.after("initialize", function() {
			this.datasources = this.datasources || {}, this.datasources.lists = {
				getSuggestions: this.getListSuggestions.bind(this),
				processData: this.processListData.bind(this)
			}, this.on(document, "dataSubscribedLists", this.handleSubscribedLists)
		})
	}
}, function(e, t, i) {
	"use strict";
	e.exports = function() {
		this.getConversationsSuggestions = function(e, t) {
			if (e.accountKey) {
				var i = TD.controller.clients.getClient(e.accountKey).conversations.getAllConversations(),
					n = new RegExp(TD.util.quotedForRegExp(e.query.trim()), "i"),
					s = i.filter(function(e) {
						return "GROUP_DM" === e.type && (n.test(e.name || "") || e.participants.some(r) || e.participants.some(a))
					}, this);
				return s.sort(function(e, t) {
					var i = e.participants.some(r),
						n = e.participants.some(a),
						s = t.participants.some(r),
						o = t.participants.some(a),
						l = !!e.name && r(e),
						c = !!t.name && r(t);
					return i && !s ? -1 : !i && s ? 1 : n && !o ? -1 : !n && o ? 1 : l && !c ? -1 : !l && c ? 1 : 0
				}).slice(0, t)
			}

			function r(e) {
				return n.test(e.name)
			}

			function a(e) {
				return n.test(e.screenName)
			}
		}, this.processConversationsData = function() {}, this.after("initialize", function() {
			this.datasources = this.datasources || {}, this.datasources.conversations = {
				getSuggestions: this.getConversationsSuggestions.bind(this),
				processData: this.processConversationsData.bind(this)
			}
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(111)),
		s = r(i(284));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = TD.config,
		o = a.twitter_api_base + "/" + a.twitter_api_version;

	function l(e) {
		return e.result.places.map(function(e) {
			var t = e.full_name,
				i = e.centroid,
				s = (0, n.default)(i, 2),
				r = s[0];
			return {
				fullName: t,
				lat: s[1],
				lng: r
			}
		})
	}
	e.exports = {
		search: function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = o + "/geo/search.json",
				i = TD.storage.accountController.getDefault();
			if (!e.query) throw Error("Required field is missing");
			var n = {
					params: {
						query: e.query,
						max_results: e.maxResults || 4,
						granularity: e.granularity || "city"
					},
					handleSuccess: !0,
					processor: l
				},
				r = TD.net.ajax.request(t, n);
			return r.addCallbacks(function(e) {
				return {
					locations: s.default.processSuccessResponse(t, n, e, {
						oauth: {
							account: i
						}
					}).data
				}
			}, function(e) {
				return s.default.processErrorResponse(t, n, e, i)
			}), r
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = i(47),
		s = i(5).component;
	e.exports = s(function() {
		this.handleUserProfileSocialProofFactory = function(e) {
			return function(t) {
				t.request = e, this.trigger(document, "dataUserProfileSocialProof", t)
			}
		}, this.handleErrorFactory = function(e) {
			return function() {
				var t = {
					request: e
				};
				this.trigger(document, "dataUserProfileSocialProofError", t)
			}
		}, this.getUserProfileSocialProofData = function(e, t) {
			t && t.screenName && (0, n.getTwitterClient)().getFollowingFollowersOf(t.screenName, this.handleUserProfileSocialProofFactory(t).bind(this), this.handleErrorFactory(t).bind(this))
		}, this.after("initialize", function() {
			this.on(document, "uiNeedsUserProfileSocialProof", this.getUserProfileSocialProofData)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(47),
		s = i(5).component;
	e.exports = s(function() {
		this.handleTwitterUsersFactory = function(e) {
			return function(t) {
				this.trigger("dataTwitterUsers", {
					requestId: e,
					users: t
				})
			}.bind(this)
		}, this.handleTwitterUsersErrorFactory = function(e) {
			return function() {
				this.trigger("dataTwitterUsersError", {
					requestId: e
				})
			}.bind(this)
		}, this.getTwitterUsers = function(e, t) {
			this.twitterClient = this.twitterClient || (0, n.getTwitterClient)(), this.twitterClient.getUsersByIds(t.userIds, this.handleTwitterUsersFactory(t.requestId), this.handleTwitterUsersErrorFactory(t.requestId))
		}, this.after("initialize", function() {
			this.on("uiNeedsTwitterUsers", this.getTwitterUsers)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.getLists = function(e) {
			var t = TD.cache.lists.getAll();
			this.trigger(document, "dataSubscribedLists", {
				lists: t
			})
		}, this.after("initialize", function() {
			this.on(document, "uiNeedsSubscribedLists", this.getLists)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(13)),
		s = a(i(0)),
		r = i(233);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component;
	e.exports = o(function() {
		this.attributes({
			resources: {
				show: {
					method: "GET",
					url: "statuses/show/:id.json"
				},
				destroy: {
					method: "POST",
					url: "statuses/destroy/:id.json"
				},
				unretweet: { // this one's fake
					method: "POST",
					url: "statuses/unretweet/:id.json"
				},
				message: {
					method: "POST",
					url: "direct_messages/new.json"
				},
				reply: {
					method: "POST",
					url: "statuses/update.json"
				},
				tweet: {
					method: "POST",
					url: "statuses/update.json"
				},
				retweet: {
					method: "POST",
					url: "statuses/retweet/:id.json"
				}
			}
		}), this.after("initialize", function() {
			this.on(document, "uiSendTweet", this.handleSendTweet), this.on(document, "uiRetweet", this.handleRetweet), this.on(document, "uiUndoRetweet", this.handleUndoRetweet)
		}), this.getTweet = function(e) {
			var t, i = new TD.core.defer.Deferred;
			try {
				t = this.attr.resources.show, (0, r.makeTwitterApiCall)({
					request: {
						accountKey: e.accountKey
					},
					params: e.params,
					resource: t.url.replace(":id", e.id),
					method: t.method,
					success: function(e) {
						i.callback(e)
					},
					error: function(e) {
						i.errback(e)
					}
				})
			} catch (t) {
				i.errback({
					request: e
				})
			}
			return i
		}, this.sendTweet = function(e) {
			var t, i, s;
			try {
				switch (t = this.attr.resources[e.type], e.type) {
					case "message":
						var a = e.messageRecipients && e.messageRecipients[0] && e.messageRecipients[0].id;
						i = {
							text: e.text,
							user_id: a
						}, s = function(e) {
							return {
								direct_message: e
							}
						};
						break;
					case "reply":
						i = {
							status: e.text,
							in_reply_to_status_id: e.inReplyToStatusId,
							auto_populate_reply_metadata: !!e.autoPopulateReplyMetadata,
							batch_mode: (0, n.default)(e, "batchMode", "off")
						}, e.autoPopulateReplyMetadata && e.excludeReplyUserIds && (i.exclude_reply_user_ids = e.excludeReplyUserIds.toString());
						break;
					case "tweet":
						i = {
							status: e.text
						}
				}
				var o = "message" === e.type ? "media_id" : "media_ids";
				e.mediaId && (i[o] = e.mediaId), e.attachmentUrl && TD.decider.get("compose_quoted_tweet_as_attachment") && (i.attachment_url = e.attachmentUrl), (0, r.makeTwitterApiCall)({
					request: e,
					resource: t.url,
					method: t.method,
					params: i,
					success: "dataTweetSent",
					error: "dataTweetError",
					dataProcessor: s,
					processAsStreamData: !0
				})
			} catch (t) {
				this.trigger("dataTweetError", {
					request: e
				})
			}
		}, this.sendRetweet = function(e, t) {
			var i;
			try {
				i = this.attr.resources.retweet, (0, r.makeTwitterApiCall)({
					request: {
						accountKey: e
					},
					resource: i.url.replace(":id", t.id),
					method: i.method,
					success: "dataRetweetSuccess",
					error: "dataRetweetError",
					processAsStreamData: !0
				})
			} catch (e) {
				this.trigger("dataRetweetError", {
					request: t
				})
			}
		}, this.handleRetweet = function(e, t) {
			t.from.forEach(function(e) {
				this.sendRetweet(e, t)
			}.bind(this))
		}, this.handleUndoRetweet = function(e, t) {
			var i = t.tweetId,
				n = t.from,
				r = this.getTweet({
					id: i,
					accountKey: n,
					params: {
						include_my_retweet: !0
					}
				});
			r.addCallback(function(e) {
				return this.destroyRetweet({
					accountKey: n,
					tweetId: t.tweetId
				})
			}.bind(this)), r.addCallbacks(function() {
				(0, s.default)(document).trigger("dataUndoRetweetSuccess", {
					tweetId: i,
					from: n
				})
			}, function() {
				(0, s.default)(document).trigger("dataUndoRetweetError", {
					tweetId: i,
					from: n
				})
			})
		}, this.destroyTweet = function(e) {
			var t, i = new TD.core.defer.Deferred;
			try {
				t = this.attr.resources.destroy, (0, r.makeTwitterApiCall)({
					request: {
						accountKey: e.accountKey
					},
					resource: t.url.replace(":id", e.tweetId),
					method: t.method,
					success: function(e) {
						i.callback(e)
					},
					error: function(e) {
						i.errback(e)
					}
				})
			} catch (t) {
				i.errback({
					request: e
				})
			}
			return i
		}, this.destroyRetweet = function(e) {
			var t, i = new TD.core.defer.Deferred;
			try {
				t = this.attr.resources.unretweet, (0, r.makeTwitterApiCall)({
					request: {
						accountKey: e.accountKey
					},
					resource: t.url.replace(":id", e.tweetId),
					method: t.method,
					success: function(e) {
						i.callback(e)
					},
					error: function(e) {
						i.errback(e)
					}
				})
			} catch (t) {
				i.errback({
					request: e
				})
			}
			return i
		}, this.handleSendTweet = function(e, t) {
			t.files && t.files.length || this.sendTweet(t)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(68)),
		s = u(i(9)),
		r = u(i(189)),
		a = u(i(2)),
		o = i(233),
		l = i(19),
		c = i(37);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var d = i(5).component,
		h = i(6);
	e.exports = d(function() {
		this.attributes({
			resources: {
				tweet: {
					method: "POST",
					url: "schedule/status/tweet.json",
					metricsKey: "status:tweet"
				},
				delete: {
					method: "DELETE",
					url: "schedule/status/{{id}}.json",
					metricsKey: "status:delete"
				},
				dismiss: {
					method: "POST",
					url: "schedule/status/dismiss/{{id}}.json",
					metricsKey: "status:dismiss"
				},
				edit: {
					method: "PUT",
					url: "schedule/status/{{id}}.json",
					metricsKey: "status:edit"
				}
			}
		}), this.after("initialize", function() {
			var e = this;
			this.darkTrafficScheduling$ = c.tweetdeckScheduledNewApi$.subscribe(function(t) {
				e.darkTrafficScheduling = t
			}), this.on(document, "uiSendScheduledTweets", this.handleSendScheduleTweets), this.on(document, "uiDeleteScheduledTweetGroup", this.handleDeleteScheduledTweets), this.on(document, "uiEditScheduledTweetGroup", this.handleEditScheduleTweets)
		}), this.after("teardown", function() {
			this.darkTrafficScheduling$ && this.darkTrafficScheduling$.unsubscribe()
		}), this.handleSendScheduleTweets = function(e, t) {
			if (t && t.requests) {
				t.metadata = t.metadata || {};
				var i = t.requests,
					n = i.filter(function(e) {
						return this.shouldSchedule(e.type)
					}, this),
					s = [],
					r = [],
					o = t.metadata.originalUpdates || [];
				if (n.length || o.length) {
					this.trigger("metric", {
						key: "scheduler:ui:send"
					});
					var l = n.map(function(e) {
						return e.accountKey
					});
					this.trigger("metric", {
						key: "scheduler:data:selected-accounts-to-nearest-hundred:" + ~~(100 * Math.round(l.length / 100))
					}), this.trigger("metric", {
						type: "metric",
						key: "scheduler:data:selected-accounts",
						value: [l.length]
					}), t.tokenToDelete && (o = []), o.forEach(function(e, t) {
						var i = l.indexOf(e.account.getKey());
						if (i < 0) return r.push(e);
						var a = n.splice(i, 1)[0];
						a.id = e.id, s.push(a)
					});
					var c = TD.core.defer.succeed();
					l.length > 200 && (this.trigger("metric", {
						key: "scheduler:data:force-failure"
					}), c.addCallback(function() {
						throw new Error((0, a.default)("Failed to schedule tweets."))
					})), c.addCallbackWith(this, function() {
						return TD.core.defer.gatherResults(n.map(this.waitForUploads, this))
					}), c.addCallbackWith(this, function(e) {
						var t = TD.core.defer.gatherResults(s.map(this.waitForUploads, this));
						return t.addCallbackWith(this, function(t) {
							return {
								toCreate: e,
								toEdit: t
							}
						}), t
					}), c.addErrbackWith(this, function(e) {
						return i.forEach(function(t) {
							this.trigger("dataTweetError", {
								request: t,
								response: e
							})
						}, this), e
					}), c.addCallbackWith(this, function(e) {
						var t = [].concat(e.toCreate.map(this.makeApiCallToResource.bind(this, this.attr.resources.tweet)), e.toEdit.map(this.makeApiCallToResource.bind(this, this.attr.resources.edit)));
						return TD.core.defer.gatherResults(t)
					}), c.addCallbackWith(this, function(e) {
						return TD.core.defer.gatherResults(r.map(function(e) {
							return this.deleteScheduledTweet({
								id: e.id,
								token: e.token,
								accountKey: e.account.getKey()
							})
						}, this))
					}), c.addBothWith(this, this.addOrRefreshScheduledColumn)
				}
			}
		}, this.handleDeleteScheduledTweets = function(e, t) {
			if (!this.isVisibilityOff()) {
				this.trigger("metric", {
					key: "scheduler:ui:delete"
				}), TD.controller.stats.deleteScheduledTweet();
				var i = new TD.core.defer.DeferredList(t.scheduledTweetGroup.updates.map(function(e) {
					return this.deleteScheduledTweet({
						id: e.id,
						token: e.token,
						state: e.state,
						accountKey: e.account.getKey()
					})
				}, this));
				i.addBoth(this.refreshScheduledColumn.bind(this))
			}
		}, this.handleEditScheduleTweets = function(e, t) {
			if (this.isWriteOff()) return alert((0, a.default)("Sorry – editing scheduled tweets is currently unavailable."));
			this.trigger("metric", {
				key: "scheduler:ui:edit"
			}), TD.controller.stats.editScheduledTweet();
			var i = t.scheduledTweetGroup;
			this.trigger("uiComposeTweet", {
				type: i.inReplyToStatusId ? "reply" : "tweet",
				popFromInline: !0,
				schedule: {
					time: i.time
				},
				text: i.text,
				from: i.updates.map(function(e) {
					return e.account.getKey()
				}),
				autoPopulateReplyMetadata: Boolean(i.autoPopulateReplyMetadata),
				inReplyTo: i.inReplyToStatus,
				mentions: i.inReplyToStatus ? i.inReplyToStatus.getReplyUsers() : [],
				excludedRecipientsIds: i.excludedRecipientIds,
				metadata: {
					originalUpdates: i.updates
				}
			})
		}, this.makeApiCallToResource = function(e, t) {
			var i = Math.round(t.scheduledDate.getTime() / 1e3);
			this.trigger("metric", {
				key: "scheduler:data:" + e.metricsKey
			});
			var r = {
				status: t.text,
				execute_at: i
			};
			t.inReplyToStatusId && (r.in_reply_to_status_id = t.inReplyToStatusId), t.autoPopulateReplyMetadata && (r.auto_populate_reply_metadata = t.autoPopulateReplyMetadata), t.autoPopulateReplyMetadata && t.excludeReplyUserIds && t.excludeReplyUserIds.length && (r.exclude_reply_user_ids = t.excludeReplyUserIds.toString()), t.mediaId && (r.media_ids = t.mediaId), t.attachmentUrl && TD.decider.get("compose_quoted_tweet_as_attachment") && (r.attachment_url = t.attachmentUrl);
			var a = {
					postTweetRequest: {
						status: r.status,
						createdVia: "oauth:55902",
						inReplyToStatusId: r.in_reply_to_status_id,
						mediaIds: r.media_ids ? r.media_ids.split(",") : [],
						excludeReplyUserIds: r.exclude_reply_user_ids,
						attachmentUrl: r.attachment_url,
						autoPopulateReplyMetadata: r.auto_populate_reply_metadata
					}
				},
				l = {
					executeAt: i.toString()
				},
				c = [null, (0, s.default)({
					tweetCreateRequest: (0, s.default)({}, a)
				}, l)],
				u = (0, s.default)({}, a, l),
				d = "POST" === e.method ? c : u,
				m = "POST" === e.method ? "strato/op/insert/schedule/insert" : "strato/column/ScheduledTweet/" + t.id + "/schedule/put";
			return (0, o.makeTwitterApiCall)({
				resource: h.toURLFromRaw(this.darkTrafficScheduling ? m : e.url, t),
				method: this.darkTrafficScheduling ? "POST" : e.method,
				request: t,
				params: this.darkTrafficScheduling ? (0, n.default)(d) : r,
				success: "dataTweetSent",
				error: "dataTweetError"
			})
		}, this.deleteScheduledTweet = function(e) {
			var t = this.attr.resources["failed" === e.state ? "dismiss" : "delete"];
			this.trigger("metric", {
				key: "scheduler:data:" + t.metricsKey
			});
			var i = (0, o.makeTwitterApiCall)({
				resource: h.toURLFromRaw(this.darkTrafficScheduling ? "strato/column/ScheduledTweet/{{id}}/schedule/tweet" : t.url, {
					id: e.id
				}),
				request: e,
				method: this.darkTrafficScheduling ? "DELETE" : t.method
			});
			return i.addCallback(function() {
				TD.controller.feedManager.deleteChirp(e.token)
			}), i.addErrbackWith(this, function(e) {
				return (0, l.showErrorNotification)({
					message: (0, a.default)("Failed to delete scheduled tweet.")
				}), e
			}), i
		}, this.waitForUploads = function(e) {
			if (!e.files || !e.files.length) return TD.core.defer.succeed(e);
			var t = e.mediaIds;
			return t.addCallbackWith(this, function(t) {
				return delete e.file, delete e.files, e.mediaId = t.map(r.default).join(","), e
			}), t
		}, this.refreshScheduledColumn = function(e) {
			this.trigger("uiNeedsScheduledColumnVisible", e || {})
		}, this.handleDeciderChange = function() {
			this.refreshScheduledColumn()
		}, this.addOrRefreshScheduledColumn = function() {
			this.refreshScheduledColumn({
				allowAdd: !0,
				reset: !0
			})
		}, this.isWriteOff = function() {
			var e = !TD.decider.hasAccessLevel("scheduler", "WRITE");
			return e
		}, this.isVisibilityOff = function() {
			var e = !TD.decider.hasAccessLevel("scheduler", "READ_VISIBLE");
			return e
		}, this.shouldSchedule = function(e) {
			var t = !this.isWriteOff(),
				i = {
					message: !1,
					tweet: t,
					reply: t
				};
			return i[e]
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(233),
		r = i(6),
		a = (n = r) && n.__esModule ? n : {
			default: n
		},
		o = i(17);
	var l = i(5).component;
	e.exports = l(function() {
		this.attributes({
			resources: {
				delete: {
					method: "POST",
					resource: "dm/destroy.json",
					metricsKey: "status:delete"
				},
				read: {
					method: "POST",
					resource: "dm/conversation/{{conversationId}}/mark_read.json",
					metricsKey: "conversation:read-one"
				},
				readAll: {
					method: "POST",
					resource: "dm/conversation/mark_read.json",
					metricsKey: "conversation:read-all"
				},
				new: {
					method: "POST",
					resource: "dm/new.json",
					metricsKey: "status:new"
				},
				addParticipants: {
					method: "POST",
					resource: "dm/conversation/{{conversationId}}/add_participants.json",
					metricsKey: "conversation:add-participants"
				},
				deleteConversation: {
					method: "POST",
					resource: "dm/conversation/{{conversationId}}/delete.json",
					metricsKey: "conversation:delete"
				},
				updateConversationName: {
					method: "POST",
					resource: "dm/conversation/{{conversationId}}/update_name.json",
					metricsKey: "conversation:rename"
				},
				disableNotifications: {
					method: "POST",
					resource: "dm/conversation/{{conversationId}}/disable_notifications.json",
					metricsKey: "conversation:disable_notifications"
				},
				enableNotifications: {
					method: "POST",
					resource: "dm/conversation/{{conversationId}}/enable_notifications.json",
					metricsKey: "conversation:enable_notifications"
				}
			}
		}), this.after("initialize", function() {
			this.on(document, "uiDeleteDm", this.handleDeleteDm), this.on(document, "uiDeleteConversation", this.handleDeleteConversation), this.on(document, "uiMarkDmAsRead", this.handleMarkDmAsRead), this.on(document, "uiMarkAllDmsAsRead", this.handleMarkAllDmsAsRead), this.on(document, "uiSendDm", this.handleSendDm), this.on(document, "uiAddConversationParticipants", this.handleAddConversationParticipants), this.on(document, "uiUpdateConversationName", this.handleUpdateConversationName), this.on(document, "uiConversationsDisableNotifications", this.handleConversationsDisableNotifications), this.on(document, "uiConversationsEnableNotifications", this.handleConversationsEnableNotifications)
		}), this.handleMarkDmAsRead = function(e, t) {
			var i = this.attr.resources.read;
			this.trigger("metric", {
				key: "dm:data:" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: a.default.toURLFromRaw(i.resource, t),
				params: {
					last_read_event_id: t.lastReadEventId
				},
				error: t.error
			})
		}, this.handleMarkAllDmsAsRead = function(e, t) {
			var i = this.attr.resources.readAll;
			this.trigger("metric", {
				key: "dm:data:" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: i.resource,
				params: {
					last_read_event_id: t.lastReadEventId
				},
				error: t.error,
				success: t.success
			})
		}, this.handleSendDm = function(e, t) {
			if (!t.files || !t.files.length) {
				var i = this.attr.resources.new,
					n = {
						text: t.text,
						ext: "altText"
					};
				t.tweetId && (n.tweet_id = t.tweetId), !t.tweetId && t.attachmentUrl && TD.decider.get("compose_quoted_tweet_as_attachment") && (n.tweet_id = (0, o.extractTweetIdFromPermalink)(t.attachmentUrl)), t.conversationId && (n.conversation_id = t.conversationId), t.messageRecipientIds && t.messageRecipientIds.length > 0 && (n.recipient_ids = t.messageRecipientIds), n.conversation_id || n.recipient_ids ? (this.trigger("metric", {
					key: "dm:data:" + i.metricsKey
				}), t.mediaId && (n.media_id = t.mediaId), (0, s.makeTwitterApiCall)({
					request: t,
					resource: i.resource,
					method: i.method,
					params: n,
					success: "dataDmSent",
					error: "dataDmError",
					dataProcessor: function(e) {
						return {
							user_events: e
						}
					},
					processAsStreamData: !0
				})) : this.trigger("dataDmError", {
					request: t
				})
			}
		}, this.handleDeleteDm = function(e, t) {
			var i = this.attr.resources.delete;
			this.trigger("metric", {
				key: "dm:data:" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: i.resource,
				params: {
					dm_id: t.id
				},
				success: t.success,
				error: t.error
			})
		}, this.handleAddConversationParticipants = function(e, t) {
			var i = this.attr.resources.addParticipants;
			this.trigger("metric", {
				key: "dm:data:" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: a.default.toHtmlFromRaw(i.resource, t),
				params: {
					participant_ids: t.participantIds.join(",")
				},
				success: t.success,
				error: t.error,
				dataProcessor: function(e) {
					return {
						participantAdded: {
							user_events: e
						}
					}
				},
				processAsStreamData: !0
			})
		}, this.handleDeleteConversation = function(e, t) {
			var i = this.attr.resources.deleteConversation;
			this.trigger("metric", {
				key: "dm:data:" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: a.default.toHtmlFromRaw(i.resource, t),
				success: t.success,
				error: t.error,
				dataProcessor: function(e) {
					return {
						delete: {
							conversationId: t.conversationId
						}
					}
				},
				processAsStreamData: !0
			})
		}, this.handleUpdateConversationName = function(e, t) {
			var i = this.attr.resources.updateConversationName;
			this.trigger("metric", {
				key: "dm:data" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: a.default.toHtmlFromRaw(i.resource, t),
				params: {
					name: t.name
				},
				success: t.success,
				error: t.error,
				dataProcessor: function(e) {
					return {
						conversationRenamed: {
							conversationId: t.conversationId,
							name: t.name
						}
					}
				},
				processAsStreamData: !0
			})
		}, this.handleConversationsDisableNotifications = function(e, t) {
			var i = this.attr.resources.disableNotifications;
			this.trigger("metric", {
				key: "dm:data:" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: a.default.toHtmlFromRaw(i.resource, t),
				success: t.success,
				error: t.error
			})
		}, this.handleConversationsEnableNotifications = function(e, t) {
			var i = this.attr.resources.enableNotifications;
			this.trigger("metric", {
				key: "dm:data:" + i.metricsKey
			}), (0, s.makeTwitterApiCall)({
				request: t,
				method: i.method,
				resource: a.default.toHtmlFromRaw(i.resource, t),
				success: t.success,
				error: t.error
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.after("initialize", function() {
			this.on(document, "uiSendDm", this.handleSendTweet), this.on(document, "uiSendTweet", this.handleSendTweet)
		}), this.responseFactory = function(e, t) {
			return function(i) {
				this.trigger(e, {
					response: i,
					request: t
				})
			}.bind(this)
		}, this.handleSendTweet = function(e, t) {
			var i = this;
			if (t.files && t.files.length) {
				var n = this.responseFactory("dataTweetError", t);
				t.mediaIds.addCallbacks(function(s) {
					var a = !1,
						o = !1;
					delete t.file, delete t.files, delete t.mediaIds, t.mediaId = s.map(function(e) {
						return e[0] || (a = !0), e[0] && void 0 === e[1] && (o = !0), e[1]
					}).join(","), a ? n({
						errors: [{
							message: (0, r.default)("We could not upload all images, please try again.")
						}]
					}) : o || i.trigger(document, e, t)
				}, n)
			}
		}, this.isTweetSchedulerOn = function() {
			return TD.decider.hasAccessLevel("scheduler", "WRITE")
		}, this.shouldSchedule = function(e) {
			var t = this.isTweetSchedulerOn(),
				i = {
					message: !0,
					tweet: !t,
					reply: !t
				};
			return i[e]
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(48)),
		s = a(i(0)),
		r = i(233);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component,
		l = i(866);
	e.exports = o(function() {
		this.attributes({
			resources: {
				watchlists: {
					resource: "account/1/get_lists",
					method: "GET",
					metricsKey: "watchlists"
				},
				alerts: {
					resource: "alerts/1/get_alert",
					method: "GET",
					metricsKey: "alerts"
				}
			},
			dataminrBaseUrl: "https://gateway.dataminr.com",
			proxiedAuth: {
				resource: "tweetdeck/dataminr/authtoken",
				method: "GET",
				metricsKey: "authtoken:proxy"
			},
			httpStatusCodes: {
				ok: 200,
				badRequest: 400,
				unauthorized: 401,
				tooManyRequests: 429,
				internalServerError: 500
			},
			dataminrErrorCodes: {
				invalidApiCall: 101,
				oauthAuthenticationError: 102,
				invalidDMToken: 103,
				twitterAccountNotLinked: 104,
				rateLimitExceeded: 105
			}
		}), this.after("initialize", function() {
			this.on(document, "uiNeedsDataminrAuth", this.handleUiNeedsDataminrAuth), this.on(document, "uiNeedsDataminrWatchlists", this.handleUiNeedsDataminrWatchlists), this.on(document, "uiNeedsDataminrAlerts", this.handleUiNeedsDataminrAlerts)
		}), this.makeDataminrRequestForAuthToken = function() {
			return this.proxiedAuthFlow().addCallbacksWith(this, this.handleAuthSuccess, this.handleAuthError)
		}, this.handleUiNeedsDataminrAuth = function() {
			if (this.dataminrIsEnabled()) {
				var e = TD.settings.getDataminrAuthToken();
				(e ? TD.core.defer.succeed() : this.makeDataminrRequestForAuthToken()).addCallback(this.trigger.bind(this, "dataDataminrAuthenticated"))
			}
		}, this.makeDataminrRequest = function(e, t) {
			var i = this.withDataminrApiUrl(e, t);
			return this.trigger("metric", {
				key: "dataminr:data:" + e.metricsKey
			}), TD.controller.stats.dataminrApiRequest(e.metricsKey), TD.net.ajax.sendRequest(e.method, i, {
				Authorization: "DmAuth " + TD.settings.getDataminrAuthToken()
			}).addErrback(this.dataminrRequestError.bind(this, i, e))
		}, this.dataminrRequestError = function(e, t, i) {
			if (i.number === this.attr.httpStatusCodes.unauthorized) return this.makeDataminrRequestForAuthToken().addCallbacks(function() {
				return TD.net.ajax.sendRequest(t.method, e, {
					Authorization: "DmAuth " + TD.settings.getDataminrAuthToken()
				})
			}, function() {
				TD.settings.setDataminrAuthToken(null), (0, s.default)(document).trigger("dataMessage", {
					message: this.getDataminrAccountAccessDeniedMessageData()
				})
			}.bind(this))
		}, this.proxiedAuthFlow = function() {
			var e = this.attr.proxiedAuth;
			return this.trigger("metric", {
				key: "dataminr:data:" + e.metricsKey
			}), TD.controller.stats.dataminrAuthRequest(), (0, r.makeTwitterRequest)(TD.storage.store.getTwitterLoginAccount().getKey(), e.resource, {
				method: e.method
			})
		}, this.handleAuthSuccess = function(e) {
			e.data.dmaToken && (TD.settings.setDataminrAuthToken(e.data.dmaToken), this.trigger("metric", {
				key: "dataminr:auth:success"
			}))
		}, this.handleAuthError = function(e) {
			throw this.trigger("metric", {
				key: "dataminr:auth:error:" + e.number
			}), e
		}, this.withDataminrApiUrl = function(e, t) {
			var i = e.baseUrl,
				n = e.resource,
				s = e.method,
				r = (i || this.attr.dataminrBaseUrl) + "/" + n;
			return t && "GET" === s && (r = TD.net.util.addURLParameters(r, t)), r
		}, this.handleUiNeedsDataminrWatchlists = function() {
			this.dataminrIsEnabled() && this.makeDataminrRequest(this.attr.resources.watchlists).addCallback(this.getEventDataFromResponse.bind(this)).addCallbacks(this.trigger.bind(this, "dataDataminrWatchlists"), this.trigger.bind(this, "dataDataminrWatchlistsError"))
		}, this.handleUiNeedsDataminrAlerts = function(e, t) {
			if (this.dataminrIsEnabled()) {
				var i = (0, n.default)(t.params, {
					pagesize: 200
				});
				this.makeDataminrRequest(this.attr.resources.alerts, i).addCallback(this.getEventDataFromResponse.bind(this)).addCallbacks(this.handleAlertsSuccess.bind(this, t.success), this.handleAlertsError.bind(this, t.error))
			}
		}, this.handleAlertsSuccess = function(e, t) {
			if ("function" == typeof e) return e(t);
			this.trigger("dataDataminrAlerts", t)
		}, this.handleAlertsError = function(e, t) {
			if ("function" == typeof e) return e(t);
			this.trigger("dataDataminrAlertsError", t)
		}, this.getEventDataFromResponse = function(e) {
			return e.data
		}, this.dataminrIsEnabled = function() {
			return TD.decider.get("dataminr")
		}
	}, l)
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			isTouchComposeClass: "is-touch-compose",
			isTouchSearchClass: "is-touch-search",
			isTouchTweetContainer: "is-touch-tweet-container",
			withTouchFontSizeClass: "with-touch-font-size"
		}), this.handleUpdateCompose = function() {
			TD.util.isTouchDevice() && TD.decider.get("touchdeck_compose_v2") ? (0, r.default)(".js-docked-compose").addClass(this.attr.isTouchComposeClass) : (0, r.default)(".js-docked-compose").removeClass(this.attr.isTouchComposeClass)
		}, this.handleUpdateFontSize = function() {
			TD.util.isTouchDevice() && TD.decider.get("touchdeck_font_size_v2") ? (0, r.default)("html").addClass(this.attr.withTouchFontSizeClass) : (0, r.default)("html").removeClass(this.attr.withTouchFontSizeClass)
		}, this.handleUpdateSearch = function() {
			TD.util.isTouchDevice() && TD.decider.get("touchdeck_search_v2") ? (0, r.default)(".js-search").addClass(this.attr.isTouchSearchClass) : (0, r.default)(".js-search").removeClass(this.attr.isTouchSearchClass)
		}, this.handleUpdateTweetControls = function() {
			TD.util.isTouchDevice() && TD.decider.get("touchdeck_tweet_controls_v3") ? (0, r.default)(".js-chirp-container").addClass(this.attr.isTouchTweetContainer) : (0, r.default)(".js-chirp-container").removeClass(this.attr.isTouchTweetContainer)
		}, this.after("initialize", function() {
			this.on(document, "dataDeciderUpdated", this.handleUpdateCompose), this.on(document, "dataDeciderUpdated", this.handleUpdateFontSize), this.on(document, "dataDeciderUpdated", this.handleUpdateSearch), this.on(document, "dataDeciderUpdated", this.handleUpdateTweetControls)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(5),
		o = i(19),
		l = i(47);
	e.exports = (0, a.component)(function() {
		this.after("initialize", function() {
			this.on(document, "uiRemoveTweetFromCustomTimeline", this.checkData(this.removeTweetFromCustomTimeline)), this.on(document, "uiAddOrMoveTweetToCustomTimeline", this.checkData(this.addOrMoveTweetToCustomTimeline)), this.on(document, "uiAddMultipleTweetsToCustomTimeline", this.bulkAddTweetsToCustomTimeline), this.on(document, "uiNeedsCustomTimeline", this.fetchCustomTimeline), this.on(document, "uiUpdateCustomTimeline", this.updateCustomTimeline), this.on(document, "dataAddOrMoveTweetToCustomTimelineError", function(e, t) {
				var i = "duplicate" === t.result.message ? "You've already added that Tweet to this Collection" : "Problem adding or moving Tweet: please try again";
				(0, o.showErrorNotification)({
					message: (0, r.default)(i)
				})
			}), this.on(document, "dataRemoveTweetToCustomTimelineError", function() {
				(0, o.showErrorNotification)({
					message: (0, r.default)("Problem removing Tweet: please try again")
				})
			})
		}), this.removeTweetFromCustomTimeline = function(e, t) {
			var i = (0, l.getClientByAccountKey)(t.account);
			i.removeTweetFromCustomTimeline(t.id, t.tweetId, this.callbackFactory("dataRemoveTweetFromCustomTimelineSuccess", t), this.callbackFactory("dataRemoveTweetFromCustomTimelineError", t))
		}, this.addOrMoveTweetToCustomTimeline = function(e, t) {
			var i = (0, l.getClientByAccountKey)(t.account);
			i.addOrMoveTweetToCustomTimeline({
				customTimelineId: t.id,
				tweetId: t.tweetId,
				relativeToId: t.relativeToId,
				above: t.above,
				actionType: t.actionType
			}, this.callbackFactory("dataAddOrMoveTweetToCustomTimelineSuccess", t), this.callbackFactory("dataAddOrMoveTweetToCustomTimelineError", t))
		}, this.bulkAddTweetsToCustomTimeline = function(e, t) {
			var i = (0, l.getClientByAccountKey)(t.account);
			i.bulkAddToCustomTimeline({
				customTimelineId: t.id,
				tweetIdsToAdd: t.ids
			}, this.callbackFactory("dataAddOrMoveTweetToCustomTimelineSuccess", t), this.callbackFactory("dataAddOrMoveTweetToCustomTimelineError", t))
		}, this.fetchCustomTimeline = function(e, t) {
			var i = (0, l.getClientByAccountKey)(t.account);
			i.getCustomTimeline(t.id, this.callbackFactory("dataCustomTimelineSuccess", t), this.callbackFactory("dataCustomTimelineError", t))
		}, this.updateCustomTimeline = function(e, t) {
			var i = (0, l.getClientByAccountKey)(t.account);
			i.getCustomTimeline(t.id, function(e) {
				var n = {
					name: void 0 !== t.name ? t.name : e.name,
					description: void 0 !== t.description ? t.description : e.description,
					url: void 0 !== t.url ? t.url : e.url
				};
				i.updateCustomTimeline(t.id, n, this.callbackFactory("dataCustomTimelineSuccess", t), this.callbackFactory("dataCustomTimelineUpdateError", t))
			}.bind(this), this.callbackFactory("dataCustomTimelineUpdateError", t))
		}, this.callbackFactory = function(e, t) {
			return function(i) {
				this.trigger(document, e, {
					action: t,
					result: i
				})
			}.bind(this)
		}, this.checkData = function(e) {
			return function(t, i) {
				if (!i.id || !i.tweetId || !i.account) throw new Error("data needs id, tweetId, and account");
				e.apply(this, [].slice.call(arguments))
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(85)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(354);
	e.exports = a(function() {
		this.attributes({
			needsSecureUrlSelector: ".js-needs-secure-url",
			needsSecureUrlClass: "js-needs-secure-url",
			orignalUrlAttribute: "data-original-url",
			cacheSize: 200,
			cacheExpiryMinutes: 15
		}), this.after("initialize", function() {
			this.on(document, "uiNeedsSecureImageUrl", this.queueSignedImage), this.signedUrlCache = new o(this.attr.cacheSize), this.imageQueue = [], this.debouncedProcessQueue = (0, n.default)(this.processQueue, 100)
		}), this.queueSignedImage = function(e, t) {
			this.imageQueue.push({
				event: e,
				data: t
			}), this.debouncedProcessQueue()
		}, this.processQueue = function() {
			var e = this.$node.find(this.attr.needsSecureUrlSelector);
			this.imageQueue.forEach(function(t) {
				this.findAndSignImage(e, t.event, t.data)
			}.bind(this)), this.imageQueue = []
		}, this.findAndSignImage = function(e, t, i) {
			var n = TD.storage.accountController.get(i.accountKey),
				r = this.getSignedImage(n, i.url);
			r.addCallbackWith(this, function(t) {
				var n = this.attr.orignalUrlAttribute,
					r = this.attr.needsSecureUrlClass;
				e.each(function() {
					var e = (0, s.default)(this);
					if (e.attr(n) === i.url) {
						var a = e.find("img");
						a.length ? a.attr("src", t.data.url) : e.css({
							"background-image": "url(" + t.data.url + ")"
						}), e.removeClass(r).attr(n, "")
					}
				})
			})
		}, this.getSignedImage = function(e, t) {
			return TD.core.defer.succeed({
				data: {
					url: t
				}
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(282),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(5),
		o = i(47);
	e.exports = (0, a.component)(function() {
		this.after("initialize", function() {
			this.on(document, "uiNeedsDMReport", this.handleDMReport)
		}), this.handleDMReport = function(e, t) {
			TD.sync.util.assert(t.account, "Source account for report must be specified."), TD.sync.util.assert(t.dmId || t.conversationId, "dmId or conversationId must be specified"), TD.sync.util.assert((0, r.default)(["spam", "abuse"], t.reportType), "reportType must be one of {spam, abuse}");
			var i = (0, o.getClientByAccount)(t.account),
				n = {
					dmId: t.dmId,
					conversationId: t.conversationId,
					reportType: t.reportType,
					blockUser: Boolean(t.blockUser)
				};
			i.reportDMSpam(n, this.handleSuccessFactory(t).bind(this), this.handleErrorFactory(t))
		}, this.handleSuccessFactory = function(e) {
			return function() {
				var t = (0, o.getClientByAccount)(e.account);
				e.dmId ? this.handleMessageReportSuccess(t, e) : e.conversationId && this.handleConversationReportSuccess(t, e)
			}
		}, this.handleMessageReportSuccess = function(e, t) {
			e.destroyDM(t.dmId), e.deleteMessage(t.dmId)
		}, this.handleConversationReportSuccess = function(e, t) {
			e.processDeleteChirpEvent({
				conversationId: t.conversationId
			})
		}, this.handleErrorFactory = function(e) {
			return function(t) {
				this.trigger("dMReportError", {
					error: t || {},
					request: e
				})
			}.bind(this)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = b(i(0)),
		s = b(i(7)),
		r = b(i(208)),
		a = b(i(2425)),
		o = b(i(2428)),
		l = b(i(2429)),
		c = b(i(2430)),
		u = b(i(2433)),
		d = i(868),
		h = b(i(2434)),
		m = b(i(2440)),
		f = i(74),
		p = i(37),
		g = i(58),
		v = i(33),
		T = i(864),
		w = i(528);

	function b(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var y = i(109);
	e.exports = s.default.mixin(r.default, function() {
		this.componentDidInitialize = function() {
			var e = this;
			this.initialHref = window.location.href, this.on(document, "TD.ready", this.handleTDReady), this.on(document, "uiNewComposerLearnMoreModal", this.showNewComposerLearnMoreModal), this.on(document, "uiShowGryphonBetaModal", this.maybeShowGryphonBetaModal.bind(this, !0)), p.gdprUpdates$.subscribe(function(t) {
				e.showGdprUpdates = t
			}), p.tweetdeckBeta$.subscribe(function(t) {
				e.isInBeta = t
			})
		}, this.handleTDReady = function() {
			var e = this;
			TD.util.isWrapperApp() && (0, g.getValueForFeatureFlag)("tweetdeck_tdfm_discontinued_message_enabled") && ((0, v.generic)({
				page: "deprecation-tdfm",
				action: "impression"
			}), window.location.assign("/web/discontinued-tdfm.html")), this.processQueryParams(this.initialHref), this.maybeShowWelcomeModal(), this.cleanUrl(), (0, d.setTweetDeckLegacyVersionCookie)(), (0, w.fetchAccountSyncState)().then(function(t) {
				var i = t.beta_survey_dismissed,
					n = t.show_opt_in_modal;
				e.isOptInModalDismissed = !n, (0, T.hasUserAccessToGryphonBetaSurvey)() && !i ? e.showGryphonSurveyModal() : e.maybeShowGryphonBetaModal()
			})
		}, this.maybeShowGryphonBetaModal = function(e) {
			var t = (0, T.hasUserAccessToGryphonBeta)() && (e || !this.isOptInModalDismissed);
			if (t) {
				this.showModal(u.default, {}, {
					withHeader: !1,
					withFooter: !1,
					withDismissButton: !1,
					withBorder: !1,
					withClasses: ["mdl-lighter-on-dark"],
					withClickTrap: !1,
					withDraggable: !1,
					withDragHandle: !1,
					withOverlayClasses: ["bg-color-overlay"]
				})
			}
		}, this.showGryphonSurveyModal = function() {
			this.showModal(c.default, {}, {
				withHeader: !1,
				withFooter: !1,
				withDismissButton: !1,
				withBorder: !1,
				withClasses: ["mdl-lighter-on-dark"],
				withClickTrap: !1,
				withDraggable: !1,
				withDragHandle: !1,
				withOverlayClasses: ["bg-color-overlay"]
			})
		}, this.maybeShowWelcomeModal = function() {
			var e = (0, f.getTwitterLoginAccount)();
			if (e.requireConsent) {
				return this.showModal(a.default, {}, {
					withNonDismissible: !0,
					withHeader: !1,
					withFooter: !1,
					withDismissButton: !1,
					withBorder: !1,
					withOverlayClasses: ["overlay-opaque"]
				}), void TD.util.metric("gdpr:logged-in:requires-consent")
			}
			if (TD.components.NewFeaturesSplash.shouldShow()) new TD.components.NewFeaturesSplash;
			else if (!this.isInBeta || TD.settings.getPremiumHasSeenWelcomeModal()) {
				if (this.showGdprUpdates) {
					this.showModal(o.default, {}, {
						withHeader: !1,
						withFooter: !1,
						withDismissButton: !0,
						withBorder: !1
					})
				}
				this.shouldShowNewComposerIntroductionModal() ? this.showNewComposerIntroductionModal() : this.shouldShowNewComposerLearnMoreModal() && (0, n.default)(document).trigger("uiNewComposerLearnMoreModal")
			} else {
				this.showModal(l.default, {}, {
					withFooter: !1,
					withDismissButton: !0,
					withBorder: !1,
					withClasses: ["mdl-bottom-right", "mdl-lighter-on-dark"],
					withClickTrap: !1,
					withDraggable: !1,
					withDragHandle: !1,
					withOverlayClasses: ["bg-color-transparent"]
				})
			}
		}, this.shouldShowNewComposerIntroductionModal = function() {
			if ((0, g.getValueForFeatureFlag)("tweetdeck_rweb_composer")) {
				var e = TD.settings.getNewComposerOptIn(),
					t = void 0 === TD.settings.getNewComposerUpsellViewed();
				return !e && t
			}
		}, this.shouldShowNewComposerLearnMoreModal = function() {
			if ((0, g.getValueForFeatureFlag)("tweetdeck_rweb_composer")) {
				var e = TD.settings.getNewComposerOptIn(),
					t = !1 === TD.settings.getNewComposerUpsellViewed();
				return !e && t
			}
		}, this.showNewComposerIntroductionModal = function() {
			var e = this;
			TD.settings.setNewComposerUpsellViewed(!1);
			var t = {
				onAcceptButtonPress: function() {
					(0, v.generic)({
						page: "main",
						component: "new_composer_intro_modal",
						element: "ok_button",
						action: "click"
					}), e.showNewComposerLearnMoreModal()
				},
				onDenyButtonPress: function() {
					(0, v.generic)({
						page: "main",
						component: "new_composer_intro_modal",
						element: "cancel_button",
						action: "click"
					}), TD.settings.setNewComposerOptIn(!1), e.trigger("uiCloseModal"), (0, v.generic)({
						page: "compose",
						component: "rweb_compose",
						action: "opt_out"
					})
				}
			};
			this.showModal(h.default, {
				props: t
			}, _)
		}, this.showNewComposerLearnMoreModal = function() {
			var e = this,
				t = function() {
					var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
					TD.settings.setNewComposerOptIn(t), TD.settings.setNewComposerUpsellViewed(!0), e.trigger("uiCloseModal"), (0, v.generic)({
						page: "compose",
						component: "rweb_compose",
						action: t ? "opt_in" : "opt_out"
					}), (0, v.generic)({
						page: "main",
						component: "new_composer_learn_more_modal",
						element: t ? "ok_button" : "cancel_button",
						action: "click"
					})
				},
				i = {
					onAcceptButtonPress: function() {
						t(!0), (0, n.default)(document).one("dataSettingsValues", function() {
							(0, n.default)(document).trigger("uiDockedComposeTweet", {
								type: "tweet"
							})
						})
					},
					onDenyButtonPress: function() {
						t(!1)
					}
				};
			this.showModal(m.default, {
				props: i
			}, _)
		}, this.processQueryParams = function(e) {
			if (e) {
				var t = y(e).search(!0),
					i = [].concat(t.add_by_url || []);
				i && i.length && TD.decider.get("add_column_by_url_query_param") && this.trigger(document, "uiAddColumnsByUrl", {
					urls: i
				}), this.trigger("dataQueryParams", {
					params: t
				})
			}
		}, this.cleanUrl = function() {
			window.history && "function" == typeof window.history.replaceState ? history.replaceState({}, "", window.location.pathname) : window.location.hash = ""
		}
	});
	var _ = {
		withHeader: !1,
		withFooter: !1,
		withDismissButton: !1,
		withBorder: !1,
		withClickTrap: !1,
		withDraggable: !1,
		withDragHandle: !1
	}
}, function(e, t, i) {
	"use strict";
	var n = l(i(7)),
		s = l(i(6)),
		r = i(2426),
		a = i(867),
		o = l(i(109));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(function() {
		this.attributes({
			template: "terms_privacy_update",
			nextSelector: ".js-next"
		}), this.componentDidInitialize = function() {
			this.on("click", {
				nextSelector: this.nextClick
			})
		}, this.nextClick = function() {
			var e = (0, o.default)(window.location.href).path("/web/success.html").toString(),
				t = {
					queryParams: {
						return_url: e
					},
					baseUrl: "https://twitter.com/i/flow/consent_flow",
					callbackUrl: e
				};
			(0, a.observedPopup)(t).then(function(e) {
				e.complete && (0, r.reload)()
			}, function(e) {
				console.log("error: ", e)
			})
		}, this.render = function() {
			var e = s.default.render(this.attr.template);
			this.$node.html(e)
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.reload = function() {
		window.location.reload()
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n, s = i(13),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	t.default = function(e) {
		if (!(0, r.default)(window, "deck.authenticateOn")) return null;
		var t = deck.authenticateOn(e),
			i = {
				closed: !1,
				close: function() {
					i.closed = !0, t.hide(), t.deleteLater()
				},
				location: {
					href: e
				}
			};
		return t.loadedUrl.connect(function(e) {
			i.location.href = e, 0 === e.indexOf("file://") && (i.closed = !0)
		}), t.show(), i
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(7)),
		s = r(i(6));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(function() {
		this.attributes({
			template: "important_update"
		}), this.initialState({
			showImportantUpdates: function() {
				return TD.settings.getShowGdprImportantUpdates()
			}
		}), this.render = function() {
			if (this.state.showImportantUpdates) {
				var e = s.default.render(this.attr.template);
				this.$node.html(e)
			} else this.teardown()
		}, this.componentWillTeardown = function() {
			TD.settings.setShowGdprImportantUpdates(!1)
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.WelcomeModalReact = void 0;
	var n = f(i(26)),
		s = f(i(14)),
		r = f(i(16)),
		a = f(i(27)),
		o = f(i(28)),
		l = i(4),
		c = f(l),
		u = f(i(2)),
		d = i(7),
		h = f(i(139)),
		m = f(i(171));

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var p = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "openColumnPicker",
			value: function() {
				TD.ui.openColumn.showOpenColumn()
			}
		}, {
			key: "render",
			value: function() {
				return c.default.createElement("div", {
					"data-testid": "betaModal",
					className: "padding-v--10 txt-center width--430"
				}, c.default.createElement("div", {
					className: "padding-b--20"
				}, c.default.createElement(m.default, {
					"data-testid": "icon",
					name: "twitter-bird",
					fontSize: 24,
					color: "twitter-blue"
				})), c.default.createElement("p", {
					"data-testid": "heading",
					className: "padding-b--20 txt-size--18 txt-bold"
				}, c.default.createElement(l.Fragment, null, (0, u.default)("Welcome on board"))), c.default.createElement("p", {
					"data-testid": "text",
					className: "color-twitter-darker-gray width--300 padding-b--20 margin-a-auto"
				}, (0, u.default)("We’re glad to have you here. We’ve added new functionality to this\n          version of TweetDeck to help you get ahead. Your feedback will help us\n          to improve it.")), c.default.createElement("div", {
					className: "flex flex-justify-content--flex-center padding-v--10 padding-b--20"
				}, c.default.createElement(h.default, {
					type: "primary",
					onPress: this.openColumnPicker.bind(this),
					label: (0, u.default)("Let’s go"),
					"data-testid": "confirmButton"
				}, (0, u.default)("Let’s go"))))
			}
		}, {
			key: "componentWillUnmount",
			value: function() {
				TD.settings.setPremiumHasSeenWelcomeModal(!0)
			}
		}]), t
	}(c.default.Component);
	t.default = (0, d.reactToUiBase)(p);
	t.WelcomeModalReact = p
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.GryphonBetaSurveyModalReact = void 0;
	var n = g(i(26)),
		s = g(i(14)),
		r = g(i(16)),
		a = g(i(27)),
		o = g(i(28)),
		l = g(i(4)),
		c = g(i(139)),
		u = g(i(508)),
		d = i(33),
		h = i(58),
		m = g(i(2)),
		f = i(7),
		p = i(528);

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var v = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.state = {
				renderSurvey: !1
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "handleCloseModal",
			value: function() {
				(0, p.updateBetaSurveyDismissed)(!0), (0, d.generic)({
					page: "survey",
					element: "close",
					action: "click"
				}), document.dispatchEvent(new Event("uiCloseModal"))
			}
		}, {
			key: "handleDismissSurvey",
			value: function() {
				(0, p.updateBetaSurveyDismissed)(!0), (0, d.generic)({
					page: "survey",
					element: "dimsiss",
					action: "click"
				}), document.dispatchEvent(new Event("uiCloseModal"))
			}
		}, {
			key: "handleAcceptSurvey",
			value: function() {
				(0, d.generic)({
					page: "survey",
					element: "accept",
					action: "click"
				}), this.setState({
					renderSurvey: !0
				})
			}
		}, {
			key: "renderHeader",
			value: function() {
				return l.default.createElement("div", {
					className: "gryphon-mdl-header height--40 padding-h--8 margin-a-auto"
				}, l.default.createElement(c.default, {
					onPress: this.handleCloseModal.bind(this),
					type: "text",
					"data-testid": "closeBtn"
				}, l.default.createElement("i", {
					className: "icon icon-close txt-size--24",
					"aria-label": (0, m.default)("dismiss")
				})))
			}
		}, {
			key: "componentDidMount",
			value: function() {
				(0, d.generic)({
					page: "survey",
					action: "show"
				})
			}
		}, {
			key: "render",
			value: function() {
				var e = this.state.renderSurvey,
					t = (0, h.getValueForFeatureFlag)("gryphon_survey_url");
				return l.default.createElement("div", {
					className: "padding-b--10 txt-size--16 width--600",
					"data-testid": "gryphonBetaSurveyModal"
				}, this.renderHeader(), e ? l.default.createElement(u.default, {
					allowForms: !0,
					"data-testid": "iframe",
					src: t,
					style: {
						height: "80vh"
					}
				}) : l.default.createElement(l.default.Fragment, null, l.default.createElement("h1", {
					className: "padding-v--20 txt-size--24 width--430 padding-b--20 margin-a-auto txt-bold",
					"data-testid": "title"
				}, (0, m.default)("Help us improve TweetDeck!")), l.default.createElement("div", {
					className: "color-twitter-darker-gray txt-size--15 width--430 margin-a-auto"
				}, l.default.createElement("p", {
					className: "padding-b--20"
				}, (0, m.default)("Thank you for trying TweetDeck Preview.")), l.default.createElement("p", {
					className: "padding-b--20"
				}, (0, m.default)("Your opinion is important to us, we’d love to hear about your experience so far!"))), l.default.createElement("div", {
					className: "gryphon-mdl-cta-buttons flex flex-column flex-justify-content--space-between padding-v--10 padding-b--20 width--430 margin-a-auto"
				}, l.default.createElement(c.default, {
					type: "primary",
					onPress: this.handleAcceptSurvey.bind(this),
					label: (0, m.default)("Give feedback"),
					"data-testid": "acceptBtn"
				}, (0, m.default)("Give feedback")), l.default.createElement(c.default, {
					type: "text",
					onPress: this.handleDismissSurvey.bind(this),
					label: (0, m.default)("No thanks"),
					"data-testid": "dismissBtn"
				}, (0, m.default)("No thanks")))))
			}
		}]), t
	}(l.default.Component);
	t.default = (0, f.reactToUiBase)(v);
	t.GryphonBetaSurveyModalReact = v
}, function(e, t) {
	e.exports = {
		queryId: "AASdaEBxY4wb30U8CMOBSw",
		operationName: "FetchAccountSyncState"
	}
}, function(e, t) {
	e.exports = {
		queryId: "LpUitdk4MbdxT65XWXcHxg",
		operationName: "UpdateGryphonOnboardingState"
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.GryphonOptinModalReact = void 0;
	var n = g(i(26)),
		s = g(i(14)),
		r = g(i(16)),
		a = g(i(27)),
		o = g(i(28)),
		l = g(i(4)),
		c = g(i(2)),
		u = i(7),
		d = g(i(139)),
		h = i(33),
		m = i(528),
		f = g(i(856)),
		p = i(868);

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var v = TD.ui.template.render("text/legal_footer"),
		T = function(e) {
			function t() {
				return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
			}
			return (0, o.default)(t, e), (0, r.default)(t, [{
				key: "handleCloseModal",
				value: function() {
					(0, m.updateOptInModalDismissed)(!0), (0, h.generic)({
						page: "main",
						section: "alpha",
						component: "modal",
						action: "dismiss"
					}), document.dispatchEvent(new Event("uiCloseModal"))
				}
			}, {
				key: "handleOptin",
				value: function() {
					(0, p.setTweetDeckGryphonVersionCookie)(), (0, m.updateUserOptedIn)(!0), (0, h.generic)({
						page: "main",
						section: "alpha",
						component: "modal",
						element: "accept",
						action: "click"
					}), window.location.reload()
				}
			}, {
				key: "handleHelp",
				value: function() {
					(0, h.generic)({
						page: "main",
						section: "alpha",
						component: "modal",
						element: "learn_more",
						action: "click"
					})
				}
			}, {
				key: "renderHeader",
				value: function() {
					return l.default.createElement("div", {
						className: "gryphon-mdl-header height--40 padding-h--8 margin-a-auto"
					}, l.default.createElement(d.default, {
						onPress: this.handleCloseModal.bind(this),
						type: "text",
						"data-testid": "closeBtn"
					}, l.default.createElement("i", {
						className: "icon icon-close txt-size--24",
						"aria-label": (0, c.default)("dismiss")
					})))
				}
			}, {
				key: "componentDidMount",
				value: function() {
					(0, h.generic)({
						page: "main",
						section: "alpha",
						component: "modal",
						action: "show"
					})
				}
			}, {
				key: "render",
				value: function() {
					return l.default.createElement("div", {
						className: "padding-b--10 txt-size--16 width--600",
						"data-testid": "gryphonBetaModal"
					}, this.renderHeader(), l.default.createElement("img", {
						className: "width--600",
						src: f.default,
						style: {
							height: "140px"
						}
					}), l.default.createElement("h1", {
						className: "padding-v--20 txt-size--24 width--430 padding-b--20 margin-a-auto txt-bold",
						"data-testid": "title"
					}, (0, c.default)("Want to try out the new TweetDeck?")), l.default.createElement("div", {
						className: "color-twitter-darker-gray txt-size--15 width--430 margin-a-auto"
					}, l.default.createElement("p", {
						className: "padding-b--20"
					}, (0, c.default)("The new TweetDeck is coming soon and you have been selected to preview it.")), l.default.createElement("p", {
						className: "padding-b--20"
					}, (0, c.default)("You can always go back to the current version without losing your setup."))), l.default.createElement("div", {
						className: "gryphon-mdl-cta-buttons flex flex-column flex-justify-content--space-between padding-v--10 padding-b--20 width--430 margin-a-auto"
					}, l.default.createElement(d.default, {
						type: "primary",
						onPress: this.handleOptin.bind(this),
						label: (0, c.default)("Try it now"),
						"data-testid": "acceptBtn"
					}, (0, c.default)("Try it now")), l.default.createElement(d.default, {
						type: "text",
						onPress: this.handleHelp.bind(this),
						link: "https://help.twitter.com/using-twitter/tweetdeck",
						label: (0, c.default)("Learn more")
					}, (0, c.default)("Learn more"))), l.default.createElement("div", {
						dangerouslySetInnerHTML: {
							__html: v
						}
					}))
				}
			}]), t
		}(l.default.Component);
	t.default = (0, u.reactToUiBase)(T);
	t.GryphonOptinModalReact = T
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.NewComposerIntroductionReact = void 0;
	var n = p(i(4)),
		s = p(i(2)),
		r = i(7),
		a = p(i(210)),
		o = p(i(139)),
		l = p(i(25)),
		c = p(i(2435)),
		u = p(i(2436)),
		d = p(i(2437)),
		h = p(i(2438)),
		m = p(i(2439)),
		f = p(i(171));

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var g = function(e) {
			var t = e.onAcceptButtonPress,
				i = e.onDenyButtonPress;
			return n.default.createElement(a.default, null, function(e) {
				return n.default.createElement("div", {
					"data-testid": "composer-onboarding-intro",
					className: "width--600 flex flex-justify-content--center"
				}, n.default.createElement("div", {
					className: "width--380 padding-v--30 txt-center"
				}, n.default.createElement("div", {
					className: "padding-b--30"
				}, n.default.createElement(f.default, {
					name: "twitter-bird",
					fontSize: 24,
					color: "twitter-blue"
				})), n.default.createElement("h1", {
					className: "padding-b--20 txt-size-variable--19 txt-bold"
				}, (0, s.default)("New ways to Tweet with TweetDeck")), n.default.createElement("div", {
					className: "txt-size-variable--15 " + ("light" === e ? "color-twitter-darker-gray" : "color-twitter-white")
				}, (0, s.default)("Threads, emojis, GIFs, polls and more.")), n.default.createElement("div", {
					className: "padding-v--50 flex flex-justify-content--space-between"
				}, n.default.createElement(c.default, {
					style: [v.icon, v.blue]
				}), n.default.createElement(u.default, {
					style: [v.icon, v.yellow]
				}), n.default.createElement(d.default, {
					style: [v.icon, v.red]
				}), n.default.createElement(h.default, {
					style: [v.icon, v.purple]
				}), n.default.createElement(m.default, {
					style: [v.icon, v.green]
				})), n.default.createElement("div", {
					className: "flex flex-justify-content--center"
				}, n.default.createElement(o.default, {
					"data-testid": "composer-onboarding-intro-accept-button",
					type: "primary",
					size: "normal",
					style: v.learnMoreButton,
					onPress: t
				}, (0, s.default)("Learn more"))), n.default.createElement("div", {
					className: "flex flex-justify-content--center"
				}, n.default.createElement(o.default, {
					"data-testid": "composer-onboarding-intro-deny-button",
					type: "text",
					size: "normal",
					onPress: i
				}, (0, s.default)("No, thanks")))))
			})
		},
		v = l.default.create(function(e) {
			return {
				icon: {
					width: 38,
					height: 38
				},
				blue: {
					color: e.colors.blue
				},
				yellow: {
					color: e.colors.yellow
				},
				red: {
					color: e.colors.red
				},
				purple: {
					color: e.colors.purple
				},
				green: {
					color: e.colors.green
				},
				learnMoreButton: {
					marginBottom: e.spaces.xSmall
				}
			}
		});
	t.default = (0, r.reactToUiBase)(g);
	t.NewComposerIntroductionReact = g
}, , , , , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.NewComposerLearnMoreReact = void 0;
	var n = u(i(4)),
		s = u(i(139)),
		r = u(i(103)),
		a = u(i(2)),
		o = u(i(171)),
		l = u(i(210)),
		c = i(7);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var d = function(e) {
		var t = e.onAcceptButtonPress,
			i = e.onDenyButtonPress;
		return n.default.createElement(l.default, null, function(e) {
			var l = "light" === e ? "color-twitter-darker-gray" : "color-twitter-white";
			return n.default.createElement("div", {
				"data-testid": "composer-onboarding-learn-more",
				className: "padding-v--30 txt-center width--600"
			}, n.default.createElement("div", {
				className: "padding-b--30"
			}, n.default.createElement(o.default, {
				name: "twitter-bird",
				fontSize: 24,
				color: "twitter-blue"
			})), n.default.createElement("h1", {
				className: "margin-b--20 margin-h--45 txt-size-variable--19 txt-bold"
			}, (0, a.default)("New ways to Tweet with TweetDeck")), n.default.createElement("p", {
				className: (0, r.default)(l, "margin-b--20", "margin-h--45")
			}, (0, a.default)("We've updated TweetDeck to give you more ways to express yourself.\n                  Opt in below and compose a new Tweet to see the new features.")), n.default.createElement("p", {
				className: (0, r.default)(l, "margin-b--20", "margin-h--45", "padding-a--20", "txt-size--13", "txt-left", "modal-feature-box")
			}, (0, a.default)("Scheduling Tweets is not yet available with the updated Tweet Composer.\n                  You can switch back to the old composer to schedule Tweets.")), n.default.createElement("div", {
				className: "flex flex-justify-content--flex-center padding-b--5"
			}, n.default.createElement(s.default, {
				"data-testid": "composer-onboarding-learn-more-accept-button",
				type: "primary",
				onPress: t
			}, (0, a.default)("OK, let's try it!"))), n.default.createElement("div", {
				className: "flex flex-justify-content--flex-center padding-b--10"
			}, n.default.createElement(s.default, {
				"data-testid": "composer-onboarding-learn-more-deny-button",
				type: "text",
				onPress: i
			}, (0, a.default)("No, thanks"))))
		})
	};
	t.default = (0, c.reactToUiBase)(d);
	t.NewComposerLearnMoreReact = d
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(19);
	var o = i(5).component,
		l = i(2442);
	e.exports = o(function() {
		this.after("initialize", function() {
			this.on(document, "dataAccountsRewriteColumns", function(e, t) {
				var i = this.rewriteFeeds(t.sourceAccountKey, t.targetAccountKey);
				(0, a.showNotification)({
					message: this.getRewriteResultMessage(i)
				})
			})
		}), this.rewriteFeeds = l, this.getRewriteResultMessage = function(e) {
			var t = {
					kept: e.newFeeds.length,
					lost: e.lostFeeds.length,
					total: e.initialCount
				},
				i = (0, r.default)("Kept {{kept}} columns.", t);
			1 === t.kept && (i = (0, r.default)("Kept 1 column."));
			var n = (0, r.default)("{{lost}} columns could not be kept.", t);
			return 1 === t.lost && (n = (0, r.default)("1 column could not be kept.")), 0 === t.lost ? n = "" : i = (0, r.default)("Kept {{kept}} out of {{total}} columns.", t), (i + " " + n).trim()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(110)),
		s = r(i(21));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = {};

	function o(e) {
		var t = s.default.getColumnType(e);
		return !s.default.combinedColumnTypes[t]
	}

	function l(e) {
		return e.model.getKey()
	}
	a.shouldRewrite = {
		home: !0,
		search: !0,
		list: !0,
		customtimeline: !0,
		usertimeline: !0,
		favorites: !0,
		usertweets: !0
	}, a.type = {}, a.type = {
		home: "usertimeline"
	}, a.toDefault = {}, a.toDefault = {
		search: !0
	}, a.metadata = {}, a.metadata.id = {
		home: !0,
		usertimeline: !0,
		favorites: !0,
		usertweets: !0
	}, e.exports = function(e, t) {
		var i, s = TD.storage.accountController.get(e),
			r = TD.controller.columnManager.getAllOrdered().filter(o).map(l),
			c = TD.storage.feedController.getAll().filter((i = e, function(e) {
				return e.getAccountKey() === i
			})),
			u = {
				initialCount: c.length,
				newFeeds: [],
				lostFeeds: []
			};
		return c.reduce(function(e, i) {
			var o = i.getType();
			if (!a.shouldRewrite[o]) return e.lostFeeds.push(i), e;
			var l = o,
				c = i.getMetadata(),
				u = t;
			void 0 !== a.type[o] && (l = a.type[o]), a.toDefault[o] && (u = TD.storage.accountController.getDefault().getKey()), a.metadata.id[o] && void 0 === c.id && (c = (0, n.default)({}, c, {
				id: s.getUserID()
			}));
			var d = TD.storage.feedController.getOrCreateFeed(l, i.getService(), u, c);
			return TD.controller.feedManager.replaceFeed(i, d, r), e.newFeeds.push(d), e
		}, u)
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(163),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(109);
	e.exports = a(function() {
		this.attributes({
			paths: ["/1.1/account/settings.json", "/1.1/account/verify_credentials.json", "/1.1/activity/about_me.json", "/1.1/activity/by_friends.json", "/1.1/activity/by_me.json", "/1.1/beta/timelines/custom/add.json", "/1.1/beta/timelines/custom/create.json", "/1.1/beta/timelines/custom/destroy.json", "/1.1/beta/timelines/custom/list.json", "/1.1/beta/timelines/custom/remove.json", "/1.1/beta/timelines/custom/show.json", "/1.1/beta/timelines/custom/update.json", "/1.1/beta/timelines/custom/whitelisted.json", "/1.1/beta/timelines/timeline.json", "/1.1/blocks/create.json", "/1.1/blocks/destroy.json", "/1.1/blocks/ids.json", "/1.1/collections/create.json", "/1.1/collections/entries/curate.json", "/1.1/collections/entries.json", "/1.1/collections/entries/add.json", "/1.1/collections/entries/move.json", "/1.1/collections/entries/remove.json", "/1.1/collections/list.json", "/1.1/collections/show.json", "/1.1/collections/update.json", "/1.1/conversation/show.json", "/1.1/direct_messages.json", "/1.1/direct_messages/destroy.json", "/1.1/direct_messages/new.json", "/1.1/direct_messages/read.json", "/1.1/direct_messages/report_spam.json", "/1.1/direct_messages/sent.json", "/1.1/dm/conversation/mark_read.json", "/1.1/dm/destroy.json", "/1.1/dm/mark_read.json", "/1.1/dm/new.json", "/1.1/dm/user_inbox.json", "/1.1/dm/user_updates.json", "/1.1/favorites/create.json", "/1.1/favorites/destroy.json", "/1.1/favorites/list.json", "/1.1/friends/following/list.json", "/1.1/friendships/create.json", "/1.1/friendships/destroy.json", "/1.1/friendships/no_retweets/ids.json", "/1.1/friendships/show.json", "/1.1/geo/search.json", "/1.1/help/configuration.json", "/1.1/help/settings.json", "/1.1/lists/create.json", "/1.1/lists/destroy.json", "/1.1/lists/list.json", "/1.1/lists/members.json", "/1.1/lists/members/create.json", "/1.1/lists/members/create_all.json", "/1.1/lists/members/destroy.json", "/1.1/lists/memberships.json", "/1.1/lists/ownerships.json", "/1.1/lists/show.json", "/1.1/lists/statuses.json", "/1.1/lists/subscriptions.json", "/1.1/lists/update.json", "/1.1/live_pipeline/events", "/1.1/live_pipeline/update_subscriptions", "/1.1/media/metadata/create.json", "/1.1/media/upload.json", "/1.1/mutes/advanced_filters.json", "/1.1/mutes/conversations/create.json", "/1.1/mutes/conversations/destroy.json", "/1.1/mutes/users/create.json", "/1.1/mutes/users/destroy.json", "/1.1/mutes/users/ids.json", "/1.1/saved_searches/list.json", "/1.1/schedule/status/list.json", "/1.1/schedule/status/lookup.json", "/1.1/schedule/status/tweet.json", "/1.1/search/tweets.json", "/1.1/search/typeahead.json", "/1.1/search/universal.json", "/1.1/statuses/flag_possibly_sensitive.json", "/1.1/statuses/following_timeline.json", "/1.1/statuses/home_timeline.json", "/1.1/statuses/lookup.json", "/1.1/statuses/mentions_timeline.json", "/1.1/statuses/oembed.json", "/1.1/statuses/show.json", "/1.1/statuses/update.json", "/1.1/statuses/user_timeline.json", "/1.1/strato/column/None/tweetdeck/sendFeedback", "/1.1/strato/column/None/%28%29/schedule/list", "/1.1/translations/show.json", "/1.1/trends/available.json", "/1.1/trends/place.json", "/1.1/trends/plus.json", "/1.1/tweetdeck/clients", "/1.1/tweetdeck/columns", "/1.1/tweetdeck/dataminr/authtoken", "/1.1/tweetdeck/feeds", "/1.1/tweetdeck/insights/timeseries.json", "/1.1/tweetdeck/insights/related_keywords.json", "/1.1/tweetdeck/insights/demographics.json", "/1.1/users/contributees.json", "/1.1/users/contributees/accept.json", "/1.1/users/contributees/destroy.json", "/1.1/users/contributees/pending.json", "/1.1/users/contributees/update.json", "/1.1/users/contributors.json", "/1.1/users/contributors/destroy.json", "/1.1/users/contributors/pending.json", "/1.1/users/contributors/update.json", "/1.1/users/lookup.json", "/1.1/users/report_spam.json", "/1.1/users/search.json", "/1.1/users/show.json", "/1/statuses/following_timeline.json", "/graphql", "/i/activity/about_me.json", "/i/activity/by_friends.json", "/i/search/typeahead.json", "/users/following_followers_of.json"].reduce(function(e, t) {
				return e[t] = t, e
			}, {}),
			pathMatchers: [{
				regex: "/1.1/statuses/\\d*/activity/summary.json",
				key: "/1.1/statuses/.../activity/summary.json"
			}, {
				regex: "/2/timeline/conversation/\\d*.json",
				key: "/2/timeline/conversation/....json"
			}, {
				regex: "/i/statuses/\\d*/activity/summary.json",
				key: "/i/statuses/.../activity/summary.json"
			}, {
				regex: "/1.1/strato/column/None/fromTime=\\d*,toTime=\\d*,numEntities=\\d*/eventdetection/hydratedTopClusters",
				key: "/1.1/strato/column/None/fromTime=...,toTime=...,numEntities=.../eventdetection/hydratedTopClusters"
			}, {
				regex: "/1.1/schedule/status/dismiss/\\d*.json",
				key: "/1.1/schedule/status/dismiss/....json"
			}, {
				regex: "/1.1/schedule/status/retweet/\\d*.json",
				key: "/1.1/schedule/status/retweet/....json"
			}, {
				regex: "/1.1/schedule/status/\\d*.json",
				key: "/1.1/schedule/status/....json"
			}, {
				regex: "/1.1/statuses/destroy/\\d*.json",
				key: "/1.1/statuses/destroy/....json"
			}, {
				regex: "/1.1/statuses/retweet/\\d*.json",
				key: "/1.1/statuses/retweet/....json"
			}, {
				regex: "/1.1/statuses/show/\\d*.json",
				key: "/1.1/statuses/show/....json"
			}, {
				regex: "/1.1/dm/conversation/(\\d*|\\d*-\\d*).json",
				key: "/1.1/dm/conversation/....json"
			}, {
				regex: "/1.1/dm/conversation/(\\d*|\\d*-\\d*)/add_participants.json",
				key: "/1.1/dm/conversation/.../add_participants.json"
			}, {
				regex: "/1.1/dm/conversation/(\\d*|\\d*-\\d*)/delete.json",
				key: "/1.1/dm/conversation/.../delete.json"
			}, {
				regex: "/1.1/dm/conversation/(\\d*|\\d*-\\d*)/update_name.json",
				key: "/1.1/dm/conversation/.../update_name.json"
			}, {
				regex: "/1.1/dm/conversation/(\\d*|\\d*-\\d*)/mark_read.json",
				key: "/1.1/dm/conversation/.../mark_read.json"
			}, {
				regex: "/1.1/tweetdeck/clients(.+)",
				key: "/1.1/tweetdeck/clients/..."
			}, {
				regex: "/1.1/tweetdeck/columns(.+)",
				key: "/1.1/tweetdeck/columns/..."
			}, {
				regex: "/1.1/tweetdeck/feeds(.+)",
				key: "/1.1/tweetdeck/feeds/..."
			}, {
				regex: "/graphql/(.+)",
				key: "/graphql/..."
			}].map(function(e) {
				return {
					regex: new RegExp(e.regex || e.key + "$"),
					key: e.key
				}
			})
		}), this.after("initialize", function() {
			this.on(document, "dataApiResponse", function(e, t) {
				this.sendApiResponseMetrics(t)
			})
		}), this.sendApiResponseMetrics = TD.util.catch(function(e) {
			if ("number" != typeof(e = e || {}).status || (0, r.default)(e.status) < 0) return TD.util.metric("api:other:status-wrong-type");
			if ("string" != typeof e.url) return TD.util.metric("api:other:url-wrong-type");
			var t = o(e.url).normalize(),
				i = t.pathname(),
				n = t.host();
			if (!n) return TD.util.metric("api:other:host-missing");
			var s = this.getKeyForPathname(i);
			TD.util.metric(["api:host", n, e.status, s].join(":"));
			var a = ("" + e.status).charAt(0) + "XX";
			TD.util.metric(["api:host:aggregate", n, a, s].join(":"))
		}, !0), this.getKeyForPathname = function(e) {
			var t = this.attr.paths[e];
			if (!t) {
				var i = this.attr.pathMatchers.find(function(t) {
					return null !== e.match(t.regex)
				});
				i && (t = i.key)
			}
			return t || "other"
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(13)),
		s = o(i(109)),
		r = i(5),
		a = i(74);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = i(869);
	e.exports = (0, r.component)(function() {
		this.after("initialize", function() {
			this.on(document, "uiLogout", this.logout), this.on(document, "uiLogin", this.login), this.on(document, "uiReload", this.handleReload)
		}), this.logout = function(e) {
			this.wipeStorage(), this.redirect(l.getLogoutUrl())
		}, this.login = function(e, t) {
			var i = (t = t || {}).id,
				n = (0, a.getTwitterLoginAccount)(),
				s = (0, a.getAccountFromId)(i) || {},
				r = l.getLoginUrl({
					usernameOrEmail: s.screenName
				}),
				o = TD.util.getTwitterCookieUserId(),
				c = n && n.userId;
			return n ? n.isCookieUser ? (i !== c && this.wipeStorage(), void(o ? i !== o ? this.logout() : i === o && (i === c || this.reload()) : this.redirect(r))) : this.logout() : this.redirect(r)
		}, this.handleReload = function(e, t) {
			var i = (0, n.default)(t, "params", {}),
				r = (0, s.default)(window.location.href).addQuery(i).href();
			if (r !== window.location.href) return this.redirect(r);
			this.reload()
		}, this.wipeStorage = function() {
			TD.storage.Store.flushWebstorage()
		}, this.teardownNativeApi = function() {
			TD.util.isWrapperApp() && deck.tearDown()
		}, this.redirect = function(e) {
			this.teardownNativeApi(), window.location.href = e
		}, this.reload = function() {
			this.teardownNativeApi(), window.location.reload()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(18),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(45),
		l = i(2446),
		c = i(36),
		u = i(73);
	e.exports = a(o, function() {
		this.attributes({
			pollIntervalMs: 3e5
		}), this.after("initialize", function() {
			var e = this,
				t = u.fromEventOnce(document, "dataDeciderUpdated").exhaustMap(function() {
					return e.getTimer()
				}),
				i = this.observe(t).flatMap(function() {
					return u.fromDeferred(e.getVersion()).catch(function(e) {
						return c.Observable.empty()
					})
				}).map(this.processVersion).do(this.sendMetrics);
			this.provideResource("version", i.publishReplay(1).refCount())
		}), this.getTimer = function() {
			return c.Observable.timer(0, this.attr.pollIntervalMs)
		}, this.getVersion = function() {
			return TD.decider.get("version_poll") ? (TD.util.metric("version:poll"), TD.net.ajax.sendRequest("GET", TD.config.api_root + "/web/dist/version.json?t=" + Date.now()).addCallback(function(e) {
				return e.data
			})) : TD.core.defer.succeed(!1)
		}, this.processVersion = function(e) {
			return {
				isOutOfDate: l.lt(TD.version, e.version),
				isAboveLatest: l.gt(TD.version, e.version),
				isBelowMinimum: l.lt(TD.version, e.minimum)
			}
		}, this.sendMetrics = function(e) {
			e.isOutOfDate && TD.util.metric("version:out-of-date"), e.isBelowMinimum && TD.util.metric("version:is-below-minimum"), e.isAboveLatest && TD.util.metric("version:is-above-latest")
		}
	}, r.default)
}, , function(e, t, i) {
	"use strict";
	var n, s = i(18),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(83);
	e.exports = a.mixin(function() {
		this.attributes({
			refreshPauseTime: 3e5
		}), this.after("initialize", function() {
			this.observe(this.requestResource("version")).filter(this.shouldRefresh, this).subscribe(this.refresh)
		}), this.shouldRefresh = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = e.isAboveLatest,
				i = void 0 !== t && t,
				n = e.isBelowMinimum,
				s = void 0 !== n && n,
				r = TD.storage.store.getLastVersionRefreshTimestamp(),
				a = Date.now() - r,
				o = a < this.attr.refreshPauseTime;
			if (o) return !1;
			var l = i && TD.decider.get("version_poll_force_downgrade"),
				c = s && TD.decider.get("version_poll_force_upgrade");
			return l && TD.util.metric("version:force-downgrade"), c && TD.util.metric("version:force-upgrade"), l || c
		}, this.refresh = function() {
			TD.util.metric("version:force-refresh"), TD.storage.store.setLastVersionRefreshTimestamp(Date.now()), window.location.reload()
		}
	}, r.default)
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(18));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(83),
		o = i(73);
	e.exports = a.mixin(function() {
		this.after("initialize", function() {
			var e = this.observe(o.fromEventOnce(document, "TD.ready")),
				t = this.observe(o.fromEventOnce(document, "uiMessageBannerReady"));
			e.combineLatest(t, function() {}).subscribe(this.trigger.bind(this, "uiCheckNotificationPermission")), this.on(document, "uiCheckNotificationPermission", this.checkPermission), this.on(document, "uiRequestBrowserNotificationPermission", this.requestPermission)
		}), this.requestPermission = function() {
			TD.controller.notifications.getPermission()
		}, this.checkPermission = function() {
			this.needsPermission() && TD.controller.notifications.canPermissionBeRequested() ? this.showRequestMessage() : this.hideRequestMessage()
		}, this.needsPermission = function() {
			return TD.storage.columnController.getAll().some(function(e) {
				return e.getHasNotification()
			})
		}, this.showRequestMessage = function() {
			this.trigger(document, "dataMessage", {
				message: this.getMessageData()
			})
		}, this.hideRequestMessage = function() {
			this.trigger(document, "dataMessageRemove", {
				id: this.getMessageData().id
			})
		}, this.getMessageData = function() {
			return {
				id: "web-notification-permission-banner",
				text: (0, n.default)("TweetDeck needs permission to show your desktop notifications in this browser"),
				colors: {
					background: "#b2d5ed",
					foreground: "#555"
				},
				actions: [{
					class: "Button--primary",
					id: "yes-button",
					action: "trigger-event",
					label: (0, n.default)("Let's go!"),
					event: {
						type: "uiRequestBrowserNotificationPermission",
						data: {}
					}
				}]
			}
		}
	}, s.default)
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.trackSelectDefaultAccount = function() {
			TD.controller.stats.defaultAccountSelected()
		}, this.after("initialize", function() {
			this.on(document, "uiSelectDefaultAccount", this.trackSelectDefaultAccount)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.trackClear = function() {
			TD.controller.stats.columnActionClick("clear")
		}, this.trackMoveColumn = function(e, t) {
			TD.controller.stats.columnActionClick(t.action)
		}, this.trackActionFilterError = function(e, t) {
			TD.controller.stats.actionFilterError()
		}, this.after("initialize", function() {
			this.on(document, "uiClearColumnAction", this.trackClear), this.on(document, "uiMoveColumnAction", this.trackMoveColumn), this.on(document, "uiActionFilterError", this.trackActionFilterError)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5),
		s = i(47);
	e.exports = (0, n.component)(function() {
		this.after("initialize", function() {
			this.on(document, "dataTweetSent", this.handleTweetSent), this.on(document, "dataDmSent", this.handleDmSent), this.on(document, "dataScheduledTweetsSent", this.handleScheduledTweetSent), this.on(document, "uiRemoveInReplyTo", this.handleClearReply), this.on(document, "uiComposeStackReply", this.handleStackReply), this.on(document, "uiDockedComposeTweet", this.handleDockedTweet)
		}), this.handleTweetSent = function(e, t) {
			if ("message" === t.request.type) return this.handleDmSent(e, t);
			var i = (0, s.getAccountData)(t.request.accountKey),
				n = i ? i.id : null,
				r = Boolean(t.request.scheduledDate),
				a = Boolean(t.request.inline);
			switch (t.request.type) {
				case "tweet":
					TD.controller.stats.postTweet({
						twitterId: n,
						isScheduled: r
					});
					break;
				case "reply":
					TD.controller.stats.postReply({
						twitterId: n,
						isScheduled: r,
						inline: a
					})
			}
		}, this.handleDmSent = function(e, t) {
			var i = (0, s.getAccountData)(t.request.accountKey),
				n = i ? i.id : null,
				r = Boolean(t.request.files && t.request.files.length),
				a = t.request.isReplyBar || !1,
				o = "GROUP_DM" === t.request.messageType;
			TD.controller.stats.postMessage({
				twitterId: n,
				withImage: r,
				isReplyBar: a,
				isGroupDm: o
			})
		}, this.handleScheduledTweetSent = function(e, t) {
			(t = t || {}).request = t.request || {}, t.request.requests = t.request.requests || [], t.request.requests.forEach(function(t) {
				this.handleTweetSent(e, {
					request: t
				})
			}.bind(this))
		}, this.handleClearReply = function() {
			TD.controller.stats.composeClearReply()
		}, this.handleStackReply = function() {
			TD.controller.stats.composeStackReply()
		}, this.handleDockedTweet = function(e, t) {
			t.popFromInline && TD.controller.stats.composePopFromInline(), t.contextMenu && TD.controller.stats.composeFromContextMenu(t.contextMenu)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.after("initialize", function() {
			this.on(document, "dataCustomTimelineCreateSuccess", this.handleTimelineCreated), this.on(document, "dataCustomTimelineUpdateSuccess", this.handleTimelineUpdated), this.on(document, "dataCustomTimelineDeleteSuccess", this.handleTimelineDeleted), this.on(document, "dataAddOrMoveTweetToCustomTimelineSuccess", this.handleTweetAddedOrMoved), this.on(document, "dataRemoveTweetFromCustomTimelineSuccess", this.handleTweetRemoved)
		}), this.handleTimelineCreated = function(e, t) {
			TD.controller.stats.customTimelineCreated()
		}, this.handleTimelineUpdated = function(e, t) {
			TD.controller.stats.customTimelineUpdated()
		}, this.handleTimelineDeleted = function(e, t) {
			TD.controller.stats.customTimelineDeleted()
		}, this.handleTweetAddedOrMoved = function(e, t) {
			TD.controller.stats.tweetAddedOrMovedToCustomTimeline(t.action.actionType)
		}, this.handleTweetRemoved = function(e, t) {
			TD.controller.stats.tweetRemovedFromCustomTimeline()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(137),
		l = i(36);
	e.exports = a(o, function() {
		this.initialState({
			viaLoginForm: !1
		}), this.after("initialize", function() {
			this.on(document, "dataAppStart", this.start), this.on(document, "uiLoginFormImpression", this.loginImpression);
			var e = l.Observable.fromEvent((0, r.default)(document), "TD.ready"),
				t = l.Observable.fromEvent((0, r.default)(document), "dataQueryParams", function(e, t) {
					return t.params
				});
			this.readyStream = l.Observable.combineLatest(e, t, function(e, t) {
				return t
			}).take(1).subscribe(this.complete.bind(this))
		}), this.before("teardown", function() {
			this.readyStream.unsubscribe()
		}), this.start = function() {
			var e = !!TD.util.getTwitterCookieUserId();
			this.trigger("metric", {
				key: "login:start:" + (e ? "has-twitter-session" : "no-session")
			})
		}, this.loginImpression = function() {
			this.mergeState({
				viaLoginForm: !0
			}), this.trigger("metric", {
				key: "login:login-form-impression:twitter"
			})
		}, this.complete = function(e) {
			e.via_twitter_login && this.mergeState({
				viaLoginForm: !0
			});
			var t = TD.storage.store.getTwitterLoginAccount(),
				i = t.isCookieUser() ? "twitter" : "tweetdeck",
				n = "returning-user";
			this.state.viaLoginForm && (n = "via-login-form"), this.trigger("metric", {
				key: "login:complete:" + i + ":" + n
			}), this.teardown()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.trackImpression = function(e, t) {
			TD.controller.stats.messageBannerImpression(t.id), this.trigger("metric", {
				key: "message_banner:" + t.id + ":impression"
			})
		}, this.trackDismiss = function(e, t) {
			TD.controller.stats.messageBannerDismiss(t.id), this.trigger("metric", {
				key: "message_banner:" + t.id + ":dismiss"
			})
		}, this.trackAction = function(e, t) {
			TD.controller.stats.messageBannerClick(t.messageId, t.actionId), this.trigger("metric", {
				key: "message_banner:" + t.messageId + ":click:" + t.actionId
			})
		}, this.after("initialize", function() {
			this.on(document, "uiShowMessageBanner", this.trackImpression), this.on(document, "uiDismissMessageAction", this.trackDismiss), this.on(document, "uiClickMessageButtonAction", this.trackAction)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.trackOpen = function(e, t) {
			TD.controller.stats.embedTweetDialogOpen(t.tweet.id)
		}, this.after("initialize", function() {
			this.on(document, "uiShowEmbedTweet", this.trackOpen)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.trackInvocation = function() {
			TD.controller.stats.typeaheadInvoked()
		}, this.trackSelection = function(e, t) {
			var i = t.query || t.input;
			"recent-search" === t.searchType ? TD.controller.stats.typeaheadRecentItemSelected(i, t.searchType, t.index) : TD.controller.stats.typeaheadItemSelected(i, t.searchType, t.index)
		}, this.after("initialize", function() {
			this.on(document, "uiTypeaheadDropdownInvoked", this.trackInvocation), this.on(document, "uiTypeaheadItemSelected", this.trackSelection)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.trackViews = function(e, t) {
			TD.controller.stats.viewedTweetSocialProof(t.type)
		}, this.after("initialize", function() {
			this.on(document, "uiShowSocialProof", this.trackViews)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.after("initialize", function() {
			this.on(document, "uiShowReportOptions", function(e, t) {
				t.isMessage || TD.controller.stats.reportUser("impression")
			}), this.on(document, "uiShowReportTweetCancel", function() {
				TD.controller.stats.reportUser("cancel")
			}), this.on(document, "uiReportSpamAction", function(e, t) {
				TD.controller.stats.reportUser("report_as_spam", "spam")
			}), this.on(document, "uiReportCompromisedAction", function(e, t) {
				t && t.block ? TD.controller.stats.reportUser("block", "compromised") : TD.controller.stats.reportUser("report_as_spam", "compromised")
			}), this.on(document, "uiReportAbusiveAction", function(e, t) {
				TD.controller.stats.reportUserAbusive("impression"), t && t.block ? TD.controller.stats.reportUser("block", "abusive") : TD.controller.stats.reportUser("report_as_spam", "abusive")
			}), this.on(document, "uiReportAbusiveOption", function(e, t) {
				TD.controller.stats.reportUserAbusive("click", t.option)
			})
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(240)),
		s = r(i(15));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component;
	e.exports = a(function() {
		this.after("initialize", function() {
			this.on(document, "uiShowReportOptions", function(e, t) {
				t.isMessage && TD.controller.stats.reportDM("impression")
			});
			(0, s.default)({
				uiShowReportMessageCancel: "cancel",
				uiShowReportMessageError: "error",
				uiNeedsDMReport: function(e) {
					return "report_as_" + e.reportType
				}
			}, function(e, t) {
				this.on(document, t, function(t, i) {
					TD.controller.stats.reportDM((0, n.default)(e) ? e(i) : e)
				})
			}.bind(this))
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.after("initialize", function() {
			this.on(document, "scribing", function(e, t) {
				var i;
				t && t.terms && TD.decider.get("convert_scribe_to_metrics_v2") && this.trigger("metric", {
					key: (i = t.terms, ["scribe"].concat(["page", "section", "component", "element", "action"].map(function(e) {
						return i[e] || ""
					})).join(":"))
				})
			})
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(85)),
		s = u(i(121)),
		r = u(i(15)),
		a = u(i(2)),
		o = u(i(0)),
		l = i(5),
		c = i(152);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, l.component)(function() {
		this.activeSequences = {}, this.sequenceStarters = {}, this.singleKeys = {}, this.combos = {}, this.attributes({
			shortcuts: {
				";": [{
					event: "uiShowCommandPalette"
				}],
				esc: [{
					event: "uiKeyEscape"
				}, {
					event: "uiInputEscape",
					selector: ".js-escapable-input"
				}, {
					event: "uiInputBlur",
					selector: "input:not(.js-non-escapable-input),textarea:not(.js-non-escapable-input),select:not(.js-non-escapable-input)"
				}, {
					event: "uiCloseModal"
				}, {
					event: "uiCloseDropdown"
				}, {
					event: "uiGridClearSelection"
				}, {
					event: "uiComposeClose"
				}],
				"CMD+ret": [{
					event: "uiSendRetweetAction"
				}, {
					event: "uiComposeSendTweet",
					selector: ".js-compose-text"
				}],
				"CTRL+ret": [{
					event: "uiSendRetweetAction"
				}, {
					event: "uiComposeSendTweet",
					selector: ".js-compose-text"
				}],
				bksp: [{
					event: "uiGridBack"
				}],
				ret: [{
					event: "uiKeyEnter"
				}, {
					event: "uiInputSubmit",
					selector: ".js-submittable-input"
				}],
				space: [{
					event: "uiKeySpace",
					throttle: !0
				}, {
					event: "uiGridPageDown",
					throttle: !0
				}],
				n: [{
					label: (0, a.default)("Compose — New Tweet"),
					shortcut: {
						key: "n"
					},
					event: "uiComposeTweet"
				}],
				"/": [{
					event: "uiAppSearchFocus"
				}],
				s: [{
					event: "uiAppSearchFocus"
				}],
				a: [{
					event: "uiShowAddColumn"
				}],
				x: [{
					event: "uiToggleNavbarWidth"
				}],
				"?": [{
					event: "uiShowKeyboardShortcutList"
				}],
				left: [{
					event: "uiKeyLeft",
					throttle: !0
				}],
				h: [{
					event: "uiKeyLeft",
					throttle: !0
				}],
				right: [{
					event: "uiKeyRight",
					throttle: !0
				}],
				l: [{
					event: "uiKeyRight",
					throttle: !0
				}],
				up: [{
					event: "uiKeyUp",
					throttle: !0
				}],
				k: [{
					event: "uiKeyUp",
					throttle: !0
				}],
				down: [{
					event: "uiKeyDown",
					throttle: !0
				}],
				j: [{
					event: "uiKeyDown",
					throttle: !0
				}],
				r: [{
					event: "uiGridReply"
				}],
				f: [{
					event: "uiGridFavorite"
				}],
				"SHIFT+f": [{
					event: "uiGridFavoriteFromAccounts"
				}],
				t: [{
					event: "uiGridRetweet"
				}],
				d: [{
					label: (0, a.default)("Compose — New Direct Message"),
					shortcut: {
						key: "d"
					},
					event: "uiGridDirectMessage"
				}],
				m: [{
					event: "uiGridDirectMessage"
				}],
				p: [{
					event: "uiGridProfile"
				}],
				c: [{
					event: "uiGridCustomTimeline"
				}],
				"SHIFT+ ": [{
					event: "uiGridPageUp",
					throttle: !0
				}],
				pageup: [{
					event: "uiGridPageUp",
					throttle: !0
				}],
				pagedown: [{
					event: "uiGridPageDown",
					throttle: !0
				}],
				home: [{
					event: "uiGridHome",
					throttle: !0
				}],
				end: [{
					event: "uiGridEnd",
					throttle: !0
				}],
				",": [{
					event: "uiShowGlobalSettings"
				}],
				".": [{
					event: "uiGridContextMenu"
				}]
			},
			charCodes: {
				bksp: 8,
				ret: 13,
				esc: 27,
				space: 32,
				pageup: 33,
				pagedown: 34,
				end: 35,
				home: 36,
				left: 37,
				up: 38,
				right: 39,
				down: 40
			},
			defaultKeyEvent: "keypress",
			keySequenceTimeoutDelay: 1e3,
			modifiers: {
				ctrl: "ctrlKey",
				alt: "altKey",
				cmd: "metaKey",
				shift: "shiftKey"
			}
		}), this.after("initialize", function() {
			var e = this;
			this.on(document, "uiInputBlur", this.blurInput), this.on(window, "keypress", this.handleKeyPress), this.on(window, "keydown", this.handleKeyDown);
			for (var t = 0; t < 10; t++) this.addShortcut(t + "", this.columnFocusFactory(t));
			(0, r.default)(this.attr.shortcuts, function(t, i) {
				t.forEach(function(t) {
					var n = e.shortcutEventHandlerFactory(t);
					e.addShortcut(i, n, t.selector), e.addCommands([{
						label: t.label,
						shortcut: t.shortcut,
						apply: function() {
							return e.trigger(t.event, {
								keyboardShortcut: !0
							})
						}
					}])
				})
			})
		}), this.blurInput = function(e, t) {
			(0, o.default)(e.target).blur()
		}, this.shortcutEventHandlerFactory = function(e) {
			var t = function(t) {
				t.preventDefault(), t.stopPropagation(), this.trigger(t.target, e.event, {
					keyboardShortcut: !0
				})
			}.bind(this);
			return e.throttle ? (0, s.default)(t, 100) : (0, n.default)(t, 200, !0)
		}, this.columnFocusFactory = function(e) {
			return function(t) {
				t.preventDefault(), t.stopPropagation(), 0 === e ? this.trigger("uiColumnFocus", {
					last: !0
				}) : this.trigger("uiColumnFocus", {
					index: e - 1
				})
			}.bind(this)
		}, this.getShortcutForEvent = function(e) {
			var t, i = e.which;
			return this.eventHasModifier(e) && (t = this.combos[i]), t || this.eventHasFunctionModifier(e) || (t = this.activeSequences[i] || this.singleKeys[i] || this.sequenceStarters[i]), t
		}, this.clearActiveSequences = function() {
			this.activeSequences = {}
		}, this.eventHasModifier = function(e) {
			return e.ctrlKey || e.altKey || e.metaKey || e.shiftKey
		}, this.eventHasFunctionModifier = function(e) {
			return e.ctrlKey || e.metaKey
		}, this.getModifiedKeyEvent = function(e, t) {
			var i;
			return this.eventHasModifier(e) && t.modifiers && (0, r.default)(t.modifiers, function(t, n) {
				e[n] && (i = t)
			}, this), i
		}, this.handleKeyPress = function(e) {
			var t = (0, o.default)(".DrawerModal").hasClass("is-visible");
			if (!t || e.which === this.attr.charCodes.esc) {
				var i;
				e.which >= 65 && e.which <= 90 && (e.which += 32), (i = this.getShortcutForEvent(e)) ? i.sequences ? ((0, r.default)(i.sequences, function(e, t) {
					this.addSequenceEnd(t, e)
				}, this), setTimeout(function() {
					this.clearActiveSequences()
				}.bind(this), this.attr.keySequenceTimeoutDelay)) : ((i.shortcuts || [i]).map(function(t) {
					return t.modifiers && (t = this.getModifiedKeyEvent(e, t)), t
				}, this).filter(function(e) {
					return void 0 !== e
				}).forEach(function(t) {
					var i = t.selector || ":not(input):not(textarea):not(select)",
						n = (0, o.default)(e.target);
					(n.is(i) || n.is(":radio,:checkbox")) && t.callback(e, t.data)
				}), this.clearActiveSequences()) : this.clearActiveSequences()
			}
		}, this.getCharCodeForKey = function(e) {
			var t, i = !1;
			if ("string" != typeof e) throw new Error("Key must be a string");
			return 1 === (e = e.toLowerCase()).length ? (t = e.charCodeAt(0), [
				[32, 64],
				[91, 126]
			].forEach(function(e) {
				if (t >= e[0] && t <= e[1]) return i = !0, !1
			}), i || (t = void 0)) : t = this.attr.charCodes[e], t
		}, this.addSingleKey = function(e, t, i, n) {
			var s;
			if ("function" != typeof t) throw new Error("addSingleKey: no callback");
			if (void 0 === (s = this.getCharCodeForKey(e))) throw new Error("addSingleKey: invalid key string");
			if (this.singleKeys[s]) {
				var r = this.singleKeys[s].shortcuts.every(function(e) {
					return t !== e.callback || i !== e.selector
				}, this);
				if (!r) throw new Error("addSingleKey: attempted to add identical shortcut")
			} else this.singleKeys[s] = {
				shortcuts: []
			};
			this.singleKeys[s].shortcuts.push({
				shortcut: e,
				callback: t,
				selector: i,
				data: n
			})
		}, this.addSequence = function(e, t, i, n) {
			var s, r;
			if ("function" != typeof t) throw new Error("addSequence: no callback");
			if ("string" != typeof e) throw new Error("addSequence: sequence must be a string");
			if (2 !== (s = e.split(" ")).length) throw new Error('addSequence: sequence should be in format "g a"');
			if (void 0 === (r = this.getCharCodeForKey(s[0]))) throw new Error('addSequence: sequence should be in format "g a"');
			if (void 0 === this.getCharCodeForKey(s[1])) throw new Error('addSequence: sequence should be in format "g a"');
			this.sequenceStarters[r] || (this.sequenceStarters[r] = {
				sequences: {}
			}), this.sequenceStarters[r].sequences[s[1]] = {
				shortcut: e,
				callback: t,
				selector: i,
				data: n
			}
		}, this.addSequenceEnd = function(e, t) {
			var i;
			if ("function" != typeof t.callback) throw new Error("addSequenceEnd: no callback");
			if ("string" != typeof e) throw new Error("addSequenceEnd: invalid shortcut key");
			if (void 0 === (i = this.getCharCodeForKey(e))) throw new Error("addSequenceEnd: invalid shortcut key");
			this.activeSequences[i] = {
				shortcut: t.shortcut,
				callback: t.callback,
				selector: t.selector,
				data: t.data
			}
		}, this.addCombo = function(e, t, i, n) {
			var s, r, a;
			if ("function" != typeof t) throw new Error("addCombo: no callback");
			if ("string" != typeof e) throw new Error("addCombo: invalid combo string");
			if (2 !== (s = e.split("+")).length) throw new Error('addCombo: invalid combo "' + e + '"');
			if (void 0 === (r = this.attr.modifiers[s[0].toLowerCase()])) throw new Error("addCombo: invalid modifier");
			if (void 0 === (a = this.getCharCodeForKey(s[1]))) throw new Error("addCombo: invalid shortcut key");
			var o = {
				modifiers: {}
			};
			o.modifiers[r] = {
				shortcut: e,
				callback: t,
				selector: i,
				data: n
			}, this.combos[a] || (this.combos[a] = {
				shortcuts: []
			}), this.combos[a].shortcuts.push(o)
		}, this.isSequence = function(e) {
			return "string" == typeof e && e.indexOf(" ") > 0
		}, this.isCombo = function(e) {
			return "string" == typeof e && e.indexOf("+") > 0
		}, this.addShortcut = function(e, t, i, n) {
			3 === arguments.length && "string" != typeof i && (n = i, i = void 0), this.isCombo(e) ? this.addCombo(e, t, i, n) : this.isSequence(e) ? this.addSequence(e, t, i, n) : this.addSingleKey(e, t, i, n)
		}, this.removeSingleKey = function(e) {
			var t = this.getCharCodeForKey(e);
			this.singleKeys[t] && delete this.singleKeys[t]
		}, this.removeCombo = function(e) {
			var t = this.getCharCodeForKey(e.split("+")[1]);
			this.combos[t] && delete this.combos[t]
		}, this.removeSequence = function(e) {
			var t = this.getCharCodeForKey(e.split(" ")[0]);
			this.sequenceStarters[t] && delete this.sequenceStarters[t]
		}, this.removeShortcut = function(e) {
			this.isCombo(e) ? this.removeCombo(e) : this.isSequence(e) ? this.removeSequence(e) : this.removeSingleKey(e)
		}, this.handleKeyDown = function(e) {
			var t = [this.attr.charCodes.bksp, this.attr.charCodes.esc, this.attr.charCodes.ret, this.attr.charCodes.left, this.attr.charCodes.right, this.attr.charCodes.up, this.attr.charCodes.down, this.attr.charCodes.pagedown, this.attr.charCodes.pageup, this.attr.charCodes.home, this.attr.charCodes.end],
				i = t.some(function(t) {
					return t === e.which
				});
			i && this.handleKeyPress(e)
		}
	}, c.flightWithCommands)
}, function(e, t, i) {
	"use strict";
	var n = h(i(2)),
		s = h(i(0)),
		r = h(i(4)),
		a = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(164)),
		o = h(i(2463)),
		l = i(37),
		c = h(i(2464)),
		u = h(i(6)),
		d = i(74);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	l.dogfood$.subscribe(function(e) {
		e && (0, c.default)()
	});
	var m = i(5).component;
	e.exports = m(function() {
		this.attributes({
			dismissButton: ".js-dismiss",
			actions: {
				triggerEvent: "trigger-event",
				dismiss: "dismiss",
				openUrl: "url-ext"
			},
			buttonClasses: {
				"trigger-event": "Button--primary",
				"url-ext": "Button--primary",
				dismiss: "btn-alt"
			}
		}), this.eventHandlerFactory = function(e) {
			return function() {
				switch (e.action) {
					case "trigger-event":
						this.trigger(e.event.type, e.event.data)
				}
				this.trigger("uiClickMessageButtonAction", {
					messageId: this.message.id,
					actionId: e.id
				}), this.message.isUndismissable || this.hide()
			}.bind(this)
		}, this.dismiss = function() {
			this.message && (this.trigger("uiDismissMessageAction", this.message), this.hide())
		}, this.revokeMessage = function(e, t) {
			this.message && this.message.id === t.id && this.hide()
		}, this.hide = function() {
			window.clearInterval(this.resizeBannerCheckInterval), this.trigger("uiHidingMessageBanner", this.message), this.message = null
		}, this.handleMessageData = function(e, t) {
			this.message && this.message.id === t.message.id || (this.message = t.message, this.showMessage({
				data: t
			}))
		}, this.handleMessageContainerHidden = function() {
			this.$node.addClass("is-hidden")
		}, this.showMessage = function(e) {
			var t, i, n, s = e.data.message,
				r = {
					text: s.text,
					subtext: s.subtext,
					bannerClasses: e.data.bannerClasses,
					actions: [],
					isUndismissable: s.isUndismissable
				};
			for (this.trigger("uiShowMessageBanner", s), i = 0; s.actions && i < s.actions.length; i++) switch (t = s.actions[i], n = t.class, t.action) {
				case this.attr.actions.openUrl:
					r.actions.push({
						label: t.label,
						action: t.action,
						actionId: t.id,
						url: t.url,
						isExternalUrl: !0,
						boundEventHandler: this.eventHandlerFactory(t),
						buttonClass: n || this.attr.buttonClasses[t.action]
					});
					break;
				case this.attr.actions.triggerEvent:
				case this.attr.actions.dismiss:
					r.actions.push({
						label: t.label,
						action: t.action,
						actionId: t.id,
						boundEventHandler: this.eventHandlerFactory(t),
						buttonClass: n || this.attr.buttonClasses[t.action]
					})
			}
			var a = u.default.render("topbar/message_banner", r);
			this.$node.html(a), s.colors && this.$node.css({
				"background-color": s.colors.background,
				color: s.colors.foreground
			}), this.on(this.select("dismissButton"), "click", this.dismiss), r.actions.forEach(function(e) {
				this.on('[data-action-id="' + e.actionId + '"]', "click", e.boundEventHandler)
			}.bind(this)), this.resizeBannerCheckInterval = window.setInterval(function() {
				this.currentBannerHeight && this.currentBannerHeight !== this.$node.outerHeight() && this.trigger("uiMessageBannerResized"), this.currentBannerHeight = this.$node.outerHeight()
			}.bind(this), 200), this.$node.removeClass("is-hidden"), this.trigger("uiMessageBannerShown", s)
		}, this.maybeDisplayGDPRNotice = function() {
			var e = (0, d.getTwitterAccounts)();
			e.some(function(e) {
				return e.requireConsent
			}) && (0, s.default)(document).trigger("dataMessage", {
				bannerClasses: "txt-bold color-twitter-white",
				message: {
					id: "gdpr-consent-banner",
					isUndismissable: !0,
					text: (0, n.default)("Every account you’re using in TweetDeck will need to agree to the\n                        updated Terms and Privacy Policy on {{{twitterLink}}}. Only people\n                        with account passwords can complete the process.", {
						twitterLink: '<a class="color-twitter-white link-current-color link-underline" href="https://twitter.com">Twitter.com</a>'
					})
				}
			})
		}, this.showPatchNotice = function() {
			var e = localStorage.getItem("tts_token");
			if (!e) return !1;
			var t = "https://phabricator.twitter.biz/" + localStorage.getItem("patch_id"),
				i = "" + localStorage.getItem("tts_token");
			a.render(r.default.createElement(o.default, {
				token: i,
				patchLink: t,
				bannerClasses: "txt-bold color-twitter-white"
			}), this.$node[0]), this.$node.removeClass("is-hidden"), this.trigger("uiMessageBannerShown")
		}, this.after("initialize", function() {
			this.on(document, "dataMessage", this.handleMessageData), this.on(document, "uiMessageBannerContainerHidden", this.handleMessageContainerHidden), this.on(document, "dataMessageRemove", this.revokeMessage), this.trigger("uiMessageBannerReady"), this.maybeDisplayGDPRNotice(), this.showPatchNotice()
		}), this.after("teardown", function() {
			this.dogfoodSubscription && this.dogfoodSubscription.unsubscribe()
		})
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(4)),
		s = r(i(103));
	r(i(8));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = function(e) {
		var t = e.token,
			i = e.patchLink,
			r = e.bannerClasses,
			a = (0, s.default)("message-content", "padding-hl", "padding-vm", r);
		return n.default.createElement("div", {
			className: a
		}, n.default.createElement("span", {
			className: "message-text padding-h--30"
		}, "You are viewing a patch with tts_token: ", t, ". Visit", " ", n.default.createElement("a", {
			className: "color-twitter-white hover-bg-color-twitter-white",
			href: i
		}, i), " ", "for more information"), n.default.createElement("a", {
			className: "Button",
			href: "/?tts_token=",
			onClick: function(e) {
				window.location = e.target.href
			}
		}, "reset"))
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(426)),
		s = r(i(111));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = function() {
		var e = new URL(document.location).searchParams;
		if (e.get("tts_token") && Boolean(e.get("tts_token"))) {
			var t = !0,
				i = !1,
				r = void 0;
			try {
				for (var a, o = (0, n.default)(e); !(t = (a = o.next()).done); t = !0) {
					var l = a.value,
						c = (0, s.default)(l, 2),
						u = c[0],
						d = c[1];
					"tts_token" !== u && "patch_id" !== u || localStorage.setItem(u, d)
				}
			} catch (e) {
				i = !0, r = e
			} finally {
				try {
					!t && o.return && o.return()
				} finally {
					if (i) throw r
				}
			}
		}
		"" === e.get("tts_token") && ["tts_token", "patch_id"].map(function(e) {
			return localStorage.removeItem(e)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = o(i(32)),
		s = o(i(85)),
		r = i(5),
		a = o(i(529));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(function() {
		this.attributes({
			sourceId: "appSearch",
			appSearchInputSelector: ".js-app-search-input",
			searchButtonSelector: ".js-perform-search",
			clearButtonSelector: ".js-clear-search",
			KEY_CODE_MAP: {
				13: {
					name: "ENTER",
					event: "uiSearchInputSubmit",
					on: "keypress",
					preventDefault: !0
				},
				27: {
					name: "ESC",
					event: "uiSearchInputEscaped",
					on: "keydown"
				},
				9: {
					name: "TAB",
					event: "uiSearchInputTab",
					on: "keydown",
					preventDefault: !0
				},
				37: {
					name: "LEFT",
					event: "uiSearchInputLeft",
					on: "keydown"
				},
				39: {
					name: "RIGHT",
					event: "uiSearchInputRight",
					on: "keydown"
				},
				38: {
					name: "UP",
					event: "uiSearchInputMoveUp",
					on: "keydown",
					preventDefault: !0
				},
				40: {
					name: "DOWN",
					event: "uiSearchInputMoveDown",
					on: "keydown",
					preventDefault: !0
				}
			}
		}), this.after("initialize", function() {
			a.default.attachTo(this.$node, {
				source: "appSearch"
			}), this.$input = this.select("appSearchInputSelector"), this.on(this.$input, "keyup keydown keypress paste", this.modifierKeyPressed), this.on(this.$input, "focus", this.handleFocus), this.on(this.$input, "uiInputBlur", function(e) {
				this.$input.blur()
			}), this.on(this.$input, "click", function(e) {
				e.stopPropagation()
			}), this.on(this.select("searchButtonSelector"), "click", function(e) {
				this.trigger(this.$input, "uiSearchInputSubmit", {
					query: this.$input.val()
				})
			}), this.on(this.select("clearButtonSelector"), "click", this.handleClearSearchAction), this.on("uiAppSearchSetPreventDefault", this.setPreventKeyDefault), this.on("uiAppSearchSubmit", this.handleAppSearchSubmit), this.on(document, "uiNewSearchQuery uiSearchInputChanged", this.handleSearchInputChanged), this.on("uiSearchInPopoverHidden", this.handleResetState)
		}), this.handleSearchInputChanged = function(e, t) {
			t.source !== this.attr.sourceId && (this.$input.val(t.query), this.currentQuery = t.query)
		}, this.handleAppSearchSubmit = (0, s.default)(function(e, t) {
			this.trigger(this.$input, "uiSearchInputSubmit", {
				query: t.query,
				columnKey: t.columnKey
			})
		}, 100), this.around("trigger", function() {
			var e, t = [].slice.call(arguments),
				i = t.shift();
			"string" != typeof t[t.length - 1] && (e = t.pop()), void 0 === e ? e = {
				source: this.attr.sourceId
			} : e.source = this.attr.sourceId, t.push(e), i.apply(this, t)
		}), this.setPreventKeyDefault = function(e, t) {
			this.attr.KEY_CODE_MAP[t.key].preventDefault = t.preventDefault
		}, this.handleFocus = function(e) {
			(0, n.default)(this.$input.select.bind(this.$input)), this.trigger(this.$input, "uiSearchInputFocus", {
				query: this.$input.val()
			})
		}, this.modifierKeyPressed = function(e) {
			var t = this.$input.val();
			t = "" === t.trim() ? "" : t;
			var i = this.attr.KEY_CODE_MAP[e.which || e.keyCode];
			if (i) {
				if (e.type !== i.on) return;
				i.preventDefault && e.preventDefault(), this.trigger(this.$input, i.event, {
					query: t,
					cursorPosition: this.$input[0].selectionStart
				})
			} else this.setQueryAndTriggerUpdateEvent(t)
		}, this.setQueryAndTriggerUpdateEvent = function(e) {
			this.currentQuery && this.currentQuery === e || (this.currentQuery = e, this.trigger(this.$input, "uiSearchInputChanged", {
				query: this.currentQuery
			}))
		}, this.focusInput = function() {
			this.$input.focus()
		}, this.handleClearSearchAction = function() {
			this.focusInput()
		}, this.handleResetState = function() {
			this.currentQuery = null, this.$input.val("")
		}, this.before("teardown", function() {
			this.trigger("uiDestroyAsynchronousForm")
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.attributes({
			clearButtonSelector: ".js-clear-search",
			textInputSelector: 'input[type="text"]',
			hasValueClass: "has-value",
			isWaitingForResponseClass: "is-waiting-for-response"
		}), this.handleClearAction = function() {
			this.$textInput.val(""), this.$node.removeClass(this.attr.hasValueClass), this.$textInput.trigger("change")
		}, this.handleAsyncFormReceivedResponse = function() {
			var e = this.$textInput.val();
			this.$node.removeClass(this.attr.isWaitingForResponseClass), "" !== e ? this.$node.addClass(this.attr.hasValueClass) : this.$node.removeClass(this.attr.hasValueClass), this.value = e
		}, this.handleAsyncFormWaitingForResponse = function() {
			var e = this.$textInput.val();
			void 0 !== this.value && this.value !== e && this.$node.addClass(this.attr.isWaitingForResponseClass), this.value = e
		}, this.after("initialize", function() {
			this.$textInput = this.select("textInputSelector"), this.value = this.$textInput.val().trim(), "" !== this.value && this.$node.addClass(this.attr.hasValueClass), this.on("click", {
				clearButtonSelector: this.handleClearAction
			}), this.on("uiAsyncFormWaitingForResponse", this.handleAsyncFormWaitingForResponse), this.on("uiAsyncFormReceivedResponse", this.handleAsyncFormReceivedResponse), this.on("uiSearchInputDestroy", this.teardown)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = l(i(77)),
		s = l(i(13)),
		r = l(i(58)),
		a = l(i(7)),
		o = l(i(18));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			develFeatureFlag: "tweetdeck_devel",
			dogfoodFeatureFlag: "tweetdeck_dogfood"
		}), this.initialState({
			originalTitle: function() {
				return document.title
			},
			isDevel: !1,
			isDogfood: !1
		}), this.componentDidInitialize = function() {
			this.watchFeatureFlags()
		}, this.watchFeatureFlags = function() {
			var e = this;
			this.observe((0, r.default)()).map(function(t) {
				return {
					isDevel: (0, s.default)(t, ["config", e.attr.develFeatureFlag, "value"], !1),
					isDogfood: (0, s.default)(t, ["config", e.attr.dogfoodFeatureFlag, "value"], !1)
				}
			}).subscribe(function(t) {
				return e.mergeState(t)
			})
		}, this.shouldComponentUpdate = function(e, t) {
			return !(0, n.default)(t, this.state)
		}, this.render = function() {
			document.title = this.getTitleFromState(this.state)
		}, this.getTitleFromState = function(e) {
			var t = e.isDevel ? "Dev" : "",
				i = e.isDogfood ? "Dogfood" : "",
				n = [t, i].filter(Boolean).join(" + ").trim();
			return n ? n + " :: " + e.originalTitle : e.originalTitle
		}
	}, o.default)
}, function(e, t, i) {
	"use strict";
	var n = m(i(85)),
		s = m(i(0)),
		r = i(7),
		a = m(r),
		o = m(i(2469)),
		l = m(i(2511)),
		c = m(i(153)),
		u = m(i(2533)),
		d = i(2534),
		h = m(i(21));

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	i(2535), e.exports = a.default.mixin(function() {
		this.attributes({
			hideTweetDragHandlesClass: "without-tweet-drag-handles",
			scrollDebounceTime: 200,
			focusId: null,
			dragScrollActivationOffset: {
				left: 500,
				right: 800
			},
			dragScrollActivationResponseDamping: 10,
			appColumnsContainerSelector: ".js-app-columns-container",
			columnsContainerSelector: ".js-app-columns",
			columnSelector: ".js-app-columns .js-column"
		}), this.componentDidInitialize = function() {
			var e = this;
			this.$scrollContainer = this.select("appColumnsContainerSelector"), this.on(document, "dataColumnOrder", this.setTweetDragHandleState), this.on(document, "uiColumnRender", function(t, i) {
				return e.handleColumnRender(i.column, {
					detached: i.detached,
					getCreatedEl: i.getCreatedEl
				})
			}), TD.controller.columnManager.getAllOrdered().forEach(function(t) {
				e.handleColumnRender(t)
			}), this.setupDragScroll("appColumnsContainerSelector", {
				deltaFn: function(e, t, i, n) {
					if (!this.attr.dragScrollActivationOffset[t]) return e;
					var s = this.attr.dragScrollActivationOffset[t] / 10,
						r = this.attr.dragScrollActivationResponseDamping,
						a = 1 / (1 + Math.pow(Math.E, s - n / r));
					return parseFloat((e * a).toFixed(4))
				}
			});
			this.on(document, ["dataColumnOrder", "uiToggleNavBarWidth", "uiDrawerTransitionComplete", "uiCalculateColumnVisibilities"].join(" "), this.calculateColumnVisibilities), this.on(this.$scrollContainer, "scroll", (0, n.default)(this.calculateColumnVisibilities.bind(this), this.attr.scrollDebounceTime)), this.on(window, "resize", this.calculateColumnVisibilities), this.trigger("uiNeedsColumnOrder")
		}, this.handleColumnRender = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = t.detached,
				n = t.getCreatedEl,
				r = this.connectColumn(e, {
					detached: i
				});
			n && n(r), (0, s.default)(document).trigger("uiColumnRendered", {
				column: e,
				$column: r
			})
		}, this.connectColumn = function(e, t) {
			var i = t.detached,
				n = e.model.getKey(),
				a = d.columnStates$.filter(function(e) {
					return n === e.columnKey
				}).map(function(e) {
					return e.state
				}),
				c = e instanceof TD.vo.Column ? o.default : l.default,
				u = (0, r.connect)(a)(c),
				h = document.createElement("section");
			return i || this.select("columnsContainerSelector").append(h), u.attachTo(h, {
				focusId: this.attr.focusId,
				column: e
			}), (0, s.default)(h)
		}, this.calculateColumnVisibilities = function() {
			var e = this.select("columnSelector"),
				t = this.$scrollContainer.width(),
				i = {};
			e.each(function(e) {
				var n, r = (0, s.default)(this),
					a = r.position(),
					o = r.width();
				a.right = a.left + o, a.left = Math.max(0, a.left), a.right = Math.max(0, a.right), a.left = Math.min(t, a.left), a.right = Math.min(t, a.right), (n = {
					columnWidth: o,
					visibleWidth: a.right - a.left,
					visibleHeight: r.height()
				}).visibleFraction = n.visibleWidth / n.columnWidth, i[r.data("column")] = n
			}), this.trigger("uiColumnVisibilities", i)
		}, this.setTweetDragHandleState = function(e, t) {
			var i = t.columnOrder.some(function(e) {
					var t = TD.controller.columnManager.get(e);
					return h.default.isOwnCustomTimeline(t)
				}),
				n = !i;
			this.select("columnsContainerSelector").toggleClass(this.attr.hideTweetDragHandlesClass, n)
		}
	}, c.default, u.default)
}, function(e, t, i) {
	"use strict";
	var n = R(i(44)),
		s = R(i(9)),
		r = R(i(13)),
		a = R(i(85)),
		o = R(i(121)),
		l = R(i(32)),
		c = R(i(0)),
		u = R(i(7)),
		d = R(i(18)),
		h = R(i(66)),
		m = R(i(6)),
		f = R(i(103)),
		p = R(i(21)),
		g = R(i(2470)),
		v = R(i(870)),
		T = i(33),
		w = R(i(58)),
		b = R(i(2475)),
		y = R(i(2478)),
		_ = i(37),
		C = i(2479),
		S = i(871),
		D = R(i(2)),
		k = R(i(2480)),
		E = R(i(840)),
		I = i(841),
		A = i(168),
		x = i(518),
		M = R(i(872));

	function R(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var F = i(512),
		O = i(354),
		P = i(529),
		N = i(2506),
		U = i(2507),
		L = i(2508),
		j = i(153),
		B = i(361),
		$ = i(362),
		z = i(2509),
		H = i(208),
		K = i(2510),
		V = i(514),
		q = i(230),
		W = i(279),
		G = i(277).TRANSITION_END;
	e.exports = u.default.mixin(function() {
		this.attributes({
			columnMessageSelector: ".js-column-message",
			columnDragDropOverlayText: ".js-drag-drop-overlay-text",
			columnDragDropOverlaySpinner: ".js-drag-drop-overlay-spinner",
			filterErrorTemplate: "column/column_filter_error",
			filterErrorClass: "filter-error",
			showDetailViewClass: "is-shifted-1",
			showSocialProofClass: "is-shifted-2",
			socialProofSelector: ".js-column-social-proof",
			columnStateDefault: "default",
			columnStateDetailView: "detailView",
			columnStateSocialProof: "socialProof",
			moreTweetsButtonContainerSelector: ".more-tweets-btn-container",
			moreTweetsButton: ".js-more-tweets-btn",
			moreTweetsGlow: ".js-more-tweets-glow",
			tweetTextSelector: ".tweet-text",
			tweetDragHandleSelector: ".tweet-drag-handle",
			columnScrollerIsAnimatingClass: "is-column-scroller-animating",
			isNewClass: "is-new",
			chirpSelector: ".js-chirp-container .js-stream-item",
			tweetActionsSelector: ".js-tweet-actions",
			tweetActionsVisibleClass: "is-visible",
			animateInClass: "anim-rotate-in",
			animateOutClass: "anim-rotate-out",
			customTimelineDescriptionSelector: ".js-customtimeline-description",
			shareColumnSelector: ".js-share-column",
			otherRepliesStreamLinkSelector: ".js-other-replies-link",
			focusId: null,
			column: null,
			tweetImpressionTrackingPeriod: 250,
			scribeElementSelector: "[data-scribe-element]",
			userSelectorInputSelector: ".js-username-input",
			isOptionsOpenClass: "is-options-open",
			headerActionButtonSelector: ".js-action-header-button",
			dropIndicatorId: "custom-timeline-drop-indicator",
			dropIndicatorClassName: "drop-indicator",
			insightsEntryPoint: ".js-insights-entry-point",
			searchFilterCalloutSelector: ".js-search-filter-callout",
			liveVideoSelector: ".js-live-video",
			searchFilterSelector: ".js-search-filter",
			addToCustomTimelineSelector: ".js-add-to-customtimeline",
			addToCustomTimelineInputSelector: ".js-add-to-customtimeline-input",
			customTimelineIdDataAttr: "customtimeline-id",
			columnStateDetailViewClass: "js-column-state-detail-view",
			columnStateSocialProofClass: "js-column-state-social-proof",
			scrollContainerSelector: ".js-column-scroller",
			columnOptionsSelector: ".js-column-options",
			columnOptionsContainerSelector: ".js-column-options-container",
			columnUnreadCountSelector: ".js-column-header .js-unread-count",
			columnContentSelector: ".js-column-content"
		}), this.defer = l.default, this.throttle = o.default, this.initialState({
			isRebroadCasting: !1,
			searchFilter: function() {
				return this.attr.column.getSearchFilter()
			},
			columnVisibility: function() {
				return this.attr.column.visibility
			}
		}), this._maybeUpdateCount = function(e) {
			var t = e.$el,
				i = e.newCount,
				n = e.oldCount,
				s = (0, I.getHumanFormatOptions)(),
				r = parseInt(i, 10),
				a = r ? (0, E.default)(r, s) : "";
			a !== n && t.text(a)
		}, this.onLiveEngagement = function(e, t) {
			var i = this.$node.find("[data-tweet-id=" + t + "]");
			if (e.like_count) {
				var n = i.find(".js-like-count");
				this._maybeUpdateCount({
					$el: n,
					newCount: e.like_count,
					oldCount: n.text()
				})
			} else if (e.retweet_count) {
				var s = i.find(".js-retweet-count");
				this._maybeUpdateCount({
					$el: s,
					newCount: e.retweet_count,
					oldCount: s.text()
				})
			} else if (e.reply_count) {
				var r = i.find(".js-reply-count");
				this._maybeUpdateCount({
					$el: r,
					newCount: e.reply_count,
					oldCount: r.text()
				})
			}
		}, this.componentDidInitialize = function() {
			var e = this;
			this.column = this.attr.column, this.tweetEngagementSubscriptions = {}, this.tweetEngagementsManager = new k.default(this.onLiveEngagement.bind(this)), this.initialRender(), this.attachChild(K, this.$node), (0, C.browserNeedsWillAnimateFix)() && (0, c.default)(this.$node).addClass("will-animate"), this.columnKey = this.column.model.getKey(), this.visibleChirpsTierTwo = {}, this.visibleChirpsTierThree = {};
			var t, i, n, o = this.column.getCustomTimelineFeed(),
				l = p.default.isOwnCustomTimeline(this.column);
			if (l && (t = o.getMetadata(), i = t.id, n = TD.storage.Account.generateKeyFor("twitter", t.ownerId)), this.targetTopPosition = 0, this.$socialProofContainer = this.select("socialProofSelector"), this.$columnOptions = this.select("columnOptionsSelector"), this.$scrollContainer = this.select("scrollContainerSelector"), this.createNewHeightCache(), this.renderColumnMessage(), "col_customtimeline" === p.default.getColumnType(this.column)) {
				var u = this.getMomentMakerProStream();
				this.observe(u).subscribe(function(t) {
					e.column.hasMomentMakerProAccess = t
				})
			}
			this.attr.tweetImpressionTrackingPeriod > 0 && (this.scribeTweetImpressions = this.throttle(this.scribeTweetImpressions.bind(this), this.attr.tweetImpressionTrackingPeriod)), this.setupDragDrop({
				type: "tweet",
				indicateDrop: !1,
				predrag: function(e, t) {
					(0, c.default)(t.el).closest(this.attr.tweetActionsSelector).addClass(this.attr.tweetActionsVisibleClass)
				},
				dragend: function(e, t) {
					(0, c.default)(t.el).closest(this.attr.tweetActionsSelector).removeClass(this.attr.tweetActionsVisibleClass)
				}
			}), this.after("stateChanged", this.onStateChange.bind(this)), this.on("click", {
				shareColumnSelector: this.handleShareColumnButtonClick,
				scribeElementSelector: this.handleScribeElementClick,
				headerActionButtonSelector: this.throttle(this.handleHeaderClick.bind(this), 300)
			}), this.on("click", {
				otherRepliesStreamLinkSelector: function(t, i) {
					var n = (0, c.default)(t.target).closest("[data-recipient-ids]").attr("data-recipient-ids");
					if (n) {
						var s = n.split(",").map(function(e) {
							return {
								id: e
							}
						});
						e.recipientUsersRequestId = W.requestUsers(s)
					}
				}
			}), this.on("mediaGalleryRequestTwitterUsersForReplyModal", function(t, i) {
				var n = W.getImplicitMentions(i.userMentions);
				e.recipientUsersRequestId = W.requestUsers(n)
			}), this.on(document, "dataTwitterUsers", function(t, i) {
				if (i.requestId === e.recipientUsersRequestId) {
					var n = W.getDefaultModalOptions();
					e.showModal(V, {
						replies: i.users,
						withUserBio: !0,
						withComposeContext: !1
					}, (0, s.default)({}, n, {
						title: (0, D.default)("People in conversation")
					}))
				}
			}), this.on("uiViewTimeline", this.handleViewTimeline), this.on("uiReferenceTimeline", this.handleReferenceTimeline), this.on("uiDetailViewActive", this.handleDetailViewActive), this.on("uiDetailViewClosed", this.handleDetailViewClosed), this.on("uiCloseDetailView", this.handleCloseDetailView), this.on("uiSocialProofForTweetClosed", this.handleSocialProofClosed), this.on("uiShowSocialProof", this.handleShowSocialProof), this.on("uiCloseSocialProof", this.handleCloseSocialProof), this.on(document, "uiShowDmParticipants", this.handleShowDmParticipants), this.on("uiDmParticipantsClosed", this.handleCloseDmParticipants), this.on("uiUpdateLiveVideoTimeline", this.handleLiveVideoTimelineUpdate), this.on("uiMarkAllMessagesRead", this.handleMarkAllRead), this.on("uiReadStateChange", this.handleColumnReadStatus), this.on(document, "uiMessageThreadRead", this.handleMessageThreadRead), this.on(document, "uiMessageUnreadCount", this.handleMessageCount), this.on("uiColumnUpdateMediaPreview", this.handleUpdateMediaPreview), this.on("dataColumnUpdatingFilters dataColumnUpdatingFeed", this.handleColumnUpdating), this.on("dataColumnFiltersUpdated dataColumnFeedUpdated", this.handleColumnUpdated), this.on("uiColumnTitleUpdate", this.handleColumnTitleUpdate), this.on("uiRemoveColumn", this.handleUiRemoveColumn), this.on("uiExitSettings", this.exitEditMode), this.on("uiEnterSettings", this.enterEditMode), this.on("mouseover", {
				tweetDragHandleSelector: function(e, t) {
					var i = t.el;
					q.makeTweetDraggable(i)
				}
			}), this.on("mouseout", {
				tweetDragHandleSelector: (0, a.default)(function(e, t) {
					var i = t.el;
					q.makeTweetUnDraggable(i)
				}, 50)
			}), this.on(document, "dataSerializedColumn", this.handleSerializedColumn), this.on(document, "dataSettingsValues", this.handleSettingsChange), this.on(document, "uiColumnUpdateMediaPreview", this.handleMediaPreviewChange), this.on(document, "uiFocus", function(e, t) {
				this.hasFocus = t.id === this.attr.focusId, this.hasFocus && this.scribeTweetImpressions()
			}), this.on(this.$scrollContainer, "scroll", function() {
				this.scribeTweetImpressions();
				var e = 1 === this.column.visibility.visibleFraction;
				this._checkUivExperiment(e)
			}), this.on(document, "uiColumnVisibilities", this.handleColumnVisibilities), this.on(document, "uiColumnChirpsChanged", function(e, t) {
				t.id === this.columnKey && this.scribeTweetImpressions()
			}), this.on("uiTransitionExpandEnd", this.scribeTweetImpressions), this.on(window, "resize", (0, a.default)(this.handleWindowResize.bind(this), 300)), this.on(document, TD.util.visibilityChangeEventName(), function(e) {
				this.scribeTweetImpressions()
			}), this.on(window, "beforeunload", this.scribeAllChirpsHidden), this.setMoreTweetsDesign(), this.attachChild(z, this.$node), l && (this.setupDragDrop({
				type: "tweet",
				indicateDrop: !0,
				dragstart: this.onDragStart,
				dragleave: this.onDragLeave,
				dragover: this.onDragOver,
				dragend: this.onDragEnd,
				drop: this.onDrop
			}), this.attachChild(y.default, this.select("addToCustomTimelineSelector"), {
				accountKey: n,
				customTimelineId: i
			}), this.on(document, "dataAddOrMoveTweetToCustomTimelineSuccess", this.boundedRefreshCustomTimelineFeed.bind(this)), this.on(document, "dataAddOrMoveTweetToCustomTimelineError", this.onDragLeave), this.on(document, "dataRemoveTweetFromCustomTimelineSuccess", this.removeChripFromCustomTimelineFeed.bind(this)), this.on("uiRemoveTweetFromCustomTimeline", this.rebroadcast(this.transformRemoveTweetFromCustomTimeline))), o && this.attachChild(N, this.select("customTimelineDescriptionSelector"), {
				withAutoComplete: !1,
				customTimelineId: o.getMetadata().id,
				isOwnCustomTimeline: p.default.isOwnCustomTimeline(this.column),
				columnKey: this.columnKey,
				readOnly: this.column.temporary,
				accountKey: o.getAccountKey(),
				maxCharCount: 160
			});
			var d = p.default.isSearchColumn(this.column) && !this.column.temporary && "awaiting_backfill" === this.column.state;
			d && this.attachChild(v.default, this.select("searchFilterCalloutSelector"), {
				content: (0, D.default)("Filter your search for better results"),
				getSetting: function() {
					return TD.settings.getShowSearchFilterCallout
				},
				setSetting: function() {
					return function(e) {
						TD.settings.setShowSearchFilterCallout(e)
					}
				},
				scribeComponent: "search"
			});
			var m = "col_livevideo" === p.default.getColumnType(this.column);
			if (m) {
				var f = this.column.getFeeds()[0].getMetadata();
				this.attachChild(b.default, this.select("liveVideoSelector"), (0, s.default)({}, f, {
					isTemporaryColumn: this.column.temporary
				}))
			}
			if (this.on("uiCardDidResize", this.handleCardResized), p.default.isSearchColumn(this.column)) {
				var T = h.default.nextTeardownEvent();
				this.observe(_.betaAndInsights$).subscribe(function(t) {
					var i = t.betaEnabled,
						n = t.insightsEnabled;
					if (i || n) {
						var s = e.connect(g.default, {
							mapStateToProps: function(t) {
								return {
									matching: (0, r.default)(e.props, "matching", null),
									isColumnVisible: t.columnVisibility.visibleFraction > 0
								}
							}
						});
						e.attachChild(s, e.select("insightsEntryPoint"), {
							teardownOn: T + " " + e.childTeardownEvent
						})
					} else e.trigger(T)
				})
			}
			TD.ui.columns.setupColumnScrollListeners(this.column)
		}, this.initialRender = function() {
			var e = this.column,
				t = e.temporary ? function(e) {
					return {
						columnkey: e.model.getKey(),
						columntitle: p.default.getColumnTitleHTML(e),
						columniconclass: p.default.getColumnIconClassByColumn(e),
						isTemporary: !0
					}
				}(e) : function(e) {
					var t = p.default.isMessageColumn(e),
						i = null;
					e.hasActiveSearchFilters() && (i = {
						content: e.hasActiveContentFilters(),
						user: e.hasActiveUserFilters(),
						action: e.hasActiveActionFilters() && !e.isSingleActionTypeColumn(),
						engagement: e.hasActiveEngagementFilters(),
						filterError: e.hasFilterError()
					});
					var n = p.default.isSearchColumn(e);
					return {
						columnkey: e.model.getKey(),
						columntitle: p.default.getColumnHeaderTitleHTML(e),
						columnclass: p.default.getColumnClassByColumn(e),
						columniconclass: p.default.getColumnIconClassByColumn(e),
						columnfilter: i,
						filterError: e.hasFilterError(),
						withEditableTitle: n,
						withMarkAllRead: t,
						withDMComposeButton: t,
						isTouchColumnOptions: p.default.isTouchColumnOptions(),
						isSearch: p.default.isSearchColumn(e)
					}
				}(e);
			this.$node.attr("data-column", t.columnkey).addClass((0, f.default)("js-column", e.temporary ? "column-temp" : "column", t.columnclass)).html((0, c.default)(m.default.render("column", t)))
		}, this.render = function() {}, this.handleCardResized = function(e, t) {
			var i = this,
				n = t.height,
				s = (0, c.default)(e.target).closest(".js-card-container"),
				r = (0, c.default)(e.target).closest(".js-stream-item"),
				a = r.attr("data-key");
			TD.ui.columns.alterColumnContents(this.columnKey, r, function() {
				s.removeClass("height--0"), null == n ? (s.height("auto"), i.chirpHeightCache.put(a, void 0)) : (s.height(n), i.chirpHeightCache.put(a, r.height()))
			})
		}, this.handleScribeElementClick = function(e) {
			var t = (0, c.default)(e.target);
			if (p.default.isDataminr(this.column) && (this.$scrollContainer.find(t).length || this.column.detailViewComponent)) {
				var i = t.closest(this.attr.scribeElementSelector).attr("data-scribe-element"),
					n = this.column.detailViewComponent ? "dataminr_alert_detail" : "dataminr_alert";
				TD.controller.stats.dataminrClickImpression(n, i)
			}
		}, this.handleHeaderClick = function(e) {
			return e.preventDefault(), e.stopPropagation(), this.handleHeaderAction((0, c.default)(e.target).closest("[data-action]").attr("data-action"), e)
		}, this.toggleEditMode = function(e) {
			var t = this.$node;
			t.hasClass(this.attr.isOptionsOpenClass) ? this.exitEditMode() : (this.enterEditMode(), (0, c.default)(document).trigger("scribeEvent", {
				terms: (0, s.default)({}, e, {
					element: "options",
					action: "click"
				})
			}))
		}, this.handleHeaderAction = function(e, t) {
			var i = this.$node,
				n = i.attr("data-column");
			switch (e) {
				case "options":
					this.toggleEditMode((0, T.getElementNamespace)((0, c.default)(t.currentTarget)));
					break;
				case "mark-all-read":
					TD.controller.stats.messagesColumnHeaderClick("mark_all_read"), this.trigger("uiMarkAllMessagesRead", {
						columnKey: n
					});
					break;
				case "compose-dm":
					TD.controller.stats.messagesColumnHeaderClick("compose"), this.trigger("uiComposeTweet", {
						type: "message",
						columnKey: n
					});
					break;
				case "message-menu":
					var s = (0, c.default)(t.target).closest("[data-action]"),
						r = s.data("conversation-id"),
						a = s.data("account-key");
					i.trigger("uiShowConversationMenu", {
						conversationId: r,
						accountKey: a,
						columnKey: n,
						$targetElement: s
					})
			}
		}, this.setColumnState = function(e) {
			switch (this.$node.removeClass([this.attr.showDetailViewClass, this.attr.columnStateDetailViewClass, this.attr.showSocialProofClass, this.attr.columnStateSocialProofClass].join(" ")), e) {
				case this.attr.columnStateDetailView:
					this.$node.addClass(this.attr.showDetailViewClass), this.$node.addClass(this.attr.columnStateDetailViewClass);
					break;
				case this.attr.columnStateSocialProof:
					this.$node.addClass(this.attr.showSocialProofClass), this.$node.addClass(this.attr.columnStateSocialProofClass), this.$node.one(G, function() {
						this.select("userSelectorInputSelector").focus()
					}.bind(this))
			}
		}, this.handleDetailViewActive = function() {
			this.closingDetailViewTimer ? (clearTimeout(this.closingDetailViewTimer), delete this.closingDetailViewTimer) : (this.setColumnState(this.attr.columnStateDetailView), this.scribeAllChirpsHidden(), this.pause())
		}, this.handleDetailViewClosed = function() {
			var e = this;
			this.closingDetailViewTimer = this.defer(function() {
				delete e.closingDetailViewTimer, e.setColumnState(e.attr.columnStateDefault), e.column.detailViewComponent = null, e.unpause(), e.scribeTweetImpressions()
			})
		}, this.handleCloseDetailView = function() {
			this.column.detailViewComponent.destroy()
		}, this.handleShowSocialProof = function(e, t) {
			this.attachChild(L, this.$socialProofContainer, {
				type: t.type,
				tweetSummary: t.tweetSummary
			}), this.setColumnState(this.attr.columnStateSocialProof)
		}, this.handleSocialProofClosed = function() {
			this.setColumnState(this.attr.columnStateDetailView)
		}, this.handleCloseSocialProof = function() {
			this.trigger(this.$socialProofContainer, "uiSocialProofForTweetClose")
		}, this.handleColumnTitleUpdate = function(e, t) {
			p.default.isSearchColumn(this.column) && (this.column.setMatchingFilter(t.title), this.mergeState({
				searchFilter: this.column.getSearchFilter()
			}), TD.controller.stats.columnHeaderSearchUpdate(t.title))
		}, this.onStateChange = function(e, t) {
			if (p.default.isSearchColumn(this.column) && t.searchFilter !== e.searchFilter) {
				var i = e.searchFilter.content.matching,
					n = e.searchFilter.getQueryString(),
					r = t.searchFilter.content.matching,
					a = t.searchFilter.getQueryString(),
					o = (0, x.trackQuerySupportedByContent)(i + " " + n),
					l = (0, x.trackQuerySupportedByContent)(r + " " + a),
					c = {
						page: "column",
						section: "search",
						element: "filter"
					};
				o === l || (o ? (0, T.generic)((0, s.default)({}, c, {
					action: "start_streaming"
				})) : (0, T.generic)((0, s.default)({}, c, {
					action: "stop_streaming"
				})))
			}
		}, this.handleShowDmParticipants = function(e, t) {
			t.columnKey === this.columnKey && (this.attachChild(U, this.$socialProofContainer, t), this.setColumnState(this.attr.columnStateSocialProof))
		}, this.handleCloseDmParticipants = function(e, t) {
			this.setColumnState(this.attr.columnStateDetailView)
		}, this.pause = function() {
			this.column.isTrackingRealtime && (this.paused = !0, this.column.isTrackingRealtime = !1, this.column.ui.pause())
		}, this.unpause = function() {
			this.paused && 0 === this.column.getNumUnseenChirps() && (this.column.isTrackingRealtime = !0, this.column.ui.unpause()), this.paused = !1
		}, this.handleUiRemoveColumn = function() {
			this.column.detailViewComponent && this.column.detailViewComponent.destroy();
			var e = (0, n.default)(this.column.updateIndex);
			this.column.ui.removeChirps(e, {
				willBreakScrollPosition: !1
			}), this.scribeAllChirpsHidden(), this.tweetEngagementsManager.clearAllSubscriptions(), this.teardown()
		}, this.handleShareColumnButtonClick = function(e, t) {
			var i = (0, c.default)(t.el);
			this.toggleShareMenu(e, i)
		}, this.getMomentMakerProStream = function() {
			var e = (0, w.default)().map(function(e) {
				return (0, r.default)(e, "config.tweetdeck_create_moment_pro.value", !1)
			}).startWith(!1);
			return e
		}, this.toggleShareMenu = function(e, t) {
			e.preventDefault(), e.stopPropagation();
			var i = this.attr.dropdownPositions,
				n = {
					position: [i.offsetRight, i.underLeftIcon].join(" "),
					toggle: !0
				},
				s = {
					isEmbeddable: p.default.isEmbeddable(this.column),
					isSearchColumn: p.default.isSearchColumn(this.column),
					isCustomTimeline: p.default.isCustomTimeline(this.column),
					isShareable: p.default.isShareable(this.column),
					isViewable: p.default.isViewable(this.column),
					canCreateMoment: TD.decider.get("create_moment") && this.column.hasMomentMakerProAccess && p.default.isCustomTimeline(this.column)
				};
			this.renderDropdown(t, "menus/column_share", s, n)
		}, this.getCustomTimelineDataForPermalink = function() {
			var e = this.column.getCustomTimelineFeed(),
				t = e.getMetadata(),
				i = TD.util.deMentionify(TD.cache.names.getScreenName(t.ownerId)),
				n = TD.cache.names.getCustomTimelineName(t.id, t.ownerId);
			if (!i) throw new Error("Could not get username from name cache.");
			return {
				username: i,
				name: n,
				id: t.id.replace(/[^\d]*/, "")
			}
		}, this.getCustomTimelinePermalinkURL = function() {
			var e = this.getCustomTimelineDataForPermalink(),
				t = m.default.toURLFromRaw("https://twitter.com/{{username}}/timelines/{{id}}", {
					username: e.username,
					id: e.id
				});
			return t
		}, this.getCustomTimelinePermalinkURLWithDescription = function() {
			var e = this.getCustomTimelineDataForPermalink(),
				t = m.default.toHtmlFromRaw("“{{name}}” - @{{username}} “https://twitter.com/{{username}}/timelines/{{id}}”", {
					name: e.name,
					username: e.username,
					id: e.id
				});
			return t
		}, this.handleViewTimeline = function() {
			var e = this.getCustomTimelinePermalinkURL();
			TD.util.openURL(e)
		}, this.handleReferenceTimeline = function() {
			var e = p.default.getColumnType(this.column);
			"col_customtimeline" === e ? this.trigger("uiComposeTweet", {
				appendText: this.getCustomTimelinePermalinkURLWithDescription()
			}) : this.trigger("uiNeedsSerializedColumn", {
				columnId: this.columnKey
			})
		}, this.handleShowingColumnOptions = function() {
			var e = this.select("columnMessageSelector");
			e.css({
				opacity: 0,
				height: 0
			})
		}, this.handleColumnOptionsShown = function() {
			this.attachChild(P, this.$columnOptions)
		}, this.handleHidingColumnOptions = function() {
			this.trigger(this.$columnOptions, "uiDestroyAsynchronousForm"), this.renderColumnMessage()
		}, this.handleColumnOptionsHidden = function() {
			var e = this.select("columnMessageSelector");
			e.animate({
				opacity: 1
			}, 150, "easeInOutQuad")
		}, this.renderColumnMessage = function() {
			var e, t = this,
				i = this.select("columnMessageSelector");
			if (this.tearDownFilterMessageEvent && (this.trigger(this.tearDownFilterMessageEvent), delete this.tearDownFilterMessageEvent), this.column.hasActiveSearchFilters()) {
				if (this.column.hasFilterError()) e = (0, c.default)(m.default.render(this.attr.filterErrorTemplate)), i.addClass(this.attr.filterErrorClass);
				else {
					e = (0, c.default)("<div />");
					var n = !this.column.isSingleActionTypeColumn() && !p.default.isSearchColumn(this.column) && this.column.hasActiveActionFilters(),
						s = this.column.hasActiveContentFilters(),
						r = this.column.hasActiveLocationFilters(),
						a = this.column.hasActiveUserFilters(),
						o = this.column.hasActiveEngagementFilters(),
						l = h.default.nextTeardownEvent();
					this.attachChild(S.FilterMessageUiBase, e, {
						teardownOn: l + " " + this.childTeardownEvent,
						props: {
							title: (0, D.default)("Filtering by"),
							filters: [n && {
								name: "action-filter",
								icon: "check"
							}, r && {
								name: "location-filter",
								icon: "geo"
							}, s && {
								name: "content-filter",
								icon: "content"
							}, a && {
								name: "user-filter",
								icon: "user"
							}, o && {
								name: "engagement-filter",
								icon: "retweet"
							}].filter(Boolean),
							onClick: function(i) {
								i ? t.enterEditMode(i) : t.toggleEditMode((0, T.getElementNamespace)(e))
							}
						}
					}), this.tearDownFilterMessageEvent = l, i.removeClass(this.attr.filterErrorClass)
				}
				i.height("").html(e)
			} else i.height("").html("")
		}, this.handleSettingsChange = function(e, t) {
			(t.font_size || t.column_width) && (this.createNewHeightCache(), this.scribeTweetImpressions())
		}, this.handleMediaPreviewChange = function(e, t) {
			this.createNewHeightCache(), this.scribeTweetImpressions()
		}, this.createNewHeightCache = function() {
			this.chirpHeightCache = new O(200)
		}, this.getColumnTopError = function() {
			var e, t = this.select("scrollContainerSelector"),
				i = 0;
			return t.hasClass(this.attr.columnScrollerIsAnimatingClass) || (e = this.select("columnOptionsContainerSelector").height(), i = e - this.targetTopPosition), i
		}, this.handleShowUserFilter = function() {
			this.trigger(this.$columnOptions, "uiShowUserFilter")
		}, this.handleShowContentFilter = function() {
			this.trigger(this.$columnOptions, "uiShowContentFilter")
		}, this.handleUpdateMediaPreview = function(e, t) {
			this.column.setMediaPreviewSize(t.value)
		}, this.handleColumnUpdating = function() {
			this.trigger(this.$columnOptions, "uiWaitingForAsyncResponse")
		}, this.handleColumnUpdated = function() {
			this.trigger(this.$columnOptions, "uiReceivedAsyncResponse")
		}, this.handleMarkAllRead = function() {
			this.column.markAllMessagesAsRead()
		}, this.handleSerializedColumn = function(e, t) {
			if (t.columnId === this.columnKey) {
				var i = m.default.toHtmlFromRaw("Check out this TweetDeck column: “{{url}}”", {
					name: this.column.model.getTitle(),
					url: t.url
				});
				this.trigger("uiComposeTweet", {
					appendText: i
				})
			}
		}, this.handleMessageCount = function(e, t) {
			if (this.columnKey === t.columnKey) {
				var i = this.select("columnUnreadCountSelector"),
					n = i.text() || "0",
					s = "0" === n && "0" !== t.count,
					r = "0" !== n && "0" === t.count;
				i.text(t.count), s && (this.stopAnimation(i, this.attr.animateOutClass), i.addClass("is-visible"), this.addAnimateClass(i, this.attr.animateInClass)), r && (this.stopAnimation(i, this.attr.animateInClass), this.addAnimateClass(i, this.attr.animateOutClass, function() {
					i.removeClass("is-visible")
				}))
			}
		}, this.handleColumnReadStatus = function(e, t) {
			p.default.isMessageColumn(this.column) || (t.columnKey = this.columnKey, this.$node.toggleClass(this.attr.isNewClass, !t.read))
		}, this.handleMessageThreadRead = function(e, t) {
			p.default.isMessageColumn(this.column) && this.trigger(document, "uiMessageUnreadCount", {
				columnKey: this.columnKey,
				count: this.column.unreadMessageCount()
			})
		}, this.handleColumnVisibilities = function(e, t) {
			var i = this.column.visibility,
				n = t[this.columnKey];
			if (n) {
				if (this.column.visibility = n, this.mergeState({
						columnVisibility: n
					}), i.visibleFraction !== n.visibleFraction && this.scribeTweetImpressions(), TD.decider.get("dev_hide_offscreen_columns")) {
					var s = 0 === this.column.visibility.visibleFraction;
					this.select("columnContentSelector").toggleClass("is-hidden", s)
				}
				var r = 1 === this.column.visibility.visibleFraction;
				this._checkUivExperiment(r)
			}
		}, this._checkUivExperiment = function(e) {
			var t = this,
				i = TD.controller.stats.isInExperimentBucket("tweetdeck_uiv_7739", "uiv_images"),
				n = TD.controller.stats.isInExperimentBucket("tweetdeck_uiv_7739", "control");
			if ((i || n) && e) {
				var s = this.column.getMediaPreviewSize() !== TD.vo.Column.MEDIA_PREVIEW_OFF;
				if (s) {
					var a = "col_scheduled" === p.default.getColumnType(this.column) || "col_followers" === p.default.getColumnType(this.column);
					if (!a) {
						var o = this.select("chirpSelector").map(function(e, t) {
							return t.dataset.tweetId
						}).get().map(function(e) {
							return t.column.findChirp(e)
						}).filter(Boolean).filter(function(e) {
							return e.getMedia().some(function(e) {
								return (0, r.default)(e, "entity.original_info", !1) && ("photo" === e.entity.type || "video" === e.entity.type)
							})
						}).length > 0;
						o && (0, c.default)(document).trigger("imageInVisibleColumn")
					}
				}
			}
		}, this.getChirpVerticalVisibileFraction = function(e, t) {
			if (t <= 0) return 0;
			var i = Math.min(this.scrollContainerRect.height, Math.max(0, e)),
				n = Math.min(this.scrollContainerRect.height, Math.max(0, e + t)),
				s = n - i;
			return s / t
		}, this.scribeTweetImpressions = function() {
			var e = Date.now(),
				t = this.column.temporary || this.column.visibility.visibleFraction > .5,
				i = this.$node.hasClass(this.attr.columnStateDetailViewClass) || this.$node.hasClass(this.attr.columnStateSocialProofClass);
			TD.util.documentIsHidden() || i || !t ? (this.setAllChirpsHidden(), this.updateVisibleChirps(e)) : (this.updateVisibleChirps(e), this.updateVisibleChirpsWithEndTimes(e), TD.controller.stats.tweetStreamImpression(p.default.getColumnType(this.column), this.getChirpsToScribeTierTwo())), TD.controller.stats.tweetStreamImpression(p.default.getColumnType(this.column), this.getChirpsToScribeTierThree(), !0), this.removeScribedChirpsFromVisibleChirps()
		}, this.scribeAllChirpsHidden = function() {
			this.setAllChirpsHidden(), TD.controller.stats.tweetStreamImpression(p.default.getColumnType(this.column), this.getChirpsToScribeTierThree(), !0)
		}, this.handleWindowResize = function() {
			this.scrollContainerRect = this.$scrollContainer[0].getBoundingClientRect()
		}, this.updateVisibleChirps = function(e) {
			var t = !1;
			this.scrollContainerRect = this.scrollContainerRect || this.$scrollContainer[0].getBoundingClientRect();
			var i = null,
				n = [];
			this.select("chirpSelector").each(function(s, r) {
				var a = (0, c.default)(r),
					o = a.attr("data-key"),
					l = void 0;

				function u() {
					return l || (l = r.getBoundingClientRect()), l
				}
				var d, h = this.chirpHeightCache.get(o);
				if (!h) {
					if ((h = u().height) <= 0) return;
					this.chirpHeightCache.put(o, h)
				}
				d = null === i ? u().top - this.scrollContainerRect.top : i, i = d + h;
				var m = this.getChirpVerticalVisibileFraction(d, h),
					f = m * (this.column.temporary ? 1 : this.column.visibility.visibleFraction);
				if (f <= 0 && t) return !1;
				if (f > 0) {
					t = !0, n.push({
						$elem: a,
						id: o,
						chirp: this.column.findChirp(o)
					});
					var p = this.visibleChirpsTierTwo[o];
					p || (p = {
						scribed: !1
					}), this.visibleChirpsTierTwo[o] = p
				}
				if (f > .5) {
					var g = this.visibleChirpsTierThree[o];
					g || (g = {
						scribed: !1,
						visibilityStart: e
					}), g.knownVisible = !0, this.visibleChirpsTierThree[o] = g
				}
			}.bind(this)), this.trigger("uiVisibleChirps", {
				columnKey: this.columnKey,
				chirpsData: n
			});
			var s = TD.controller.stats.isInExperimentBucket("live_engagement_in_column_8020", "control"),
				r = TD.controller.stats.isInExperimentBucket("live_engagement_in_column_8020", "live_engagement_enabled");
			(s || r) && (0, c.default)(document).trigger("columnWithTweetsInView"), r ? this.tweetEngagementsManager.updateSubscriptions(n) : s && this.tweetEngagementsManager.clearAllSubscriptions(), (0, A.checkCardsInTDExperiment)(n.map(function(e) {
				return e.chirp
			}), this.column)
		}, this.updateVisibleChirpsWithEndTimes = function(e) {
			(0, n.default)(this.visibleChirpsTierThree).forEach(function(t) {
				var i = this.visibleChirpsTierThree[t];
				i.knownVisible || (i.visibilityEnd = e), this.visibleChirpsTierThree[t] = i
			}, this)
		}, this.getChirpsToScribeTierThree = function() {
			var e = [];
			return (0, n.default)(this.visibleChirpsTierThree).forEach(function(t) {
				var i, n = this.visibleChirpsTierThree[t];
				n.visibilityStart && n.visibilityEnd && (n.visibilityEnd - n.visibilityStart > 500 && (i = this.column.findMostInterestingChirp(t)) instanceof TD.services.TwitterStatus && e.push(i.getScribeItemData(n)), n.scribed = !0, this.visibleChirpsTierThree[t] = n)
			}, this), e
		}, this.getChirpsToScribeTierTwo = function() {
			var e = [];
			return (0, n.default)(this.visibleChirpsTierTwo).forEach(function(t) {
				var i, n = this.visibleChirpsTierTwo[t];
				this.column.scribedImpressionIDs.get(t) || ((i = this.column.findMostInterestingChirp(t)) instanceof TD.services.TwitterStatus && e.push(i.getScribeItemData(n)), this.column.scribedImpressionIDs.put(t, !0)), n.scribed = !0, this.visibleChirpsTierTwo[t] = n
			}, this), e
		}, this.removeScribedChirpsFromVisibleChirps = function() {
			(0, n.default)(this.visibleChirpsTierTwo).forEach(function(e) {
				var t = this.visibleChirpsTierTwo[e];
				t.scribed && delete this.visibleChirpsTierTwo[e]
			}, this), (0, n.default)(this.visibleChirpsTierThree).forEach(function(e) {
				var t = this.visibleChirpsTierThree[e];
				t.scribed ? delete this.visibleChirpsTierThree[e] : (t.knownVisible = !1, this.visibleChirpsTierThree[e] = t)
			}, this)
		}, this.setAllChirpsHidden = function() {
			var e = Date.now();
			(0, n.default)(this.visibleChirpsTierThree).forEach(function(t) {
				this.visibleChirpsTierThree[t].visibilityEnd = e
			}, this)
		}, this.setMoreTweetsDesign = function() {
			var e = !!TD.decider.get("column_unread_bar");
			this.select("moreTweetsButton").toggleClass("is-hidden", e), this.select("moreTweetsGlow").toggleClass("is-hidden", !e)
		}, this.getAllCustomTimelineData = function() {
			var e = this.column.getCustomTimelineFeed(),
				t = e.getMetadata(),
				i = this.column.getCustomTimeline(),
				n = i ? i.account.getKey() : this.select("addToCustomTimelineInputSelector").data("account-key"),
				s = TD.controller.feedManager.getPoller(e.getKey());
			return {
				feed: e,
				customTimeline: i,
				metadata: t,
				account: n,
				poller: s
			}
		}, this.customTimelineActionWasMe = function(e) {
			var t = this.column.getCustomTimelineFeed();
			if (t) {
				var i = t.getMetadata();
				if (i) return e.action.id === i.id
			}
		}, this.boundedRefreshCustomTimelineFeed = function(e, t) {
			var i = this;
			if (this.customTimelineActionWasMe(t)) {
				var n = this.column.boundedRefreshCustomTimelineFeed({
					relativeToId: (0, r.default)(t, "action.relativeToId", null),
					placeAbove: (0, r.default)(t, "action.above", !1),
					actionType: (0, r.default)(t, "action.actionType", null)
				});
				n.addCallback(function() {
					return i.onDragLeave()
				})
			}
		}, this.removeChripFromCustomTimelineFeed = function(e, t) {
			if (this.customTimelineActionWasMe(t)) {
				var i = this.getAllCustomTimelineData();
				i.poller.removeWhere(function(e) {
					return e.id === t.action.tweetId
				})
			}
		}, this.rebroadcast = function(e) {
			return function(t) {
				if (!this.state.isRebroadcasting) return this.mergeState({
					isRebroadcasting: !0
				}), this.trigger(t, e.apply(this, [].slice.call(arguments))), this.mergeState({
					isRebroadcasting: !1
				}), t.stopPropagation(), !1
			}.bind(this)
		}, this.transformRemoveTweetFromCustomTimeline = function(e, t) {
			var i = this.getAllCustomTimelineData();
			return {
				id: i.metadata.id,
				tweetId: t.tweetId,
				account: i.account
			}
		}, this.isFirstInCollection = function(e) {
			return 0 === this.column.getChirpIndex(e.data("key"))
		}, this.onDrop = function(e, t) {
			this.onDragOver.cancel();
			var i = (0, c.default)(e.target),
				n = i.closest(".stream-item"),
				s = n.length ? n : i.find(".stream-item").last(),
				r = this.attr.dropIndicatorId,
				a = (0, c.default)("#" + r),
				o = this.attr.dropIndicatorClassName,
				l = s.children().first().hasClass(o),
				u = !!this.isFirstInCollection(s) && l,
				d = s.length ? s.data("key") : null,
				h = this.getAllCustomTimelineData(),
				m = p.default.getDropActionType((0, c.default)(t.el).closest(".js-column"), this.column.model.getKey()),
				f = (0, c.default)(TD.ui.template.render("column/add_to_customtimeline_drop_indicator_spinner"));
			a.length ? a.html(f) : (this.select("columnDragDropOverlayText").addClass("is-hidden"), this.select("columnDragDropOverlaySpinner").removeClass("is-hidden")), this.trigger("uiAddOrMoveTweetToCustomTimeline", {
				id: h.metadata.id,
				tweetId: (0, c.default)(t.el).attr("data-tweet-id"),
				account: h.account,
				relativeToId: d,
				actionType: m,
				above: u
			})
		}, this.onDragOver = (0, a.default)(function(e, t) {
			if (this.column.isOwnReorderableCustomTimeline()) {
				var i = (0, c.default)(e.target),
					n = i.closest(".stream-item"),
					s = n.length ? n : i.find(".stream-item").last(),
					r = p.default.getDropIndicatorText((0, c.default)(t.el).closest(".js-column"), this.column.model.getKey());
				if (!s.length) {
					if (!this.column.isEmpty()) return;
					var a = this.select("columnDragDropOverlayText");
					return this.$node.addClass(this.attr.dropTargetClass), void a.text(r)
				}
				var o = (0, c.default)("." + this.attr.dropIndicatorClassName),
					l = s.children(),
					u = (0, c.default)("#" + this.attr.dropIndicatorId),
					d = !0;
				if (this.isFirstInCollection(s)) {
					var h = s.parent().offset();
					if (!h) return;
					var m = this.attr.dropIndicatorId,
						f = p.default.isTopHalfOfTweet({
							event: e,
							parentOffset: h,
							$streamItem: s,
							dropIndicatorId: m
						});
					if (f) d = !1;
					else if (void 0 !== f) return
				}
				var g = s.get(0) === u.parent().get(0),
					v = s.get(0) === (0, c.default)(t.el).get(0),
					T = d && l.first().get(0) !== u.get(0),
					w = !d && l.last().get(0) !== u.get(0),
					b = o.length > 2;
				if (!((g || v) && (T || w) || b)) {
					u.css("max-height", "0").removeAttr("id").one(G, function() {
						u.remove()
					});
					var y = (0, c.default)(TD.ui.template.render("column/add_to_customtimeline_drop_indicator", {
						dropIndicatorIdName: this.attr.dropIndicatorId,
						dropIndicatorClassName: this.attr.dropIndicatorClassName,
						dropIndicatorText: r
					}));
					d ? s.append(y) : s.prepend(y), F.mutate(function() {
						y.css("max-height", "500px")
					})
				}
			}
		}, 10), this.onDragStart = function(e, t) {
			F.mutate(function() {
				(0, c.default)(t.el).addClass("opacity--40")
			})
		}, this.onDragEnd = function(e, t) {
			(0, c.default)(t.el).removeClass("opacity--40")
		}, this.onDragLeave = function() {
			this.onDragOver.cancel(), (0, c.default)("." + this.attr.dropIndicatorClassName).remove(), this.$node.removeClass(this.attr.dropTargetClass)
		}, this.enterEditMode = function(e) {
			var t = this;
			this.select("searchFilterCalloutSelector").trigger("uiRemoveSearchCallout");
			var i = this.column,
				n = this.$columnOptions;
			if (!this.$node.hasClass(this.attr.isOptionsOpenClass)) {
				this.$node.addClass(this.attr.isOptionsOpenClass);
				var s = this.connect(M.default, {
					mapStateToProps: function(e) {
						return {
							searchFilter: e.searchFilter
						}
					}
				});
				this.attachChild(s, n, {
					column: i,
					expandContentFilter: "content-filter" === e,
					expandUserFilter: "user-filter" === e,
					expandActionFilter: "action-filter" === e,
					expandEngagementFilter: "engagement-filter" === e,
					expandLocationFilter: "location-filter" === e,
					columnType: p.default.getColumnType(i),
					onFilterChange: function() {
						return function(e) {
							t.column.updateSearchFilter(e), t.mergeState({
								searchFilter: t.column.getSearchFilter()
							})
						}
					},
					onShowing: function() {
						return t.handleShowingColumnOptions.bind(t)
					},
					onShown: function() {
						return t.handleColumnOptionsShown.bind(t)
					},
					onHiding: function() {
						return t.handleHidingColumnOptions.bind(t)
					},
					onHidden: function() {
						return t.handleColumnOptionsHidden.bind(t)
					}
				})
			}
		}, this.exitEditMode = function() {
			this.$node.hasClass(this.attr.isOptionsOpenClass) && (this.$node.removeClass(this.attr.isOptionsOpenClass), this.$columnOptions.trigger("uiColumnOptionsCloseAction"))
		}, this.handleLiveVideoTimelineUpdate = function(e, t) {
			var i = this.column.getFeeds()[0].getMetadata();
			i.timelineId = t.timelineId, this.column.updateMetadata(i)
		}
	}, j, B, $, H, d.default)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.InsightsEntryPointReact = void 0;
	var n = C(i(26)),
		s = C(i(14)),
		r = C(i(16)),
		a = C(i(27)),
		o = C(i(28)),
		l = C(i(9)),
		c = i(4),
		u = C(c),
		d = (C(i(8)), C(i(0))),
		h = C(i(860)),
		m = i(7),
		f = C(i(210)),
		p = i(524),
		g = C(i(2471)),
		v = C(i(171)),
		T = i(207),
		w = i(358),
		b = i(2474),
		y = i(33),
		_ = C(i(2));

	function C(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function S() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
		return (e = Math.round(10 * e) / 10) < 20 ? e % 1 == 0 ? e.toFixed(0) : e.toFixed(1) : TD.util.prettyNumber(e)
	}
	var D = function(e) {
			return (0, y.generic)((0, l.default)({
				page: "column",
				section: "insights_entry",
				action: "click"
			}, e))
		},
		k = (0, T.daysAgoInSeconds)(1),
		E = function(e) {
			function t() {
				var e, i, r, o;
				(0, s.default)(this, t);
				for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
				return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.handleValue = function(e) {
					e && (e.error ? (0, d.default)(document).trigger("metric", {
						key: "entry-point:sparkline-failure:" + e.error.name
					}) : r.scribedForTerm !== r.props.matching && (r.scribedForTerm = r.props.matching, D({
						action: "render"
					})))
				}, o = i, (0, a.default)(r, o)
			}
			return (0, o.default)(t, e), (0, r.default)(t, [{
				key: "handleClick",
				value: function(e) {
					var t = this;
					return function(i) {
						i.stopPropagation(), (0, d.default)(document).trigger("uiShowDataDrawer", {
							insightTerm: t.props.matching
						}), D({
							element: e
						})
					}
				}
			}, {
				key: "render",
				value: function() {
					var e = this,
						t = this.props.matching;
					return t && (0, b.searchQuerySupportedByInsights)(t) ? u.default.createElement(g.default, {
						term: this.props.matching,
						since: k,
						onValue: this.handleValue,
						isPaused: !this.props.isColumnVisible
					}, function(t) {
						if (!t || !t.data) return null;
						var i = t.data,
							n = i.volume,
							s = i.trendPercentage,
							r = i.data,
							a = TD.util.pluralise((0, _.default)("Tweet"), (0, _.default)("Tweets"), n),
							o = TD.util.truncateNumber(n) + " " + a;
						return u.default.createElement("div", {
							"data-testid": "entryPoint",
							onClick: e.handleClick("other"),
							className: "with-column-divider-bottom padding-h--8 padding-v--6 is-actionable"
						}, u.default.createElement("div", {
							"data-testid": "sparkline",
							onClick: e.handleClick("sparkline"),
							className: "height--30"
						}, u.default.createElement(f.default, null, function(e) {
							return u.default.createElement(p.GridChartReact, {
								chartOptions: (0, w.makeSparklineDefaults)({
									backgroundColor: (0, w.getBackgroundColor)(e),
									seriesColor: w.getSeriesGray,
									tooltipOptions: null,
									focusMode: h.default.focusModes.OFF
								}),
								displayLegend: !1,
								chartHeight: "30px",
								chartData: r
							})
						})), u.default.createElement("div", {
							className: "padding-t--6 flex flex-align--center color-twitter-dark-gray txt-size-variable--12"
						}, u.default.createElement("span", {
							"data-testid": "volume",
							className: "margin-t--4"
						}, o, " ", (0, _.default)("today")), s > 0 ? u.default.createElement("span", {
							"data-testid": "percentageUp",
							className: "color-twitter-green margin-l--8"
						}, u.default.createElement(v.default, {
							"data-testid": "percentageUpIcon",
							name: "pointer-u"
						}), S(s), "%") : s < 0 ? u.default.createElement("span", {
							"data-testid": "percentageDown",
							className: "color-twitter-red margin-l--8"
						}, u.default.createElement(v.default, {
							"data-testid": "percentageDownIcon",
							name: "pointer-d"
						}), S(-s), "%") : 0 === s ? u.default.createElement("span", {
							"data-testid": "percentage0",
							className: "margin-l--8 margin-t--4"
						}, "0%") : null, u.default.createElement("span", {
							"data-testid": "cta",
							onClick: e.handleClick("cta"),
							className: "flex-auto flex-justify-content--flex-end flex flex-align--center color-twitter-emphasis-gray txt-size-variable--14"
						}, u.default.createElement("span", null, (0, _.default)("Insights")), u.default.createElement("span", {
							className: "icon icon-small icon-arrow-r"
						}))))
					}) : null
				}
			}]), t
		}(c.Component);
	t.default = (0, m.reactToUiBase)(E), t.InsightsEntryPointReact = E
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = m(i(26)),
		s = m(i(14)),
		r = m(i(16)),
		a = m(i(27)),
		o = m(i(28)),
		l = i(4),
		c = m(l),
		u = (m(i(8)), i(206)),
		d = i(2472),
		h = i(207);

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidUpdate",
			value: function(e) {
				this.props.isPaused && !e.isPaused ? this.getObservable().pause() : !this.props.isPaused && e.isPaused && this.getObservable().resume()
			}
		}, {
			key: "getObservable",
			value: function() {
				if (!this.memoizedObservable || this.memoizedObservable.term !== this.props.term || this.memoizedObservable.since !== this.props.since) {
					var e = this.props,
						t = e.term,
						i = e.since;
					this.memoizedObservable = {
						term: t,
						since: i,
						value: (0, d.getTimeseriesObservable)(this.props.isPaused, function() {
							var e = (0, h.convertDateToSeconds)();
							return {
								search_term: t,
								start_time: e - i,
								end_time: e,
								granularity: "hours",
								include_trend: !0
							}
						})
					}
				}
				return this.memoizedObservable.value
			}
		}, {
			key: "render",
			value: function() {
				var e = this;
				return c.default.createElement(u.Observe, {
					observable: this.getObservable().observable,
					onValue: this.props.onValue
				}, function(t) {
					if (!t) return e.props.children(null);
					var i = t.data,
						n = t.error,
						s = {};
					if (n && (s.error = n), i) {
						var r = parseFloat(i.trend),
							a = isNaN(r) ? null : r;
						s.data = {
							data: [{
								data: i.data
							}],
							volume: i.total_tweet_volume,
							trendPercentage: a
						}
					}
					return e.props.children(s)
				})
			}
		}]), t
	}(l.Component);
	t.default = f
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getTimeseriesObservable = function(e, t) {
		var i = new r.default.Subject,
			n = null;
		return {
			pause: function() {
				i.next(!0)
			},
			resume: function() {
				i.next(!1)
			},
			observable: i.distinctUntilChanged().startWith(e).switchMap(function(e) {
				if (e) return null == n ? r.default.Observable.of(null) : r.default.Observable.never();
				var t = null != n ? (new Date).getTime() - n : 1 / 0,
					i = t >= o ? 0 : o - t;
				return r.default.Observable.timer(i, o)
			}).switchMap(function() {
				return n = (new Date).getTime(), r.default.Observable.fromPromise((0, a.getTimeseries)(t())).catch(function(e) {
					return r.default.Observable.of({
						error: e
					})
				})
			}).scan(function(e, t) {
				return e && t.error ? {
					data: e.data,
					error: t.error
				} : t
			}).startWith(null)
		}
	};
	var n, s = i(36),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(2473);
	var o = 3e5
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getTimeseries = function(e) {
		var t = a.insights + "/timeseries.json";
		return r.default.promised(t, {
			params: e
		})
	};
	var n, s = i(131),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(863)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.searchQuerySupportedByInsights = function(e) {
		var t = !e.match(/\bOR\b/g),
			i = !e.match(/[!'%&*+,\-./:;<=>?\[\]^_{|}~"()]/g);
		return t && i
	}
}, function(e, t, i) {
	"use strict";
	var n = u(i(2476)),
		s = u(i(0)),
		r = u(i(6)),
		a = u(i(7)),
		o = u(i(2477)),
		l = u(i(209)),
		c = i(33);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			liveVideoTimelinesSelector: ".js-live-video-timelines",
			liveVideoTimelinesListSelector: ".js-live-video-timelines-list",
			liveVideoTimelinesLabel: ".js-live-video-timelines-label",
			id: null,
			template: "live_video",
			timelines: null,
			hasMultipleTimelines: !1,
			isTemporaryColumn: !0
		}), this.after("initialize", function() {
			var e = (0, s.default)(this.node).find(".js-live-video-container"),
				t = e[0],
				i = {
					suppressScribing: !1,
					squareCorners: !0,
					hideControls: !1,
					addTwitterBranding: !1,
					scribeContext: {
						client: c.SCRIBE_CLIENT,
						element: "live_video_player"
					}
				},
				n = o.default.createPlayerForLiveVideo(t, this.attr.id, i);
			if (n.on("ready", function() {
					this.playPreview()
				}), !this.attr.isTemporaryColumn && this.attr.hasMultipleTimelines) {
				this.dropdown = new l.default({
					el: this.select("liveVideoTimelinesListSelector")[0]
				});
				var r = (0, s.default)(this.dropdown.el),
					a = (0, s.default)(r.find("input")[0]);
				a.prop("checked", !0), this.dropdown.openOnClick(this.select("liveVideoTimelinesSelector")[0]), this.dropdown.on("change", function(e) {
					var t = (0, s.default)(e.target).val();
					this.handleChange(t)
				}.bind(this))
			}
		}), this.handleChange = function(e) {
			this.dropdown.hide(), this.trigger("uiUpdateLiveVideoTimeline", {
				timelineId: e
			});
			var t = (0, n.default)(this.attr.timelines, {
				timeline_id: e
			}).title;
			this.select("liveVideoTimelinesLabel").html(t)
		}, this.render = function() {
			var e = r.default.render(this.attr.template, {
				liveVideoId: this.attr.id,
				timelines: this.attr.timelines,
				hasMultipleTimelines: this.attr.hasMultipleTimelines,
				isTemporaryColumn: this.attr.isTemporaryColumn,
				primaryTimeline: this.attr.timelines[0]
			});
			this.$node.html(e)
		}, this.before("teardown", function() {
			this.dropdown && this.dropdown.remove()
		})
	})
}, , , function(e, t, i) {
	"use strict";
	var n = l(i(13)),
		s = l(i(2)),
		r = l(i(7)),
		a = l(i(6)),
		o = i(19);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			template: "column/add_to_custom_timeline",
			addToCustomTimelineInputSelector: ".js-add-to-customtimeline-input",
			addToCustomTimelineButtonSelector: ".js-add-to-customtimeline-button",
			customTimelineIdDataAttr: "customtimeline-id",
			accountKey: null,
			customTimelineId: null,
			spinnerButtonSelector: ".js-spinner-button",
			spinnerButtonActiveSelector: ".js-spinner-button-active",
			spinnerButtonActiveClass: "spinner-button-is-active",
			spinnerButtonHiddenClass: "is-hidden"
		}), this.componentDidInitialize = function() {
			this.on("uiInputSubmit", {
				addToCustomTimelineInputSelector: this.addTweetToCustomTimeline
			}), this.on("click", {
				addToCustomTimelineButtonSelector: this.addTweetToCustomTimeline
			}), this.on(document, "dataAddOrMoveTweetToCustomTimelineSuccess", function(e, t) {
				this.eventIsForCustomTimeline(e, t) && (this.spinnerButtonToggle(!1), (0, n.default)(t, "result.response.errors", []).length ? (0, o.showErrorNotification)({
					message: (0, s.default)("Unable to add or move that Tweet")
				}) : this.select("addToCustomTimelineInputSelector").val(""))
			}), this.on("dataAddOrMoveTweetToCustomTimelineError", function(e, t) {
				this.eventIsForCustomTimeline(e, t) && (this.spinnerButtonToggle(!1), (0, o.showErrorNotification)({
					message: (0, s.default)("Unable to add or move that Tweet")
				}))
			})
		}, this.render = function() {
			var e = this.attr,
				t = e.accountKey,
				i = e.customTimelineId,
				n = a.default.render(this.attr.template, {
					accountKey: t,
					customTimelineId: i
				});
			this.$node.html(n).removeClass("is-hidden"), this.$spinnerBtn = this.select("spinnerButtonSelector"), this.$spinnerBtnActive = this.select("spinnerButtonActiveSelector")
		}, this.eventIsForCustomTimeline = function(e, t) {
			var i = this.select("addToCustomTimelineInputSelector"),
				n = TD.util.extractTweetIdFromPermalink(i.val());
			return t.action.tweetId === n && t.action.id === i.data(this.attr.customTimelineIdDataAttr)
		}, this.addTweetToCustomTimeline = function() {
			var e = this.select("addToCustomTimelineInputSelector"),
				t = e.data("account-key"),
				i = e.data("customtimeline-id"),
				n = e.val(),
				r = n.split(",").map(function(e) {
					return TD.util.extractTweetIdFromPermalink(e)
				}).filter(Boolean);
			1 === r.length ? (this.trigger(document, "uiAddOrMoveTweetToCustomTimeline", {
				account: t,
				id: i,
				tweetId: r[0]
			}), this.spinnerButtonToggle(!0)) : r.length > 1 && r.length <= 100 ? (this.trigger(document, "uiAddMultipleTweetsToCustomTimeline", {
				account: t,
				id: i,
				ids: r
			}), this.spinnerButtonToggle(!0)) : (r.length > 100 ? (0, o.showErrorNotification)({
				message: (0, s.default)("Can't add more than 100 Tweets at a time")
			}) : (0, o.showErrorNotification)({
				message: (0, s.default)("Can't recognize Tweet URL")
			}), this.spinnerButtonToggle(!1))
		}, this.spinnerButtonToggle = function(e) {
			this.$spinnerBtn.toggleClass(this.attr.spinnerButtonActiveClass, e), this.$spinnerBtnActive.toggleClass(this.attr.spinnerButtonHiddenClass, !e)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(571),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = {
		browserNeedsWillAnimateFix: (0, r.default)(function() {
			var e = window.navigator.userAgent,
				t = e.match(/Chrome\/([\d]+)\./),
				i = e.match(/AppleWebKit\/([\d]+)\./);
			return !!(t && parseInt(t[1], 10) >= 35) || !!("mac" === TD.util.getAppEnv() && i && parseInt(i[1], 10) >= 537)
		})
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = l(i(44)),
		s = l(i(14)),
		r = l(i(16)),
		a = l(i(13)),
		o = i(513);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = function() {
		function e(t) {
			(0, s.default)(this, e), this.onLiveEngagement = t, this.subscriptions = {}
		}
		return (0, r.default)(e, [{
			key: "getSubscriptions",
			value: function() {
				return this.subscriptions
			}
		}, {
			key: "updateSubscriptions",
			value: function(e) {
				var t = this,
					i = (0, o.getAccountPipeline)(TD.storage.accountController.getDefault()),
					s = [];
				e.forEach(function(e) {
					var n = e.chirp.getMainTweet && e.chirp.getMainTweet().id,
						r = e.chirp.targetTweet && e.chirp.targetTweet.getMainTweet().id,
						o = n || r;
					if (o && (s.push(o), !t.subscriptions[o])) {
						var l = i.subscribeToTweetEngagement(o).map(function(e) {
							return (0, a.default)(e, "payload.tweet_engagement")
						}).filter(Boolean).subscribe(function(e) {
							t.onLiveEngagement(e, o)
						});
						t.subscriptions[o] = l
					}
				});
				var r = (0, n.default)(this.subscriptions).filter(function(e) {
					return !s.includes(e)
				});
				this._clearSubscriptions(r)
			}
		}, {
			key: "_clearSubscriptions",
			value: function(e) {
				var t = this;
				e.forEach(function(e) {
					t.subscriptions[e].unsubscribe(), delete t.subscriptions[e]
				})
			}
		}, {
			key: "clearAllSubscriptions",
			value: function() {
				this._clearSubscriptions((0, n.default)(this.subscriptions))
			}
		}]), e
	}();
	t.default = c
}, function(e, t, i) {
	"use strict";
	var n = c(i(2)),
		s = i(21),
		r = c(i(6)),
		a = c(i(7)),
		o = c(i(18)),
		l = c(i(45));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			columnType: null,
			columnAccounts: [],
			displayOrder: ["filter_not_following", "filter_not_followed_by", "filter_default_profile_image", "filter_no_confirmed_email", "filter_no_confirmed_phone", "filter_new_users"],
			personalTemplate: "menus/notifications_info",
			genericTemplate: "menus/filter_info_generic"
		}), this.initialState({
			fetched: !1,
			settings: null
		}), this.componentDidInitialize = function() {
			var e = this;
			return TD.decider.get("abuse_emergency_filter_info") && s.notificationColumnTypes.has(this.attr.columnType) ? void(1 === this.attr.columnAccounts.length && this.observe(this.getAccountSettingsObservable(this.attr.columnAccounts[0])).subscribe(function(t) {
				e.mergeState({
					fetched: !0,
					settings: t
				})
			})) : this.teardown()
		}, this.before("teardown", function() {
			this.$node.remove()
		}), this.getAccountSettingsObservable = function(e) {
			return this.requestResource("advanced_filters", {
				account: e
			})
		}, this.getText = function(e) {
			switch (e) {
				case "filter_default_profile_image":
					return (0, n.default)("Who have a default profile photo");
				case "filter_new_users":
					return (0, n.default)("Who have a new account");
				case "filter_no_confirmed_email":
					return (0, n.default)("Who haven't confirmed their email");
				case "filter_no_confirmed_phone":
					return (0, n.default)("Who haven't confirmed their phone");
				case "filter_not_following":
					return (0, n.default)("You don't follow");
				case "filter_not_followed_by":
					return (0, n.default)("Who don't follow you")
			}
		}, this.getFilterInfo = function(e) {
			var t = this,
				i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			return e.filter(function(e) {
				return i[e]
			}).map(function(e) {
				return {
					text: t.getText(e)
				}
			})
		}, this.render = function() {
			var e = this.state.fetched ? r.default.render(this.attr.personalTemplate, {
				filters: this.getFilterInfo(this.attr.displayOrder, this.state.settings)
			}) : r.default.render(this.attr.genericTemplate);
			this.$node.html(e), this.trigger("uiAccordionUpdatePanelHeights")
		}
	}, o.default, l.default)
}, function(e, t, i) {
	"use strict";
	var n = i(21),
		s = l(i(6)),
		r = l(i(7)),
		a = l(i(18)),
		o = l(i(45));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			columnType: null,
			columnAccounts: [],
			personalTemplate: "menus/quality_filter_info",
			genericTemplate: "menus/filter_info_generic"
		}), this.initialState({
			fetched: !1,
			settings: null
		}), this.componentDidInitialize = function() {
			var e = this,
				t = n.notificationColumnTypes.has(this.attr.columnType),
				i = TD.decider.get("abuse_emergency_filter_info");
			if (!t || !i) return this.teardown();
			1 === this.attr.columnAccounts.length && this.observe(this.getAccountSettingsObservable(this.attr.columnAccounts[0])).subscribe(function(t) {
				e.mergeState({
					fetched: !0,
					settings: t
				})
			})
		}, this.before("teardown", function() {
			this.$node.remove()
		}), this.getAccountSettingsObservable = function(e) {
			return this.requestResource("account.settings", {
				account: e
			})
		}, this.getText = function() {
			return this.state.settings.universal_quality_filtering_enabled
		}, this.render = function() {
			var e = this.state.fetched ? s.default.render(this.attr.personalTemplate, {
				qualityFilterText: this.getText()
			}) : s.default.render(this.attr.genericTemplate);
			this.$node.html(e), this.trigger("uiAccordionUpdatePanelHeights")
		}
	}, a.default, o.default)
}, function(e, t, i) {
	"use strict";
	var n = g(i(162)),
		s = g(i(9)),
		r = g(i(2)),
		a = g(i(0)),
		o = g(i(7)),
		l = g(i(6)),
		c = g(i(2484)),
		u = i(2487),
		d = i(2490),
		h = g(i(2501)),
		m = g(i(2502)),
		f = g(i(2503)),
		p = g(i(21));

	function g(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = o.default.mixin(function() {
		this.attributes({
			column: null,
			renderOptions: null,
			scribeSection: null,
			isSearchOrEventColumn: null,
			accordionSelector: null,
			userFilterSelector: null,
			contentFilterSelector: null,
			onChange: null,
			locationFilterSelector: ".js-location-filter",
			actionFilterSelector: ".js-action-filter",
			engagementFilterSelector: ".js-engagement-filter",
			contentSummarySelector: ".js-content-filter-summary",
			locationSummarySelector: ".js-location-filter-summary",
			userSummarySelector: ".js-user-filter-summary",
			actionSummarySelector: ".js-action-filter-summary",
			engagementSummarySelector: ".js-engagement-filter-summary",
			searchAccordionTemplate: "menus/search_accordion",
			contentSummaryClass: "js-content-filter-summary",
			locationSummaryClass: "js-location-filter-summary",
			userSummaryClass: "js-user-filter-summary",
			actionSummaryClass: "js-action-filter-summary",
			engagementSummaryClass: "js-engagement-filter-summary",
			filterTypes: ["content", "location", "user", "action", "engagement"]
		}), this.componentDidInitialize = function() {
			var e = this;
			this.columnType = p.default.getColumnType(this.attr.column), this.on("uiSearchFilterUpdateAction", function(t, i) {
				e.handleSearchFilterUpdate(i)
			}), this.on("uiAccordionWillExpand", this.handleAccordionWillExpand), this.initialRender()
		}, this.isValidFilterType = function(e) {
			return this.attr.filterTypes.some(function(t) {
				return e === t
			})
		}, this.handleSearchFilterUpdate = function(e) {
			if (e.filter && this.isValidFilterType(e.type)) {
				"col_search" === this.columnType && "" === e.filter.matching && (e.filter.matching = p.default.getBaseQuery(this.attr.column));
				var t = void 0;
				t = this.props.searchFilter instanceof TD.vo.SearchFilter ? new TD.vo.SearchFilter((0, s.default)({}, this.props.searchFilter.toJSONObject(), (0, n.default)({}, e.type, e.filter.toJSONObject()))) : (0, s.default)({}, this.props.searchFilter, (0, n.default)({}, e.type, e.filter)), TD.controller.stats.advancedSearchSettings(this.attr.scribeSection, e.type, e.filterName, e.value), this.trigger(this.$accordion, "uiAccordionUpdatePanelHeights"), this.attr.onChange(t)
			}
		}, this.handleAccordionWillExpand = function(e) {
			var t = (0, a.default)(e.target).closest(".js-accordion-item"),
				i = t.hasClass("facet-type-content");
			if (this.attr.isSearchOrEventColumn && i) {
				var n = this.props.searchFilter.content;
				this.handleSearchFilterUpdate({
					filter: n,
					filterName: "matching",
					type: "content",
					value: n.matching
				})
			}
		}, this.initialRender = function() {
			var e = this,
				t = this.attr.renderOptions;
			this.$accordion = this.select("accordionSelector");
			var i = l.default.render(this.attr.searchAccordionTemplate, {
				content: {
					iconClass: "icon-content",
					title: p.default.getColumnType(this.attr.column) === p.default.columnMetaTypes.TRENDS ? (0, r.default)("Trends source") : (0, r.default)("Tweet content"),
					jsClass: this.attr.contentSummaryClass,
					isExpanded: t.expandContentFilter
				},
				location: !!t.withLocationFilter && {
					iconClass: "icon-geo",
					title: (0, r.default)("Location"),
					jsClass: this.attr.locationSummaryClass,
					isExpanded: t.expandLocationFilter
				},
				user: !!t.withUsersFilter && {
					iconClass: "icon-user",
					title: (0, r.default)("Tweet authors"),
					jsClass: this.attr.userSummaryClass,
					isExpanded: t.expandUserFilter
				},
				action: !!t.withActionFilter && {
					iconClass: "icon-check",
					title: (0, r.default)("Notification types"),
					jsClass: this.attr.actionSummaryClass,
					isExpanded: t.expandActionFilter
				},
				engagement: !!t.withEngagementFilter && {
					iconClass: "icon-heart",
					title: (0, r.default)("Engagement"),
					jsClass: this.attr.engagementSummaryClass,
					isExpanded: t.expandEngagementFilter
				}
			});
			if (this.$accordion.append(i), this.attr.column instanceof TD.vo.Column) {
				var n = this.connect(c.default, {
					mapStateToProps: function() {
						return {
							contentFilter: e.props.searchFilter.content,
							onChange: function(t) {
								e.handleSearchFilterUpdate(t)
							}
						}
					}
				});
				this.attachChild(n, this.select("contentFilterSelector"), {
					renderOptions: t
				})
			} else if ("col_trends" === p.default.getColumnType(this.attr.column)) {
				var s = this.connect(u.TrendsContentFilterFormUiBase, {
					mapStateToProps: function() {
						return {
							filter: e.props.searchFilter.content.value,
							onChange: function(t) {
								e.handleSearchFilterUpdate({
									filter: {
										value: t
									},
									type: "content"
								})
							},
							onComponentUpdated: function() {
								e.trigger(e.$accordion, "uiAccordionUpdatePanelHeights")
							}
						}
					}
				});
				this.attachChild(s, this.select("contentFilterSelector"))
			}
			if (t.withLocationFilter) {
				var a = this.connect(d.LocationFilterFormUiBase, {
					mapStateToProps: function() {
						return {
							filter: e.props.searchFilter.location,
							onChange: function(t) {
								e.handleSearchFilterUpdate(t)
							}
						}
					}
				});
				this.attachChild(a, this.select("locationFilterSelector"))
			}
			this.attachChild(h.default, this.select("userFilterSelector"), {
				searchFilter: this.props.searchFilter,
				renderOptions: t
			}), t.withActionFilter && this.attachChild(m.default, this.select("actionFilterSelector"), {
				searchFilter: this.props.searchFilter,
				renderOptions: t,
				columnType: this.columnType
			}), t.withEngagementFilter && this.attachChild(f.default, this.select("engagementFilterSelector"), {
				searchFilter: this.props.searchFilter,
				renderOptions: t
			})
		}, this.render = function() {
			var e = this,
				t = this.props.searchFilter;
			this.attr.filterTypes.forEach(function(i) {
				var n = t[i];
				if (n) {
					var s = n.getSummaryText ? n.getSummaryText(e.columnType) : "",
						r = e.select(i + "SummarySelector");
					r.text(s)
				}
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = h(i(9)),
		s = h(i(820)),
		r = h(i(2)),
		a = h(i(0)),
		o = h(i(7)),
		l = h(i(6)),
		c = i(717),
		u = h(i(817)),
		d = h(i(2485));

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = o.default.mixin(function() {
		this.attributes({
			filterType: "content",
			template: "menus/search_content_form",
			matchingSelector: ".js-matching",
			excludingSelector: ".js-excluding",
			containingSelector: ".js-containing",
			writtenInSelector: ".js-written-in",
			dateTimeFilterSelector: ".js-datetime-filter",
			retweetsSelector: ".js-retweets",
			renderOptions: {
				withPeriscopeFilter: !0,
				withLanguage: !0,
				withDateTime: !1,
				withRetweetsToggle: !0
			}
		}), this.getContainingOptions = function() {
			var e = this.props.contentFilter.type;
			return [{
				value: u.default.TYPE_ANYTHING,
				title: (0, r.default)("all Tweets")
			}, {
				value: u.default.TYPE_IMG,
				title: (0, r.default)("Tweets with images")
			}, {
				value: u.default.TYPE_VID,
				title: (0, r.default)("Tweets with videos")
			}, {
				value: u.default.TYPE_GIF,
				title: (0, r.default)("Tweets with GIFs")
			}, {
				value: u.default.TYPE_VINE,
				title: (0, r.default)("Tweets with Vines")
			}, {
				value: u.default.TYPE_BROADCAST,
				title: (0, r.default)("Tweets with broadcasts"),
				hidden: !this.attr.renderOptions.withPeriscopeFilter
			}, {
				value: u.default.TYPE_IMG_AND_VID,
				title: (0, r.default)("Tweets with any media")
			}, {
				value: u.default.TYPE_LINKS,
				title: (0, r.default)("Tweets with links")
			}].filter(function(t) {
				return t.value !== u.default.TYPE_VINE || e === t.value
			})
		}, this.getRetweetOptions = function() {
			return [{
				value: "included",
				title: (0, r.default)("included"),
				isIncluded: !0
			}, {
				value: "excluded",
				title: (0, r.default)("excluded"),
				isIncluded: !1
			}]
		}, this.shouldIncludeRetweets = function() {
			var e = this.props.contentFilter,
				t = e.includeRTs ? "included" : "excluded";
			return this.retweetOptions.find(function(e) {
				return e.value === t
			}).isIncluded
		}, this.handleChange = function(e, t) {
			var i = this.props.contentFilter,
				n = new u.default({
					type: "type" === e ? t : i.type,
					matching: "matching" === e ? t : i.matching,
					excluding: "excluding" === e ? t : i.excluding,
					lang: "lang" === e ? t : i.lang,
					sinceTimeInSec: "sinceTimeInSec" === e ? t : i.sinceTimeInSec,
					untilTimeInSec: "untilTimeInSec" === e ? t : i.untilTimeInSec,
					includeRTs: "includeRTs" === e ? "included" === t : i.includeRTs
				});
			this.props.onChange({
				type: "content",
				filter: n
			})
		}, this.componentDidInitialize = function() {
			var e = this;
			this.containingOptions = this.getContainingOptions(), this.retweetOptions = this.getRetweetOptions(), this.on("uiDateTimeFilterChange", function(t, i) {
				var n = i.filterName,
					s = i.filterValue;
				e.handleChange({
					since_datetime: "sinceTimeInSec",
					until_datetime: "untilTimeInSec"
				} [n], s)
			}), this.initialRender(), this.$containing = this.select("containingSelector"), this.$writtenIn = this.select("writtenInSelector"), this.$matching = this.select("matchingSelector"), this.$excluding = this.select("excludingSelector"), this.$retweets = this.select("retweetsSelector"), this.on("change", function(t, i) {
				e.handleChange((0, a.default)(t.target).data("title"), t.target.value)
			})
		}, this.connectAndAttachDateTimeFilter = function() {
			var e = this,
				t = this.connect(d.default, {
					mapStateToProps: function() {
						var t = e.props.contentFilter,
							i = t.sinceTimeInSec,
							n = t.untilTimeInSec;
						return {
							sinceTimeInSec: i,
							untilTimeInSec: n
						}
					}
				});
			this.attachChild(t, this.select("dateTimeFilterSelector"))
		}, this.initialRender = function() {
			var e = (0, c.getSystemLanguageCode)(!0),
				t = (0, c.getLanguageFromISOCode)(e),
				i = (0, s.default)((0, c.getAllLanguages)(), "localized_name");
			this.$node.html(l.default.render(this.attr.template, (0, n.default)({}, this.attr.renderOptions, {
				withMatching: {
					isControl: !0,
					searchInputClassName: "js-matching",
					searchInputPlaceholder: (0, r.default)("Enter words to match"),
					searchInputTitle: "matching"
				},
				withExcluding: {
					isControl: !0,
					searchInputClassName: "js-excluding",
					searchInputPlaceholder: (0, r.default)("Enter words to exclude"),
					searchInputTitle: "excluding"
				},
				containingOptions: this.containingOptions,
				retweetOptions: this.retweetOptions,
				userLanguage: t,
				allLanguages: i
			}))), this.connectAndAttachDateTimeFilter()
		}, this.render = function() {
			var e = this.props.contentFilter;
			this.$containing.val(e.type), this.$writtenIn.val(e.lang), this.$matching.val(e.matching), this.$excluding.val(e.excluding), this.shouldIncludeRetweets() ? this.$retweets.val("included") : this.$retweets.val("excluded")
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(0));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(7),
		o = i(525),
		l = i(209),
		c = i(2486),
		u = i(6),
		d = i(100);
	e.exports = a.mixin(function() {
		this.attributes({
			template: "menus/search_datetime_form",
			fromDatePickerHolderSelector: ".js-from-datepicker-holder",
			toDatePickerHolderSelector: ".js-to-datepicker-holder",
			clearDatetimeSelector: ".js-clear-date",
			dateTimeInputSelector: ".js-datetime-input",
			sinceDatetimeFilterName: "since_datetime",
			untilDatetimeFilterName: "until_datetime",
			dateUnselectedClass: "date-unselected",
			timePickerDropdownClass: "TimePickerDropdown",
			timePickerSelector: ".TimePicker"
		}), this.componentDidInitialize = function() {
			var e = this;
			this.$node.html(u.render(this.attr.template)), this.fromDatePickerDropdown = this.createDatePickerDropdown("fromDatePickerHolderSelector", "select date"), this.toDatePickerDropdown = this.createDatePickerDropdown("toDatePickerHolderSelector", "now"), this.fromDatePickerDropdown.datePicker.on(o.events.CHANGE, this.handleFromChange.bind(this)), this.toDatePickerDropdown.datePicker.on(o.events.CHANGE, this.handleToChange.bind(this)), this.on(this.attr.fromDatePickerHolderSelector, "click", {
				clearDatetimeSelector: this.handleFromClear
			}), this.on(this.attr.toDatePickerHolderSelector, "click", {
				clearDatetimeSelector: this.handleToClear
			}), this.on(this.fromDatePickerDropdown.dropdown.$el, "click", {
				clearDatetimeSelector: this.handleFromClear
			}), this.on(this.toDatePickerDropdown.dropdown.$el, "click", {
				clearDatetimeSelector: this.handleToClear
			}), this.on(l.events.SHOW, function(t) {
				var i = (0, s.default)(t.target);
				i && i.hasClass(e.attr.timePickerDropdownClass) && e.repositionDropdown({
					$dropdownMenu: i,
					$target: i.siblings(e.attr.timePickerSelector).first()
				})
			})
		}, this.handleFromClear = function() {
			this.trigger("uiDateTimeFilterChange", {
				filterName: this.attr.sinceDatetimeFilterName,
				filterValue: ""
			})
		}, this.handleToClear = function() {
			this.trigger("uiDateTimeFilterChange", {
				filterName: this.attr.untilDatetimeFilterName,
				filterValue: ""
			})
		}, this.handleFromChange = function(e) {
			var t = this.fromDatePickerDropdown.datePicker.date().getTime() / 1e3;
			this.trigger("uiDateTimeFilterChange", {
				filterName: this.attr.sinceDatetimeFilterName,
				filterValue: t
			})
		}, this.handleToChange = function(e) {
			var t = this.toDatePickerDropdown.datePicker.date().getTime() / 1e3;
			this.trigger("uiDateTimeFilterChange", {
				filterName: this.attr.untilDatetimeFilterName,
				filterValue: t
			})
		}, this.createDatePickerDropdown = function(e, t) {
			var i = u.render("menus/datetime_input", {
					placeHolderText: t
				}),
				n = u.render("menus/datetime_footer", {}),
				r = new c({
					$target: (0, s.default)(i),
					$footer: (0, s.default)(n),
					datePickerOptions: {
						showTime: !0,
						preserveTimeOnDaySelect: !0
					}
				});
			return r.$el.prependTo(this.select(e)), r
		}, this.repositionDropdown = function(e) {
			var t = e.$dropdownMenu,
				i = e.$target,
				n = (0, s.default)(window).height(),
				r = t.outerHeight(!0),
				a = i.position().top,
				o = i.offset().top,
				l = o + r > n;
			l && t.css("top", a - r)
		}, this.render = function() {
			this.fromDatePickerDropdown.dropdown.hide(), this.toDatePickerDropdown.dropdown.hide(), this.setMaxDate(this.fromDatePickerDropdown, this.props.untilTimeInSec), this.setMinDate(this.toDatePickerDropdown, this.props.sinceTimeInSec);
			var e = d(this.fromDatePickerDropdown.datePicker.options.maxDate || new Date).startOf("day").toDate(),
				t = d(this.toDatePickerDropdown.datePicker.options.minDate || new Date).endOf("day").toDate();
			this.setDateTimeOrDefault({
				dropdown: this.fromDatePickerDropdown,
				timeInSec: this.props.sinceTimeInSec,
				defaultText: (0, n.default)("select date"),
				defaultTime: e
			}), this.setDateTimeOrDefault({
				dropdown: this.toDatePickerDropdown,
				timeInSec: this.props.untilTimeInSec,
				defaultText: (0, n.default)("now"),
				defaultTime: t
			})
		}, this.setDateTimeOrDefault = function(e) {
			var t = e.dropdown,
				i = e.timeInSec,
				n = (e.defaultText, e.defaultTime),
				s = i && d.unix(i).isValid();
			s ? (t.datePicker.$el.removeClass(this.attr.dateUnselectedClass), t.datePicker.date(d(i, "X").toDate()), t.$el.find(this.attr.dateTimeInputSelector).val(d(i, "X").format("D MMM YYYY")), t.$el.addClass("has-value")) : (t.datePicker.$el.addClass(this.attr.dateUnselectedClass), t.datePicker.date(n), t.$el.find(this.attr.dateTimeInputSelector).val(""), t.$el.removeClass("has-value"))
		}, this.setMinDate = function(e, t) {
			var i = t && d.unix(t).isValid();
			e.datePicker.options.minDate = i ? d(t, "X").toDate() : null
		}, this.setMaxDate = function(e, t) {
			var i = t && d.unix(t).isValid();
			e.datePicker.options.maxDate = i ? d(t, "X").toDate() : null
		}, this.after("teardown", function() {
			this.fromDatePickerDropdown.remove(), delete this.fromDatePickerDropdown, this.toDatePickerDropdown.remove(), delete this.toDatePickerDropdown, this.$node.empty()
		})
	})
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.TrendsContentFilterFormUiBase = void 0;
	var n = f(i(26)),
		s = f(i(14)),
		r = f(i(16)),
		a = f(i(27)),
		o = f(i(28)),
		l = f(i(4)),
		c = (f(i(8)), i(7)),
		u = f(i(2)),
		d = i(33),
		h = i(74),
		m = f(i(873));

	function f(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var p = function(e) {
			(0, d.generic)({
				page: "column",
				section: "trends",
				action: "filter",
				element: e
			})
		},
		g = function(e) {
			function t() {
				var e, i, r, o;
				(0, s.default)(this, t);
				for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
				return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.handleUserOrCountryChange = function(e) {
					var t = e.target.selectedOptions[0].value,
						i = t[0],
						n = t.substring(1),
						s = null;
					switch (i) {
						case "u":
							r.props.onChange({
								accountId: n
							}), s = "user";
							break;
						case "r":
							r.props.onChange({
								woeid: +n
							}), s = "region"
					}
					s && p(s)
				}, r.handleCityChange = function(e) {
					r.props.onChange({
						woeid: +e.target.value
					}), p("city")
				}, o = i, (0, a.default)(r, o)
			}
			return (0, o.default)(t, e), (0, r.default)(t, [{
				key: "componentDidUpdate",
				value: function() {
					this.props.onComponentUpdated()
				}
			}, {
				key: "render",
				value: function() {
					var e = this,
						t = this.props.filter,
						i = t.accountId,
						n = t.woeid;
					return l.default.createElement(m.default, null, function(t) {
						var s = null,
							r = null;
						if (t) {
							var a = t.locationByWoeid[n];
							a && (a.isTown ? (s = a.woeid, r = t.countryWoeidByCityWoeid[a.woeid]) : r = a.woeid)
						}
						var o = (0, h.getTwitterAccounts)(),
							c = i && "u" + i || r && "r" + r || "u" + o[0].userId;
						return l.default.createElement("div", {
							className: "padding-hl control-s"
						}, l.default.createElement("label", {
							className: "control-group"
						}, l.default.createElement("span", {
							className: "control-label txt-mute"
						}, (0, u.default)("Trends for")), l.default.createElement("div", {
							className: "controls"
						}, l.default.createElement("select", {
							value: c,
							onChange: e.handleUserOrCountryChange
						}, l.default.createElement("optgroup", {
							label: (0, u.default)("Tailored")
						}, o.map(function(e) {
							return l.default.createElement("option", {
								key: e.userId,
								value: "u" + e.userId
							}, "@", e.screenName)
						})), t && l.default.createElement("optgroup", {
							label: (0, u.default)("Regions")
						}, t.countries.map(function(e) {
							return l.default.createElement("option", {
								key: e.woeid,
								value: "r" + e.woeid
							}, e.name)
						}))))), r && t && t.citiesByCountryWoeid[r] && l.default.createElement("label", {
							className: "control-group"
						}, l.default.createElement("span", {
							className: "control-label txt-mute"
						}, (0, u.default)("City")), l.default.createElement("div", {
							className: "controls"
						}, l.default.createElement("select", {
							value: s || "",
							onChange: e.handleCityChange
						}, l.default.createElement("option", {
							value: r
						}, (0, u.default)("All cities")), t.citiesByCountryWoeid[r].map(function(e) {
							return l.default.createElement("option", {
								key: e.woeid,
								value: e.woeid
							}, e.name)
						})))))
					})
				}
			}]), t
		}(l.default.Component);
	t.default = g;
	t.TrendsContentFilterFormUiBase = (0, c.reactToUiBase)(g)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = c(i(26)),
		s = c(i(14)),
		r = c(i(16)),
		a = c(i(27)),
		o = c(i(28)),
		l = c(i(4));
	c(i(8));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.state = {
				data: null,
				error: null
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidMount",
			value: function() {
				var e = this;
				this.deferred = this.props.runDeferred(), this.deferred.addCallbacks(function(t) {
					return e.setState({
						data: t
					}), t
				}, function(t) {
					throw e.setState({
						error: t
					}), t
				})
			}
		}, {
			key: "componentWillUnmount",
			value: function() {
				this.deferred.cancel()
			}
		}, {
			key: "render",
			value: function() {
				return this.props.children(this.state.data, this.state.error)
			}
		}]), t
	}(l.default.Component);
	t.default = u
}, function(e, t) {
	e.exports = {
		queryId: "hjw_0TtkSg2-43wtKsJz3A",
		operationName: "HorizonWebCardQuery"
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.LocationFilterFormUiBase = void 0;
	var n = T(i(26)),
		s = T(i(14)),
		r = T(i(16)),
		a = T(i(27)),
		o = T(i(28)),
		l = T(i(9)),
		c = T(i(111)),
		u = i(4),
		d = T(u),
		h = (T(i(8)), i(7)),
		m = T(i(818)),
		f = T(i(2491)),
		p = T(i(2499)),
		g = i(819),
		v = T(i(2));

	function T(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var w = 1e3,
		b = [.1, .5, 1, 3, 5, 10, 20, 50, 100, 200].map(function(e) {
			return [e + "km", e * w]
		}).map(function(e) {
			var t = (0, c.default)(e, 2),
				i = t[0],
				n = t[1];
			return {
				value: i,
				title: n <= 500 ? n + "m" : i
			}
		}),
		y = "20km";

	function _(e, t) {
		return new m.default((0, l.default)({}, e.toJSONObject(), t))
	}
	var C = {
			LOADING: 1,
			LOADED: 2,
			ERROR: 3
		},
		S = function(e) {
			function t() {
				var e, i, r, o;
				(0, s.default)(this, t);
				for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
				return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.handleLocationChange = function(e) {
					var t = e.name,
						i = e.lat,
						n = e.lng;
					r.triggerChange({
						filter: _(r.props.filter, {
							lat: i,
							lng: n,
							name: t,
							radius: r.props.filter.radius || y
						}),
						filterName: "",
						value: ""
					})
				}, r.handleLocationClear = function() {
					r.triggerChange({
						filter: new m.default({}),
						filterName: "",
						value: ""
					})
				}, r.handleRadiusChange = function(e) {
					r.triggerChange({
						filter: _(r.props.filter, {
							radius: e
						}),
						filterName: "radius",
						value: parseInt(e, 10) * w
					})
				}, o = i, (0, a.default)(r, o)
			}
			return (0, o.default)(t, e), (0, r.default)(t, [{
				key: "triggerChange",
				value: function(e) {
					var t = e.filter,
						i = e.filterName,
						n = e.value;
					this.props.onChange({
						type: "location",
						filter: t,
						filterName: i,
						value: n
					})
				}
			}, {
				key: "render",
				value: function() {
					var e = this.props.filter,
						t = e.lat,
						i = e.lng,
						n = e.radius,
						s = e.name,
						r = {
							lat: t,
							lng: i,
							radius: n = n || y,
							name: s = s || "",
							onLocationChange: this.handleLocationChange,
							onLocationClear: this.handleLocationClear,
							onRadiusChange: this.handleRadiusChange
						};
					return d.default.createElement(p.default, null, function(e) {
						var t = e.hasError;
						e.onRetry;
						return d.default.createElement(u.Suspense, {
							fallback: d.default.createElement(D, (0, l.default)({}, r, {
								status: C.LOADING
							}))
						}, t ? d.default.createElement(D, (0, l.default)({}, r, {
							status: C.ERROR
						})) : d.default.createElement(D, (0, l.default)({}, r, {
							status: C.LOADED
						})))
					})
				}
			}]), t
		}(u.Component);
	t.default = S;
	t.LocationFilterFormUiBase = (0, h.reactToUiBase)(S);

	function D(e) {
		var t = e.status,
			i = e.lat,
			n = e.lng,
			s = e.radius,
			r = e.name,
			a = e.onLocationChange,
			o = e.onLocationClear,
			l = e.onRadiusChange,
			c = "" === r && "" !== i && "" !== n ? (0, g.getPrettyCoordinates)(i, n) : "";
		return d.default.createElement("div", {
			className: "padding-hl control-s l-fullheight location-form height--210"
		}, d.default.createElement("label", {
			"data-testid": "locationLatLngText",
			className: "txt-mute"
		}, (0, v.default)("Tweets geo-tagged near {{prettyLatLng}}", {
			prettyLatLng: c
		})), d.default.createElement(f.default, {
			name: r,
			onChange: a,
			onClear: o
		}), d.default.createElement("label", {
			className: "control-group radius-group"
		}, d.default.createElement("span", {
			className: "control-label txt-mute"
		}, (0, v.default)("Radius")), d.default.createElement("div", {
			className: "controls"
		}, d.default.createElement("select", {
			"data-title": "radius",
			value: s,
			disabled: t === C.LOADED ? "" : "disabled",
			onChange: function(e) {
				return l(e.target.value)
			}
		}, b.map(function(e) {
			var t = e.value,
				i = e.title;
			return d.default.createElement("option", {
				key: t,
				value: t
			}, i)
		})))))
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = m(i(26)),
		s = m(i(14)),
		r = m(i(16)),
		a = m(i(27)),
		o = m(i(28)),
		l = m(i(4)),
		c = (m(i(8)), m(i(0))),
		u = i(66),
		d = m(i(874)),
		h = m(i(531));

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var c = arguments.length, u = Array(c), d = 0; d < c; d++) u[d] = arguments[d];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(u))), r.rootRef = l.default.createRef(), r.typeaheadInputRef = l.default.createRef(), r.handleTypeaheadItemSelect = function(e, t) {
				r.props.onChange(t.item)
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidMount",
			value: function() {
				var e = (0, c.default)(this.rootRef.current);
				e.on("uiTypeaheadItemSelected", this.handleTypeaheadItemSelect);
				var t = (0, u.attach)(d.default, e, {
					inputSelector: ".js-geo-search"
				}).teardownEvent;
				this.typeaheadInputTeardownEvent = t;
				var i = (0, u.attach)(h.default, e, {
					alwaysOpen: !1,
					autoSelect: !0,
					blockLinkActions: !0,
					datasources: ["locations"],
					datasourcesRecentOnly: [],
					hideAfterSelect: !0,
					inputSelector: ".js-geo-search",
					withClickTrap: !0,
					delayOnInputInMs: 250
				}).teardownEvent;
				this.typeaheadDropdownTeardownEvent = i
			}
		}, {
			key: "componentDidUpdate",
			value: function() {
				this.typeaheadInputRef.current.value = this.props.name
			}
		}, {
			key: "componentWillUnmount",
			value: function() {
				(0, c.default)(this.rootRef.current).off("uiTypeaheadItemSelected", this.handleTypeaheadItemSelect), (0, c.default)(document).trigger(this.typeaheadInputTeardownEvent), (0, c.default)(document).trigger(this.typeaheadDropdownTeardownEvent)
			}
		}, {
			key: "render",
			value: function() {
				return l.default.createElement("div", {
					ref: this.rootRef
				}, l.default.createElement("input", {
					type: "text",
					className: "js-geo-search js-non-escapable-input geo-search padding-l--23",
					defaultValue: this.props.name,
					placeholder: "Type in a location",
					ref: this.typeaheadInputRef
				}), l.default.createElement("i", {
					className: "icon icon-translator icon-small color-twitter-gray"
				}), l.default.createElement("i", {
					className: "icon icon-close icon-small",
					onClick: this.props.onClear
				}), l.default.createElement("div", {
					className: "js-typeahead-dropdown border-box typeahead-dropdown dropdown-menu bs-1 scroll-v padding-v--0"
				}, l.default.createElement("ul", {
					className: "js-typeahead-location-list is-hidden"
				})))
			}
		}]), t
	}(l.default.Component);
	t.default = f
}, function(e, t, i) {
	"use strict";
	var n = r(i(6)),
		s = r(i(17));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		this.attributes({
			usersListSelector: ".js-typeahead-user-list",
			usersItemSelector: ".js-typeahead-user-item",
			usersTemplate: "typeahead/typeahead_users"
		}), this.renderUsers = function(e, t) {
			this.$usersList.find(this.attr.usersItemSelector).remove();
			var i = t.suggestions.users || [];
			if (i.forEach(function(e) {
					e.emojifiedName = s.default.cleanWithEmoji(e.name)
				}), i.length) {
				var r = n.default.render(this.attr.usersTemplate, {
					users: i,
					query: t.query
				});
				this.$usersList.toggleClass("has-results", i.length > 0).toggleClass("is-hidden", 0 === i.length).html(r)
			} else this.clearUsers()
		}, this.getAvatar = function(e) {
			return e.profile_image_url_https.replace(/_normal(\..*)?$/i, "_mini$1")
		}, this.clearUsers = function() {
			this.$usersList.removeClass("has-results"), this.$usersList.addClass("is-hidden")
		}, this.after("initialize", function() {
			this.$usersList = this.select("usersListSelector"), this.on("uiTypeaheadRenderResults", this.renderUsers)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = r(i(13)),
		s = r(i(6));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		this.attributes({
			locationsListSelector: ".js-typeahead-location-list",
			locationsItemSelector: ".js-typeahead-location-item",
			locationsTemplate: "typeahead/typeahead_locations"
		}), this.renderLocations = function(e, t) {
			this.$locationsList.find(this.attr.locationsItemSelector).remove();
			var i = (0, n.default)(t, "suggestions.locations", []);
			if (i.length) {
				var r = s.default.render(this.attr.locationsTemplate, {
					locations: i
				});
				this.$locationsList.toggleClass("has-results", i.length > 0).toggleClass("is-hidden", 0 === i.length).html(r)
			} else this.clearLocations()
		}, this.clearLocations = function() {
			this.$locationsList.removeClass("has-results").addClass("is-hidden")
		}, this.after("initialize", function() {
			this.$locationsList = this.select("locationsListSelector"), this.on("uiTypeaheadRenderResults", this.renderLocations)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(6),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(359);
	e.exports = function() {
		this.attributes({
			savedSearchesListSelector: ".js-typeahead-saved-search-list",
			savedSearchesItemSelector: ".js-typeahead-saved-search-item",
			savedSearchesTemplate: "typeahead/typeahead_saved_searches"
		}), this.renderSavedSearches = function(e, t) {
			var i, n = [];
			this.$savedSearchesList.empty(), t.suggestions && t.suggestions.savedSearches && (t.suggestions.savedSearches.forEach(function(e) {
				n.push({
					query: e.query,
					name: (0, a.highlightSubstringAndAddHashflag)(e.name, t.query)
				})
			}, this), i = r.default.render(this.attr.savedSearchesTemplate, {
				savedSearches: n
			}), this.$savedSearchesList.toggleClass("has-results", n.length > 0).toggleClass("is-hidden", 0 === n.length).html(i))
		}, this.after("initialize", function() {
			this.$savedSearchesList = this.select("savedSearchesListSelector"), this.on("uiTypeaheadRenderResults", this.renderSavedSearches)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(6),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(359);
	e.exports = function() {
		this.attributes({
			recentSearchesListSelector: ".js-typeahead-recent-search-list",
			recentSearchesItemSelector: ".js-typeahead-recent-search-item",
			recentSearchesClearSelector: ".js-typeahead-recent-search-clear",
			recentSearchesTemplate: "typeahead/typeahead_recent_searches",
			recentSearchesFixedClass: "recent-searches-fixed-list"
		}), this.renderRecentSearches = function(e, t) {
			this.currentData = t;
			var i = t.datasources && t.datasources.some(function(e) {
				return "recentSearches" === e
			});
			if (!i) return this.$recentSearchesList.removeClass("has-results").addClass("is-hidden").empty(), void this.$clearRecentSearches.addClass("is-hidden").removeClass("is-invisible");
			var n, s = i && 1 === t.datasources.length,
				o = t.suggestions && t.suggestions.recentSearches && t.suggestions.recentSearches.length,
				l = s && !o;
			if (s && o) {
				var c = [];
				t.suggestions.recentSearches.forEach(function(e) {
					c.push({
						query: e,
						name: (0, a.highlightSubstringAndAddHashflag)(e, t.query)
					})
				}, this), n = r.default.render(this.attr.recentSearchesTemplate, {
					recentSearches: c
				})
			} else n = "";
			this.$recentSearchesList.toggleClass(this.attr.recentSearchesFixedClass, s), this.$recentSearchesList.toggleClass("has-results", o).toggleClass("is-hidden", !s).html(n), this.$clearRecentSearches.toggleClass("is-hidden", !s).toggleClass("is-invisible", l)
		}, this.clearRecentSearches = function(e) {
			delete this.currentData.suggestions.recentSearches, this.renderRecentSearches(null, this.currentData)
		}, this.clearRecentSearchItem = function(e, t) {
			var i = this.currentData.suggestions.recentSearches.filter(function(e) {
				return t.query !== e
			});
			this.currentData.suggestions.recentSearches = i, this.renderRecentSearches(null, this.currentData)
		}, this.after("initialize", function() {
			this.$recentSearchesList = this.select("recentSearchesListSelector"), this.$clearRecentSearches = this.select("recentSearchesClearSelector"), this.on("uiRecentSearchClearAction", this.clearRecentSearches), this.on("uiTypeaheadRenderResults", this.renderRecentSearches), this.on("uiRecentSearchClearItem", this.clearRecentSearchItem)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(6),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(359);
	e.exports = function() {
		this.attributes({
			topicsListSelector: ".js-typeahead-topic-list",
			topicsItemSelector: ".js-typeahead-topic-item",
			topicsTemplate: "typeahead/typeahead_topics"
		}), this.renderTopics = function(e, t) {
			this.$topicsList.empty();
			var i = t.suggestions.topics || [];
			if (i.length) {
				var n = i.map(function(e) {
						return {
							topic: e.topic,
							name: (0, a.highlightSubstringAndAddHashflag)(e.topic, t.query)
						}
					}, this),
					s = r.default.render(this.attr.topicsTemplate, {
						topics: n
					});
				this.$topicsList.toggleClass("has-results", i.length > 0).toggleClass("is-hidden", 0 === i.length).html(s)
			} else this.clearTopics()
		}, this.clearTopics = function(e) {
			this.$topicsList.removeClass("has-results"), this.$topicsList.addClass("is-hidden")
		}, this.resetTopics = function() {
			this.clearTopics(), this.$topicsList.find(this.attr.topicsItemSelector).remove()
		}, this.after("initialize", function() {
			this.$topicsList = this.select("topicsListSelector"), this.on("uiTypeaheadRenderResults", this.renderTopics)
		})
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(6),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(359);
	e.exports = function() {
		this.attributes({
			listsListSelector: ".js-typeahead-lists-list",
			listItemSelector: ".js-typeahead-list-item",
			listTemplate: "typeahead/typeahead_lists"
		}), this.renderLists = function(e, t) {
			if (this.currentData = t, t.datasources && t.datasources.some(function(e) {
					return "lists" === e
				})) {
				var i, n = t.suggestions && t.suggestions.lists && t.suggestions.lists.length;
				if (n) {
					var s = [];
					t.suggestions.lists.forEach(function(e) {
						s.push({
							query: e.fullName,
							fullName: (0, a.highlightSubstring)(e.fullName, t.query),
							name: e.name,
							screenName: e.user.screenName
						})
					}, this), i = r.default.render(this.attr.listTemplate, {
						lists: s
					})
				} else i = "";
				this.$listsList.toggleClass("has-results", n).toggleClass("is-hidden", !n).html(i)
			} else this.$listsList.removeClass("has-results").addClass("is-hidden").empty()
		}, this.after("initialize", function() {
			this.$listsList = this.select("listsListSelector"), this.on("uiTypeaheadRenderResults", this.renderLists)
		})
	}
}, function(e, t, i) {
	"use strict";
	e.exports = function() {
		this.attributes({
			conversationListSelector: ".js-typeahead-conversation-list",
			conversationItemSelector: ".js-typeahead-conversation-item",
			conversationTemplate: "typeahead/typeahead_conversations"
		}), this.after("initialize", function() {
			this.$conversationList = this.select("conversationListSelector"), this.on("uiTypeaheadRenderResults", this.renderConversations)
		}), this.renderConversations = function(e, t) {
			this.$conversationList.find(this.attr.conversationItemSelector).remove();
			var i = t.suggestions.conversations || [];
			if (i.length) {
				var n = i.map(function(e) {
					return e.render({
						templateName: this.attr.conversationTemplate
					})
				}, this).join("");
				this.$conversationList.toggleClass("has-results", i.length > 0).toggleClass("is-hidden", 0 === i.length).html(n)
			} else this.clearConversations()
		}, this.clearConversations = function() {
			this.$conversationList.removeClass("has-results"), this.$conversationList.addClass("is-hidden")
		}
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = d(i(26)),
		s = d(i(14)),
		r = d(i(16)),
		a = d(i(27)),
		o = d(i(28)),
		l = i(4),
		c = (d(i(8)), i(17)),
		u = d(i(2500));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.state = {
				hasError: !1
			}, r.handleRetry = function() {
				r.setState({
					hasError: !1
				})
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidCatch",
			value: function(e, t) {
				e instanceof u.default ? (0, c.metric)("error:lazy_load:" + e.chunkName) : (0, c.metric)("error:" + e.name.toLowerCase())
			}
		}, {
			key: "render",
			value: function() {
				return this.props.children({
					hasError: this.state.hasError,
					onRetry: this.handleRetry
				})
			}
		}], [{
			key: "getDerivedStateFromError",
			value: function() {
				return {
					hasError: !0
				}
			}
		}]), t
	}(l.Component);
	t.default = h
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = o(i(26)),
		s = o(i(14)),
		r = o(i(27)),
		a = o(i(28));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = function(e) {
		function t(e, i) {
			(0, s.default)(this, t);
			var a = (0, r.default)(this, (t.__proto__ || (0, n.default)(t)).call(this, 'Error during lazy load of chunk "' + e + '": ' + i.message, i.fileName, i.lineNumber));
			return a.chunkName = e, a.internalError = i, a
		}
		return (0, a.default)(t, e), t
	}(Error);
	t.default = l
}, function(e, t, i) {
	"use strict";
	var n = a(i(2)),
		s = a(i(0)),
		r = a(i(6));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component;
	e.exports = o(function() {
		this.attributes({
			FROM_ME: "from_me",
			MENTIONING_USER: "mentioning_user",
			MENTIONING_ME: "mentioning_me",
			filterType: "user",
			template: "menus/search_user_form",
			tweetsFromSelector: ".js-tweets-from",
			tweetsFromUserSelector: ".js-tweets-from-user",
			tweetsFromUserClass: "js-tweets-from-user",
			tweetsFromUserInputSelector: '.js-tweets-from-user input[type="text"]',
			tweetsFromListSelector: ".js-tweets-from-list",
			tweetsFromListClass: "js-tweets-from-list",
			tweetsFromListInputSelector: '.js-tweets-from-list input[type="text"]',
			tweetsFromMeSelector: ".js-tweets-from-me",
			mentioningSelector: ".js-mentioning",
			mentioningUserSelector: ".js-mentioning-user",
			mentioningUserInputSelector: '.js-mentioning-user input[type="text"]',
			mentioningUserClass: "js-mentioning-user",
			mentioningMeSelector: ".js-mentioning-me",
			isHiddenClass: "is-hidden",
			renderOptions: {
				withFromList: !1,
				withUsersIFollow: !1
			},
			searchFilter: null
		}), this.getTweetsFromOptions = function(e, t) {
			var i = [{
				value: TD.vo.UserFilter.FROM_ALL,
				title: (0, n.default)("all users")
			}, {
				value: TD.vo.UserFilter.FROM_USER,
				title: (0, n.default)("specific user…")
			}, {
				value: this.attr.FROM_ME,
				title: (0, n.default)("me…")
			}, {
				value: TD.vo.UserFilter.FROM_VERIFIED,
				title: (0, n.default)("verified users")
			}];
			return e && i.push({
				value: TD.vo.UserFilter.FROM_LIST,
				title: (0, n.default)("members of List…")
			}), t && i.splice(1, 0, {
				value: TD.vo.UserFilter.FROM_FOLLOWING,
				title: (0, n.default)("users I follow")
			}), i
		}, this.getMentioningOptions = function() {
			return [{
				value: "",
				title: (0, n.default)("-")
			}, {
				value: this.attr.MENTIONING_USER,
				title: (0, n.default)("specific user…")
			}, {
				value: this.attr.MENTIONING_ME,
				title: (0, n.default)("me…")
			}]
		}, this.getMyAccounts = function() {
			var e = TD.storage.accountController.getPreferredAccount("twitter"),
				t = TD.storage.accountController.getAccountsForService("twitter");
			return t = (t = t.map(function(t) {
				return {
					value: t.getUsername().toLowerCase(),
					title: "@" + t.getUsername(),
					isDefault: t === e
				}
			})).sort(function(e, t) {
				return e.value.toLowerCase().localeCompare(t.value.toLowerCase())
			})
		}, this.updateFormState = function(e, t) {
			switch (e) {
				case TD.vo.UserFilter.FROM_USER:
					this.$tweetsFromUser.removeClass(this.attr.isHiddenClass), this.$tweetsFromList.addClass(this.attr.isHiddenClass), this.$tweetsFromMe.addClass(this.attr.isHiddenClass);
					break;
				case TD.vo.UserFilter.FROM_LIST:
					this.$tweetsFromList.removeClass(this.attr.isHiddenClass), this.$tweetsFromUser.addClass(this.attr.isHiddenClass), this.$tweetsFromMe.addClass(this.attr.isHiddenClass);
					break;
				case this.attr.FROM_ME:
					this.$tweetsFromMe.removeClass(this.attr.isHiddenClass), this.$tweetsFromUser.addClass(this.attr.isHiddenClass), this.$tweetsFromList.addClass(this.attr.isHiddenClass), this.$tweetsFromUserInput.val("");
					break;
				default:
					this.$tweetsFromMe.addClass(this.attr.isHiddenClass), this.$tweetsFromUser.addClass(this.attr.isHiddenClass), this.$tweetsFromList.addClass(this.attr.isHiddenClass), this.$tweetsFromUserInput.val("")
			}
			switch (t) {
				case this.attr.MENTIONING_USER:
					this.$mentioningUser.removeClass(this.attr.isHiddenClass), this.$mentioningMe.addClass(this.attr.isHiddenClass);
					break;
				case this.attr.MENTIONING_ME:
					this.$mentioningMe.removeClass(this.attr.isHiddenClass), this.$mentioningUser.addClass(this.attr.isHiddenClass), this.$mentioningUserInput.val("");
					break;
				default:
					this.$mentioningMe.addClass(this.attr.isHiddenClass), this.$mentioningUser.addClass(this.attr.isHiddenClass), this.$mentioningUserInput.val("")
			}
		}, this.handleChange = function(e) {
			var t, i = "",
				n = this.$tweetsFrom.val(),
				r = this.$mentioning.val(),
				a = (0, s.default)(e.target).data("title");
			switch (this.updateFormState(n, r), n) {
				case this.attr.FROM_ME:
					i = this.$tweetsFromMe.val(), n = TD.vo.UserFilter.FROM_USER;
					break;
				case TD.vo.UserFilter.FROM_USER:
					i = this.$tweetsFromUserInput.val();
					break;
				case TD.vo.UserFilter.FROM_LIST:
					i = this.$tweetsFromListInput.val()
			}
			t = r === this.attr.MENTIONING_ME ? this.$mentioningMe.val() : this.$mentioningUserInput.val(), i || n !== TD.vo.UserFilter.FROM_USER && n !== TD.vo.UserFilter.FROM_LIST || (n = TD.vo.UserFilter.FROM_ALL);
			var o = new TD.vo.UserFilter({
				from_type: n,
				from_name: i,
				mention_name: t
			});
			this.trigger("uiSearchFilterUpdateAction", {
				type: "user",
				filter: o,
				filterName: a,
				value: e.target.value
			})
		}, this.after("initialize", function() {
			var e, t, i;
			this.tweetsFromOptions = this.getTweetsFromOptions(this.attr.renderOptions.withFromList, this.attr.renderOptions.withUsersIFollow), this.mentioningOptions = this.getMentioningOptions(), this.myAccounts = this.getMyAccounts();
			var s = this.attr.searchFilter,
				a = s.user && null !== s.user.from_type ? s.user.from_name : "",
				o = s.user ? s.user.mention_name : "";
			e = {
				tweetsFromOptions: this.tweetsFromOptions,
				tweetsFromUser: {
					searchInputControlClass: this.attr.tweetsFromUserClass + " margin-txs",
					searchInputPlaceholder: (0, n.default)("user name"),
					searchInputTitle: "from_user_or_list",
					searchInputValue: a
				},
				tweetsFromList: {
					searchInputControlClass: this.attr.tweetsFromListClass + " margin-txs",
					searchInputPlaceholder: (0, n.default)("@username/list-name"),
					searchInputTitle: "from_user_or_list",
					searchInputValue: a
				},
				mentioningUser: {
					searchInputControlClass: this.attr.mentioningUserClass + " margin-txs",
					searchInputPlaceholder: (0, n.default)("user name"),
					searchInputTitle: "mentioning_user",
					searchInputValue: o
				},
				mentioningOptions: this.mentioningOptions,
				myAccounts: this.myAccounts
			};
			var l = r.default.render(this.attr.template, e);
			if (this.$node.html(l), this.$tweetsFrom = this.select("tweetsFromSelector"), this.$tweetsFromUser = this.select("tweetsFromUserSelector"), this.$tweetsFromUserInput = this.select("tweetsFromUserInputSelector"), this.$tweetsFromList = this.select("tweetsFromListSelector"), this.$tweetsFromListInput = this.select("tweetsFromListInputSelector"), this.$tweetsFromMe = this.select("tweetsFromMeSelector"), this.$mentioning = this.select("mentioningSelector"), this.$mentioningUser = this.select("mentioningUserSelector"), this.$mentioningUserInput = this.select("mentioningUserInputSelector"), this.$mentioningMe = this.select("mentioningMeSelector"), this.attr.searchFilter && this.attr.searchFilter.user) {
				if (t = this.attr.searchFilter.user.from_name && TD.storage.accountController.getAccountFromUsername(this.attr.searchFilter.user.from_name).length > 0, i = this.attr.searchFilter.user.mention_name && TD.storage.accountController.getAccountFromUsername(this.attr.searchFilter.user.mention_name).length > 0, t) this.$tweetsFrom.val(this.attr.FROM_ME), this.$tweetsFromMe.val(this.attr.searchFilter.user.from_name);
				else switch (this.$tweetsFrom.val(this.attr.searchFilter.user.from_type), this.attr.searchFilter.user.from_type) {
					case TD.vo.UserFilter.FROM_USER:
						this.$tweetsFromUserInput.val(this.attr.searchFilter.user.from_name);
						break;
					case TD.vo.UserFilter.FROM_LIST:
						this.$tweetsFromListInput.val(this.attr.searchFilter.user.from_name)
				}
				i ? (this.$mentioning.val(this.attr.MENTIONING_ME), this.$mentioningMe.val(this.attr.searchFilter.user.mention_name)) : this.attr.searchFilter.user.mention_name && (this.$mentioning.val(this.attr.MENTIONING_USER), this.$mentioningUserInput.val(this.attr.searchFilter.user.mention_name))
			}
			this.updateFormState(this.$tweetsFrom.val(), this.$mentioning.val()), this.on("change", this.handleChange)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = l(i(162)),
		s = l(i(9)),
		r = l(i(44)),
		a = l(i(0)),
		o = l(i(21));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = i(5).component,
		u = i(6);
	e.exports = c(function() {
		this.attributes({
			filterType: "action",
			columnType: null,
			template: "menus/search_action_form",
			searchFilter: null,
			showFavoritesSelector: ".js-show-favorites",
			showRetweetsSelector: ".js-show-retweets",
			showListsSelector: ".js-show-lists",
			showFollowersSelector: ".js-show-followers",
			showMentionsSelector: ".js-show-mentions",
			showActionsOnRetweetsSelector: ".js-show-actions-on-retweets",
			showQuotedSelector: ".js-show-quoted",
			showInteractionsOnMentioned: ".js-show-interactions-on-mentioned",
			showInteractionsOnTagged: ".js-show-interactions-on-tagged",
			errorMessageSelector: ".js-action-filter-error",
			isHiddenClass: "is-hidden"
		}), this.after("initialize", function() {
			var e = {
					available: this.attr.searchFilter.action.getAvailableFacets(this.attr.columnType),
					checked: this.attr.searchFilter.action.toJSONObject(),
					showError: this.attr.searchFilter.action.hasFilterError(this.attr.columnType)
				},
				t = u.render(this.attr.template, e);
			this.$node.html(t), this.$showRetweets = this.select("showRetweetsSelector"), this.$showFavorites = this.select("showFavoritesSelector"), this.$showFollowers = this.select("showFollowersSelector"), this.$showLists = this.select("showListsSelector"), this.$showMentions = this.select("showMentionsSelector"), this.$showActionsOnRetweets = this.select("showActionsOnRetweetsSelector"), this.$showQuoted = this.select("showQuotedSelector"), this.$showInteractionsOnMentioned = this.select("showInteractionsOnMentioned"), this.$showInteractionsOnTagged = this.select("showInteractionsOnTagged"), this.on("change", this.handleChange)
		}), this.isInActivityColumn = function() {
			return this.attr.columnType === o.default.columnMetaTypes.ACTIVITY
		}, this.handleChange = function(e) {
			var t, i = {
					showFollowers: this.$showFollowers.prop("checked"),
					showLists: this.$showLists.prop("checked"),
					showMentions: this.$showMentions.prop("checked"),
					showRetweets: this.$showRetweets.prop("checked"),
					showFavorites: this.$showFavorites.prop("checked"),
					showActionsOnRetweets: this.$showActionsOnRetweets.prop("checked"),
					showQuoted: this.$showQuoted.prop("checked"),
					showInteractionsOnMentioned: this.$showInteractionsOnMentioned.prop("checked"),
					showInteractionsOnTagged: this.$showInteractionsOnTagged.prop("checked")
				},
				o = (0, r.default)(i).reduce(function(e, t) {
					return "boolean" != typeof i[t] ? e : (0, s.default)({}, e, (0, n.default)({}, t, i[t]))
				}, {});
			t = new TD.vo.ActionFilter(o), this.select("errorMessageSelector").toggleClass(this.attr.isHiddenClass, !t.hasFilterError(this.attr.columnType)), this.trigger("uiAccordionUpdatePanelHeights"), this.trigger("uiSearchFilterUpdateAction", {
				type: this.attr.filterType,
				filter: t,
				filterName: (0, a.default)(e.target).data("title"),
				value: [e.target.value, e.target.checked ? "show" : "hide"].join(":")
			}), t.hasFilterError(this.attr.columnType) && this.trigger("uiActionFilterError")
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(0)),
		s = r(i(6));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			filterType: "engagement",
			template: "menus/search_engagement_form",
			searchFilter: null,
			minRetweetsSelector: ".js-min-retweets",
			minRepliesSelector: ".js-min-replies",
			minFavoritesSelector: ".js-min-favorites",
			zeroClass: "txt-mute"
		}), this.after("initialize", function() {
			var e = this.attr.searchFilter.engagement,
				t = s.default.render(this.attr.template, e);
			this.$node.html(t), this.$minFavorites = this.select("minFavoritesSelector"), this.$minRetweets = this.select("minRetweetsSelector"), this.$minReplies = this.select("minRepliesSelector"), this.on("change blur", this.handleChange), this.validateInput(this.attr.searchFilter.engagement)
		}), this.validateInput = function() {
			var e = parseInt(this.$minFavorites.val(), 10),
				t = parseInt(this.$minRetweets.val(), 10),
				i = parseInt(this.$minReplies.val(), 10);
			e = isNaN(e) ? 0 : e, t = isNaN(t) ? 0 : t, i = isNaN(i) ? 0 : i, this.$minFavorites.val(e).toggleClass(this.attr.zeroClass, 0 === e), this.$minRetweets.val(t).toggleClass(this.attr.zeroClass, 0 === t), this.$minReplies.val(i).toggleClass(this.attr.zeroClass, 0 === i)
		}, this.handleChange = function(e) {
			var t, i = (0, n.default)(e.target).data("title"),
				s = (0, n.default)(e.target).val();
			this.validateInput(), t = new TD.vo.EngagementFilter({
				minFavorites: this.$minFavorites.val(),
				minRetweets: this.$minRetweets.val(),
				minReplies: this.$minReplies.val()
			}), this.trigger("uiSearchFilterUpdateAction", {
				type: this.attr.filterType,
				filter: t,
				filterName: i,
				value: s
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.default = function(e) {
		if (!(e instanceof TD.vo.Column && a.default.isEmbeddable(e))) throw new Error("openEmbedTimeline must be called with an embeddable column of type TD.vo.Column");
		var t = e.getFeeds()[0],
			i = {
				query: ""
			},
			o = void 0;
		switch (a.default.getColumnType(e)) {
			case a.default.columnMetaTypes.USERTWEETS:
				var u = t.getMetadata().id || t.getAccountKey().replace(/[^\d]*/, "");
				return TD.cache.twitterUsers.getById(u).toPromise().then(function(e) {
					var t = e.profileURL;
					i.query = t, (0, s.openURL)(l, i)
				}).catch(function(e) {
					return (0, r.showErrorNotification)({
						message: (0, n.default)("Unable to generate embed link for feed.", e)
					})
				});
			case a.default.columnMetaTypes.FAVORITES:
				o = c(t), i.query = o + "/likes";
				break;
			case a.default.columnMetaTypes.LIST:
				var d = a.default.getOwnList(e),
					h = d.user,
					m = h.profileURL,
					f = h.id,
					p = d.slug;
				i.query = m + "/lists/" + p, i.user_id = f;
				break;
			case a.default.columnMetaTypes.CUSTOMTIMELINE:
				var g = t.getMetadata().id.replace(/[^\d]*/, "");
				o = c(t), i.query = o + "/timelines/" + g
		}
		return (0, s.openURL)(l, i)
	};
	var n = o(i(2)),
		s = i(17),
		r = i(19),
		a = o(i(21));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = "https://publish.twitter.com/",
		c = function(e) {
			return "https://twitter.com/" + TD.storage.accountController.get(e.getAccountKey()).getUsername()
		}
}, function(e, t, i) {
	"use strict";
	var n = c(i(2)),
		s = c(i(0)),
		r = c(i(7)),
		a = c(i(6)),
		o = c(i(21)),
		l = i(33);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			column: null,
			template: "column/preferences",
			actionButton: "[data-action]",
			summarySelector: ".js-preferences-summary",
			summaryClass: "js-preferences-summary",
			thumbSizeSelectSelector: ".js-thumb-size",
			thumbSizeSelectTemplate: "column/thumb_size_select",
			selectItemSelector: ".js-toggle-item",
			selectedMediaSelector: ".js-selected-media",
			unselectedMediaSelector: ".js-unselected-media"
		}), this.initialState({
			hasSound: function() {
				return this.attr.column.model.getHasSound()
			},
			hasNotifications: function() {
				return this.attr.column.model.getHasNotification()
			},
			thumbSize: function() {
				return this.attr.column.getMediaPreviewSize()
			}
		}), this.componentDidInitialize = function() {
			this.column = this.attr.column, this.initialRender(), this.on(this.$preferences, "click", {
				actionButton: this.toggleColumnSetting
			}), this.on(this.$node, "click", {
				selectItemSelector: this.handleThumbSizeSelectClick
			})
		}, this.getMediaPreviewSizeText = function() {
			var e = this.column.getMediaPreviewSize();
			return this.isColumnWithTweets() ? (0, n.default)({
				off: "Media hidden",
				small: "Small media",
				medium: "Medium media",
				large: "Large media"
			} [e]) : ""
		}, this.getNotificationsText = function() {
			var e = this.state,
				t = e.hasNotifications,
				i = e.hasSound;
			return t && i ? (0, n.default)("Sounds and desktop notifications") : t ? (0, n.default)("Desktop notifications") : i ? (0, n.default)("Sounds") : ""
		}, this.renderSummary = function() {
			var e = this.getMediaPreviewSizeText(),
				t = this.getNotificationsText(),
				i = t.length && this.isColumnWithTweets() ? "·" : "";
			this.$summarySelector.text(e + " " + i + " " + t)
		}, this.render = function() {
			this.renderSummary(), this.renderThumbSizeSelector()
		}, this.toggleColumnSetting = function(e) {
			var t = (0, s.default)(e.target).closest(this.attr.actionButton),
				i = t.data("action"),
				n = this.column.model;
			switch (i) {
				case "popups":
					var r = !n.getHasNotification();
					n.setHasNotification(r), this.trigger(document, "uiCheckNotificationPermission"), this.mergeState({
						hasNotifications: r
					}), (0, l.generic)({
						page: "main",
						component: "notifications",
						action: r ? "on" : "off"
					});
					break;
				case "sound":
					var a = !n.getHasSound();
					n.setHasSound(a), this.mergeState({
						hasSound: a
					}), (0, l.generic)({
						page: "settings",
						component: "notifcation",
						element: "sound_preferences",
						action: a ? "enabled" : "disabled"
					})
			}
		}, this.renderThumbSizeSelector = function() {
			var e = this.state,
				t = e.thumbSize,
				i = e.thumbSizeEl,
				n = this.attr,
				s = n.selectedMediaSelector,
				r = n.unselectedMediaSelector,
				a = '[data-value="' + t + '"]';
			if (i) this.$selectedMedia.addClass("is-hidden"), this.$unselectedMedia.removeClass("is-hidden"), i.find(s).removeClass("is-hidden"), i.find(r).addClass("is-hidden");
			else {
				var o = this.$thumbSizeSelectOptions.filter(a);
				o.find(s).removeClass("is-hidden"), o.find(r).addClass("is-hidden")
			}
		}, this.handleThumbSizeSelectClick = function(e, t) {
			var i = (0, s.default)(t.el),
				n = i.data("value");
			n && (this.trigger("uiColumnUpdateMediaPreview", {
				value: n
			}), this.mergeState({
				thumbSizeEl: i
			}))
		}, this.getNotificationOptions = function() {
			var e = TD.controller.notifications.hasNotifications(),
				t = e ? {
					action: "popups",
					option: (0, n.default)("Enable desktop notifications"),
					on: this.state.hasNotifications
				} : null,
				i = {
					action: "sound",
					option: (0, n.default)("Enable sound"),
					on: this.state.hasSound
				};
			return [i, t].filter(Boolean)
		}, this.getMediaPreviewSizeOptions = function() {
			return [{
				dataValue: "off",
				text: (0, n.default)("Hidden"),
				selectedSrc: i(845),
				unselectedSrc: i(846)
			}, {
				dataValue: "small",
				text: (0, n.default)("Small"),
				selectedSrc: i(851),
				unselectedSrc: i(852)
			}, {
				dataValue: "medium",
				text: (0, n.default)("Medium"),
				selectedSrc: i(849),
				unselectedSrc: i(850)
			}, {
				dataValue: "large",
				text: (0, n.default)("Large"),
				selectedSrc: i(847),
				unselectedSrc: i(848)
			}]
		}, this.isColumnWithTweets = function() {
			return -1 !== o.default.mediaPreviewableColumnTypes.indexOf(o.default.getColumnType(this.column))
		}, this.initialRender = function() {
			var e = this.isColumnWithTweets(),
				t = {
					summaryText: "",
					iconClass: "icon-settings",
					title: (0, n.default)("Preferences"),
					jsClass: this.attr.summaryClass,
					notificationOptions: this.getNotificationOptions(),
					mediaPreviewSizeOptions: this.getMediaPreviewSizeOptions(),
					columnWithTweets: e
				};
			this.$preferences = (0, s.default)(a.default.render(this.attr.template, t)), this.$node.append(this.$preferences), this.$thumbSizeSelectOptions = this.select("selectItemSelector"), this.$summarySelector = this.select("summarySelector"), this.$selectedMedia = this.select("selectedMediaSelector"), this.$unselectedMedia = this.select("unselectedMediaSelector"), this.renderSummary(), this.renderThumbSizeSelector()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(527)),
		s = u(i(46)),
		r = u(i(2)),
		a = u(i(0)),
		o = u(i(211)),
		l = u(i(17)),
		c = i(19);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var d = i(5).component,
		h = i(153),
		m = i(66),
		f = i(45),
		p = i(6),
		g = i(877);
	e.exports = d(o.default, function() {
		this.attributes({
			accountKey: null,
			customTimelineId: null,
			columnKey: null,
			isOwnCustomTimeline: !1,
			readOnly: !1,
			reloadPeriod: 900,
			animatingClass: "is-column-options-animating",
			maxCharCount: 160,
			characterCountSelector: ".js-character-count",
			tweetTextInputSelector: ".js-compose-text",
			inputSelector: ".js-input",
			editSelector: ".js-edit",
			saveSelector: ".js-save",
			cancelSelector: ".js-cancel",
			closeEditEvent: function() {
				return "uiCloseCustomTimelineDescriptionEdit-" + this.attr.customTimelineId
			}
		}), this.initialState({
			descriptionText: "",
			hideCharacterCount: !1
		}), this.after("initialize", function() {
			this.customTimeline = null, this.newDescription = null, this.$node.removeClass("is-hidden"), this.on(document, "dataCustomTimelineSuccess", this.handleCustomTimeline.bind(this)), this.on(document, "dataCustomTimelineUpdateError", this.handleUpdateError.bind(this)), this.on("uiComposeTextChanged", this.handleComposeTextChanged), this.stateSource = "customTimelineDescription[" + (0, s.default)("ctlid") + "].state";
			var e = this.observableState.map(function(e) {
				var t = g.getRemainingCharCount(this.attr.maxCharCount, twttrTxt.getUnicodeTextLength(e.descriptionText));
				return (0, n.default)({}, e, {
					tweetText: e.descriptionText,
					displayedCharacterCount: t,
					hasValidCharacterCount: t >= 0
				})
			}, this);
			this.provideResource(this.stateSource, e), e.subscribe(this.renderButtons.bind(this)), this.on("click", {
				editSelector: this.edit,
				saveSelector: this.save,
				cancelSelector: this.cancel
			}), this.on("uiInputSubmit", {
				inputSelector: this.save
			}), this.on("uiInputBlur", {
				inputSelector: this.cancel
			}), this.reloadTaskId = TD.controller.scheduler.schedulePeriodicTask(this.attr.reloadPeriod, this.requestData.bind(this), !0)
		}), this.before("teardown", function() {
			TD.controller.scheduler.removePeriodicTask(this.reloadTaskId)
		}), this.requestData = function() {
			this.trigger(document, "uiNeedsCustomTimeline", {
				id: this.attr.customTimelineId,
				account: this.attr.accountKey
			})
		}, this.handleCustomTimeline = function(e, t) {
			var i = !0;
			t.action.id === this.attr.customTimelineId && (i = !this.customTimeline || this.customTimeline.description !== t.result.description, this.customTimeline = t.result, this.customTimeline.description === this.newDescription && (this.newDescription = null), i && this.showDescription(this.customTimeline.description))
		}, this.showDescription = function(e) {
			var t = (0, a.default)(p.render("column/custom_timeline_description", {
				description: l.default.cleanWithEmoji(e),
				editable: this.attr.isOwnCustomTimeline && !this.attr.readOnly
			}));
			this.animateElementContentHeight(this.$node, t, this.attr.animatingClass)
		}, this.edit = function() {
			this.trigger("uiShowEditCustomTimeline", {
				accountKey: this.attr.accountKey,
				timelineId: this.attr.customTimelineId,
				columnKey: this.attr.columnKey,
				name: this.customTimeline.name,
				description: this.customTimeline.description,
				focus: "description"
			})
		}, this.setupDOM = function() {}, this.save = function(e, t) {
			var i = this.select("inputSelector").val(),
				n = this.customTimeline ? this.customTimeline.description : null;
			this.select("saveSelector").prop("disabled") || (this.showDescription(i), i !== n && (this.newDescription = i, this.trigger(document, "uiUpdateCustomTimeline", {
				account: this.attr.accountKey,
				id: this.attr.customTimelineId,
				description: i
			}), this.trigger(this.attr.closeEditEvent)))
		}, this.cancel = function() {
			this.showDescription(this.customTimeline.description), this.trigger(this.attr.closeEditEvent)
		}, this.handleUpdateError = function(e, t) {
			t.action.id === this.attr.customTimelineId && this.newDescription && (this.edit(), (0, c.showErrorNotification)({
				message: (0, r.default)("Error: unable to save description")
			}))
		}, this.handleComposeTextChanged = function(e, t) {
			e.stopPropagation(), this.mergeState({
				descriptionText: t.value
			})
		}, this.renderButtons = function(e) {
			this.select("saveSelector").prop("disabled", e.displayedCharacterCount <= 0)
		}
	}, h, m, f)
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(137),
		l = i(66),
		c = i(878),
		u = i(6);
	e.exports = a(o, function() {
		this.attributes({
			columnBackSelector: ".js-dm-participants-back",
			headerLinkClass: "js-dm-participants-back",
			conversationAdderSelector: ".js-conversation-adder",
			conversationId: null,
			accountKey: null
		}), this.initialState({
			participants: null,
			isOneToOne: !1,
			conversationId: function() {
				return this.attr.conversationId
			},
			accountKey: function() {
				return this.attr.accountKey
			}
		}), this.after("initialize", function() {
			this.after("stateChanged", this.render), this.on("uiCloseDmParticipants", this.close), this.on("click", {
				columnBackSelector: this.close
			}), this.on("uiUserSelected", {
				conversationAdderSelector: this.handleUserSelection
			}), this.on(document, "dataConversationParticipants", this.handleConversationParticipants), this.fetchData()
		}), this.fetchData = function() {
			var e = TD.controller.clients.getClient(this.state.accountKey),
				t = e.conversations.getConversation(this.state.conversationId),
				i = t.participants;
			this.mergeState({
				participants: i,
				isOneToOne: t.isOneToOne()
			})
		}, this.handleConversationParticipants = function(e, t) {
			t.conversationId === this.state.conversationId && this.mergeState({
				participants: t.participants
			})
		}, this.render = function() {
			if (null !== this.state.participants) {
				var e = {
						columntitle: (0, r.default)("Conversation"),
						headerLinkClass: this.attr.headerLinkClass,
						withUserMenu: !0,
						users: this.state.participants
					},
					t = u.render("column/column_dm_participants", e);
				this.$node.html(t), this.attachChild(c, this.attr.conversationAdderSelector, {
					placeholder: (0, r.default)("Add people to group"),
					withSelectButton: !1,
					focusOnInit: !1
				})
			}
		}, this.close = function() {
			this.trigger("uiDmParticipantsClosed"), this.teardown()
		}, this.addParticipants = function(e) {
			var t = {
				conversationId: this.state.conversationId,
				participantIds: [e.user.id],
				accountKey: this.state.accountKey
			};
			this.trigger("uiAddConversationParticipants", t)
		}, this.createNewConversation = function(e) {
			var t = {
				type: "message",
				messageRecipients: this.state.participants.concat(e.user),
				from: [this.state.accountKey],
				text: ""
			};
			this.trigger("uiComposeTweet", t)
		}, this.handleUserSelection = function(e, t) {
			this.state.isOneToOne ? this.createNewConversation(t) : this.addParticipants(t)
		}
	}, l)
}, function(e, t, i) {
	"use strict";
	var n = o(i(46)),
		s = o(i(2)),
		r = i(5),
		a = o(i(6));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(function() {
		this.attributes({
			columnBackSelector: ".js-tweet-social-proof-back",
			headerLinkClass: "js-tweet-social-proof-back",
			templateName: "status/social_proof_for_tweet",
			tweetSummary: null,
			type: null
		}), this.after("initialize", function() {
			var e, t, i;
			this.on("uiSocialProofForTweetClose", this.close), this.on("click", {
				columnBackSelector: this.close
			}), this.on(document, "dataTwitterUsers", this.handleTwitterUsers), this.userIds = this.attr.tweetSummary[this.attr.type], "retweeters" === this.attr.type ? (t = "Retweeted", i = this.attr.tweetSummary.retweeters_count) : "repliers" === this.attr.type ? (t = "Replied", i = this.attr.tweetSummary.repliers_count) : (t = "Liked", i = this.attr.tweetSummary.favoriters_count), e = parseInt(i, 10) > 1 ? (0, s.default)("{{action}} {{n}} times", {
				n: TD.util.prettyNumber(i, {
					noNegativeNumbers: !0
				}),
				action: t
			}) : (0, s.default)("{{action}} once", {
				action: t
			}), this.renderParams = {
				title: e,
				columntitle: (0, s.default)("Tweet"),
				headerLinkClass: this.attr.headerLinkClass,
				withUserMenu: !0
			};
			var r = a.default.render(this.attr.templateName, this.renderParams);
			this.$node.html(r), this.requestId = (0, n.default)("twitterUsers"), this.trigger("uiNeedsTwitterUsers", {
				requestId: this.requestId,
				userIds: this.userIds
			})
		}), this.handleTwitterUsers = function(e, t) {
			if (t.requestId === this.requestId) {
				this.renderParams.users = t.users;
				var i = a.default.render(this.attr.templateName, this.renderParams);
				this.$node.html(i)
			}
		}, this.close = function() {
			this.trigger("uiSocialProofForTweetClosed"), this.teardown()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(83),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = r.default.mixin(function() {
		this.attributes({
			allowEmpty: !1,
			customTitleSelector: ".js-column-title-edit-box"
		}), this.initialState({
			currentTitle: ""
		}), this.after("initialize", function() {
			this.on("change uiInputSubmit", {
				customTitleSelector: this.handleCustomTitleChange
			}), this.on("focusin", {
				customTitleSelector: this.handleFocus
			})
		}), this.handleFocus = function() {
			this.mergeState({
				currentTitle: this.select("customTitleSelector").val()
			})
		}, this.handleCustomTitleChange = function() {
			var e = this.select("customTitleSelector").val().trim(),
				t = e !== this.state.currentTitle;
			"" !== e || !1 !== this.attr.allowEmpty ? t && (this.trigger("uiColumnTitleUpdate", {
				title: e
			}), this.mergeState({
				currentTitle: e
			})) : this.select("customTitleSelector").val(this.state.currentTitle)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			renameParentContainer: ".js-detail-header",
			renameHeaderText: ".js-tooltip-target",
			renameContainerSelector: ".js-edit-conversation-name",
			renameInputSelector: ".js-conversation-name",
			renameConfirmSelector: '[data-action="confirm-edit-conversation"]',
			renameCloseSelector: '[data-action="close-edit-conversation"]'
		}), this.after("initialize", function() {
			this.on("uiRenameConversation", this.handleRenameConversation), this.on("click", {
				renameConfirmSelector: this.handleRenameConversationActions,
				renameCloseSelector: this.handleRenameConversationActions
			}), this.on("uiInputEscape uiInputSubmit", {
				renameInputSelector: this.handleRenameConversationKeypress
			})
		}), this.handleRenameConversation = function(e, t) {
			var i = t.name || "",
				n = this.select("renameContainerSelector"),
				s = this.select("renameInputSelector").val(i).focus();
			i && (s[0].selectionStart = 0, s[0].selectionEnd = i.length), n.addClass("is-visible")
		}, this.handleRenameConversationKeypress = function(e, t) {
			this.performRenameConversation("uiInputSubmit" === e.type ? (0, r.default)(t.el).val().trim() : "")
		}, this.performRenameConversation = function(e) {
			var t = this.select("renameContainerSelector");
			if (e.length > 0) {
				var i = t.data("conversation-id");
				this.trigger("uiUpdateConversationName", {
					conversationId: i,
					name: e
				})
			}
			t.removeClass("is-visible")
		}, this.handleRenameConversationActions = function(e, t) {
			var i = (0, r.default)(t.el),
				n = this.select("renameInputSelector"),
				s = i.is(this.attr.renameConfirmSelector) ? n.val().trim() : "";
			this.performRenameConversation(s), e.stopPropagation()
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = o(i(7)),
		s = o(i(103)),
		r = o(i(21)),
		a = i(2512);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = n.default.mixin(function() {
		this.attributes({
			column: null
		}), this.componentDidInitialize = function() {
			var e = this;
			this.initialRender(), this.on("uiRemoveColumn", function() {
				this.teardown()
			});
			var t = this.connect(a.SimpleColumnHolderUiBase, {
				mapStateToProps: function(t) {
					return {
						column: e.attr.column
					}
				}
			});
			this.attachChild(t, this.$node)
		}, this.initialRender = function() {
			var e = this.attr.column;
			this.$node.attr("data-column", e.model.getKey()).addClass((0, s.default)("js-column js-simple-column column", r.default.getColumnClassByColumn(e)))
		}, this.render = function() {}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.SimpleColumnHolderUiBase = void 0;
	var n = b(i(26)),
		s = b(i(14)),
		r = b(i(16)),
		a = b(i(27)),
		o = b(i(28)),
		l = b(i(4)),
		c = (b(i(8)), b(i(21))),
		u = b(i(2513)),
		d = b(i(2514)),
		h = b(i(2519)),
		m = i(7),
		f = i(872),
		p = i(870),
		g = i(2520),
		v = i(2526),
		T = b(i(2532)),
		w = b(i(2));

	function b(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var y = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.state = {
				showColumnOptions: !1,
				showFilterCallout: !0,
				isShowingOptions: !1,
				isHidingOptions: !1,
				filter: r.props.column.getSearchFilter()
			}, r.handleFilterChange = function(e) {
				r.props.column.updateSearchFilter(e), r.setState({
					filter: r.props.column.getSearchFilter()
				})
			}, r.handleOptionsShown = function() {
				r.setState({
					isShowingOptions: !1
				})
			}, r.handleOptionsHidden = function() {
				r.setState({
					isHidingOptions: !1
				})
			}, r.handleOptionsToggle = function() {
				r.state.isShowingOptions || r.state.isHidingOptions || r.setState(function(e) {
					return {
						showColumnOptions: !e.showColumnOptions,
						isShowingOptions: !e.showColumnOptions && !e.isShowingOptions,
						isHidingOptions: e.showColumnOptions && !e.isHidingOptions,
						expandContentFilter: !1,
						showFilterCallout: !1
					}
				})
			}, r.handleShowColumnOptionsFromFilterMessage = function() {
				r.setState(function(e) {
					return {
						showColumnOptions: !0,
						isShowingOptions: !0,
						isHidingOptions: !1,
						expandContentFilter: !0,
						showFilterCallout: !1
					}
				})
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "render",
			value: function() {
				var e = this,
					t = this.props.column,
					i = this.state,
					n = i.filter,
					s = i.showColumnOptions,
					r = i.isHidingOptions,
					a = i.expandContentFilter,
					o = i.showFilterCallout,
					m = c.default.getColumnType(t),
					b = l.default.createElement(u.default, {
						titleHTML: c.default.getColumnHeaderTitleHTML(t),
						iconClassName: c.default.getColumnIconClassByColumn(t),
						areOptionsOpen: s,
						onOptionsToggle: this.handleOptionsToggle
					}),
					y = (s || r) && l.default.createElement(f.ColumnOptionsReact, {
						column: t,
						columnType: m,
						searchFilter: n,
						isOpen: s,
						expandContentFilter: a,
						onFilterChange: this.handleFilterChange,
						onShown: this.handleOptionsShown,
						onHidden: this.handleOptionsHidden
					}),
					_ = void 0,
					C = void 0,
					S = void 0;
				switch (m) {
					case c.default.columnMetaTypes.TRENDS:
						_ = l.default.createElement(g.TrendsList, {
							filter: n.content.value
						}), C = !y && l.default.createElement(T.default, {
							filter: n.content.value,
							onClick: this.handleShowColumnOptionsFromFilterMessage
						});
						break;
					case c.default.columnMetaTypes.ANALYTICS:
						_ = l.default.createElement("div", null, "Analytics to be rendered here :-)");
						break;
					case c.default.columnMetaTypes.WHATSHAPPENING:
						var D = ["Top", "Latest"],
							k = this.state.whatsHappeningOrder || D[0];
						S = l.default.createElement(d.default, {
							items: D,
							active: k,
							onClick: function(t) {
								e.setState({
									whatsHappeningOrder: t
								})
							}
						}), _ = l.default.createElement(v.WhatsHappeningEntities, {
							order: k,
							columnKey: t.model.getKey()
						})
				}
				var E = m === c.default.columnMetaTypes.TRENDS && o ? l.default.createElement(p.FilterCalloutReact, {
					content: (0, w.default)("Use filters to get customised trends for a different account or location"),
					getSetting: TD.settings.getShowTrendsFilterCallout,
					setSetting: TD.settings.setShowTrendsFilterCallout,
					scribeComponent: "trends",
					onClick: this.handleShowColumnOptionsFromFilterMessage
				}) : null;
				return l.default.createElement(h.default, {
					header: b,
					columnOptions: y,
					nav: S,
					filterMessage: C,
					callout: E,
					content: _
				})
			}
		}]), t
	}(l.default.Component);
	t.default = y;
	t.SimpleColumnHolderUiBase = (0, m.reactToUiBase)(y)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = d(i(26)),
		s = d(i(14)),
		r = d(i(16)),
		a = d(i(27)),
		o = d(i(28)),
		l = d(i(4)),
		c = d(i(103)),
		u = d(i(171));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.handleOptionsToggleClick = function(e) {
				e.preventDefault(), r.props.onOptionsToggle()
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "render",
			value: function() {
				return l.default.createElement("header", {
					className: (0, c.default)("flex-shrink--0 column-header", this.props.areOptionsOpen && "is-options-open")
				}, l.default.createElement("i", {
					className: "js-column-drag-handle is-movable column-drag-handle pull-left sprite sprite-drag-vertical"
				}), l.default.createElement("i", {
					className: (0, c.default)("pull-left margin-l--10 margin-r--2 column-type-icon icon", this.props.iconClassName)
				}), l.default.createElement("span", {
					className: "column-number"
				}), l.default.createElement("div", {
					className: "column-title flex flex-justify-content--space-between"
				}, l.default.createElement("div", {
					className: "column-header-title flex flex-align--center flex-wrap--no-wrap width-p--85",
					dangerouslySetInnerHTML: {
						__html: this.props.titleHTML
					}
				}), l.default.createElement("div", {
					className: "column-header-links"
				}, l.default.createElement("a", {
					"data-testid": "optionsToggle",
					className: "column-header-link column-settings-link",
					href: "#",
					onClick: this.handleOptionsToggleClick
				}, l.default.createElement(u.default, {
					name: "sliders"
				})))))
			}
		}]), t
	}(l.default.Component);
	t.default = h
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = d(i(26)),
		s = d(i(14)),
		r = d(i(16)),
		a = d(i(27)),
		o = d(i(28)),
		l = d(i(4)),
		c = i(2515),
		u = (d(i(8)), d(i(2)));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.state = {
				active: r.props.active
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "handleClick",
			value: function(e) {
				this.setState({
					active: e
				}), this.props.onClick(e)
			}
		}, {
			key: "render",
			value: function() {
				var e = this;
				return l.default.createElement("nav", {
					className: "column-nav",
					role: "toolbar",
					"aria-label": (0, u.default)("Sorting options")
				}, l.default.createElement(c.Nav, {
					className: "flex"
				}, this.props.items.map(function(t) {
					return l.default.createElement(c.NavItem, {
						key: t
					}, l.default.createElement(c.NavLink, {
						tag: "button",
						"data-testid": "whatsHappeningNavLink-" + t,
						className: "txt-bold padding-h--14 padding-v--6 block min-width--45 txt-center",
						onClick: function(i) {
							return e.handleClick(t)
						},
						active: e.state.active === t,
						role: "button"
					}, (0, u.default)(t)))
				})))
			}
		}]), t
	}(l.default.Component);
	t.default = h
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.NavLink = t.NavItem = t.Nav = void 0;
	var n = a(i(2516)),
		s = a(i(2517)),
		r = a(i(2518));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.Nav = n.default, t.NavItem = s.default, t.NavLink = r.default
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = l(i(9)),
		s = l(i(228));
	t.default = c;
	var r = l(i(4)),
		a = l(i(8)),
		o = l(i(103));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	a.default.string, a.default.string, a.default.bool;

	function c(e) {
		var t = e.className,
			i = e.tag,
			a = e.vertical,
			l = (0, s.default)(e, ["className", "tag", "vertical"]),
			c = (0, o.default)(t, a ? "flex-column" : "flex-row");
		return r.default.createElement(i, (0, n.default)({}, l, {
			className: c
		}))
	}
	c.defaultProps = {
		tag: "ul",
		vertical: !1
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = l(i(9)),
		s = l(i(228));
	t.default = c;
	var r = l(i(4)),
		a = l(i(8)),
		o = l(i(103));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	a.default.string, a.default.bool, a.default.string;

	function c(e) {
		var t = e.className,
			i = e.active,
			a = e.tag,
			l = (0, s.default)(e, ["className", "active", "tag"]),
			c = (0, o.default)(t, "nav-item", !!i && "active");
		return r.default.createElement(a, (0, n.default)({}, l, {
			className: c
		}))
	}
	c.defaultProps = {
		tag: "li"
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = l(i(9)),
		s = l(i(228));
	t.default = c;
	var r = l(i(4)),
		a = l(i(8)),
		o = l(i(103));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	a.default.string, a.default.bool, a.default.bool, a.default.string, a.default.func, a.default.any;

	function c(e) {
		var t = e.className,
			i = e.active,
			a = e.tag,
			l = (0, s.default)(e, ["className", "active", "tag"]),
			c = (0, o.default)(t, "nav-link", {
				disabled: l.disabled,
				active: i
			});
		return r.default.createElement(a, (0, n.default)({}, l, {
			onClick: function(e) {
				! function(e) {
					l.disabled ? e.preventDefault() : ("#" === l.href && e.preventDefault(), l.onClick && l.onClick(e))
				}(e)
			},
			className: c
		}))
	}
	c.defaultProps = {
		tag: "a"
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.default = function(e) {
		var t = e.header,
			i = e.nav,
			o = e.columnOptions,
			l = e.filterMessage,
			c = e.callout,
			u = e.content;
		return n.default.createElement(r.default, null, function(e) {
			return n.default.createElement("div", {
				className: "column-holder"
			}, n.default.createElement("div", {
				className: "column-panel flex flex-column height-p--100"
			}, t, c, n.default.createElement("div", {
				className: (0, a.default)("column-content flex-auto position-rel flex flex-column height-p--100", "light" === e ? "bg-color-twitter-white" : "bg-color-twitter-midnight-dark-gray")
			}, n.default.createElement("div", {
				className: "column-options flex-shrink--0 z-index--2"
			}, n.default.createElement("div", {
				className: s.default.isTouchColumnOptions() ? "with-touch-txt-base" : ""
			}), o, i), l && n.default.createElement("div", {
				className: "flex-shrink--0"
			}, l), n.default.createElement("div", {
				"data-testid": "columnContent",
				className: (0, a.default)("column-scroller scroll-v", TD.util.hasFixedScrollBars() && "scroll-styled-v")
			}, u))))
		})
	};
	var n = o(i(4)),
		s = (o(i(8)), o(i(21))),
		r = o(i(210)),
		a = o(i(103));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.TrendsList = void 0;
	var n = p(i(26)),
		s = p(i(14)),
		r = p(i(16)),
		a = p(i(27)),
		o = p(i(28)),
		l = i(4),
		c = p(l),
		u = (p(i(8)), i(2521)),
		d = p(i(879)),
		h = i(206),
		m = i(2525),
		f = p(i(2));

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.TrendsList = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "getSelectedTrendsObservable",
			value: function() {
				var e = this.props.filter;
				return this.memoizedObservable && this.memoizedObservable.filter === e || (this.memoizedObservable = {
					filter: e,
					value: (0, m.getTrendsObservable)(e)
				}), this.memoizedObservable.value
			}
		}, {
			key: "render",
			value: function() {
				return c.default.createElement(h.Observe, {
					observable: this.getSelectedTrendsObservable()
				}, function(e) {
					var t = e || {},
						i = t.trends;
					return t.error ? c.default.createElement("div", {
						className: "padding-a--12 txt-size-variable--14 txt-center"
					}, (0, f.default)("Trends cannot be loaded at the moment, please try again later.")) : i && i.length ? i.map(function(e) {
						return c.default.createElement(u.TrendContainer, {
							trend: e,
							key: e.name
						})
					}) : i && !i.length ? c.default.createElement("div", {
						className: "padding-a--12 txt-size-variable--14 txt-center"
					}, (0, f.default)("Trends are not available for this selection.")) : c.default.createElement(d.default, null)
				})
			}
		}]), t
	}(l.Component)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.Trend = t.TrendContainer = void 0;
	var n = y(i(9)),
		s = y(i(26)),
		r = y(i(14)),
		a = y(i(16)),
		o = y(i(27)),
		l = y(i(28)),
		c = y(i(13)),
		u = i(4),
		d = y(u),
		h = (y(i(8)), y(i(17))),
		m = y(i(103)),
		f = i(206),
		p = y(i(2522)),
		g = i(530),
		v = i(33),
		T = y(i(748)),
		w = i(168),
		b = i(37);

	function y(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var _ = ["moments"],
		C = {
			page: "column",
			section: "trends"
		},
		S = (t.TrendContainer = function(e) {
			function t() {
				return (0, r.default)(this, t), (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).apply(this, arguments))
			}
			return (0, l.default)(t, e), (0, a.default)(t, [{
				key: "handleScribe",
				value: function(e) {
					(0, v.generic)((0, n.default)({}, C, {
						action: "click",
						element: e
					}))
				}
			}, {
				key: "renderTrend",
				value: function() {
					var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
						t = e.cardData,
						i = e.cardContext;
					return d.default.createElement(D, {
						trend: this.props.trend,
						onScribe: this.handleScribe,
						card: t && (0, w.isAllowedCardForTrendsColumn)(t.name) ? d.default.createElement(T.default, {
							cardData: t,
							cardContext: i,
							isPossiblySensitive: !1,
							scribeNamespace: C
						}) : null
					})
				}
			}, {
				key: "render",
				value: function() {
					var e = this;
					return d.default.createElement(f.Observe, {
						observable: b.horizonWebCardsEnabled$
					}, function(t) {
						if (!t) return null;
						if (t.some(w.isAllowedCardForTrendsColumn)) {
							var i = e.props.trend,
								n = i.target.pinned_tweets_str,
								s = i.badges || [];
							if (_.indexOf(s[0]) > -1 && n && n.length > 0) return d.default.createElement(S, {
								tweetId: n[0]
							}, function(t) {
								var i = t.cardData,
									n = t.cardContext;
								return e.renderTrend({
									cardData: i,
									cardContext: n
								})
							})
						}
						return e.renderTrend()
					})
				}
			}]), t
		}(d.default.Component), function(e) {
			function t() {
				var e, i, n, a;
				(0, r.default)(this, t);
				for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
				return i = n = (0, o.default)(this, (e = t.__proto__ || (0, s.default)(t)).call.apply(e, [this].concat(c))), n.state = {
					cardData: null,
					cardContext: null
				}, a = i, (0, o.default)(n, a)
			}
			return (0, l.default)(t, e), (0, a.default)(t, [{
				key: "fetchCard",
				value: function() {
					var e = this;
					this.cancelInflightRequest && this.cancelInflightRequest();
					var t = this.props.tweetId,
						i = !1;
					(0, g.fetchHorizonWebCardDataFromGraphQL)(t).then(function(n) {
						if (!i && (n.errors || n.data || h.default.metric("trends:card:graphql:missing-data"), !(n.errors && n.errors.length > 0) && n.data)) {
							var s = n.data.tweet_by_rest_id,
								r = (0, c.default)(s, "legacy.card");
							if (r) {
								var a = (0, c.default)(s, "core.user.legacy.screen_name"),
									o = (0, w.convertCardFromGraphQL)(r);
								e.setState({
									cardData: o,
									cardContext: {
										tweetId: t,
										tweetPermalink: "https://twitter.com/" + a + "/status/" + t,
										tweetUserId: (0, c.default)(s, "core.user.rest_id")
									}
								})
							}
						}
					}), this.cancelInflightRequest = function() {
						i = !0
					}
				}
			}, {
				key: "componentDidMount",
				value: function() {
					this.fetchCard()
				}
			}, {
				key: "componentDidUpdate",
				value: function(e) {
					this.props.tweetId !== e.tweetId && this.fetchCard()
				}
			}, {
				key: "componentWillUnmount",
				value: function() {
					this.cancelInflightRequest()
				}
			}, {
				key: "render",
				value: function() {
					return this.props.children(this.state)
				}
			}]), t
		}(d.default.Component)),
		D = t.Trend = function(e) {
			function t() {
				return (0, r.default)(this, t), (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).apply(this, arguments))
			}
			return (0, l.default)(t, e), (0, a.default)(t, [{
				key: "renderTrendRankAndMovement",
				value: function() {
					var e = this.props.trend,
						t = void 0 !== e.movement;
					return d.default.createElement(u.Fragment, null, d.default.createElement("div", {
						className: (0, m.default)("txt-bold txt-size-variable--14 txt-right width-p--9 flex-shrink--0", !t && "padding-r--20")
					}, e.rank), t && d.default.createElement("div", {
						className: "txt-size-variable--12 txt-center width-p--14 flex-shrink--0"
					}, d.default.createElement(p.default, {
						movement: e.movement,
						interval: e.interval,
						positionChanged: e.positionChanged
					})))
				}
			}, {
				key: "render",
				value: function() {
					var e = this.props,
						t = e.trend,
						i = e.card,
						n = t.name,
						s = "https://twitter.com/search?q=" + t.query;
					return d.default.createElement("div", {
						"data-testid": "trend",
						className: "padding-a--12 border-divider flex"
					}, this.renderTrendRankAndMovement(), d.default.createElement("div", {
						className: "txt-size-variable--14 txt-ellipsis flex-auto"
					}, d.default.createElement("a", {
						"data-testid": "trendLink",
						href: s,
						rel: "hashtag",
						target: "_blank",
						className: "link-complex",
						onClick: this.props.onScribe.bind(this, "trend")
					}, d.default.createElement("span", {
						className: "link-complex-target txt-ellipsis"
					}, n)), i || (t.metaDescription ? d.default.createElement("span", {
						"data-testid": "trendDescription",
						className: "dark-only--color-twitter-gray txt-size-variable--12 block padding-t--3 wrap",
						dangerouslySetInnerHTML: {
							__html: h.default.transform(t.metaDescription)
						},
						onClick: this.props.onScribe.bind(this, "description")
					}) : null)))
				}
			}]), t
		}(d.default.Component)
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.default = function(e) {
		var t = e.movement,
			i = e.interval,
			l = e.positionChanged,
			c = i ? function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
					t = Math.round(e / 60 / 1e3);
				if (t <= 1) return (0, r.default)("minute");
				if (t > 60) return (0, r.default)("hour");
				return a.default.duration(e).humanize()
			}(i) : "",
			d = l ? function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
				if (1 === e) return (0, r.default)("1 position");
				return (0, r.default)("{{position}} positions", {
					position: e
				})
			}(l) : "";
		if (null === t || 0 === t) return u(null, "-", i ? (0, r.default)("No change in the last {{interval}}", {
			interval: c
		}) : (0, r.default)("Waiting for trend movement data"));
		if (t > 0) return u("color-twitter-green", s.default.createElement(n.Fragment, null, s.default.createElement(o.default, {
			"data-testid": "trendMovementUp",
			name: "pointer-u"
		}), t), (0, r.default)("Up {{position}} in the last {{interval}}", {
			position: d,
			interval: c
		}));
		return u("color-twitter-red", s.default.createElement(n.Fragment, null, s.default.createElement(o.default, {
			"data-testid": "trendMovementDown",
			name: "pointer-d"
		}), -t), (0, r.default)("Down {{position}} in the last {{interval}}", {
			position: d,
			interval: c
		}))
	};
	var n = i(4),
		s = c(n),
		r = (c(i(8)), c(i(2))),
		a = c(i(100)),
		o = c(i(171)),
		l = c(i(2523));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function u(e, t, i) {
		return s.default.createElement(l.default.Label, {
			"data-testid": "trendMovementTooltip",
			position: "top",
			target: s.default.createElement("span", {
				"data-testid": "trendMovement",
				className: "is-default " + e
			}, t)
		}, s.default.createElement("span", {
			className: "txt-size-variable--12"
		}, i))
	}
}, , , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = c(i(9)),
		s = c(i(65));
	t.getTrendsObservable = function(e) {
		var t = void 0;
		t = e.woeid ? [{
			woeid: e.woeid
		}] : [{}, TD.storage.accountController.getAccountFromId(e.accountId)];
		return l.tweetdeckBeta$.switchMap(function(e) {
			var i = e ? u : d;
			t[0].max_trends = e ? 30 : 20;
			var l = r.default.Observable.timer(0, i).switchMap(function() {
				return a.default.fromDeferred(o.getTrends.apply(void 0, (0, s.default)(t))).map(function(e) {
					return {
						trends: e,
						error: null
					}
				}).catch(function(e) {
					return r.default.Observable.of({
						error: e
					})
				})
			}).scan(function(e, t) {
				return e && t.error ? (0, n.default)({}, e, {
					error: t.error
				}) : (0, n.default)({}, t, {
					error: null
				})
			});
			return e && (l = l.scan(function(e, t) {
				var i = t.trends,
					s = t.error;
				if (s) return e;
				var r = (new Date).getTime(),
					a = r - h;
				e.previousPositions = e.previousPositions.filter(function(e) {
					var t = e.time;
					return t >= a
				});
				var o = e.previousPositions[0],
					l = [];
				e.trends = i.map(function(e) {
					var t = e.name,
						i = o ? o.positions[t] : null,
						s = e.rank;
					l[t] = s;
					var a = null != i ? i - e.rank : null,
						c = o ? r - o.time : null,
						u = "number" == typeof i ? Math.abs(i - s) : null;
					return (0, n.default)({}, e, {
						movement: a,
						interval: c,
						positionChanged: u
					})
				});
				var c = {
					time: r,
					positions: l
				};
				return e.previousPositions.push(c), e
			}, {
				trends: null,
				previousPositions: [],
				error: null
			}).map(function(e) {
				var t = e.trends,
					i = e.error;
				return {
					trends: t,
					error: i
				}
			})), l.startWith({
				trends: null,
				error: null
			})
		})
	};
	var r = c(i(36)),
		a = c(i(73)),
		o = i(530),
		l = i(37);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = 6e4,
		d = 5 * u,
		h = 36e5
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.WhatsHappeningEntities = void 0;
	var n = v(i(111)),
		s = v(i(26)),
		r = v(i(14)),
		a = v(i(16)),
		o = v(i(27)),
		l = v(i(28)),
		c = v(i(122)),
		u = i(4),
		d = v(u),
		h = (v(i(8)), v(i(879))),
		m = v(i(2527)),
		f = i(207),
		p = i(206),
		g = i(2530);

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function T(e) {
		var t = e.value;
		return "semanticCoreEntityValue" in t ? t.semanticCoreEntityValue.displayName : "hashtagEntityValue" in t ? "#" + t.hashtagEntityValue.originalText : "nerEntityValue" in t ? t.nerEntityValue.originalText : "textEntityValue" in t ? t.textEntityValue.originalText : ""
	}

	function w(e) {
		var t, i = e.value;
		if ("semanticCoreEntityValue" in i) {
			var n = i.semanticCoreEntityValue.normalizedText;
			if (n) return n;
			var s = i.semanticCoreEntityValue.displayName;
			return s ? ("#" === (t = s)[0] ? t.substring(1) : t).toLowerCase().replace(/['\s.,]/g, "") : null
		}
		return "hashtagEntityValue" in i ? i.hashtagEntityValue.normalizedText : "nerEntityValue" in i ? i.nerEntityValue.normalizedText : "textEntityValue" in i ? i.textEntityValue.normalizedText : ""
	}

	function b(e) {
		var t = e.value;
		return "semanticCoreEntityValue" in t || "hashtagEntityValue" in t
	}(t.WhatsHappeningEntities = function(e) {
		function t() {
			return (0, r.default)(this, t), (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).apply(this, arguments))
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "getTopEntitiesObservable",
			value: function() {
				if (!this.topEntitiesObservable) {
					var e = {
						timeRange: (0, f.hoursAgoInMilliseconds)(4),
						numEntities: 50
					};
					this.topEntitiesObservable = (0, g.getTopEntitiesObservable)(e)
				}
				return this.topEntitiesObservable
			}
		}, {
			key: "orderBy",
			value: function(e, t) {
				return "Top" === e ? t.map(function(e) {
					return e[1].score
				}).sort(function(e, t) {
					return t - e
				}).map(function(e) {
					return t.find(function(t) {
						return t[1].score === e
					})
				}) : "Latest" === e ? t.map(function(e) {
					return e[1].event.timeRange.startTime.milliseconds
				}).sort(function(e, t) {
					return t - e
				}).map(function(e) {
					return t.find(function(t) {
						return t[1].event.timeRange.startTime.milliseconds === e
					})
				}) : t
			}
		}, {
			key: "render",
			value: function() {
				var e = this;
				return d.default.createElement(p.Observe, {
					observable: this.getTopEntitiesObservable()
				}, function(t) {
					var i = (t || {}).data,
						s = e.props,
						r = s.columnKey,
						a = s.order;
					if (!i) return d.default.createElement(h.default, null);
					var o = e.orderBy(a, i);
					return (0, c.default)(o, function(e) {
						var t = (0, n.default)(e, 2);
						t[0];
						return w(t[1].canonicalEntity)
					}).map(function(e) {
						var t, i, s, a, o, l, u, h, f, p, g;
						return t = e, i = (0, n.default)(t, 2), s = i[0], a = i[1], o = s.domainId, l = s.entityId, u = s.timeRange, h = a.canonicalEntity, f = a.entities, p = h.metadata.frequency, g = o + "." + l, (e = {
							title: T(h),
							qualifiedId: g,
							frequency: parseInt(p, 10),
							timeRange: u,
							entities: function(e) {
								return (0, c.default)(e.filter(b), function(e) {
									return w(e)
								}).map(function(e) {
									var t, i, n = "hashtagEntityValue" in e.value,
										s = n ? "hashtag" : "entity",
										r = T(e);
									return !(!r || 0 === r.length) && (n ? {
										type: s,
										title: r
									} : {
										type: s,
										title: r,
										qualifiedId: (t = e, i = t.value, (i = i.semanticCoreEntityValue.value).domainId + "." + i.entityId)
									})
								}).filter(Boolean)
							}(f)
						}).title || (e.title = ""), d.default.createElement(m.default, {
							key: e.qualifiedId,
							entity: e,
							columnKey: r
						})
					})
				})
			}
		}]), t
	}(u.Component)).defaultProps = {
		order: "Top"
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = T(i(9)),
		s = T(i(26)),
		r = T(i(14)),
		a = T(i(16)),
		o = T(i(27)),
		l = T(i(28)),
		c = i(4),
		u = T(c),
		d = (T(i(8)), T(i(2))),
		h = i(17),
		m = T(i(210)),
		f = T(i(2528)),
		p = i(74),
		g = i(33),
		v = T(i(2529));

	function T(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var w = function(e) {
		function t() {
			return (0, r.default)(this, t), (0, o.default)(this, (t.__proto__ || (0, s.default)(t)).apply(this, arguments))
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "addNewColumn",
			value: function(e) {
				var t = this.props.columnKey,
					i = TD.controller.columnManager.makeColumnFor((0, n.default)({
						service: "twitter",
						accountKey: (0, p.getDefaultAccount)().accountKey
					}, e));
				TD.controller.columnManager.addColumnToUIAfterColumnKey(i, t)
			}
		}, {
			key: "addEventColumn",
			value: function(e) {
				var t = e.title,
					i = e.qualifiedId;
				this.addNewColumn({
					type: "event",
					metadata: {
						id: i,
						title: t
					}
				})
			}
		}, {
			key: "handleEntityClick",
			value: function(e) {
				this.addEventColumn(e), this.scribeElement("entity")
			}
		}, {
			key: "handlePillHashtagClick",
			value: function(e) {
				this.addNewColumn({
					type: "search",
					metaString: e
				}), this.scribeElement("hashtag")
			}
		}, {
			key: "handleFindOutMoreClick",
			value: function(e) {
				this.addEventColumn(e), this.scribeElement("find_out_more")
			}
		}, {
			key: "scribeElement",
			value: function(e) {
				(0, g.generic)({
					page: "column",
					section: "whats_happening",
					action: "click",
					element: e
				})
			}
		}, {
			key: "getFormattedTime",
			value: function(e) {
				var t = new Date(Number(e.from));
				return (0, d.default)("Started {{prettyDate}} ago", {
					prettyDate: (0, h.prettyDate)(t)
				})
			}
		}, {
			key: "renderEventTitle",
			value: function(e, t) {
				return e.length % 2 == 0 ? (0, d.default)("People are talking about {{{title}}}", {
					title: e
				}) : (0, d.default)("{{count}} Tweets about {{{title}}}", {
					count: (0, h.prettyNumber)(t),
					title: e
				})
			}
		}, {
			key: "render",
			value: function() {
				var e = this,
					t = this.props.entity,
					i = t.title,
					n = t.qualifiedId,
					s = t.frequency,
					r = t.timeRange,
					a = t.entities;
				return u.default.createElement(m.default, null, function(t) {
					return u.default.createElement(c.Fragment, null, u.default.createElement("div", {
						"data-testid": "entity",
						className: "padding-a--10 border-divider"
					}, u.default.createElement("div", {
						"data-testid": "timestamp",
						className: "color-twitter-dark-gray padding-b--2 txt-size-variable--12"
					}, e.getFormattedTime(r)), u.default.createElement("div", {
						"data-testid": "title",
						className: "txt-size-variable--14 txt-bold"
					}, e.renderEventTitle(i, s)), u.default.createElement("div", {
						className: "padding-v--3"
					}, a.map(function(i) {
						var n = i.type,
							s = i.title,
							r = i.qualifiedId,
							a = "entity" === n ? e.handleEntityClick.bind(e, {
								title: s,
								qualifiedId: r
							}) : e.handlePillHashtagClick.bind(e, s),
							o = "entity" === n ? r : s;
						return u.default.createElement(f.default, {
							key: o,
							"data-testid": "pill",
							appearance: "light" === t ? "tertiary" : null,
							size: "xsmall",
							className: "pill margin-r--6 margin-t--6 padding-h--10 txt-size-variable--12 txt-ellipsis",
							onClick: a
						}, s)
					}))), u.default.createElement("div", {
						className: "padding-a--10 border-divider txt-size-variable--14"
					}, u.default.createElement("a", {
						href: "#",
						"data-testid": "findOutMore",
						onClick: e.handleFindOutMoreClick.bind(e, {
							title: i,
							qualifiedId: n
						})
					}, (0, d.default)("Find out more"))), u.default.createElement(v.default, {
						theme: t
					}))
				})
			}
		}]), t
	}(u.default.Component);
	t.default = w
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = r(i(4)),
		s = r(i(103));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = function(e) {
		var t = e.theme;
		return n.default.createElement("div", {
			className: (0, s.default)("height--6 border-divider", "light" === t ? "bg-color-twitter-lightest-gray" : "bg-color-twitter-midnight-darkest-gray")
		})
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getTopEntitiesObservable = function(e) {
		return n.default.Observable.timer(0, o).switchMap(function() {
			var t = Date.now(),
				i = e.timeRange,
				a = e.numEntities;
			return s.default.fromDeferred((0, r.getTopEntities)({
				toTime: t,
				fromTime: t - i,
				numEntities: a
			})).map(function(e) {
				return {
					data: e,
					error: null
				}
			}).catch(function(e) {
				return n.default.Observable.of({
					error: e
				})
			})
		}).scan(function(e, t) {
			return e && t.error ? {
				data: e.data,
				error: t.error
			} : {
				data: t.data,
				error: null
			}
		})
	};
	var n = a(i(36)),
		s = a(i(73)),
		r = i(2531);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = 3e5
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getTopEntities = function(e) {
		var t = e.toTime,
			i = e.fromTime,
			n = e.numEntities,
			s = o + "/strato/column/None/fromTime=" + i + ",toTime=" + t + ",numEntities=" + n + "/eventdetection/hydratedTopClusters",
			a = TD.storage.store.getTwitterLoginAccount(),
			c = {
				account: a,
				handleSuccess: !0,
				handleError: !0,
				method: "GET",
				processor: l
			},
			u = TD.net.ajax.request(s, c);
		return u.addCallbacks(function(e) {
			return r.default.processSuccessResponse(s, c, e, {
				oauth: {
					account: a
				}
			}).data
		}, function(e) {
			return r.default.processErrorResponse(s, c, e, a)
		}), u
	};
	var n, s = i(284),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = TD.config,
		o = a.twitter_api_base + "/" + a.twitter_api_version;

	function l(e) {
		return e
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = m(i(26)),
		s = m(i(14)),
		r = m(i(16)),
		a = m(i(27)),
		o = m(i(28)),
		l = m(i(4)),
		c = (m(i(8)), m(i(871))),
		u = m(i(873)),
		d = i(74),
		h = m(i(2));

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = function(e) {
		function t() {
			return (0, s.default)(this, t), (0, a.default)(this, (t.__proto__ || (0, n.default)(t)).apply(this, arguments))
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "getLocationFilter",
			value: function(e, t) {
				var i = e.locationByWoeid,
					n = e.countryWoeidByCityWoeid,
					s = i[t],
					r = (0, h.default)("Trends for") + " " + s.name;
				s.isTown && (r += ", " + i[n[t]].name);
				return [{
					name: "trends",
					icon: "geo",
					text: r
				}]
			}
		}, {
			key: "render",
			value: function() {
				var e = this,
					t = this.props,
					i = t.filter,
					n = t.onClick;
				return l.default.createElement(u.default, null, function(t) {
					return l.default.createElement(c.default, {
						title: "",
						filters: i.accountId ? [{
							name: "trends",
							icon: "user",
							text: (0, h.default)("Trends for") + " @" + (0, d.getAccountFromId)(i.accountId).screenName
						}] : t && e.getLocationFilter(t, i.woeid),
						onClick: n
					})
				})
			}
		}]), t
	}(l.default.Component);
	t.default = f
}, function(e, t, i) {
	"use strict";
	var n = o(i(121)),
		s = o(i(48)),
		r = o(i(46)),
		a = o(i(0));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = i(880);
	e.exports = function() {
		this.attributes({
			defaultDragScrollConfig: {
				regionSize: 20,
				maxSpeed: 400,
				throttlePeriod: 200,
				horizontal: !0,
				vertical: !1,
				deltaFn: function(e, t, i, n) {
					return e
				}
			}
		}), this.before("initialize", function() {
			this.animateScrollLeft = this.animateScroll.bind(this, "scrollLeft"), this.animateScrollTop = this.animateScroll.bind(this, "scrollTop"), this.dragScrollId = (0, r.default)("drag-scroll")
		}), this.handleDrag = function(e, t, i, n) {
			if (this.justDropped) this.justDropped = !1;
			else {
				var s = (0, a.default)(n.el),
					r = this.mousePositionRelativeToElement(s, i.originalEvent),
					o = {};
				o.left = r.x / s.width() * 100, o.right = 100 - o.left, o.top = r.y / s.height() * 100, o.bottom = 100 - o.top;
				var l = {};
				l.left = -this.percToDelta(o.left, e), l.right = this.percToDelta(o.right, e), l.up = -this.percToDelta(o.top, e), l.down = this.percToDelta(o.bottom, e), !1 !== e.horizontal && (o.left < e.regionSize ? this.animateScrollLeft(s, "left", l.left, e, t.left) : o.right < e.regionSize && this.animateScrollLeft(s, "right", l.right, e, t.right)), !1 !== e.vertical && (o.top < e.regionSize ? this.animateScrollTop(s, "up", l.up, e, t.up) : o.bottom < e.regionSize && this.animateScrollTop(s, "down", l.down, e, t.down))
			}
		}, this.setupDragScroll = function(e, t) {
			t = (0, s.default)(t || {}, this.attr.defaultDragScrollConfig);
			var i = {};
			i[e] = (0, n.default)(this.handleDrag.bind(this, t, {
				up: {},
				down: {},
				left: {},
				right: {}
			}), t.throttlePeriod), this.on("dragover", i), this.on("drop", function() {
				this.justDropped = !0
			})
		}, this.percToDelta = function(e, t) {
			var i = e / t.regionSize;
			return t.maxSpeed - t.maxSpeed * i
		}, this.animateScroll = function(e, t, i, n, s, r) {
			var o = (0, a.default)(t);
			if (!o[e]) throw new Error("$elem has no method " + e);
			r.startTime || (r.startTime = Date.now()), clearTimeout(r.timeout), r.timeout = setTimeout(function() {
				delete r.startTime
			}, 1.1 * s.throttlePeriod);
			var c = Date.now() - r.startTime,
				u = o[e](),
				d = s.deltaFn.call(this, n, i, u, c);
			l.ease({
				name: this.dragScrollId,
				from: u,
				delta: d,
				time: s.throttlePeriod,
				applicator: function(t) {
					o[e](t)
				}
			})
		}, this.getMousePosition = function(e) {
			var t = 0,
				i = 0;
			return e || (e = window.event), e.pageX || e.pageY ? (t = e.pageX, i = e.pageY) : (e.clientX || e.clientY) && (t = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft, i = e.clientY + document.body.scrollTop + document.documentElement.scrollTop), {
				x: t,
				y: i
			}
		}, this.mousePositionRelativeToElement = function(e, t) {
			var i = (0, a.default)(e),
				n = i.offset(),
				s = this.getMousePosition(t);
			return s.x -= n.left + parseInt(i.css("paddingLeft"), 10) + parseInt(i.css("borderLeftWidth"), 10), s.y -= n.top + parseInt(i.css("paddingTop"), 10) + parseInt(i.css("borderTopWidth"), 10), s
		}
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.columnStates$ = void 0;
	var n = a(i(0)),
		s = a(i(36)),
		r = a(i(21));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.columnStates$ = s.default.Observable.fromEvent((0, n.default)(document), "dataColumnFeedUpdated").map(function(e) {
		return r.default.getColumnFromElement((0, n.default)(e.target))
	}).map(function(e) {
		return {
			columnKey: e.model.getKey(),
			state: {
				matching: e.getSearchFilter().content.matching || null
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(253)),
		s = u(i(276)),
		r = u(i(48)),
		a = u(i(85)),
		o = u(i(2)),
		l = u(i(0)),
		c = u(i(21));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var d, h, m, f, p, g, v, T, w, b, y, _, C, S, D = window.TD || {};
	D.ui = D.ui || {}, window.TD = D, D.ui.columns = (m = {}, f = {}, p = {}, g = ".js-column-header", v = ".js-more-tweets-btn", T = {
		mouseIsDownOnScrollBar: !1
	}, w = function(e) {
		return S.getColumnElementByKey(e).find(g)
	}, b = function(e) {
		if (!(0, l.default)(e.target).hasClass("column-title-edit-box")) {
			var t = (0, l.default)(e.currentTarget);
			t.closest(".js-more-tweets-btn").length && D.util.metric("column:ui:more-tweets:click");
			var i = t.parents(".js-column").data("column"),
				n = D.controller.columnManager.get(i);
			n instanceof D.vo.Column && D.ui.columns.setColumnToTop(n)
		}
	}, y = function() {
		var e = (0, l.default)(this);
		return e.offset().top + this.offsetHeight > 0 && e.offset().top < d.innerHeight()
	}, _ = function() {
		var e = D.ui.updates.findParentArticle((0, l.default)(this)),
			t = D.controller.columnManager.get(e.column),
			i = t.updateIndex[e.statusKey];
		e.element.replaceWith(i.render({
			isTemporary: t.temporary
		}))
	}, C = (0, a.default)(function(e) {
		e.find(".is-minimalist").filter(y).each(_)
	}, 150), S = {
		COLUMN_GLOW_DURATION: 500,
		init: function() {
			d = (0, l.default)(".js-app-columns"), h = (0, l.default)("#container"), d.on("click", [g, v].join(", "), b), d.on("wheel", ".js-more-tweets-btn-container", function(e) {
				e.preventDefault()
			}), (0, l.default)(document).on("mousedown", ".js-column-scroller", function(e) {
				var t = (0, l.default)(e.target);
				T.mouseIsDownOnScrollBar = t.is(".js-column-scroller"), T.mouseIsDownOnScrollBar && (0, l.default)(document).one("mouseup", function(e) {
					T.mouseIsDownOnScrollBar = !1, T.mouseButtonWasDown = !0, t.trigger("scroll")
				})
			})
		},
		renderColumn: function(e) {
			var t = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).detached,
				i = void 0 !== t && t,
				n = void 0;
			return (0, l.default)(document).trigger("uiColumnRender", {
				column: e,
				detached: i,
				getCreatedEl: function(e) {
					n = e
				}
			}), n
		},
		setupColumnScrollListeners: function(e) {
			var t = e.model.getKey(),
				i = (0, l.default)('.js-column[data-column="' + t + '"]'),
				n = (0, l.default)('.js-chirp-container[data-column="' + t + '"]').closest(".js-column-scroller"),
				s = n.scrollTop(),
				r = function(e, t, i) {
					var n, s, r = 0,
						a = 0;
					return function(o) {
						var l = o.timeStamp || (new Date).getTime(),
							c = i.scrollTop();
						f[e] = c;
						var u = "stationary";
						c > a ? u = "down" : c < a && (u = "up"), a = c, C(i), l - r > 200 && (r = l, s = o.currentTarget.scrollHeight, n = i.height());
						var d = c,
							h = s - n - c,
							m = T.mouseButtonWasDown;
						T.mouseButtonWasDown = !1, 0 !== c || T.mouseIsDownOnScrollBar ? t.isTrackingRealtime = !1 : (D.ui.columns.unlockColumnFromElement(e), t.isTrackingRealtime = !0, t.ui.moreTweetsState.trackingRealtime()), "up" !== u && h < 250 && (D.util.metric("column:ui:scroll:infinite:impression"), T.mouseIsDownOnScrollBar && D.util.metric("column:ui:scroll:infinite:with-mouse"), t.doInfiniteScroll({
							fromScrollbarDrag: T.mouseIsDownOnScrollBar
						}), r = 0), T.mouseIsDownOnScrollBar ? d < 250 ? "down" !== u && t.ui.moreTweetsState.mouseScrollToTop() : t.ui.moreTweetsState.mouseScrollAwayFromTop() : "down" !== u && d < 250 && (D.util.metric("column:ui:scroll:upward:impression"), m && D.util.metric("column:ui:scroll:upward:with-mouse"), t.ui.moreTweetsState.upwardScroll(), t.doUpwardScroll(), r = 0)
					}
				}(t, e, n),
				a = function(e, t) {
					var i = t.closest(".scroll-h"),
						n = {
							direction: "",
							time: 0
						};
					return function(s) {
						var r, a = Math.abs(s.originalEvent.wheelDeltaX),
							o = Math.abs(s.originalEvent.wheelDeltaY),
							c = (0, l.default)(s.currentTarget);
						if (s.originalEvent.wheelDeltaY || s.originalEvent.wheelDeltaX) {
							s.preventDefault();
							var u = "";
							a > o ? u = "h" : a < o && (u = "v"), u !== n.direction && Date.now() < n.time + 100 || (n.direction = u, n.time = Date.now(), "v" === u ? c.is(".js-column-scroller") ? (r = f[e] - s.originalEvent.wheelDeltaY, t.scrollTop(r), f[e] = t.scrollTop()) : c.scrollTop(c.scrollTop() - s.originalEvent.wheelDeltaY) : "h" === u && i.scrollLeft(h.scrollLeft() - s.originalEvent.wheelDeltaX))
						}
					}
				}(t, n);
			D.util.isTouchDevice() && D.decider.get("touchdeck_tweet_controls_v3") && n.addClass("is-touch-tweet-container"), f[t] = s, m[t] = n, n.scroll(r), i.on("mousewheel onmousewheel", ".scroll-v", a), i.on("mouseover", g, function() {
				var e = f[t];
				(0, l.default)(this).toggleClass("is-actionable", e > 0)
			}), D.util.isTouchDevice() && window.navigator.standalone && i.on("touchmove", ".scroll-v", function(e) {
				e.stopPropagation()
			})
		},
		refreshTitle: function(e, t) {
			var i, n, s, r = c.default.getColumnIconClassByColumn(e),
				a = e.model.getKey(),
				l = c.default.isSearchColumn(e),
				u = t instanceof D.services.TwitterConversation,
				d = c.default.getColumnHeaderTitleHTML(e),
				h = S.getColumnElementByKey(a),
				m = c.default.isMessageColumn(e);
			n = e.temporary && c.default.getColumnType(e) === c.default.columnMetaTypes.SEARCH ? (0, o.default)("results") : c.default.getColumnTitleHTML(e), m && (s = e.unreadMessageCount()), i = D.ui.template.render("column/column_header", {
				columntitle: d,
				columniconclass: r,
				isTemporary: e.temporary,
				isSearch: c.default.isSearchColumn(e),
				withEditableTitle: l,
				withImageAttribution: !0,
				withMarkAllRead: m && !e.temporary,
				withDMComposeButton: m && !e.temporary,
				unreadCount: "0" === s ? null : s
			}), w(e.model.getKey()).replaceWith(i), i = D.ui.template.render("column/column_header_detail", {
				headerClass: "js-detail-header",
				headerAction: "resetToTopColumn",
				headerLinkClass: "js-column-back",
				getConversationTitleInformation: u && t.getConversationTitleInformation(),
				participants: t && t.participants,
				withConversationMenu: t instanceof D.services.TwitterConversation,
				columntitle: n,
				conversationId: u && t.conversationId,
				accountKey: u && t.account.getKey()
			}), h.find(".js-detail-header").replaceWith(i), h.trigger("uiColumnTitleRefreshed", {
				columnKey: a
			})
		},
		setColumnToTop: function(e) {
			var t = e.model.getKey(),
				i = m[t],
				n = i.find(".js-chirp-container"),
				s = w(t),
				r = i.scrollTop(),
				a = Math.min(100 + r / 5, 400);
			return s.removeClass("is-actionable"), e.resetUnreadIndicators(), 0 === r ? o() : new D.core.defer.DeferredList([S.transitionTranslateY(n, r, a), S.transitionOpacity(i, {
				from: 1,
				to: 0,
				duration: a
			})]).addCallback(o).addCallback(S.transitionOpacity.bind(S, i, {
				from: 0,
				to: 1,
				duration: 250
			}));

			function o() {
				return e.doUpwardScroll().addBoth(function() {
					n.css({
						transform: ""
					}), i.scrollTop(0), e.isTrackingRealtime = !0
				})
			}
		},
		transitionTranslateY: function(e, t, i) {
			var n, s = new D.core.defer.Deferred;
			return window.requestAnimationFrame(function r(a) {
				n || (n = a);
				var o = a - n;
				var l = Math.min(1, o / i);
				var c = ~~(l * t);
				e.css({
					transform: "translateY(" + c + "px)"
				});
				l < 1 ? window.requestAnimationFrame(r) : s.callback()
			}), s
		},
		transitionOpacity: function(e, t) {
			var i;
			t = (0, r.default)({}, t, {
				duration: 250,
				from: 0,
				to: 1
			});
			var n = new D.core.defer.Deferred;
			return window.requestAnimationFrame(function s(r) {
				i || (i = r);
				var a = r - i;
				var o = Math.min(1, a / t.duration);
				e.css({
					opacity: t.from + o * (t.to - t.from)
				});
				o < 1 ? window.requestAnimationFrame(s) : (1 === t.to && e.css({
					opacity: ""
				}), n.callback())
			}), n
		},
		isScrolledToTop: function(e) {
			return !m[e] || 0 === f[e]
		},
		alterColumnContents: function(e, t, i, n) {
			if (n = n || {}, t && 0 !== t.length) {
				var s, r, a = p[e];
				if ("boolean" == typeof n.willBreakScrollPosition) s = n.willBreakScrollPosition;
				else {
					var o = a ? a.position().top : 0;
					s = t.position().top < o
				}
				s && (r = this.cacheColumnScrollPosition(e));
				var l = i(t);
				return s && r(), l
			}
		},
		cacheColumnScrollPosition: function(e) {
			var t = m[e];
			if (!t) return function() {};
			var i = f[e],
				n = t[0].scrollHeight - i;
			return function() {
				var i = t[0].scrollHeight - n;
				t.scrollTop(i), f[e] = i, 0 === i && C(t)
			}
		},
		lockColumnToElement: function(e, t) {
			p[e] = t
		},
		unlockColumnFromElement: function(e) {
			delete p[e]
		},
		columnIsLockedToElement: function(e) {
			return !!p[e]
		},
		addColumnsToView: function(e) {
			var t = this;
			e.forEach(function(e) {
				t.renderColumn(e)
			}), (0, l.default)(".js-chirp-container").show()
		},
		removeColumn: function(e) {
			var t = S.getColumnElementByKey(e);
			t.trigger("uiRemoveColumn"), t.remove(), delete f[e], delete m[e]
		},
		calculateScrollDuration: function(e, t, i) {
			i = i || 500;
			var n = 200 + e / 100 * (t = t || 20);
			return n = Math.min(n, i)
		},
		getLeftmostColumn: function() {
			var e = null;
			return d.children(".js-column").each(function() {
				e || ((0, l.default)(this).position().left < 10 && (0, l.default)(this).position().left >= 0 ? e = this : (0, l.default)(this).position().left > 10 && (e = (0, l.default)(this).prev()))
			}), (0, l.default)(e)
		},
		focusColumn: function(e, t) {
			(0, l.default)(".is-focused", d).removeClass("is-focused"), S.getColumnElementByKey(e).addClass("is-focused"), (0, s.default)(t) && (0, n.default)(function() {
				D.ui.columns.unfocusColumn(e)
			}, t)
		},
		unfocusColumn: function(e) {
			S.getColumnElementByKey(e).removeClass("is-focused")
		},
		setMovingColumn: function(e) {
			S.getColumnElementByKey(e).addClass("is-moving")
		},
		getColumnElementByKey: function(e) {
			return (0, l.default)('.js-column[data-column="' + e + '"]')
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(13)),
		s = o(i(121)),
		r = o(i(0)),
		a = o(i(21));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = i(5).component,
		c = i(231);
	e.exports = l(function() {
		this.attributes({
			id: "grid",
			focusId: null,
			chirpScrollOffset: 20,
			columnScrollOffset: 20,
			isSelectedClass: "is-selected-tweet",
			chirpSelector: ".js-stream-item",
			autoFocus: !0,
			pagingEasingFunction: "easeOutQuad",
			actionsMenuButtonSelector: '[rel="actionsMenu"]',
			columnStateDetailViewClass: "js-column-state-detail-view",
			columnStateSocialProofClass: "js-column-state-social-proof",
			columnSelector: ".js-app-columns .js-column"
		}), this.after("initialize", function() {
			this.selectedColumn = null, this.$selectedChirp = (0, r.default)(), this.columnIndex = null, this.chirpCenter = null, this.scrollDirection = this.attr.down, this.chirpOffsetTop = null, this.on(document, "uiKeyLeft", this.moveSelection("left")), this.on(document, "uiKeyUp", this.moveSelection("up")), this.on(document, "uiKeyRight", this.moveSelection("right")), this.on(document, "uiKeyDown", this.moveSelection("down")), this.on(document, "uiGridBack", this.handleBack), this.on(document, "uiGridClearSelection", this.handleClearSelection), this.on(document, "uiColumnFocus", this.handleColumnFocus), this.on(document, "uiGridPageDown", this.handlePagingFactory("down")), this.on(document, "uiGridPageUp", this.handlePagingFactory("up")), this.on(document, "uiGridHome", this.handleGridHome), this.on(document, "uiGridEnd", this.handleGridEnd), this.on(document, "uiKeyEnter", this.tweetActionFactory("viewDetails")), this.on(document, "uiGridReply", this.tweetActionFactory("reply")), this.on(document, "uiGridFavorite", this.tweetActionFactory("favorite")), this.on(document, "uiGridFavoriteFromAccounts", this.tweetActionFactory("favoriteFromAccounts")), this.on(document, "uiGridRetweet", this.tweetActionFactory("retweet")), this.on(document, "uiGridDirectMessage", this.tweetActionFactory("dm")), this.on(document, "uiGridProfile", this.tweetActionFactory("profile")), this.on(document, "uiGridCustomTimeline", this.tweetActionFactory("customTimeline")), this.on(document, "uiGridContextMenu", this.tweetActionFactory("actionsMenu")), this.on(document, "uiDetailViewActive", this.handleDetailViewActive), this.on(document, "uiShowSocialProof", this.handleDetailViewActive), this.on(document, "uiDetailViewClosed", this.handleDetailClosed), this.on(document, "uiSkipToReplies", this.handleSkipToReplies), this.on(document, "dataColumns", this.handleDataColumns), this.trigger("uiNeedsColumns")
		}), this.handleSkipToReplies = function(e, t) {
			var i = this.$selectedChirp.hasClass(this.attr.isSelectedClass);
			this.selectColumnByKey(t.columnKey), this.selectFirstChirpInSelectedColumn(), this.scrollDirection = "up", this.selectNextChirp({
				forceScroll: !0
			}), i || this.$selectedChirp.removeClass(this.attr.isSelectedClass)
		}, this.handleDataColumns = function(e, t) {
			t.columns && (this.columns = t.columns, this.columnIndex = this.columns.indexOf(this.selectedColumn), -1 === this.columnIndex && (this.selectedColumn = null, this.$selectedChirp = (0, r.default)(), this.offset = null))
		}, this.setSelectedColumn = function(e) {
			var t = this.columns.length;
			e < 0 ? e = 0 : e >= t && (e = t - 1), this.columns[e] !== this.selectedColumn && (clearTimeout(this.chirpCenterTimeout), this.chirpCenter = this.calculateChirpCenterRelativeToColumn(this.selectedColumn, this.$selectedChirp), this.chirpCenterTimeout = setTimeout(function() {
				this.chirpCenter = null
			}.bind(this), 1e3), this.selectedColumn = this.columns[e], this.columnIndex = e, null === this.chirpCenter ? this.selectFirstChirpInSelectedColumn() : this.selectClosestChirpToOffsetCenter(this.selectedColumn, this.chirpCenter, !0))
		}, this.selectClosestChirpToOffsetCenter = function(e, t, i) {
			var n = this.selectedColumn.model.getKey(),
				s = a.default.getColumnScrollContainerByKey(n),
				o = s.innerHeight(),
				l = s.find(this.attr.chirpSelector),
				c = (0, r.default)(),
				u = null,
				d = Number.MAX_VALUE;
			l.each(function() {
				var e = (0, r.default)(this),
					i = e.position().top,
					n = i + e.outerHeight();
				n >= 0 && i <= o && i <= t && n >= t && (c = (0, r.default)().add(e))
			}), 0 === c.length ? u = l.last() : 1 === c.length ? u = c : c.each(function(i, n) {
				var s = this.calculateChirpCenterRelativeToColumn(e, (0, r.default)(n)),
					a = Math.abs(t - s);
				d = Math.min(a, d), a === d && (u = (0, r.default)(n))
			}.bind(this)), this.setSelectedChirp(u, {
				doScrollToChirp: i
			})
		}, this.calculateChirpCenterRelativeToColumn = function(e, t) {
			if (0 === t.length || null !== this.chirpCenter) return this.chirpCenter;
			var i, n, s, r = e.model.getKey(),
				o = a.default.getColumnScrollContainerByKey(r).innerHeight();
			return i = t.position().top, n = t.outerHeight(), (s = i + n / 2) > o ? s = o : s < 0 && (s = 0), s
		}, this.selectAndScrollToFirstChirpInSelectedColumn = function() {
			this.selectFirstChirpInSelectedColumn(), this.scrollToChirp({
				direction: "up"
			})
		}, this.selectFirstChirpInSelectedColumn = function() {
			var e;
			if (this.isInDetailView()) this.$selectedChirp = this.selectedColumn.detailViewComponent.getMostInteresting$Chirp();
			else if (!this.isInDetailViewLevel2()) {
				e = this.selectedColumn.model.getKey();
				var t = a.default.getColumnElementByKey(e).find(this.attr.chirpSelector);
				this.$selectedChirp.removeClass(this.attr.isSelectedClass), this.$selectedChirp = (0, r.default)(), t.each(function(e, t) {
					var i = (0, r.default)(t);
					if (i.position().top + i.outerHeight() / 2 > 0) return this.$selectedChirp = i, !1
				}.bind(this)), 0 === this.$selectedChirp.length && (this.$selectedChirp = t.first())
			}
			this.$selectedChirp.addClass(this.attr.isSelectedClass)
		}, this.setSelectedChirp = function(e, t) {
			this.$selectedChirp.length > 0 && this.$selectedChirp.removeClass(this.attr.isSelectedClass), this.$selectedChirp = e, this.$selectedChirp.addClass(this.attr.isSelectedClass), t.doScrollToChirp && this.$selectedChirp.length > 0 && this.scrollToChirp({
				direction: this.scrollDirection,
				forceScroll: t.forceScroll
			})
		}, this.selectPrevChirp = function() {
			var e, t, i;
			this.chirpCenter = null, this.isInDetailView() ? (t = this.selectedColumn.detailViewComponent.$find(this.attr.chirpSelector), i = t.index(this.$selectedChirp), e = t.eq(Math.max(0, i - 1))) : e = this.$selectedChirp.prev(this.attr.chirpSelector), 0 === e.length ? this.selectAndScrollToFirstChirpInSelectedColumn() : this.setSelectedChirp(e, {
				doScrollToChirp: !0
			})
		}, this.selectNextChirp = function(e) {
			var t, i, n;
			e = e || {}, this.chirpCenter = null, this.isInDetailView() ? (i = this.selectedColumn.detailViewComponent.$find(this.attr.chirpSelector), n = i.index(this.$selectedChirp), t = i.eq(Math.min(i.length - 1, n + 1))) : t = this.$selectedChirp.next(this.attr.chirpSelector).length > 0 ? this.$selectedChirp.next(this.attr.chirpSelector) : this.$selectedChirp, 0 === t.length ? this.selectAndScrollToFirstChirpInSelectedColumn() : this.setSelectedChirp(t, {
				doScrollToChirp: !0,
				forceScroll: e.forceScroll
			})
		}, this.moveSelection = function(e) {
			var t = (0, s.default)(function() {
				var t;
				if (this.hasFocus)
					if (null === this.selectedColumn) this.setSelectedColumn(0);
					else {
						switch (this.scrollDirection = e, e) {
							case "left":
								t = null === this.columnIndex ? 0 : this.columnIndex - 1, this.setSelectedColumn(t);
								break;
							case "right":
								t = null === this.columnIndex ? 0 : this.columnIndex + 1, this.setSelectedColumn(t);
								break;
							case "up":
								this.selectPrevChirp();
								break;
							case "down":
								this.selectNextChirp()
						}
						this.trigger("uiColumnsScrollToColumn", {
							columnKey: this.selectedColumn.model.getKey(),
							source: this.attr.id,
							offset: this.attr.columnScrollOffset,
							direction: this.scrollDirection
						})
					}
			}.bind(this), 100);
			return t
		}, this.selectColumnByKey = function(e) {
			if (this.selectedColumn && this.selectedColumn.model.getKey() === e) return !1;
			for (var t = 0; t < this.columns.length; t += 1)
				if (this.columns[t].model.getKey() === e) return this.columnIndex = t, this.selectedColumn = this.columns[t], !0;
			return !1
		}, this.selectColumnByIndex = function(e) {
			return this.selectedColumn !== this.columns[e] && (this.columnIndex = e, this.selectedColumn = this.columns[e], !0)
		}, this.selectLastColumn = function() {
			return this.selectColumnByIndex(this.columns.length - 1)
		}, this.handleColumnFocus = function(e, t) {
			if (this.hasFocus) {
				var i = !1;
				this.$selectedChirp.removeClass(this.attr.isSelectedClass), void 0 !== t.columnKey ? i = this.selectColumnByKey(t.columnKey) : void 0 !== t.index ? i = this.selectColumnByIndex(t.index) : !0 === t.last && (i = this.selectLastColumn()), i ? (this.$selectedChirp = (0, r.default)(), this.chirpIndex = null, this.offset = null) : this.selectedColumn && (this.$selectedChirp.addClass(this.attr.isSelectedClass), 1 === (0, n.default)(this.selectedColumn, "visibility.visibleFraction") && this.trigger("uiGridHome"))
			}
		}, this.clearSelection = function() {
			this.$selectedChirp.removeClass(this.attr.isSelectedClass), this.$selectedChirp = (0, r.default)(), this.selectedColumn = null, this.chirpIndex = null, this.columnIndex = null, this.offset = null
		}, this.scrollToChirp = function(e) {
			this.trigger("uiColumnsScrollToChirp", {
				columnKey: this.selectedColumn.model.getKey(),
				$chirp: this.$selectedChirp,
				direction: e.direction,
				forceScroll: e.forceScroll,
				offset: this.attr.chirpScrollOffset
			})
		}, this.handleBack = function(e, t) {
			var i, n, s;
			this.hasFocus && (s = a.default.getColumnElementByKey(this.selectedColumn.model.getKey()), this.isInDetailView() ? (i = this.selectedColumn.detailViewComponent.parentChirp, n = this.selectedColumn.ui.getChirpById(i.id), s.trigger("uiCloseDetailView"), n.addClass(this.attr.isSelectedClass), this.$selectedChirp = n, this.scrollToChirp({
				direction: "down"
			})) : this.isInDetailViewLevel2() && s.trigger("uiCloseSocialProof"))
		}, this.handleClearSelection = function() {
			this.hasFocus && this.clearSelection()
		}, this.isInDetailView = function() {
			var e = a.default.getColumnElementByKey(this.selectedColumn.model.getKey());
			return e.hasClass(this.attr.columnStateDetailViewClass)
		}, this.isInDetailViewLevel2 = function() {
			var e = a.default.getColumnElementByKey(this.selectedColumn.model.getKey());
			return e.hasClass(this.attr.columnStateSocialProofClass)
		}, this.tweetActionFactory = function(e) {
			return function() {
				var t, i, n, s;
				if (this.hasFocus && this.$selectedChirp.length > 0 && !this.isInDetailViewLevel2()) {
					if (i = this.$selectedChirp.attr("data-key"), !(t = this.selectedColumn.findMostInterestingChirp(i))) return;
					switch (e) {
						case "profile":
							t.getMainUser ? n = t.getMainUser() : t.getRelatedUser && (n = t.getRelatedUser()), n && this.trigger("uiShowProfile", {
								id: n.screenName
							});
							break;
						case "favoriteFromAccounts":
							t instanceof TD.services.TwitterStatus && this.trigger("uiShowFavoriteFromOptions", {
								tweet: t
							});
							break;
						case "actionsMenu":
							this.trigger(this.$selectedChirp.find(this.attr.actionsMenuButtonSelector), "uiShowActionsMenu");
							break;
						case "viewDetails":
							if (t instanceof TD.services.TwitterConversationMessageEvent) return;
						default:
							if (t instanceof TD.services.TwitterAction) return;
							var a = t instanceof TD.services.TwitterConversation || t instanceof TD.services.TwitterConversationMessageEvent;
							s = "reply" === e && a ? "dm" : e, this.parentChirp = this.selectedColumn.findChirp(i), r.default.publish("chirp/action", [s, t, this.parentChirp, this.selectedColumn, {
								element: this.$selectedChirp
							}])
					}
				} else switch (e) {
					case "dm":
						this.trigger("uiComposeTweet", {
							type: "message"
						})
				}
			}.bind(this)
		}, this.handleDetailViewActive = function(e, t) {
			var i = t.$chirp.closest(this.attr.columnSelector);
			this.selectColumnByKey(i.attr("data-column")), this.$selectedChirp.removeClass(this.attr.isSelectedClass), this.$selectedChirp = t.$chirp, this.parentChirp === t.parentChirp && this.$selectedChirp.addClass(this.attr.isSelectedClass)
		}, this.handleDetailClosed = function(e, t) {
			var i;
			t && t.column && (i = t.column.model.getKey(), this.$selectedChirp.removeClass(this.attr.isSelectedClass), this.selectColumnByKey(i), this.$selectedChirp = (0, r.default)())
		}, this.handlePagingFactory = function(e) {
			return function() {
				if (this.hasFocus && this.selectedColumn) {
					var t, i, n, s, r, o, l, c = this.selectedColumn.model.getKey(),
						u = a.default.getColumnScrollContainerByKey(c),
						d = u.scrollTop(),
						h = u.innerHeight();
					if (0 === this.$selectedChirp.length && this.selectAndScrollToFirstChirpInSelectedColumn(), null !== this.chirpOffsetTop ? t = this.chirpOffsetTop : (t = this.$selectedChirp.position().top, this.targetChirpOffsetTop = null), this.chirpOffsetTop = t, this.$selectedChirp.removeClass(this.attr.isSelectedClass), "down" === e) {
						this.targetChirpOffsetTop = null === this.targetChirpOffsetTop ? t + h : this.targetChirpOffsetTop + h;
						do {
							(o = this.$selectedChirp.next(this.attr.chirpSelector)).length > 0 && (this.$selectedChirp = o)
						} while (o.length > 0 && o.position().top < this.targetChirpOffsetTop);
						(i = d + (this.$selectedChirp.position().top - t)) + h + 50 > u.get(0).scrollHeight && (i += 50), n = i - d
					} else {
						this.targetChirpOffsetTop = null === this.targetChirpOffsetTop ? t - h : this.targetChirpOffsetTop - h;
						do {
							(r = this.$selectedChirp.prev(this.attr.chirpSelector)).length > 0 && (this.$selectedChirp = r)
						} while (r.length > 0 && r.position().top > this.targetChirpOffsetTop);
						i = d - (t + Math.abs(this.$selectedChirp.position().top)), n = d - i
					}
					this.$selectedChirp.addClass(this.attr.isSelectedClass), l = function() {
						this.chirpOffsetTop = null, this.targetChirpOffsetTop = null
					}.bind(this), s = TD.ui.columns.calculateScrollDuration(n, 50, 750), u.stop().animate({
						scrollTop: i
					}, s, this.attr.pagingEasingFunction, l)
				}
			}.bind(this)
		}, this.handleGridHome = function() {
			if (this.hasFocus && this.selectedColumn) {
				this.chirpOffsetTop = null, this.targetChirpOffsetTop = null;
				var e = this.selectedColumn.model.getKey(),
					t = a.default.getColumnScrollContainerByKey(e),
					i = t.scrollTop(),
					n = TD.ui.columns.calculateScrollDuration(i, 20, 300);
				this.$selectedChirp.removeClass(this.attr.isSelectedClass), this.$selectedChirp = this.$selectedChirp.parent().find(".js-stream-item:first"), this.$selectedChirp.addClass(this.attr.isSelectedClass), t.stop().animate({
					scrollTop: 0
				}, n, this.attr.pagingEasingFunction)
			}
		}, this.handleGridEnd = function() {
			if (this.hasFocus && this.selectedColumn) {
				this.chirpOffsetTop = null, this.targetChirpOffsetTop = null;
				var e = this.selectedColumn.model.getKey(),
					t = a.default.getColumnScrollContainerByKey(e),
					i = t.scrollTop(),
					n = t.get(0).scrollHeight - t.innerHeight() + 50,
					s = n - i,
					r = TD.ui.columns.calculateScrollDuration(s, 20, 300);
				this.$selectedChirp.removeClass(this.attr.isSelectedClass), this.$selectedChirp = this.$selectedChirp.parent().find(".js-stream-item:last"), this.$selectedChirp.addClass(this.attr.isSelectedClass), t.stop().animate({
					scrollTop: n
				}, r, this.attr.pagingEasingFunction)
			}
		}
	}, c)
}, function(e, t, i) {
	"use strict";
	var n, s = i(21),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			columnsLeftMargin: 10,
			columnSlideMinDuration: 200,
			columnSlideMaxDuration: 500,
			columnExtraSlideTimePer100Px: 20,
			chirpSlideMinDuration: 100,
			chirpSlideMaxDuration: 500,
			chirpExtraSlideTimePer100Px: 100,
			columnGlowDuration: 500,
			appColumnsContainerSelector: ".js-app-columns-container",
			columnsContainerSelector: ".js-app-columns"
		}), this.after("initialize", function() {
			this.on(document, "uiColumnFocus", this.handleColumnFocus), this.on(document, "uiColumnsScrollToColumn", this.handleScrollToColumn), this.on(document, "uiColumnsScrollColumnToCenter", this.handleScrollColumnToCenter), this.on(document, "uiColumnsScrollToChirp", this.handleScrollToChirp)
		}), this.handleColumnFocus = function(e, t) {
			var i;
			void 0 !== t.index ? i = r.default.getKeyForColumnAtIndex(t.index) : t.last ? i = r.default.getKeyForLastColumn() : t.columnKey && (i = t.columnKey), i && this.trigger("uiColumnsScrollColumnToCenter", {
				columnKey: i
			})
		}, this.handleScrollToColumn = function(e, t) {
			var i, n = r.default.getColumnElementByKey(t.columnKey),
				s = this.select("appColumnsContainerSelector"),
				a = this.select("columnsContainerSelector"),
				o = n.outerWidth(),
				l = a.width(),
				c = s.scrollLeft(),
				u = n.position().left,
				d = u + o;
			u >= 0 && d <= l || (i = "left" === t.direction ? c + u - t.offset : c + d + t.offset - l, this.scrollColumnToOffset(t.columnKey, i, !1))
		}, this.handleScrollColumnToCenter = function(e, t) {
			var i, n, s, a, o, l, c = r.default.getColumnElementByKey(t.columnKey),
				u = this.select("appColumnsContainerSelector"),
				d = this.select("columnsContainerSelector"),
				h = u.innerWidth() / c.outerWidth(!0),
				m = u.scrollLeft(),
				f = !0;
			h <= 3.05 ? (l = parseInt(d.css("padding-left"), 10), i = m + c.position().left - l) : (n = c.outerWidth(), s = u.get(0).scrollWidth - this.attr.columnsLeftMargin, a = d.width(), o = c.offset().left, i = m + o - (a - n) / 2, i = Math.min(i, s - a), i = Math.max(i, 0)), h < 2 && (f = !1), this.scrollColumnToOffset(t.columnKey, i, f)
		}, this.calculateScrollDuration = function(e) {
			var t = Math.abs(e.target - e.current),
				i = e.minTime + t / 100 * e.extraSlideTimePer100Px;
			return i = Math.min(i, e.maxTime)
		}, this.scrollColumnToOffset = function(e, t, i) {
			var n, s = this.select("appColumnsContainerSelector"),
				a = s.scrollLeft();
			t !== a ? (s.stop(), n = this.calculateScrollDuration({
				target: t,
				current: a,
				minTime: this.attr.columnSlideMinDuration,
				maxTime: this.attr.columnSlideMaxDuration,
				extraSlideTimePer100Px: this.attr.columnExtraSlideTimePer100Px
			}), s.animate({
				scrollLeft: t
			}, n, "easeInOutQuad", function() {
				i && TD.ui.columns.focusColumn(e, this.attr.columnGlowDuration), r.default.getColumnElementByKey(e).trigger("uiColumnScrolled", {
					columnKey: e
				})
			}.bind(this))) : (i && TD.ui.columns.focusColumn(e, this.attr.columnGlowDuration), r.default.getColumnElementByKey(e).trigger("uiColumnScrolled", {
				columnKey: e
			}))
		}, this.handleScrollToChirp = function(e, t) {
			if (t.$chirp && t.columnKey && 0 !== t.$chirp.length) {
				var i, n, s, a = r.default.getColumnScrollContainerByKey(t.columnKey),
					o = a.scrollTop(),
					l = t.$chirp.position().top + o,
					c = a.innerHeight(),
					u = !1;
				"up" === t.direction ? (i = l - t.offset, (t.forceScroll || i < o) && (u = !0)) : (n = l + t.$chirp.outerHeight() + t.offset, (t.forceScroll || n > o + c) && (i = n - c, u = !0)), u && (s = this.calculateScrollDuration({
					target: i,
					current: o,
					minTime: this.attr.chirpSlideMinDuration,
					maxTime: this.attr.chirpSlideMaxDuration,
					extraSlideTimePer100Px: this.attr.chirpExtraSlideTimePer100Px
				}), a.stop().animate({
					scrollTop: i
				}, s, "easeInOutQuad"))
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(32),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.handleFocusRequest = function(e, t) {
			t && void 0 !== t.id && this.focusHistory[this.focusHistory.length - 1] !== t.id && (this.focusHistory.push(t.id), this.trigger("uiFocus", {
				id: t.id
			}))
		}, this.handleFocusRelease = function(e, t) {
			t && void 0 !== t.id && (this.focusHistory[this.focusHistory.length - 1] === t.id ? (this.focusHistory = this.focusHistory.filter(function(e) {
				return e !== t.id
			}), this.focusHistory.length > 0 && (0, r.default)(function() {
				this.trigger("uiFocus", {
					id: this.focusHistory[this.focusHistory.length - 1]
				})
			}.bind(this))) : this.focusHistory = this.focusHistory.filter(function(e) {
				return e !== t.id
			}))
		}, this.after("initialize", function() {
			this.focusHistory = [], this.on(document, "uiFocusRequest", this.handleFocusRequest), this.on(document, "uiFocusRelease", this.handleFocusRelease)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		this.showConfirmationDialog = function(e, t) {
			this.trigger(document, "uiConfirmationAction", {
				id: t.id,
				result: !!confirm(t.message)
			})
		}, this.after("initialize", function() {
			this.on(document, "uiShowConfirmationDialog", this.showConfirmationDialog)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = v(i(2)),
		s = v(i(0)),
		r = v(i(36)),
		a = v(i(18)),
		o = i(152),
		l = i(58),
		c = v(i(2541)),
		u = v(i(2542)),
		d = v(i(2543)),
		h = v(i(2545)),
		m = v(i(2553)),
		f = v(i(2554)),
		p = v(i(17)),
		g = i(19);

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var T = i(5).compose,
		w = i(2555),
		b = i(2556),
		y = i(2557),
		_ = i(2558),
		C = i(2560),
		S = i(2561),
		D = i(2563),
		k = i(2565),
		E = i(208),
		I = i(2566),
		A = i(2567);
	e.exports = function() {
		T.mixin(this, [a.default, E, o.flightWithCommands]), this.showCommandPalette = function() {
			this.showModal(d.default, {}, {
				withClickTrap: !0,
				withDismissButton: !1,
				withDraggable: !1,
				withFooter: !1,
				withHeader: !1,
				withBorder: !1,
				withClasses: ["mdl-fixed-top"]
			})
		}, this.showAddColumn = function() {
			TD.ui.openColumn.showOpenColumn()
		}, this.showProfile = function(e, t) {
			this.showModal(_, {
				screenName: t.id
			}, {
				withHeader: !1,
				withFooter: !1,
				withDismissButton: !1,
				withClasses: ["prf", "s-tall-fixed", "s-profile"],
				withBorder: !1
			})
		}, this.showEmbedTweet = function(e, t) {
			var i = {
				title: (0, n.default)("Embed this Tweet"),
				withHeader: !0,
				withFooter: !1,
				withDismissButton: !0,
				withBorder: !1,
				withClasses: ["s-wide", "embed-modal"]
			};
			this.showModal(w, {
				tweet: t.tweet
			}, i)
		}, this.showKeyboardShortcutList = function(e, t) {
			var i = {
				title: (0, n.default)("Keyboard shortcuts"),
				withHeader: !0,
				withFooter: !1,
				withDismissButton: !0,
				withBorder: !1,
				withClasses: ["s-wide", "keyboard-shortcut-list-modal"]
			};
			this.showModal(b, {}, i)
		}, this.showSearchOperatorList = function(e, t) {
			var i = {
				title: (0, n.default)("Search tips"),
				withHeader: !0,
				withHeaderDivider: !0,
				withFooter: !1,
				withDismissButton: !0,
				withBorder: !1,
				withClasses: ["s-wide"],
				withContentClasses: ["scroll-v", "max-height--600"]
			};
			this.showModal(y, {}, i), this.trigger("scribeEvent", {
				terms: {
					page: "main",
					section: "navbar",
					element: "search_tips",
					action: "click"
				}
			})
		}, this.showReportOptions = function(e, t) {
			if (!t.isMessage && !t.conversationId && TD.decider.get("report_flow_iframe") && TD.storage.accountController.getCookieAccount()) return this.showReportFlow(t);
			var i = {
				withClasses: ["mdl", "s-narrow"],
				withContentClasses: ["mdl-report-spam-options"],
				withFooter: !1,
				withBorder: !1,
				withHeaderDivider: !0,
				title: t.isMessage ? (0, n.default)("Flag message") : (0, n.default)("Flag conversation")
			};
			this.showModal(C, t, i)
		}, this.showReportUserOptions = function(e, t) {
			return TD.decider.get("report_flow_iframe") && TD.storage.accountController.getCookieAccount() || this.trigger("uiReportSpamAction", {
				account: t.account,
				twitterUser: t.twitterUser,
				block: !0
			}), this.showReportFlow(t)
		}, this.showReportFlow = function(e) {
			var t = {
					account: e.account,
					twitterUser: e.twitterUser,
					tweetId: e.tweetId,
					isMedia: e.isMedia
				},
				i = {
					title: (0, n.default)("Report an issue"),
					withFooter: !0,
					withDoneButton: !0,
					withCenteredFooter: !0
				};
			this.showModal(S, t, i)
		}, this.showDeleteDMMessage = function(e, t) {
			var i = {
				title: (0, n.default)("Delete message?"),
				withHeader: !0,
				withHeaderDivider: !0,
				withFooter: !1,
				withDismissButton: !0,
				withBorder: !1,
				withClasses: ["s-narrow"],
				withContentClasses: ["scroll-v", "max-height--600"]
			};
			this.showModal(u.default, {
				chirp: t
			}, i)
		}, this.showDeleteDMConversation = function(e, t) {
			var i = {
				title: (t.group ? "Leave" : "Delete") + " conversation",
				withHeader: !0,
				withHeaderDivider: !0,
				withFooter: !1,
				withDismissButton: !0,
				withBorder: !1,
				withClasses: ["s-narrow"],
				withContentClasses: ["scroll-v", "max-height--600"]
			};
			this.showModal(c.default, {
				conversationData: t
			}, i)
		}, this.showFollowFromOptions = function(e, t) {
			var i = t.userToFollow,
				s = {
					title: (0, n.default)("Follow {{>text/user_link_screenname}} from your accounts", i),
					withBorder: !1,
					withHeaderDivider: !1,
					withContentClasses: ["margin-hxl"],
					withFooter: !1,
					withDoneButton: !1,
					withClasses: ["s-narrow", "s-fluid-height", "padding-b--12"]
				};
			this.showModal(D, {
				userToFollow: i
			}, s)
		}, this.showFavoriteFromOptions = function(e, t) {
			var i = t.tweet,
				s = {
					title: (0, n.default)("Like this Tweet from"),
					withBorder: !1,
					withHeaderDivider: !1,
					withContentClasses: ["margin-hxl"],
					withFooter: !1,
					withDoneButton: !1,
					withClasses: ["s-narrow", "s-fluid-height", "padding-b--12"]
				};
			this.showModal(k, {
				tweet: i
			}, s)
		}, this.showGlobalSettings = function() {
			new TD.components.GlobalSettings
		}, this.showEditListMembers = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = t.list,
				n = t.autoAddUsers;
			i ? new TD.components.ListMembers(i, n) : this.showEditListDetails(e, t)
		}, this.showEditListDetails = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = t.list,
				s = t.autoAddUser,
				r = {
					title: i ? (0, n.default)("Edit List details") : (0, n.default)("Create a new List"),
					withFooter: !1,
					withBorder: !1,
					withHeaderDivider: !0
				};
			i ? this.showModal(f.default, {
				listId: i.id,
				accountKey: i.account.getKey(),
				name: i.name,
				description: i.description,
				isPrivate: i.isPrivate,
				autoAddUser: s
			}, r) : s ? this.showModal(f.default, {
				autoAddUser: s
			}, r) : this.showModal(f.default, {}, r)
		}, this.showEditCustomTimeline = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = t.timelineId,
				s = {
					timelineId: i,
					accountKey: t.accountKey,
					name: t.name,
					description: t.description,
					columnKey: t.columnKey,
					focus: t.focus
				},
				r = {
					title: i ? (0, n.default)("Edit Collection") : (0, n.default)("Create a new Collection"),
					withFooter: !1,
					withBorder: !1,
					withHeaderDivider: !0
				};
			this.showModal(m.default, s, r)
		}, this.showCopyTweetLink = function(e) {
			var t = this,
				i = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).url;
			"clipboard" in navigator && navigator.clipboard.writeText ? navigator.clipboard.writeText(i).then(function() {
				(0, g.showNotification)({
					message: (0, n.default)("Link copied to clipboard.")
				})
			}).catch(function() {
				t.showCopyTweetLinkModal(i)
			}) : this.showCopyTweetLinkModal(i)
		}, this.showCopyTweetLinkModal = function(e) {
			var t = {
				value: e,
				readonly: !0,
				title: (0, n.default)("Copy link to Tweet"),
				explanatoryText: (0, n.default)("The URL of this Tweet is below.  Copy to easily share with colleagues and friends."),
				buttonText: (0, n.default)("Copy link"),
				placeholderText: (0, n.default)("URL"),
				successText: (0, n.default)("Link copied to clipboard."),
				errorText: (0, n.default)("That didn't work. Try copying the link from the field.")
			};
			this.showCopyTextModal(t)
		}, this.showCopySearchQuery = function(e) {
			var t = {
				value: (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).query,
				readonly: !1,
				title: (0, n.default)("Copy search query"),
				buttonText: (0, n.default)("Copy query"),
				placeholderText: (0, n.default)("Search query"),
				explanatoryText: (0, n.default)("Here's your full search query. Copy it to share with colleagues."),
				successText: (0, n.default)("Query copied to clipboard."),
				errorText: (0, n.default)("That didn't work. Try copying the query from the field.")
			};
			this.showCopyTextModal(t)
		}, this.showCopyTextModal = function(e) {
			this.showModal(h.default, e, {
				title: e.title,
				withFooter: !1,
				withBorder: !1,
				withHeaderDivider: !0
			})
		}, this.showImportListModal = function(e, t) {
			var i = {
					list: t.list
				},
				s = {
					title: (0, n.default)("Add multiple users to {{{listName}}}", {
						listName: p.default.cleanWithEmoji(t.list.name)
					}),
					withBorder: !1,
					withHeaderDivider: !0,
					withClasses: ["s-narrow"]
				};
			this.showModal(I, i, s)
		}, this.showExportListModal = function(e, t) {
			var i = {
					list: t.list,
					members: t.members
				},
				s = {
					title: (0, n.default)("Copy users in this List"),
					withBorder: !1,
					withHeaderDivider: !0,
					withClasses: ["s-narrow"]
				};
			this.showModal(A, i, s)
		}, this.after("initialize", function() {
			var e = this;
			this.on(document, "uiShowProfile", this.showProfile), this.on(document, "uiShowReportOptions", this.showReportOptions), this.on(document, "uiShowReportUserOptions", this.showReportUserOptions), this.on(document, "uiShowKeyboardShortcutList", this.showKeyboardShortcutList), this.on(document, "uiShowDeleteDmConversation", this.showDeleteDMConversation), this.on(document, "uiShowDeleteDmMessage", this.showDeleteDMMessage), this.on(document, "uiShowSearchOperatorList", this.showSearchOperatorList), this.on(document, "uiShowEditCustomTimeline", this.showEditCustomTimeline), this.on(document, "uiShowEditListMembers", this.showEditListMembers), this.on(document, "uiShowEditListDetails", this.showEditListDetails), this.on(document, "uiShowCopyTweetLink", this.showCopyTweetLink), this.on(document, "uiShowCopySearchQuery", this.showCopySearchQuery), this.on(document, "uiShowImportListModal", this.showImportListModal), this.on(document, "uiShowExportListModal", this.showExportListModal), this.on(document, "uiShowEmbedTweet", this.showEmbedTweet), this.on(document, "uiShowAddColumn", this.showAddColumn), this.on(document, "uiShowGlobalSettings", this.showGlobalSettings), this.on(document, "uiShowFollowFromOptions", this.showFollowFromOptions), this.on(document, "uiShowFavoriteFromOptions", this.showFavoriteFromOptions);
			var t = r.default.Observable.fromEvent((0, s.default)(document), "uiShowCommandPalette").withLatestFrom((0, l.getStreamForFeatureFlag)("tweetdeck_dogfood"), function(e, t) {
				return {
					enabled: t
				}
			}).filter(function(e) {
				return e.enabled
			});
			this.observe(t).subscribe(function() {
				return e.showCommandPalette()
			}), this.addCommands([{
				label: (0, n.default)("Create a new List"),
				apply: function() {
					return e.showEditListDetails()
				}
			}, {
				label: (0, n.default)("Create a new Collection"),
				apply: function() {
					return e.showEditCustomTimeline()
				}
			}])
		})
	}
}, function(e, t, i) {
	"use strict";
	var n = a(i(0)),
		s = a(i(7)),
		r = a(i(6));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.attributes({
			cancelDeleteSelector: ".js-cancel-delete",
			deleteSelector: ".js-delete",
			conversationData: null
		}), this._handleCancelDelete = function() {
			(0, n.default)(document).trigger("uiCloseModal")
		}, this._handleDelete = function() {
			(0, n.default)(document).trigger("uiDeleteConversation", this.attr.conversationData), (0, n.default)(document).trigger("uiCloseModal")
		}, this.componentDidInitialize = function() {
			this.on("click", {
				cancelDeleteSelector: this._handleCancelDelete,
				deleteSelector: this._handleDelete
			})
		}, this.render = function() {
			var e = this.attr.conversationData.group,
				t = r.default.render("delete_dm_conversation", {
					group: e
				});
			this.$node.html(t)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = a(i(0)),
		s = a(i(7)),
		r = a(i(6));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.attributes({
			cancelDeleteSelector: ".js-cancel-delete",
			deleteSelector: ".js-delete",
			chirp: null
		}), this._handleCancelDelete = function() {
			(0, n.default)(document).trigger("uiCloseModal")
		}, this._handleDelete = function() {
			this.attr.chirp.destroy(), (0, n.default)(document).trigger("uiCloseModal")
		}, this.componentDidInitialize = function() {
			this.on("click", {
				cancelDeleteSelector: this._handleCancelDelete,
				deleteSelector: this._handleDelete
			})
		}, this.render = function() {
			var e = r.default.render("delete_dm_message");
			this.$node.html(e)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = d(i(13)),
		s = d(i(2)),
		r = d(i(0)),
		a = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(152)),
		o = d(i(6)),
		l = d(i(7)),
		c = d(i(2544)),
		u = d(i(231));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = l.default.mixin(function() {
		this.attributes({
			inputSelector: ".js-input",
			commandSelector: ".js-command",
			listSelector: ".js-command-list",
			template: "command_palette/base",
			autoFocus: !0
		}), this.initialState({
			fuzzyMatchedCommands: function() {
				return a.query()
			},
			query: "",
			selection: 0
		}), this.before("initialize", function() {
			this.addCommands([{
				label: (0, s.default)("Close this dialog"),
				shortcut: {
					key: "Esc"
				},
				apply: function() {}
			}])
		}), this.componentDidInitialize = function() {
			var e = this,
				t = o.default.render(this.attr.template);
			this.$node.html(t), this.select("inputSelector").focus(), this.on("uiInputSubmit", function() {
				return e.execute()
			}), this.on("uiInputEscape", this.teardown), this.on(document, "uiKeyEnter", function() {
				return e.execute()
			}), this.on(document, "uiKeyDown", function() {
				return e.nudgeSelection(1)
			}), this.on(document, "uiKeyUp", function() {
				return e.nudgeSelection(-1)
			}), this.on(this.attr.inputSelector, "keydown", this.handleInputKeyDown), this.on("click", {
				commandSelector: function(t, i) {
					return e.execute((0, r.default)(i.el).attr("data-index"))
				}
			}), this.on(this.attr.inputSelector, "input change", function() {
				var t = e.select("inputSelector").val();
				e.setQuery(t)
			});
			var i = this.connect(c.default, {
				mapStateToProps: function(e) {
					return {
						fuzzyMatchedCommands: e.fuzzyMatchedCommands,
						selection: e.selection
					}
				}
			});
			this.attachChild(i, this.attr.listSelector)
		}, this.execute = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.state.selection,
				t = (0, n.default)(this.state, ["fuzzyMatchedCommands", e, "original"]);
			t && (this.teardown(), t.apply())
		}, this.setQuery = function(e) {
			e !== this.state.query && this.mergeState({
				fuzzyMatchedCommands: a.query(e),
				query: e,
				selection: 0
			})
		}, this.nudgeSelection = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
			e = e < 0 ? -1 : 1;
			var t = this.state.selection + this.state.fuzzyMatchedCommands.length + e;
			this.mergeState({
				selection: t % this.state.fuzzyMatchedCommands.length
			})
		}, this.handleInputKeyDown = function(e) {
			9 === e.which && (this.select("inputSelector").blur(), e.preventDefault()), 40 === e.which && (this.nudgeSelection(1), e.preventDefault()), 38 === e.which && (this.nudgeSelection(-1), e.preventDefault())
		}
	}, u.default, a.flightWithCommands)
}, function(e, t, i) {
	"use strict";
	var n = c(i(17)),
		s = i(152),
		r = c(i(6)),
		a = i(275),
		o = c(i(363)),
		l = c(i(7));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = l.default.mixin(function() {
		this.attributes({
			template: "command_palette/command_list"
		}), this.render = function() {
			var e = this.props,
				t = e.fuzzyMatchedCommands,
				i = void 0 === t ? [] : t,
				a = e.selection,
				o = void 0 === a ? 0 : a,
				l = {
					commands: i.map(function(e, t) {
						var i = e.string.split(s.MATCH_DELIMITER).map(function(e) {
								return n.default.cleanWithEmoji(e)
							}),
							r = i.reduce(function(e, t, i) {
								var n = i % 2 == 1;
								return e + (n ? "<b>" + t + "</b>" : t)
							}, "");
						return {
							html: r,
							shortcut: e.original.shortcut,
							index: t,
							classes: t === o ? "is-selected bg-color-twitter-medium-blue color-twitter-white" : "color-twitter-darker-gray hover-bg-color-twitter-white"
						}
					})
				},
				c = r.default.render(this.attr.template, l);
			this.$node.html(c), this.scrollToSelection()
		}, this.scrollToSelection = (0, a.makeDOMMutator)(function() {
			o.default.makeElementVisible(this.$node, this.$node.find(".is-selected"), {
				time: 100
			})
		})
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = h(i(32)),
		s = h(i(833)),
		r = h(i(48)),
		a = h(i(2)),
		o = h(i(6)),
		l = h(i(7)),
		c = h(i(881)),
		u = i(17),
		d = i(19);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.default = l.default.mixin(function() {
		this.attributes({
			textSelector: ".js-text-field",
			copyButtonSelector: ".js-copy-button",
			value: null,
			readonly: !1,
			titleText: void 0,
			explanatoryText: void 0,
			buttonText: void 0,
			placeholderText: void 0,
			successText: void 0,
			errorText: void 0
		}), this.componentDidInitialize = function() {
			var e = this,
				t = !(0, u.isSafari)() || (0, u.getWebkitVersion)() > 602,
				i = {
					titleText: (0, a.default)("Copy"),
					buttonText: (0, a.default)("Copy"),
					placeholderText: "",
					explanatoryText: (0, a.default)("The item you requested is below."),
					successText: (0, a.default)("Text copied to clipboard"),
					errorText: (0, a.default)("That didn't work. Try copying the text from the field."),
					showButton: t
				},
				l = (0, r.default)({}, this.attr, i),
				c = o.default.render("actions/copy_text_modal", l);
			this.$node.html(c), this.setupClipboard((0, s.default)(l, ["successText", "errorText"])), this.attr.readonly && this.on("click", {
				textSelector: function() {
					e.select("textSelector").select()
				}
			}), (0, n.default)(function() {
				e.select("textSelector").val(e.attr.value).select()
			})
		}, this.setupClipboard = function(e) {
			var t = this;
			this.clipboard = new c.default(this.attr.copyButtonSelector, {
				target: function() {
					return t.select("textSelector").get(0)
				}
			}), this.clipboard.on("success", function() {
				(0, d.showNotification)({
					message: e.successText
				})
			}), this.clipboard.on("error", function(t) {
				(0, d.showErrorNotification)({
					message: e.errorText
				})
			})
		}, this.render = function() {}, this.before("teardown", function() {
			this.clipboard.destroy()
		})
	})
}, , , , , , , , function(e, t, i) {
	"use strict";
	var n = h(i(9)),
		s = h(i(32)),
		r = h(i(46)),
		a = h(i(2)),
		o = h(i(6)),
		l = h(i(193)),
		c = h(i(7)),
		u = h(i(882)),
		d = i(19);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = c.default.mixin(function() {
		this.attributes({
			saveButtonSelector: ".js-save-customtimeline",
			deleteButtonSelector: ".js-delete-customtimeline",
			accountSelector: ".js-customtimeline-account",
			nameSelector: ".js-customtimeline-name",
			descriptionSelector: ".js-customtimeline-description",
			characterCountSelector: ".js-character-count",
			maxDescriptionLength: 160,
			timelineId: void 0,
			accountKey: void 0,
			columnKey: void 0,
			name: "",
			description: "",
			focus: "name"
		}), this.initialState({
			isSubmittable: !0,
			descriptionCharsLeft: 0
		}), this.componentDidInitialize = function() {
			var e = TD.storage.accountController.getAccountsForService("twitter"),
				t = (0, n.default)({}, this.attr, {
					accounts: e
				}),
				i = o.default.render("customtimeline/edit_customtimeline", t);
			this.$node.html(i), this.attr.timelineId && this.updateUI(this.attr), this.select(this.attr.focus + "Selector").focus(), this.on("click uiInputSubmit", {
				saveButtonSelector: this.handleSaveEvent,
				deleteButtonSelector: this.handleDeleteEvent
			}), this.on("uiInputSubmit", {
				nameSelector: this.handleSaveEvent
			}), this.on("input propertychange change", {
				descriptionSelector: this.handleChange
			});
			var s = this.connect(u.default, {
				mapStateToProps: function() {
					var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
						t = e.descriptionCharsLeft,
						i = e.hasValidCharacterCount;
					return {
						displayedCharacterCount: t,
						hasValidCharacterCount: i
					}
				}
			});
			this.attachChild(s, this.select("characterCountSelector")), this.handleChange()
		}, this.updateUI = function(e) {
			this.select("nameSelector").val(e.name), this.select("descriptionSelector").val(e.description), this.select("accountSelector").val(e.accountKey)
		}, this.getValsFromUI = function() {
			return {
				accountKey: this.select("accountSelector").val(),
				name: this.select("nameSelector").val(),
				description: this.select("descriptionSelector").val()
			}
		}, this.handleSaveEvent = function() {
			this.state.isSubmittable && (this.attr.timelineId ? this.triggerUpdateExisting() : this.createAndConfigureNew(), this.teardown())
		}, this.handleDeleteEvent = function() {
			var e = (0, r.default)(),
				t = {
					id: e,
					title: (0, a.default)("Delete"),
					message: (0, a.default)("Are you sure you want to delete this Collection?"),
					okLabel: (0, a.default)("Delete"),
					cancelLabel: (0, a.default)("Cancel")
				};
			this.on(document, "uiConfirmationAction", function(t, i) {
				if (i.id === e && (this.off(document, "uiConfirmationAction"), i.result)) {
					var n = TD.controller.columnManager.get(this.attr.columnKey);
					n.deleteCustomTimeline(), this.teardown()
				}
			}), this.trigger("uiShowConfirmationDialog", t)
		}, this.triggerUpdateExisting = function() {
			var e = this.getValsFromUI();
			this.trigger(document, "uiUpdateCustomTimeline", {
				account: this.attr.accountKey,
				id: this.attr.timelineId,
				name: e.name,
				description: e.description
			})
		}, this.createNewTimeline = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = TD.controller.clients.getClient(e),
				n = new l.default.Deferred;
			return i.createCustomTimeline(t, n.callback.bind(n), n.errback.bind(n)), n
		}, this.createAndConfigureNew = function() {
			var e = this.getValsFromUI(),
				t = e.name,
				i = e.description,
				n = e.accountKey,
				r = this.createNewTimeline(n, {
					name: t,
					description: i
				});
			r.addCallback(function(e) {
				var t = new TD.components.TemporaryColumn;
				t.customTimeline(e), t.populate(), t.makePermanent(), (0, s.default)(function() {
					t.destroy()
				})
			}), r.addErrback(function(e) {
				(0, d.showErrorNotification)({
					message: (0, a.default)("Error creating customTimeline: {{status}}", {
						status: e.status
					})
				})
			})
		}, this.handleChange = function() {
			var e = this.select("descriptionSelector").val().length,
				t = this.attr.maxDescriptionLength - e;
			this.mergeState({
				descriptionCharsLeft: t,
				hasValidCharacterCount: t >= 0,
				isSubmittable: t >= 0
			})
		}, this.render = function() {
			this.select("saveButtonSelector").prop("disabled", !this.state.isSubmittable)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(9)),
		s = u(i(2)),
		r = u(i(6)),
		a = u(i(193)),
		o = u(i(7)),
		l = u(i(882)),
		c = i(19);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = o.default.mixin(function() {
		this.attributes({
			saveButtonSelector: ".js-save-list",
			accountSelector: ".js-list-account",
			nameSelector: ".js-list-name",
			descriptionSelector: ".js-list-description",
			characterCountSelector: ".js-character-count",
			publicSelector: "#list-mode-public",
			privateSelector: "#list-mode-private",
			maxDescriptionLength: 100,
			listId: void 0,
			accountKey: void 0,
			name: "",
			description: "",
			isPrivate: !1,
			focus: "name",
			autoAddUser: void 0
		}), this.initialState({
			isSubmittable: !0,
			descriptionCharsLeft: 0
		}), this.componentDidInitialize = function() {
			var e = TD.storage.accountController.getAccountsForService("twitter"),
				t = (0, n.default)({}, this.attr, {
					accounts: e
				}),
				i = r.default.render("lists/edit_list_details", t);
			this.$node.html(i), this.attr.listId && this.updateUI(this.attr), this.select(this.attr.focus + "Selector").focus(), this.on("click uiInputSubmit", {
				saveButtonSelector: this.handleSaveEvent
			}), this.on("uiInputSubmit", {
				nameSelector: this.handleSaveEvent
			}), this.on("input propertychange change", {
				nameSelector: this.handleChange,
				descriptionSelector: this.handleChange
			});
			var s = this.connect(l.default, {
				mapStateToProps: function() {
					var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
						t = e.descriptionCharsLeft,
						i = e.hasValidCharacterCount;
					return {
						displayedCharacterCount: t,
						hasValidCharacterCount: i
					}
				}
			});
			this.attachChild(s, this.select("characterCountSelector")), this.handleChange()
		}, this.updateUI = function(e) {
			this.select("nameSelector").val(e.name), this.select("descriptionSelector").val(e.description), this.select("accountSelector").val(e.accountKey), e.isPrivate ? this.$node.find('input:radio[value="private"]').prop("checked", !0) : this.$node.find('input:radio[value="public"]').prop("checked", !0)
		}, this.getValsFromUI = function() {
			return {
				accountKey: this.select("accountSelector").val(),
				name: this.select("nameSelector").val(),
				description: this.select("descriptionSelector").val(),
				isPrivate: this.select("privateSelector").prop("checked")
			}
		}, this.handleSaveEvent = function() {
			if (this.state.isSubmittable) {
				this.select("saveButtonSelector").prop("disabled", !0);
				var e = this.getValsFromUI(),
					t = e.name,
					i = e.description,
					n = e.accountKey,
					r = e.isPrivate,
					a = this.attr.autoAddUser ? [this.attr.autoAddUser] : [],
					o = this.createOrUpdateList(n, this.attr.listId, t, i, r);
				o.addCallbackWith(this, function(e) {
					this.trigger("uiShowEditListMembers", {
						list: e,
						autoAddUsers: a
					})
				}), o.addErrbackWith(this, function(e) {
					this.select("saveButtonSelector").prop("disabled", !1);
					var t = (0, s.default)("Problem saving List. Please check the details and try again");
					(0, c.showErrorNotification)({
						message: t
					})
				})
			}
		}, this.createOrUpdateList = function(e, t, i, n, s) {
			var r = TD.controller.clients.getClient(e),
				o = new a.default.Deferred;
			return t ? r.updateList(t, i, n, s, o.callback.bind(o), o.errback.bind(o)) : r.createList(i, n, s, o.callback.bind(o), o.errback.bind(o)), o
		}, this.handleChange = function() {
			var e = this.select("descriptionSelector").val().length,
				t = this.attr.maxDescriptionLength - e,
				i = this.select("nameSelector").val().length;
			this.mergeState({
				descriptionCharsLeft: t,
				hasValidCharacterCount: t >= 0,
				isSubmittable: t >= 0 && i > 0
			})
		}, this.render = function() {
			this.select("saveButtonSelector").prop("disabled", !this.state.isSubmittable)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = c(i(32)),
		s = c(i(2)),
		r = c(i(0)),
		a = i(5),
		o = c(i(6)),
		l = i(19);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, a.component)(function() {
		this.attributes({
			embedDataCache: {},
			includeParentTweet: !0,
			includeMedia: !0,
			closeEvent: "uiCloseEmbedTweet",
			dataEmbeddedTweetEvent: "dataEmbeddedTweet",
			dataEmbeddedTweetErrorEvent: "dataEmbeddedTweetError",
			embedTextArea: ".js-embed-textarea",
			embedIncludeParentCheckBox: ".js-embed-include-parent",
			embedIncludeMediaCheckBox: ".js-embed-include-media",
			modalTitle: ".js-header-title",
			embedIframe: ".js-embed-iframe",
			embedIframeContainer: ".js-embed-iframe-container",
			embedModalPanel: ".js-modal-panel",
			embedModalHeader: ".js-mdl-header",
			embedModalContent: ".js-mdl-content",
			embedLoading: ".js-embed-loading-container",
			tweet: null
		}), this.after("initialize", function() {
			this.includeParentTweet = this.attr.includeParentTweet, this.includeMedia = this.attr.includeMedia;
			var e = o.default.render("embed_tweet", {
				loading: !0
			});
			this.$node.html(e), this.trigger(document, "uiNeedsEmbeddedTweet", {
				tweetID: this.attr.tweet.id,
				hideThread: !this.includeParentTweet,
				hideMedia: !this.includeMedia
			}), this.on(this.attr.closeEvent, this.teardown), this.on("change", {
				embedIncludeParentCheckBox: this.handleEmbeddedTweetOptionsChange,
				embedIncludeMediaCheckBox: this.handleEmbeddedTweetOptionsChange
			}), this.on(document, this.attr.dataEmbeddedTweetEvent, this.handleEmbeddedTweet), this.on(document, this.attr.dataEmbeddedTweetErrorEvent, this.handleEmbeddedTweetError)
		}), this.handleEmbeddedTweet = function(e, t) {
			var i, n, a, l, c, u, d, h;
			if (t && t.html && t.request && t.request.tweetID === this.attr.tweet.id && t.request.hideThread !== this.includeParentTweet && t.request.hideMedia !== this.includeMedia)
				if (this.putEmbedDataInCache(t), h = function(e) {
						var h, m = o.default.render("embed_tweet", {
							html: t.html,
							isReply: !!e.inReplyToID,
							includeParentTweet: this.includeParentTweet,
							hasMedia: !1,
							includeMedia: this.includeMedia
						});
						this.$node.html(m), this.select("modalTitle").text((0, s.default)("Embed this Tweet")), this.on(this.select("embedTextArea"), "focus", this.handleInputBoxFocus), n = this.select("embedIframe"), a = this.select("embedIframeContainer"), l = this.select("embedModalPanel"), c = this.select("embedModalHeader"), u = this.select("embedModalContent"), d = this.select("embedLoading"), h = function() {
							a.css("height", "auto"), n.height(Math.max((0, r.default)("html", i).outerHeight(), (0, r.default)("body", i).outerHeight(), n.height())), l.height(u.height() + c.outerHeight()), (0, r.default)("a", i).attr("target", "_blank")
						}, n.load(function() {
							d.addClass("is-hidden"), h(), this.resizeIframeIntervalId = setInterval(h, 500)
						}.bind(this)), n[0] && ((i = n[0].contentWindow.document).open(), i.write(["<!DOCTYPE html>", '<meta charset="utf-8">', '<base href="https://tweetdeck.twitter.com">', '<meta name="twitter:widgets:csp" content="on">', t.html].join("\n")), i.close()), u.removeClass("horizontal-flow-container")
					}, !this.attr.tweet.cards && this.attr.tweet.hasLink()) {
					var m = TD.controller.clients.getClient(this.attr.tweet.account.getKey());
					m.show(this.attr.tweet.id, h.bind(this), function() {
						this.trigger(document, this.attr.dataEmbeddedTweetErrorEvent, t)
					}.bind(this))
				} else h.call(this, this.attr.tweet)
		}, this.handleEmbeddedTweetError = function(e, t) {
			t && t.request && t.request.tweetID === this.attr.tweet.id && (this.teardown(e), (0, l.showErrorNotification)({
				message: (0, s.default)("Sorry, couldn't retrieve embedded Tweet. Please try again later.")
			}))
		}, this.handleInputBoxFocus = function(e) {
			var t = this.select("embedTextArea");
			(0, n.default)(function() {
				t.select()
			})
		}, this.handleEmbeddedTweetOptionsChange = function(e) {
			var t;
			this.includeParentTweet = (0, r.default)(this.attr.embedIncludeParentCheckBox).prop("checked"), this.includeMedia = (0, r.default)(this.attr.embedIncludeMediaCheckBox).prop("checked");
			var i = o.default.render("embed_tweet", {
				loading: !0
			});
			this.$node.html(i), (t = this.getEmbedDataFromCache()) ? this.trigger(document, "dataEmbeddedTweet", t) : this.trigger(document, "uiNeedsEmbeddedTweet", {
				tweetID: this.attr.tweet.id,
				hideThread: !this.includeParentTweet,
				hideMedia: !this.includeMedia
			})
		}, this.getEmbedDataFromCache = function() {
			var e = !!this.includeParentTweet,
				t = !!this.includeMedia,
				i = this.attr.embedDataCache[e + ":" + t];
			if (i && i.request.tweetID === this.attr.tweet.id) return i
		}, this.putEmbedDataInCache = function(e) {
			var t = !!this.includeParentTweet,
				i = !!this.includeMedia;
			this.attr.embedDataCache[t + ":" + i] = e
		}, this.after("teardown", function() {
			clearInterval(this.resizeIframeIntervalId), this.$node.html("")
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(18)),
		s = i(58),
		r = o(i(6)),
		a = o(i(7));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			commandPaletteFeatureFlag: "tweetdeck_dogfood"
		}), this.initialState({
			isMac: function() {
				return "osx" === TD.util.getOSName()
			},
			withCommandPalette: !1
		}), this.componentDidInitialize = function() {
			this.watchFeatureFlags()
		}, this.render = function() {
			this.$node.html(r.default.render("keyboard_shortcut_list", this.state))
		}, this.watchFeatureFlags = function() {
			var e = this;
			this.observe((0, s.getStreamForFeatureFlag)(this.attr.commandPaletteFeatureFlag)).subscribe(function(t) {
				return e.mergeState({
					withCommandPalette: t
				})
			})
		}
	}, n.default)
}, function(e, t, i) {
	"use strict";
	var n = o(i(2)),
		s = o(i(0)),
		r = i(5),
		a = o(i(6));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(function() {
		this.attributes({
			tblLeftItemClass: "padding-l--28 padding-v--10",
			tblRightItemClass: "padding-h--28 padding-v--10",
			sectionHeaderClass: "padding-h--28 padding-t--25 padding-b--10 txt-size--10 txt-uppercase txt-bold",
			advancedSearchContentClass: "padding-h--28 padding-v--5 txt-size--12",
			tryButtonSelector: ".js-try-query",
			searchOperators: [{
				sectionTitle: (0, n.default)("Tweet content"),
				sectionOperators: [{
					query: "watching now",
					description: (0, n.default)('containing both "watching" and "now"')
				}, {
					query: '"happy hour"',
					description: (0, n.default)('containing the exact phrase "happy hour"')
				}, {
					query: "love OR hate",
					description: (0, n.default)('containing either "love" or "hate" (or both)')
				}, {
					query: "beer -root",
					description: (0, n.default)('containing “beer” but not "root"')
				}, {
					query: "#haiku",
					description: (0, n.default)('containing the hashtag "haiku"')
				}, {
					query: "$twtr",
					description: (0, n.default)("containing a cashtag, useful for following stock information")
				}, {
					query: "politics filter:safe",
					description: (0, n.default)('containing "politics" with Tweets marked as potentially sensitive removed')
				}, {
					query: "puppy url:twitter",
					description: (0, n.default)('containing "puppy" and a URL with the word "twitter" anywhere within it')
				}, {
					query: "traffic ?",
					description: (0, n.default)('containing "traffic" and asking a question')
				}]
			}, {
				sectionTitle: (0, n.default)("Tweet information"),
				sectionOperators: [{
					query: "near:london within:15mi",
					description: (0, n.default)("geotagged in a place, within a radius (can use km or mi)")
				}, {
					query: "superhero since:2015-12-21",
					description: (0, n.default)("containing “superhero” and sent since “2015-12-21” (year-month-day)")
				}, {
					query: "#brexit until:2016-06-23",
					description: (0, n.default)('containing "#brexit" and sent before the date "2016-06-23" (year-month-day)')
				}, {
					query: "puppy source:tweetdeck",
					description: (0, n.default)('containing "puppy" and sent from "tweetdeck" (common sources are "tweetdeck", "twitter_for_iphone", "twitter_for_android" and "twitter_web_client")')
				}, {
					query: "puppy min_retweets:5",
					description: (0, n.default)('containing "puppy" with a minimum of 5 Retweets')
				}, {
					query: "puppy min_faves:10",
					description: (0, n.default)('containing "puppy" with a minimum of 10 likes')
				}, {
					query: "puppy min_replies:100",
					description: (0, n.default)('containing "puppy" with a minimum of 100 replies')
				}, {
					query: "puppy filter:nativeretweets",
					description: (0, n.default)('Retweets containing "puppy"')
				}, {
					query: "puppy filter:retweets",
					description: (0, n.default)('old style Retweets ("RT") and quoted Tweets containing "puppy"')
				}]
			}, {
				sectionTitle: (0, n.default)("Tweet media"),
				sectionOperators: [{
					query: "kitten filter:media",
					description: (0, n.default)('containing "kitten" and an image or video')
				}, {
					query: "kitten filter:native_video",
					description: (0, n.default)('containing "kitten" and an uploaded video, Amplify video or Periscope')
				}, {
					query: "kitten filter:periscope",
					description: (0, n.default)('containing "kitten" and a Periscope video URL')
				}, {
					query: "kitten filter:images",
					description: (0, n.default)('containing "kitten" and links identified as photos')
				}, {
					query: "kitten filter:twimg",
					description: (0, n.default)('containing "kitten" and a pic.twitter.com link representing one or more photos')
				}, {
					query: "kitten filter:links",
					description: (0, n.default)('containing "kitten" and linking to URL')
				}]
			}, {
				sectionTitle: (0, n.default)("Users"),
				sectionOperators: [{
					query: "from:jack",
					description: (0, n.default)("sent from Twitter account @jack")
				}, {
					query: "list:NASA/space-tweets",
					description: (0, n.default)("sent from a Twitter account in the NASA List space-tweets")
				}, {
					query: "to:NASA",
					description: (0, n.default)("replying to Twitter account @NASA")
				}, {
					query: "@NASA",
					description: (0, n.default)("mentioning Twitter account @NASA")
				}, {
					query: "breaking filter:verified",
					description: (0, n.default)('containing the word "breaking" from verified users only')
				}]
			}],
			advancedSearches: [{
				sectionTitle: (0, n.default)("Negation of filters"),
				sectionExplanation: (0, n.default)('Any "filter:type" can also be negated using the "-" symbol.'),
				sectionExamples: [{
					example: (0, n.default)("Example: I want Tweets from @Nasa with all types of media except images"),
					query: "from:NASA filter:media -filter:images"
				}]
			}, {
				sectionTitle: (0, n.default)("Combining filters and boolean queries"),
				sectionExplanation: (0, n.default)("Combine complex queries together with booleans and parentheses to refine your results."),
				sectionExamples: [{
					example: (0, n.default)('Example 1: I want mentions of either "puppy" or "kitten", with mentions of either "sweet" or "cute", excluding Retweets, with at least 10 likes.'),
					query: "(puppy OR kitten) AND (sweet OR cute) -filter:nativeretweets min_faves:10"
				}, {
					example: (0, n.default)('Example 2: I want mentions of "space" and either "big" or "large" by members of the NASA astronauts List, sent from an iPhone or twitter.com, with images, excluding mentions of #asteroid, since 2011.'),
					query: "space (big OR large) list:nasa/astronauts (source:twitter_for_iphone OR source:twitter_web_client) filter:images since:2011-01-01 -#asteroid"
				}]
			}]
		}), this.after("initialize", function() {
			var e = a.default.render("search_operator_list", this.attr);
			this.$node.html(e), this.on("click", {
				tryButtonSelector: this.handleTryClick
			})
		}), this.handleTryClick = function() {
			(0, s.default)(document).trigger("uiCloseModal"), (0, s.default)(document).trigger("uiPerformSearch", {
				query: event.target.dataset.query
			}), (0, s.default)(document).trigger("scribeEvent", {
				terms: {
					page: "main",
					section: "search_tips",
					element: "try",
					action: "click"
				}
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = d(i(0)),
		s = i(5),
		r = d(i(810)),
		a = d(i(811)),
		o = d(i(2559)),
		l = d(i(6)),
		c = d(i(153)),
		u = d(i(17));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, s.component)(function() {
		this.attributes({
			screenName: null,
			dataAction: "[data-action]",
			socialProofSelector: ".js-social-proof",
			followFromSelector: ".js-action-follow",
			followStateSelector: ".prf-follow-status",
			closeEvent: "uiTwitterProfileClosing",
			numUsersInSocialProof: 3,
			isSocialProofAnimatingClass: "social-proof-animating"
		}), this.handleTwitterAccount = function(e, t) {
			if (t && t.account && t.screenName && t.screenName.toLowerCase() === this.screenName.toLowerCase()) {
				this.twitterUser = t;
				var i = l.default.render("twitter_profile", {
					twitterProfile: {
						preferredAccount: this.account.getUsername(),
						profile: this.twitterUser,
						isWithHeld: this.twitterUser && this.twitterUser.isWithHeld(),
						displayOrderProfile: TD.controller.columnManager.DISPLAY_ORDER_PROFILE,
						account: this.account,
						showAccountMenu: !0,
						hideFromAccountName: !0,
						isSingleAccount: this.isSingleAccount
					}
				});
				this.$node.html(i), this.on(this.attr.dataAction, "click", this.handleActionClick), this.twitterUser.isMe() || this.trigger(document, "uiNeedsUserProfileSocialProof", {
					screenName: this.screenName
				});
				var n = {
					account: this.account,
					twitterUser: this.twitterUser,
					closeEvent: this.attr.closeEvent
				};
				a.default.attachTo(this.select("followFromSelector"), n), r.default.attachTo(this.select("followStateSelector"), n)
			}
		}, this.handleTwitterUserError = function(e, t) {
			t.screenName.toLowerCase() === this.screenName.toLowerCase() && this.teardown()
		}, this.handleSocialProofData = function(e, t) {
			var i, n, s, r = this.select("socialProofSelector"),
				a = [],
				o = 0,
				c = [];
			if (t.users && t.users.length) {
				if (t.users.length > this.attr.numUsersInSocialProof)
					for (o = t.users.length - this.attr.numUsersInSocialProof; a.length < this.attr.numUsersInSocialProof;) s = Math.floor(Math.random() * t.users.length), a.push(t.users.splice(s, 1)[0]);
				else a = t.users;
				a.forEach(function(e) {
					c.push(l.default.render("text/social_proof_link", {
						screenName: e.screen_name,
						emojifiedName: u.default.cleanWithEmoji(e.name)
					}))
				}), o > 0 && c.push(l.default.render("text/followers_you_follow_link", {
					screenName: this.screenName
				})), c.length > 1 && (n = c.splice(c.length - 1, 1)), i = c.join(", "), r.removeClass("is-hidden"), r.html(l.default.render("twitter_profile_social_proof", {
					followedByString: i,
					others: n
				})), this.transitionExpand(r, this.attr.isSocialProofAnimatingClass)
			}
		}, this.handleActionClick = function(e) {
			var t = (0, n.default)(e.currentTarget),
				i = t.data("type"),
				s = TD.components.OpenColumnHome.URL_BASE + "/" + i,
				r = TD.util.maybeOpenClickExternally(e);
			r || (this.screenName && (s += "?screenName=" + this.screenName), o.default.publishToQueue(TD.components.OpenColumn.GO_EVENT, {
				data: s,
				history: {
					type: "uiShowProfile",
					target: document,
					data: {
						id: this.screenName
					}
				}
			}), e.preventDefault(), e.stopPropagation())
		}, this.destroy = function(e) {
			e.stopPropagation(), this.teardown()
		}, this.before("teardown", function() {
			this.trigger(this.select("followStateSelector"), this.attr.closeEvent), this.trigger(this.select("followFromSelector"), this.attr.closeEvent)
		}), this.after("teardown", function() {
			this.$node.html("")
		}), this.handleSingleAccountStatus = function(e, t) {
			this.isSingleAccount = t.isSingleAccount
		}, this.handlePreferredAccount = function(e, t) {
			this.account = t.account
		}, this.after("initialize", function() {
			this.screenName = "" + this.attr.screenName, 0 === this.screenName.indexOf("@") && (this.screenName = this.screenName.substring(1)), this.on(document, "dataSingleAccountStatus", this.handleSingleAccountStatus), this.on(document, "dataPreferredAccount", this.handlePreferredAccount), this.trigger(document, "uiNeedsSingleAccountStatus"), this.on(document, "dataTwitterUser", this.handleTwitterAccount), this.on(document, "dataTwitterUserError", this.handleTwitterUserError), this.on(document, "dataUserProfileSocialProof", this.handleSocialProofData);
			var e = l.default.render("twitter_profile", {
				loading: !0
			});
			this.$node.html(e), this.trigger(document, "uiNeedsPreferredAccount"), this.trigger(document, "uiNeedsTwitterUser", {
				screenName: this.screenName
			})
		})
	}, c.default)
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = {
		publishToQueue: function(e, t) {
			TD.storage.notification.notify(e, t)
		},
		publish: function(e, t) {
			r.default.publish(e, t)
		},
		subscribe: function(e, t) {
			return r.default.subscribe(e, t)
		},
		unsubscribe: function(e) {
			r.default.unsubscribe(e)
		}
	};
	e.exports = a
}, function(e, t, i) {
	"use strict";
	var n = o(i(2)),
		s = o(i(6)),
		r = o(i(7)),
		a = i(19);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			twitterUser: null,
			account: null,
			tweetId: void 0,
			conversationId: void 0,
			isGroupConversation: void 0,
			closeEvent: "uiReportMessageActionClose",
			spamButtonSelector: ".js-report-spam",
			abuseButtonSelector: ".js-mark-abusive"
		}), this.initialState({
			reportSource: function() {
				return this.attr.tweetId ? (0, n.default)("message") : (0, n.default)("conversation")
			},
			isFinished: !1
		}), this.after("initialize", function() {
			this.on("click", {
				spamButtonSelector: this.handleActionFactory("spam"),
				abuseButtonSelector: this.handleActionFactory("abuse")
			}), this.on(document, "dMReportError", this.handleReportError)
		}), this.handleManualDismiss = function() {
			this.trigger("uiShowReportMessageCancel")
		}, this.handleActionFactory = function(e) {
			return function(t) {
				t.preventDefault(), this.trigger("uiNeedsDMReport", {
					account: this.attr.account,
					dmId: this.attr.tweetId,
					conversationId: this.attr.conversationId,
					reportType: e,
					blockUser: !1
				}), this.mergeState({
					isFinished: !0
				})
			}.bind(this)
		}, this.handleReportError = function(e, t) {
			t.error && (this.trigger("uiShowReportMessageError"), (0, a.showErrorNotification)({
				message: (0, n.default)("Error: Unable to report {{reportSource}}", {
					reportSource: this.state.reportSource
				})
			}), this.mergeState({
				isFinished: !1
			}))
		}, this.render = function() {
			var e = s.default.render("report_message_options", {
				reportSource: this.state.reportSource,
				isFinished: this.state.isFinished,
				screenName: this.attr.twitterUser.screenName,
				isGroupConversation: this.attr.isGroupConversation
			});
			this.$node.html(e)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(13),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(83),
		o = i(6),
		l = i(2562);
	e.exports = a.mixin(function() {
		this.attributes({
			account: null,
			twitterUser: null,
			tweetId: "",
			isMedia: !1
		}), this.after("initialize", function() {
			var e = o.render("report_flow", {
				url: l.getReportUrl({
					reportedUserId: this.attr.twitterUser.id,
					reportedTweetId: this.attr.tweetId,
					isMedia: this.attr.isMedia
				})
			});
			this.$node.html(e), this.on(window, "message", this.handlePostMessage)
		}), this.handlePostMessage = function(e) {
			var t = (0, r.default)(e, ["originalEvent", "data", "type"]),
				i = (0, r.default)(e, ["originalEvent", "data", "action"]);
			"ReportAction" === t && this.triggerAction(i)
		}, this.triggerAction = function(e) {
			var t = {
				account: this.attr.account,
				twitterUser: this.attr.twitterUser
			};
			switch (e) {
				case "mute":
					return this.trigger(document, "uiMuteAction", t);
				case "block":
					return this.trigger(document, "uiBlockAction", t);
				case "unfollow":
					return this.trigger(document, "uiUnfollowAction", t)
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = i(109),
		s = {
			baseUrl: "https://twitter.com/i/safety/report_story",
			completeUrl: "https://twitter.com/i/safety/report_story_complete",
			getReportUrl: function(e) {
				return e.reportedTweetId ? s.getReportTweetUrl(e) : s.getReportUserUrl(e)
			},
			getReportUserUrl: function(e) {
				var t = new n(s.baseUrl);
				return t.setQuery({
					source: "reportprofile",
					initiated_in_app: !0,
					reported_user_id: e.reportedUserId
				}), t.href()
			},
			getReportTweetUrl: function(e) {
				var t = new n(s.baseUrl);
				return t.setQuery({
					source: "reporttweet",
					initiated_in_app: !0,
					reported_user_id: e.reportedUserId,
					reported_tweet_id: e.reportedTweetId,
					is_media: !!e.isMedia
				}), t.href()
			}
		};
	e.exports = s
}, function(e, t, i) {
	"use strict";
	var n = a(i(0)),
		s = a(i(2564)),
		r = a(i(7));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			userToFollow: null
		}), this.render = function() {
			var e = this,
				t = TD.storage.accountController.getAccountsForService("twitter"),
				i = document.createDocumentFragment();
			this.trigger(this.childTeardownEvent), t.forEach(function(t) {
				if (t.getUserID() !== e.attr.userToFollow.id) {
					var r = n.default.createElement("div").addClass("js-component");
					e.attachChild(s.default, r, {
						userToFollow: e.attr.userToFollow,
						account: t
					}), i.appendChild(r[0])
				}
			}), this.$node.html(i)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = o(i(15)),
		s = o(i(0)),
		r = o(i(7)),
		a = o(i(6));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			userToFollow: null,
			account: null,
			template: "actions/follow_from",
			followButtonSelector: ".js-follow-button",
			followButtonHolderSelector: ".js-action-follow"
		}), this.initialState({
			relationship: "stranger",
			stopSubsequentFollows: !1
		}), this.before("teardown", function() {
			(0, n.default)(this.subscriptions, function(e) {
				return s.default.unsubscribe(e)
			})
		}), this.componentDidInitialize = function() {
			var e = this;
			this.initialRender(), this._fetchFriendship().addErrback(function(e) {
				console.log("Unhandled Err in FollowFrom._fetchFriendship:", e)
			}), this.on("click", {
				followButtonSelector: this.handleClick.bind(this)
			});
			var t = this.attr.userToFollow.screenName;
			this.subscriptions = [s.default.subscribe("/user/" + t + "/block", function(t) {
				return e._handleBlock(t)
			}), s.default.subscribe("/user/" + t + "/blocked", function(t) {
				return e._handleBlock(t)
			})]
		}, this._handleBlock = function(e) {
			e.getKey() === this.attr.account.getKey() && this.mergeState({
				relationship: "blocked"
			})
		}, this.initialRender = function() {
			var e = TD.storage.accountController,
				t = 1 === e.getAccountsForService("twitter").length,
				i = {
					account: this.attr.account,
					isSingleAccount: t
				},
				n = a.default.render(this.attr.template, i);
			this.$node.html(n)
		}, this.render = function() {
			var e = this.select("followButtonHolderSelector");
			e.removeClass("s-thats-you s-not-following s-following s-pending s-blocking");
			var t = this.select("followButtonSelector");
			switch (t.removeClass("is-disabled"), this.state.relationship) {
				case "me":
					e.addClass("s-thats-you");
					break;
				case "blocked":
					e.addClass("s-blocking");
					break;
				case "pending":
					e.addClass("s-pending"), t.addClass("is-disabled");
					break;
				case "following":
					e.addClass("s-following");
					break;
				case "stranger":
					e.addClass("s-not-following")
			}
		}, this._fetchFriendship = function() {
			if (this.attr.account.getUserID() === this.attr.userToFollow.id) return this.mergeState({
				relationship: "me"
			}), TD.core.defer.succeed();
			var e = TD.controller.clients.getClient(this.attr.account.getKey()),
				t = new TD.core.defer.Deferred;
			return e.showFriendship(this.attr.account.getUserID(), this.attr.userToFollow.id, null, t.callback.bind(t), t.errback.bind(t)), t.addCallbackWith(this, this._handleFriendshipResponse), t
		}, this._handleFriendshipResponse = function(e) {
			var t = e.relationship.source;
			!0 === t.blocking ? this.mergeState({
				relationship: "blocked"
			}) : !0 === t.following ? this.mergeState({
				relationship: "following"
			}) : t.following_requested && !t.following_received ? this.mergeState({
				relationship: "pending"
			}) : this.mergeState({
				relationship: "stranger"
			})
		}, this.handleClick = function(e) {
			var t = this;
			if (!this.state.stopSubsequentFollows) {
				var i = this.attr.account,
					n = this.select("followButtonSelector");
				if (!n.hasClass("is-disabled")) {
					switch (this.state.relationship) {
						case "me":
							TD.util.openURL("https://twitter.com/settings/profile");
							break;
						case "blocked":
							this.attr.userToFollow.unblock(i, null, function() {
								t.mergeState({
									relationship: "blocked"
								})
							}), this.mergeState({
								relationship: "stranger"
							});
							break;
						case "pending":
						case "following":
							this.attr.userToFollow.unfollow(i, null, function() {
								t.mergeState({
									relationship: "following"
								})
							}), this.mergeState({
								relationship: "stranger"
							});
							break;
						case "stranger":
							this.attr.userToFollow.follow(i, function(e) {
								e.isProtected && t.mergeState({
									relationship: "pending"
								})
							}, function() {
								t.mergeState({
									relationship: "stranger"
								})
							}), this.mergeState({
								relationship: "following"
							})
					}
					this.mergeState({
						stopSubsequentFollows: !0
					}), setTimeout(function() {
						t.trigger("uiCloseModal")
					}, 500)
				}
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = h(i(224)),
		s = h(i(9)),
		r = h(i(13)),
		a = h(i(15)),
		o = h(i(2)),
		l = h(i(0)),
		c = h(i(7)),
		u = h(i(6)),
		d = i(19);

	function h(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = c.default.mixin(function() {
		this.attributes({
			tweet: null,
			buttonStates: {
				favorited: "s-favorited",
				unfavorited: "s-not-favorited",
				protected: "s-protected"
			},
			accounts: function() {
				return TD.storage.accountController.getAccountsForService("twitter")
			}
		}), this.initialState({
			stopSubsequentLikes: !1
		}), this.componentDidInitialize = function() {
			this.initialRender(), this.setUpListeners()
		}, this.getButtonForAccount = function(e) {
			return this.$node.find('[data-account-key="' + e + '"]')
		}, this.setUpListeners = function() {
			var e = this,
				t = this.attr.accounts;
			(0, a.default)(t, function(t) {
				var i = t.getKey(),
					n = e.getButtonForAccount(i);
				n.click(e.handleFavoriteButtonClick.bind(e, i)), e.on(document, "dataFavoriteState", function(t, n) {
					return e.handleFavoriteState((0, s.default)({
						currentAccountKey: i
					}, n))
				}), e.on(document, "dataFavoriteStateError", function(t, n) {
					return e.handleFavoriteStateError((0, s.default)({
						currentAccountKey: i
					}, n))
				}), e.on(document, "dataFavoriteError", function(t, n) {
					return e.handleFavoriteError((0, s.default)({
						currentAccountKey: i
					}, n))
				}), e.trigger("uiNeedsFavoriteState", {
					tweetId: e.attr.tweet.id,
					accountKey: i
				})
			})
		}, this.handleFavoriteButtonClick = function(e, t) {
			var i = this;
			if (!this.state.stopSubsequentLikes) {
				var n = this.attr.buttonStates.favorited,
					s = (0, l.default)(t.currentTarget),
					r = s.is(":disabled") || s.hasClass("is-disabled"),
					a = s.hasClass(n);
				if (!r) {
					var o = a ? "uiUnfavoriteTweet" : "uiFavoriteTweet";
					this.trigger(o, {
						tweet: this.attr.tweet,
						accountKey: e
					}), this.mergeState({
						stopSubsequentLikes: !0
					}), setTimeout(function() {
						i.trigger("uiCloseModal")
					}, 500)
				}
			}
		}, this.initialRender = function() {
			var e = this.attr.accounts,
				t = u.default.render("favorite_from_options", {
					no_horiz_flow_container: !0,
					accounts: e,
					tweet: this.attr.tweet
				});
			this.$node.html(t)
		}, this.render = function() {}, this.updateButton = function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
				t = this.attr.buttonStates,
				i = (0, n.default)(t).join(" "),
				s = e.$button,
				r = e.tooltip,
				a = e.newState,
				o = e.disabled,
				l = t[a];
			s.removeClass(i).addClass(l).removeAttr("title").removeAttr("data-orig-title").prop("disabled", o), r && s.attr("title", r).attr("data-orig-title", r)
		}, this.handleFavoriteState = function(e) {
			if (e.tweetId === this.attr.tweet.id && e.accountKey === e.currentAccountKey) {
				var t = e.isFavorite ? "favorited" : "unfavorited",
					i = this.getButtonForAccount(e.accountKey);
				this.updateButton({
					newState: t,
					$button: i
				})
			}
		}, this.handleFavoriteStateError = function(e) {
			if (e.request.tweetId === this.attr.tweet.id && e.request.accountKey === e.currentAccountKey) {
				var t = (0, r.default)(e, "error.responseJSON.errors[0].code");
				if (179 !== t)(0, d.showErrorNotification)({
					message: (0, o.default)("Cannot retrieve favorite status")
				});
				else {
					var i = this.getButtonForAccount(e.request.accountKey);
					this.updateButton({
						$button: i,
						newState: "protected",
						tooltip: (0, o.default)("You cannot favorite this protected Tweet"),
						disabled: !0
					})
				}
			}
		}, this.handleFavoriteError = function(e) {
			e.request.tweet.id === this.attr.tweet.id && e.request.accountKey === e.currentAccountKey && (0, d.showErrorNotification)({
				message: (0, o.default)("Failed changing favorite status")
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = l(i(122)),
		s = i(275),
		r = i(17),
		a = l(i(6)),
		o = l(i(7));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = o.default.mixin(function() {
		this.attributes({
			list: null,
			addUsersTemplate: "lists/member_import",
			addUsersButtonTemplate: "lists/add_users_to_list_button",
			membersTextareaSelector: ".js-multiple-users-input",
			addButtonContainerSelector: ".js-add-users-to-list-btn",
			addButtonSelector: ".js-add-multiple",
			backButtonSelector: ".js-dismiss-top-modal",
			maxUsers: 100,
			placeholderText: "@username \n@username \n@username \n..."
		}), this.initialState({
			canAddMembers: !1
		}), this.after("initialize", function() {
			this.$membersTextarea = this.select("membersTextareaSelector"), this.on("keyup keydown keypress paste", {
				membersTextareaSelector: this.handleTextAreaChange
			}), this.on("click", {
				addButtonSelector: this.handleAddMembers,
				backButtonSelector: this.openEditListModal
			})
		}), this.componentDidInitialize = function() {
			this.initialRender(), this.$addUsersButtonContainer = this.select("addButtonContainerSelector")
		}, this.handleTextAreaChange = (0, s.makeDOMMutator)(function() {
			var e = this.$membersTextarea.first().val().trim(),
				t = new RegExp("[^A-Za-z0-9_@]"),
				i = e.split(t).map(function(e) {
					return e = e.trim(), (0, r.isLinkToTwitterItem)(e) && (e = (0, r.extractScreenNameFromPermalink)(e)), (0, r.deMentionify)(e)
				}).filter(Boolean).map(function(e) {
					return {
						screenName: e
					}
				});
			this.validUsers = (0, n.default)(i, function(e) {
				return e.screenName
			});
			var s = Boolean(this.validUsers.length) && this.validUsers.length <= this.attr.maxUsers;
			this.mergeState({
				canAddMembers: s
			})
		}), this.handleAddMembers = function() {
			this.state.canAddMembers && this.trigger("uiShowEditListMembers", {
				list: this.attr.list,
				autoAddUsers: this.validUsers
			})
		}, this.openEditListModal = function() {
			this.trigger("uiShowEditListMembers", {
				list: this.attr.list
			})
		}, this.initialRender = function() {
			var e = a.default.render(this.attr.addUsersTemplate, {
				canAddMembers: this.state.canAddMembers,
				placeholderText: this.attr.placeholderText
			});
			this.$node.html(e)
		}, this.render = function() {
			var e = a.default.render(this.attr.addUsersButtonTemplate, {
				canAddMembers: this.state.canAddMembers
			});
			this.$addUsersButtonContainer.first().html(e)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(32)),
		s = u(i(2)),
		r = u(i(6)),
		a = u(i(7)),
		o = i(17),
		l = i(19),
		c = u(i(881));

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = a.default.mixin(function() {
		this.attributes({
			list: null,
			members: null,
			copyUsersTemplate: "lists/member_export",
			membersTextareaSelector: ".js-copy-users-input",
			copyButtonSelector: ".js-copy-members",
			backButtonSelector: ".js-dismiss-top-modal"
		}), this.componentDidInitialize = function() {
			var e = this;
			this.on("click", {
				backButtonSelector: this.openEditListModal
			}), (0, n.default)(function() {
				e.select("membersTextareaSelector").select()
			}), this.setupClipboard()
		}, this.setupClipboard = function() {
			var e = this;
			this.clipboard = new c.default(this.attr.copyButtonSelector, {
				target: function() {
					return e.select("membersTextareaSelector").get(0)
				}
			}), this.clipboard.on("success", function() {
				(0, l.showNotification)({
					message: (0, s.default)("List copied to clipboard")
				})
			}), this.clipboard.on("error", function(e) {
				(0, l.showErrorNotification)({
					message: (0, s.default)("List could not be copied")
				})
			})
		}, this.openEditListModal = function() {
			this.trigger("uiShowEditListMembers", {
				list: this.attr.list
			})
		}, this.render = function() {
			var e = r.default.render(this.attr.copyUsersTemplate, {
				members: this.attr.members,
				name: (0, o.cleanWithEmoji)(this.attr.list.name),
				showCopyButton: !(0, o.isSafari)() || (0, o.getWebkitVersion)() > 602
			});
			this.$node.html(e)
		}, this.componentWillTeardown = function() {
			this.clipboard.destroy()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(153),
		l = i(2569),
		c = i(866),
		u = i(2570);
	e.exports = a(function() {
		this.attributes({
			messageSelector: ".js-message-banner",
			applicationSelector: ".js-app",
			isAnimatingClass: "is-application-animating"
		}), this._onHidden = function() {
			this.trigger("uiMessageBannerContainerHidden")
		}, this.showAccessDeniedMessage = function(e, t) {
			var i;
			i = t.isLoginAccount ? this.getLoginAccountAccessDeniedMessageData(t) : this.getReauthorizeAccountMessageData(t), (0, r.default)(document).trigger("dataMessage", {
				message: i
			})
		}, this.removeAccessDeniedMessage = function() {
			(0, r.default)(document).trigger("dataMessageRemove", {
				id: this.getAccountSuspendedMessageId()
			}), (0, r.default)(document).trigger("dataMessageRemove", {
				id: this.getLoginAccountAccessDeniedMessageId()
			})
		}, this.showAccountSuspendedMessage = function(e, t) {
			var i = this.getAccountSuspendedMessageData(t);
			(0, r.default)(document).trigger("dataMessage", {
				message: i
			})
		}, this.handleMessageBannerResize = function() {
			this.transitionTop(this.$application, this.attr.isAnimatingClass, this.$message.outerHeight())
		}, this.handleHideMessageBannerContainer = function() {
			this.transitionTop(this.$application, this.attr.isAnimatingClass, 0, this._boundOnHiddenFn)
		}, this.after("initialize", function() {
			this.$application = this.select("applicationSelector"), this.$message = this.select("messageSelector"), this._boundOnHiddenFn = this._onHidden.bind(this), this.on(document, "uiHidingMessageBanner", this.handleHideMessageBannerContainer), this.on(document, "uiMessageBannerShown", this.handleMessageBannerResize), this.on(document, "uiMessageBannerResized", this.handleMessageBannerResize), this.on(document, "uiShowAccountAccessDeniedBanner", this.showAccessDeniedMessage), this.on(document, "uiHideAccountAccessDeniedBanner", this.removeAccessDeniedMessage), this.on(document, "dataTwitterAccountSuspended", this.showAccountSuspendedMessage)
		})
	}, o, l, c, u)
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = function() {
		this.getReauthorizeAccountMessageData = function(e) {
			return {
				id: "expired-token-error",
				text: (0, r.default)("You can no longer access the @{{1}} account.", {
					1: e.account.getUsername()
				}),
				colors: {
					background: "#ea596e",
					foreground: "white"
				},
				actions: [{
					id: "no-button",
					action: "trigger-event",
					label: (0, r.default)("Remove columns"),
					class: "Button--danger",
					event: {
						type: "uiAccountAction",
						data: {
							action: "remove",
							accountKey: e.account.getKey()
						}
					}
				}, {
					id: "keep-columns",
					action: "trigger-event",
					label: (0, r.default)("Keep columns"),
					class: "Button--primary" + (TD.decider.get("enable_rewrite_columns") ? "" : " is-hidden"),
					event: {
						type: "uiAccountAction",
						data: {
							action: "rewriteColumns",
							accountKey: e.account.getKey()
						}
					}
				}, {
					id: "yes-button",
					action: "trigger-event",
					label: (0, r.default)("Enter account password"),
					class: "Button--primary",
					event: (e.account, {
						type: "uiShowAccountSettings"
					})
				}]
			}
		}
	}
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	e.exports = function() {
		this.getAccountSuspendedMessageId = function() {
			return "expired-token-error"
		}, this.getAccountSuspendedMessageData = function(e) {
			return {
				id: this.getAccountSuspendedMessageId(),
				text: (0, r.default)("Your account @{{1}} is currently suspended.", {
					1: e.account.getUsername()
				}),
				colors: {
					background: "#b2d5ed",
					foreground: "#555"
				},
				actions: [{
					id: "yes-button",
					action: "url-ext",
					label: (0, r.default)("Visit Suspended Accounts Help page"),
					url: "https://twitter.com/account/suspended_help"
				}]
			}
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = m(i(65)),
		s = m(i(43)),
		r = m(i(15)),
		a = m(i(356)),
		o = m(i(2)),
		l = m(i(7)),
		c = m(i(18)),
		u = m(i(6)),
		d = i(19),
		h = i(883);

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = l.default.mixin(function() {
		this.attributes({
			IMAGE_TYPES: ["jpg", "jpeg", "gif", "png"],
			VIDEO_TYPES: ["mp4"],
			template: "media/media_upload",
			uploadInputSelector: ".js-media-upload"
		}), this.initialState({
			files: [],
			handlingDragEvents: !1,
			dragStatus: null,
			scheduledDate: null
		}), this.getDragStatuses = function() {
			return {
				WAITING: "waiting",
				DRAG_OK: "drag_ok",
				DRAG_ERROR: "drag_error"
			}
		}, this.getErrorMessages = function() {
			return {
				TOO_MANY_FILES_ERROR: (0, o.default)("You can't attach more than {{max}} images.", {
					max: (0, h.getMaxAllowedFiles)()
				}),
				MAX_FILES_ALREADY_ADDED_ERROR: (0, o.default)("You can't attach more than {{max}} images.", {
					max: (0, h.getMaxAllowedFiles)()
				}),
				INCORRECT_FILETYPE_ERROR: (0, o.default)("One selected file is not an image."),
				INVALID_FILESIZE_ERROR: (0, o.default)("One selected file is greater than the {{max}}MB limit.", {
					max: (0, h.getMaxAllowedSize)()
				}),
				INVALID_GIF_FILESIZE_ERROR: (0, o.default)("One selected GIF is greater than the {{max}}MB limit.", {
					max: (0, h.getMaxAllowedGifSize)()
				}),
				INVALID_VIDEO_FILESIZE_ERROR: (0, o.default)("One selected video is greater than the {{max}}MB limit.", {
					max: (0, h.getMaxAllowedVideoSize)()
				}),
				GIF_ERROR: (0, o.default)("You can't upload a GIF with other images."),
				VIDEO_ERROR: (0, o.default)("You can only include one video in a Tweet."),
				MULTIPLE_VIDEO_ERROR: (0, o.default)("You can't Tweet videos and images at the same time.")
			}
		}, this.validateFile = function(e) {
			var t = this.getErrorMessages(),
				i = (0, h.getMaxAllowedFiles)(),
				n = (0, h.getFileType)(e),
				s = e.size,
				r = {
					success: !0
				};
			return this.state.files.length >= i ? r.error = t.MAX_FILES_ALREADY_ADDED_ERROR : (0, a.default)(this.ALLOWED_MEDIA_TYPES, n) ? (0, h.isGif)(e) && s > (0, h.getMaxAllowedGifSize)({
				bytes: !0
			}) ? r.error = t.INVALID_GIF_FILESIZE_ERROR : (0, h.isVideo)(e) && s > (0, h.getMaxAllowedVideoSize)({
				bytes: !0
			}) ? r.error = t.INVALID_VIDEO_FILESIZE_ERROR : !(0, h.isGif)(e) && !(0, h.isVideo)(e) && s > (0, h.getMaxAllowedSize)({
				bytes: !0
			}) ? r.error = t.INVALID_FILESIZE_ERROR : (0, h.isVideo)(e) && "message" === this.tweetType && (r.error = t.INCORRECT_FILETYPE_ERROR) : r.error = t.INCORRECT_FILETYPE_ERROR, r.error && (r.success = !1), r
		}, this.validateFiles = function(e) {
			var t = this,
				i = this.validateStandAloneGIF(e),
				n = this.validateStandAloneVideo(e),
				s = this.validateFileCount(e.length);
			if (!i.success) return i;
			if (!n.success) return n;
			if (!s.success) return s;
			var a = null;
			return (0, r.default)(e, function(e) {
				var i = t.validateFile(e);
				i.success || (a = i)
			}), a || {
				success: !0
			}
		}, this.validateFileCount = function(e) {
			var t = this.getErrorMessages(),
				i = (0, h.getMaxAllowedFiles)(),
				n = {
					success: !0
				},
				s = this.state.files.length;
			return e > i ? n.error = t.TOO_MANY_FILES_ERROR : s > 0 && s + e > i && (n.error = t.MAX_FILES_ALREADY_ADDED_ERROR), n.error && (n.success = !1), n
		}, this.validateStandAloneVideo = function(e) {
			var t = (0, s.default)(this.state.files).concat((0, s.default)(e)),
				i = this.getErrorMessages();
			if (t.length > 1) {
				if (t.every(h.isVideo)) return {
					success: !1,
					error: i.MULTIPLE_VIDEO_ERROR
				};
				if (t.some(h.isVideo)) return {
					success: !1,
					error: i.VIDEO_ERROR
				}
			}
			return {
				success: !0
			}
		}, this.validateStandAloneGIF = function(e) {
			var t = (0, s.default)(this.state.files).concat((0, s.default)(e)),
				i = this.getErrorMessages();
			return t.length > 1 && t.some(h.isGif) ? {
				success: !1,
				error: i.GIF_ERROR
			} : {
				success: !0
			}
		}, this.handleResetImageUpload = function(e) {
			this.mergeState({
				files: []
			})
		}, this.addFilesToUpload = function(e) {
			if (e) {
				var t = this.validateFiles(e);
				if (!t.success) return void(0, d.showErrorNotification)({
					message: t.error
				});
				this.trigger("uiFilesAdded", {
					files: e
				}), this.mergeState({
					files: e
				})
			}
		}, this.updateFilesOncePreviewed = function(e, t) {
			t && t.files && this.mergeState({
				files: t.files
			})
		}, this.handleDragEnterEvent = function(e) {
			var t = this,
				i = this.getDragStatuses();
			if (this.currentDragElement) this.currentDragElement = e.target;
			else if (this.currentDragElement = e.target, this.mergeState({
					dragStatus: i.DRAG_OK
				}), e.originalEvent.dataTransfer.items) {
				e.preventDefault();
				var n = e.originalEvent.dataTransfer.items,
					s = this.validateFileCount(n.length);
				s.success ? (0, r.default)(n, function(e) {
					if ("file" === e.kind && "application/x-moz-file" !== e.type) {
						var n = t.validateFile(e);
						n.success || (t.mergeState({
							dragStatus: i.DRAG_ERROR
						}), (0, d.showErrorNotification)({
							message: n.error
						}))
					}
				}) : (this.mergeState({
					dragStatus: i.DRAG_ERROR
				}), (0, d.showErrorNotification)({
					message: s.error
				}))
			}
		}, this.handleDragLeaveEvent = function(e) {
			var t = this.getDragStatuses();
			this.currentDragElement === e.target && (this.currentDragElement = null, this.mergeState({
				dragStatus: t.WAITING
			}))
		}, this.handleDropEvent = function(e) {
			var t = this.getDragStatuses();
			if (e.preventDefault(), this.state.dragStatus === t.DRAG_OK) {
				var i = e.originalEvent.dataTransfer.files;
				this.addFilesToUpload(i)
			}
			this.mergeState({
				dragStatus: t.WAITING
			}), this.currentDragElement = null
		}, this.cancel = function(e) {
			return e.preventDefault(), !1
		}, this.handleComposeUpdatedTweetType = function(e, t) {
			this.tweetType = t.type
		}, this.handleComposeUpdatedScheduledDate = function(e, t) {
			this.mergeState({
				scheduledDate: t.scheduledDate
			})
		}, this.handleComposeAddImageClick = function() {
			this.$uploadInputSelector.click()
		}, this.handleFileUploadChange = function(e) {
			this.addFilesToUpload(e.target.files), this.$uploadInputSelector.val("")
		}, this.whenEnabled = function(e) {
			return function() {
				if (!this.state.handlingDragEvents) return e.apply(this, [].slice.call(arguments))
			}
		}, this.onDragStart = function() {
			this.mergeState({
				handlingDragEvents: !0
			})
		}, this.onDragEnd = function() {
			this.mergeState({
				handlingDragEvents: !1
			})
		}, this.getAcceptedMediaForInput = function() {
			var e = this.attr,
				t = e.IMAGE_TYPES,
				i = e.VIDEO_TYPES,
				n = t.concat(i);
			return n.map(function(e) {
				return "." + e
			}).join(",")
		}, this.initialRender = function() {
			var e = {
					acceptedMedia: this.getAcceptedMediaForInput()
				},
				t = u.default.render(this.attr.template, e);
			this.$node.html(t)
		}, this.componentDidInitialize = function() {
			this.ALLOWED_MEDIA_TYPES = [].concat((0, n.default)(this.attr.IMAGE_TYPES), (0, n.default)(this.attr.VIDEO_TYPES)), this.initialRender(), this.$uploadInputSelector = this.select("uploadInputSelector"), this.on(document, "uiResetImageUpload", this.handleResetImageUpload), this.on(document, "uiComposeAddImageClick", this.handleComposeAddImageClick), this.on(document, "uiComposeUpdatedTweetType", this.handleComposeUpdatedTweetType), this.on(document, "uiComposeUpdatedScheduledDate", this.handleComposeUpdatedScheduledDate), this.on(document, "dragstart", this.onDragStart), this.on(document, "dragend", this.onDragEnd), this.on(document, "dragenter", this.whenEnabled(this.handleDragEnterEvent)), this.on(document, "dragleave", this.whenEnabled(this.handleDragLeaveEvent)), this.on(document, "drop", this.whenEnabled(this.handleDropEvent)), this.on(document, "dragover", this.whenEnabled(this.cancel)), this.on(document, "uiComposeImageAdded", this.updateFilesOncePreviewed), this.$uploadInputSelector.on("change", this.handleFileUploadChange.bind(this))
		}
	}, c.default)
}, function(e, t, i) {
	"use strict";
	var n = r(i(519)),
		s = r(i(6));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(66),
		l = i(2573);
	e.exports = a(function() {
		this.attributes({
			chromeTemplate: "startflow_wrapper",
			startflowContentSelector: ".js-startflow-content",
			startflowChromeSelector: ".js-startflow-chrome",
			externalLinkSelector: 'a[target="_blank"]'
		}), this.after("initialize", function() {
			this.on(document, "uiLoginShowLoginForm", this.handleStartflow), this.on("click", {
				externalLinkSelector: this.openExternalLink
			})
		}), this.before("teardown", function() {
			this.$node.empty().hide()
		}), this.handleStartflow = function(e, t) {
			this.prepareStartflowUi(), this.resetStartflowUi(), this.attachChild(l, this.attr.startflowContentSelector, {
				errorMsg: t.errorMsg
			})
		}, this.prepareStartflowUi = (0, n.default)(function() {
			var e = s.default.render(this.attr.chromeTemplate, {
				version: TD.util.getFullVersionString(),
				withLoading: !0
			});
			this.$node.html(e)
		}), this.resetStartflowUi = function() {
			this.select("startflowChromeSelector").removeClass("is-hidden"), this.trigger(this.childTeardownEvent), this.select("startflowContentSelector").empty()
		}, this.openExternalLink = function(e, t) {
			e.preventDefault(), TD.util.openURL(t.el.href)
		}
	}, o, o.withBoundLifecycle)
}, function(e, t, i) {
	"use strict";
	var n, s = i(6),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component,
		o = i(66),
		l = i(869);
	e.exports = a(function() {
		this.attributes({
			formIsRendered: !1,
			errorMsg: "",
			layoutTemplate: "login/login_form",
			loginContainerSelector: ".js-signin-ui",
			teardownEvent: "uiGeneralLoginTeardown"
		}), this.after("initialize", function() {
			this.renderLayout(), this.initialRender()
		}), this.initialRender = function() {
			this.attr.formIsRendered || (this.attr.formIsRendered = !0, this.displayLoginForm())
		}, this.renderLayout = function() {
			var e = r.default.render(this.attr.layoutTemplate, {
				screenshot: TD.util.isRetina() ? i(854) : i(853)
			});
			this.$node.html(e)
		}, this.displayLoginForm = function() {
			this.attr.formIsRendered = !0, this.trigger(this.attr.teardownEvent);
			var e = this.select("loginContainerSelector").empty();
			e.html(r.default.render("login/twitter_account_login_form", {
				twitterLoginUrl: l.getLoginUrl(),
				message: this.attr.errorMsg
			})), this.trigger("uiLoginFormImpression")
		}, this.after("teardown", function() {
			this.trigger(this.attr.teardownEvent)
		})
	}, o)
}, function(e, t, i) {
	"use strict";
	var n = l(i(43)),
		s = l(i(85)),
		r = l(i(121)),
		a = l(i(0)),
		o = l(i(21));

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var c = i(5).component,
		u = i(362),
		d = i(153),
		h = i(884),
		m = i(6);
	e.exports = c(function() {
		var e = !1,
			t = null,
			i = null,
			l = null;
		this.attributes({
			templateName: "menus/column_nav_menu",
			contentSelector: ".js-column-nav-list",
			dragAndDropContainerSelector: ".js-int-scroller",
			addColumnButtonSelector: ".js-header-add-column",
			headerActionSelector: ".js-header-action",
			listItemSelector: ".js-column-nav-menu-item",
			dragHandleSelector: ".js-drag-handle",
			columnNavScrollerSelector: ".js-column-nav-scroller",
			animateInClass: "anim-rotate-in",
			animateOutClass: "anim-rotate-out",
			isNewClass: "is-new",
			overflowClass: "column-navigator-overflow",
			touchEvents: "touchstart touchmove touchend touchcancel",
			listOrientation: "vertical",
			initScrollbarsDelay: 300,
			showScrollbarsThrottle: 100
		}), this.after("initialize", function() {
			this.$columnNavScroller = (0, a.default)(".js-column-nav-scroller"), this.renderColumnNavigation(), this.on(document, "dataColumnsLoaded", this.handleDataColumnsLoaded), this.on(document, "uiMainWindowResized", this.handleUiMainWindowResized), a.default.subscribe("/storage/client/column_order_changed", this.handleColumnsChanged.bind(this)), a.default.subscribe("/storage/client/change", this.handleColumnsChanged.bind(this)), this.on(document, "uiReadStateChange", this.handleReadStateChange), this.on(document, "uiMessageUnreadCount", this.handleMessageCount), this.on(document, "dataSettings", this.handleDataSettings), this.on(document, "uiColumnTitleRefreshed", this.handleColumnTitleRefreshed), this.on("click", {
				headerActionSelector: this.handleClick
			}), this.trigger("uiNeedsSettings"), TD.util.isTouchDevice() && this.on(this.$columnNavScroller, this.attr.touchEvents, this.handleTouch), this.throttledShowScrollbars = (0, r.default)(this.showScrollbars.bind(this), this.attr.showScrollbarsThrottle), this.debouncedInitScrollbars = (0, s.default)(this.initScrollbars.bind(this), this.attr.initScrollbarsDelay), this.debouncedInitScrollbars(), this.setupDragDrop({
				type: "tweet",
				indicateDrop: !1,
				dragover: this.delegateDragOver,
				drop: function(e, t) {
					var i = (0, a.default)(e.target).closest(".js-droptarget", this.$node);
					i.length && this.trigger("uiAddOrMoveTweetToCustomTimeline", {
						id: i.data("customtimeline-id"),
						tweetId: (0, a.default)(t.el).attr("data-tweet-id"),
						account: i.data("customtimeline-account")
					})
				}
			})
		}), this.delegateDragOver = function(e) {
			var t, i = (0, a.default)(e.target);
			if ((t = i.is(".js-droptarget") ? i : i.closest(".js-droptarget", this.$node)).length) {
				if (e.preventDefault(), this.$flyover) {
					if (this.flyoverFor === t[0]) return;
					this.destroyFlyover()
				}
				this.showFlyoverFor(t[0]), this.flyoverFor = t[0]
			} else this.destroyFlyover()
		}, this.handleDataColumnsLoaded = function() {
			this.renderColumnNavigation()
		}, this.handleColumnsChanged = function() {
			this.debouncedInitScrollbars()
		}, this.renderColumnNavigation = function() {
			var e = this,
				t = TD.controller.columnManager.getAllOrdered(),
				i = this.select("listItemSelector").map(function(e, t) {
					return t.getAttribute("data-column")
				}),
				s = i.length !== t.length,
				r = (0, n.default)(t, function(t, n) {
					var r, a, l, c, u, d = t.model.getKey(),
						h = TD.ui.columns.getColumnElementByKey(d);
					return i[n] !== d && (s = !0), o.default.isOwnCustomTimeline(t) && (r = t.getCustomTimelineFeed(), a = r && r.getMetadata(), l = a && a.id, c = r && r.getAccountKey()), o.default.isMessageColumn(t) && (u = t.unreadMessageCount()), {
						key: d,
						title: o.default.getColumnTitleHTML(t),
						iconclass: o.default.getColumnIconClassByColumn(t),
						isNew: h.hasClass(e.attr.isNewClass),
						customTimelineId: l,
						customTimelineAccount: c,
						isMessageColumn: o.default.isMessageColumn(t),
						unreadCount: "0" === u ? null : u
					}
				});
			if (s) {
				var l = m.render(this.attr.templateName, {
					columns: r
				});
				this.$node.html(l), this.$content = this.select("contentSelector"), this.$addColumnButton = this.select("addColumnButtonSelector"), this.select("headerActionSelector").on("mouseover", this.handleListItemMouseover.bind(this)).on("mouseout", this.handleListItemMouseout.bind(this)), this.resizeColumnNavigation(), this.initialiseDragDrop()
			}
			var c = (0, a.default)(".js-column-nav-list a").find(":hover");
			c.length || this.destroyFlyover()
		}, this.resizeColumnNavigation = function() {
			this.setNormalNavbar();
			var e = this.$node.height();
			this.$node && e && this.$content.outerHeight() > e && this.setOverflowNavbar()
		}, this.setNormalNavbar = function() {
			(0, a.default)(document).trigger("uiColumnNavSizeNormal"), this.$columnNavScroller.removeClass(this.attr.overflowClass), this.$addColumnButton.show()
		}, this.setOverflowNavbar = function() {
			(0, a.default)(document).trigger("uiColumnNavSizeOverflow"), this.$columnNavScroller.addClass(this.attr.overflowClass), this.$addColumnButton.hide()
		}, this.handleUiMainWindowResized = function() {
			this.resizeColumnNavigation(), this.throttledShowScrollbars()
		}, this.handleClick = function(t) {
			if (!TD.util.isTouchDevice() || !e) {
				var i = (0, a.default)(t.target).closest("a[data-action]"),
					n = i.data("action"),
					s = i.data("column");
				switch (n) {
					case "jumpto":
						TD.controller.columnManager.showColumn(s), TD.controller.stats.navbarJumpToColumn()
				}
				this.trigger(TD.components.BaseModal.CLOSE_EVENT)
			}
		}, this.handleDrop = function(e) {
			var t = [],
				i = (0, a.default)(e.target).attr("data-column");
			this.trigger("uiColumnMoving", {
				columnKey: i
			}), this.select("listItemSelector").each(function() {
				t.push((0, a.default)(this).attr("data-column"))
			}), TD.storage.clientController.client.setColumnOrder(t), TD.controller.stats.navbarReorderColumns()
		}, this.handleDrag = function(e, t) {
			this.repositionFlyover((0, a.default)(e.target))
		}, this.handleDropped = function(e, t) {
			this.repositionFlyover((0, a.default)(e.target))
		}, this.initialiseDragDrop = function() {
			this.select("dragAndDropContainerSelector").dragdroplist({
				handle: this.attr.dragHandleSelector,
				orientation: this.attr.listOrientation,
				selector: this.attr.listItemSelector,
				$boundary: this.$node
			}).on("drop.dragdroplist", this.handleDrop.bind(this)).on("drag.draggable", this.handleDrag.bind(this)).on("dropped.dragdroplist", this.handleDropped.bind(this))
		}, this.getColumnItem = function(e) {
			return this.$node.find(".js-column-nav-menu-item[data-column=" + e + "]")
		}, this.handleReadStateChange = function(e, t) {
			var i = this.getColumnItem(t.columnKey),
				n = i.find(".js-unread-count");
			0 === n.length && i.toggleClass(this.attr.isNewClass, !t.read)
		}, this.handleMessageCount = function(e, t) {
			var i = this.getColumnItem(t.columnKey),
				n = i.find(".js-unread-count"),
				s = n.text() || "0",
				r = "0" === s && "0" !== t.count,
				a = "0" !== s && "0" === t.count;
			n.text(t.count), r && (this.stopAnimation(n, this.attr.animateOutClass), n.addClass("is-visible"), this.addAnimateClass(n, this.attr.animateInClass)), a && (this.stopAnimation(n, this.attr.animateInClass), this.addAnimateClass(n, this.attr.animateOutClass, function() {
				n.removeClass("is-visible")
			}))
		}, this.showFlyoverFor = function(e) {
			var t = (0, a.default)(e);
			if (this.isNavbarCollapsed && !TD.util.isTouchDevice()) {
				var i, n, s = t.data("column");
				s && (i = TD.controller.columnManager.get(s), n = {
					content: o.default.getColumnTitleHTML(i)
				}), this.isDragging() || this.renderFlyover(t, n)
			}
		}, this.handleListItemMouseover = function(e) {
			this.showFlyoverFor(e.currentTarget)
		}, this.handleListItemMouseout = function(e) {
			this.isDragging() || this.destroyFlyover()
		}, this.isDragging = function() {
			return this.$node.find(".draggable-dragging").length > 0
		}, this.handleDataSettings = function(e, t) {
			this.isNavbarCollapsed = Boolean("condensed" === t.navbarWidth), this.destroyFlyover()
		}, this.handleDataColumnStateUpdated = function(e, t) {
			var i = this.$node.find(".js-column-nav-menu-item[data-column=" + t.columnKey + "]");
			t.unread ? i.addClass(this.attr.isNewClass) : i.removeClass(this.attr.isNewClass)
		}, this.handleColumnTitleRefreshed = function(e, t) {
			var i = this.$node.find(".js-column-nav-menu-item[data-column=" + t.columnKey + "] .js-column-title"),
				n = TD.controller.columnManager.get(t.columnKey),
				s = o.default.getColumnTitleHTML(n);
			i.html(s)
		}, this.initScrollbars = function() {
			var e = this.$columnNavScroller.data("antiscroll");
			e ? e.refresh() : this.$columnNavScroller.antiscroll({
				showOnMouseOver: !1,
				position: "left"
			})
		}, this.showScrollbars = function() {
			var e = this.$columnNavScroller.data("antiscroll");
			e ? (e.refresh(), e.vertical && e.vertical.show()) : this.initScrollbars()
		}, this.handleTouch = function(n) {
			var s = (0, a.default)(n.target);
			if (0 !== s.closest(".js-drag-handle").length) {
				var r = null,
					o = n.originalEvent,
					c = o.changedTouches[0],
					u = {
						x: c.pageX,
						y: c.pageY
					},
					d = (new Date).getTime();
				switch (o.type) {
					case "touchstart":
						e = !1, t = d, i = u, l = 0;
						break;
					case "touchmove":
						var h = this.countDistance(u, i);
						if (h > l && (l = h), d < t + 300) break;
						!e && l < 50 ? (e = !0, r = "mousedown") : e && (r = "mousemove");
						break;
					case "touchend":
						e && (r = "mouseup")
				}
				r && this.simulateMouseEvent(r, o)
			}
		}, this.simulateMouseEvent = function(e, t) {
			var i = t.changedTouches[0],
				n = document.createEvent("MouseEvent");
			n.initMouseEvent(e, !0, !0, window, 1, i.screenX, i.screenY, i.clientX, i.clientY, !1, !1, !1, !1, 0, null), i.target.dispatchEvent(n), t.preventDefault()
		}, this.countDistance = function(e, t) {
			if (!e || !t) return 0;
			var i = Math.abs(e.x - t.x),
				n = Math.abs(e.y - t.y);
			return Math.sqrt(i * i + n * n)
		}
	}, u, d, h)
}, function(e, t, i) {
	"use strict";
	var n, s = i(21),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			isMovingClass: "is-moving",
			isMovingSelector: ".is-moving",
			appColumnsContainerSelector: ".js-app-columns-container",
			columnsContainerSelector: ".js-app-columns",
			columnStateDetailViewClass: "js-column-state-detail-view",
			columnStateSocialProofClass: "js-column-state-social-proof",
			columnSelector: ".js-app-columns .js-column",
			scrollContainerSelector: ".js-column-scroller",
			columnDetailScrollerSelector: ".js-detail-container",
			columnOptionsSelector: ".js-column-options",
			columnOptionsContainerSelector: ".js-column-options-container",
			columnHeaderSelector: ".js-column-header",
			columnUnreadCountSelector: ".js-column-header .js-unread-count",
			columnContentSelector: ".js-column-content"
		}), this.after("initialize", function() {
			this.on(document, "uiColumnMoving", this.handleMovingColumn), this.on(document, "dataColumnOrder", this.handleColumnOrder), this.$columnsContainer = this.select("columnsContainerSelector")
		}), this.handleMovingColumn = function(e, t) {
			r.default.getColumnElementByKey(t.columnKey).addClass(this.attr.isMovingClass)
		}, this.isColumnOffScreen = function(e) {
			var t = e.position().left,
				i = this.getOriginalWidth(e);
			return t + i < 0 || t + i > this.$node.width()
		}, this.storeOriginalWidth = function(e) {
			var t = e.data("originalWidth");
			void 0 === t && (t = parseInt(e.css("width"), 10)), e.data("originalWidth", t)
		}, this.getOriginalWidth = function(e) {
			return e.data("originalWidth") || parseInt(e.css("width"), 10)
		}, this.moveColumnInstantly = function(e, t, i, n) {
			i.length > 0 && i.attr("data-column") !== n.newOrder[n.newIndex + 1] && (n.detached[i.attr("data-column")] = i.detach()), e ? t.insertAfter(e) : this.$columnsContainer.prepend(t)
		}, this.moveColumnToNewIndex = function(e, t) {
			var i, n, s = e.newOrder[e.newIndex],
				a = e.detached[s] || r.default.getColumnElementByKey(s),
				o = a.index(),
				l = function() {
					a.removeClass(this.attr.isMovingClass), t = a, delete e.detached[s]
				}.bind(this);
			e.newOrder.length >= e.newIndex ? (i = r.default.getColumnElementByKey(e.newOrder[e.newIndex + 1]), n = i.index()) : (i = !1, n = -1), e.newIndex < e.newOrder.length && o !== n && (a.hasClass(this.attr.isMovingClass) ? (this.storeOriginalWidth(a), this.moveColumnInstantly(t, a, i, e), this.isColumnOffScreen(a) ? (a.one("uiColumnScrolled", function() {
				l(), e.newIndex += 1, this.moveColumnToNewIndex(e, t)
			}.bind(this)), a.trigger("uiColumnsScrollColumnToCenter", {
				columnKey: a.attr("data-column")
			})) : (TD.ui.columns.focusColumn(a.attr("data-column"), TD.ui.columns.COLUMN_GLOW_DURATION), l(), e.newIndex += 1, this.moveColumnToNewIndex(e, t))) : (t = a, e.newIndex += 1, this.moveColumnToNewIndex(e, t)))
		}, this.handleColumnOrder = function(e, t) {
			var i = {},
				n = null,
				s = this.select("columnSelector").filter(this.attr.isMovingSelector);
			s.length > 0 ? this.moveColumnToNewIndex({
				newIndex: 0,
				newOrder: t.columnOrder,
				detached: i
			}) : t.columnOrder.forEach(function(e, s) {
				var a = i[e] || r.default.getColumnElementByKey(e),
					o = this.select("columnSelector").eq(s);
				o[0] !== a[0] && (t.columnOrder.length > s + 1 && o.length > 0 && o.attr("data-column") !== t.columnOrder[s + 1] && (i[o.attr("data-column")] = o.detach()), 0 === s ? a.prependTo(this.$columnsContainer) : a.insertAfter(n), delete i[e]), n = a
			}, this)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = c(i(2)),
		s = c(i(0)),
		r = i(5),
		a = c(i(2577)),
		o = i(74),
		l = c(i(21));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(function() {
		this.attributes({
			searchInputClassName: "js-app-search-input",
			searchInPopoverTemplate: "search/search_in_popover",
			isHiddenClass: null,
			appSearchSourceId: null,
			searchPopoverSourceId: null,
			typeaheadContainer: ".js-typeahead-dropdown",
			searchResultsContainer: ".js-search-results-container"
		}), this.after("initialize", function() {
			this.renderInPopover(this.attr.searchInPopoverTemplate, {
				searchInputClassName: this.attr.searchInputClassName,
				searchInputTitle: (0, n.default)("Search"),
				searchInputPlaceholder: (0, n.default)("Search"),
				isTouchColumnOptions: l.default.isTouchColumnOptions()
			}, {
				defaultHeight: "auto"
			}), this.$searchResultsContainer = this.select("searchResultsContainer"), this.$typeaheadContainer = this.select("typeaheadContainer"), this.searchData = null, this.on("uiTypeaheadItemSelected", this.handleTypeaheadItemSelect), this.on("uiTypeaheadNoItemSelected", this.handleTypeaheadNoItemSelected), this.on("uiTypeaheadSubmitQuery", this.handleTypeaheadSubmitQuery), this.on("uiTypeaheadSuggestions", this.handleTypeaheadSuggestions), this.on("uiTypeaheadNoSuggestions", this.handleTypeaheadNoSuggestions), this.on("uiTypeaheadRenderResults", this.handleTypeaheadRenderResults);
			var e = this.searchInputHandlerFactory.bind(this);
			this.on(document, "uiSearchInputSubmit", this.handleSearchInputSubmit), this.on(document, "uiSearchInputEscaped", this.handleSearchInputEscaped), this.on(document, "uiSearchInputFocus", this.handleSearchInputFocus), this.on(document, "uiSearchInputChanged", this.handleSearchInputChanged), this.on(document, "uiSearchInputTab", e("uiTypeaheadInputTab")), this.on(document, "uiSearchInputLeft", e("uiTypeaheadInputLeft")), this.on(document, "uiSearchInputRight", e("uiTypeaheadInputRight")), this.on(document, "uiSearchInputMoveUp", e("uiTypeaheadInputMoveUp")), this.on(document, "uiSearchInputMoveDown", e("uiTypeaheadInputMoveDown")), this.on("uiPopoverShown", this.handlePopoverShown), this.on("uiPopoverHiding", this.handlePopoverHiding), this.on("uiPopoverHidden", this.handlePopoverHidden), this.hasTypeaheadResults = !0, this.around("hidePopover", function(e, t) {
				!1 !== t && this.$input && this.$input.blur(), this.trigger("uiSearchResultsHidden"), e.apply(this)
			})
		}), this.handlePopoverShown = function(e, t) {
			this.$input.addClass("is-focused"), this.trigger("uiSearchInPopoverShown")
		}, this.handlePopoverHiding = function(e, t) {
			this.defaultHeight = "auto", this.$searchResultsContainer.addClass("is-hidden"), this.$typeaheadContainer.removeClass("is-hidden")
		}, this.handlePopoverHidden = function(e, t) {
			this.$input.removeClass("is-focused"), this.trigger("uiSearchInPopoverHidden")
		}, this.handleSearchInputFocus = function(e, t) {
			this.isCorrectSource(t.source) && (this.$input = (0, s.default)(e.target), this.isPopoverVisible() || TD.controller.stats.searchboxFocus(), this.isPopoverEmpty() || this.showPopover(), this.trigger("uiFixedHeaderChangedPosition"), this.$typeaheadContainer.hasClass(this.attr.isHiddenClass) || (this.trigger("uiTypeaheadInputFocus", t), this.defaultHeight = "auto"))
		}, this.searchInputHandlerFactory = function(e) {
			return function(t, i) {
				this.isCorrectSource(i.source) && !this.$typeaheadContainer.hasClass(this.attr.isHiddenClass) && this.trigger(e, i)
			}.bind(this)
		}, this.handleSearchInputChanged = function(e, t) {
			this.isCorrectSource(t.source) && (this.$input = (0, s.default)(e.target), this.isPopoverVisible() || this.showPopover(), this.defaultHeight = "auto", this.$searchResultsContainer.addClass("is-hidden"), this.$typeaheadContainer.removeClass("is-hidden"), this.trigger("uiTypeaheadInputChanged", t))
		}, this.isCorrectSource = function(e) {
			return e === this.attr.appSearchSourceId || e === this.attr.searchPopoverSourceId
		}, this.handleSearchInputEscaped = function(e, t) {
			this.isCorrectSource(t.source) && (this.trigger("uiTypeaheadInputBlur"), this.hidePopover())
		}, this.handleSearchInputSubmit = function(e, t) {
			var i;
			this.isCorrectSource(t.source) && (this.searchData = t, twttrTxt.isValidList(t.query) ? (i = t.query.split("/"), TD.ui.openColumn.showList(i[0].substr(1), i[1]), this.hidePopover()) : (this.trigger("uiTypeaheadInputSubmit", t), TD.controller.stats.searchboxPerformSearch(t.query)))
		}, this.handleTypeaheadNoItemSelected = function() {
			this.searchData && this.performSearch(this.searchData)
		}, this.handleTypeaheadSubmitQuery = function(e, t) {
			var i;
			twttrTxt.isValidList(t.query) && (i = t.query.split("/"), TD.ui.openColumn.showList(i[0].substr(1), i[1]), this.hidePopover())
		}, this.performSearch = function(e) {
			if (e.query) {
				var t = "users" !== e.searchScope;
				if (t) {
					this.hidePopover();
					var i = TD.controller.columnManager.makeColumnFor({
						type: "search",
						service: "twitter",
						metaString: e.query,
						accountKey: (0, o.getDefaultAccount)().accountKey
					});
					TD.controller.columnManager.addColumnToUIAfterColumnKey(i, e.columnKey), this.trigger("uiSearchNoTemporaryColumn", e)
				} else this.trigger("uiNewSearchQuery", {
					query: e.query
				}), this.defaultHeight = "max", this.$typeaheadContainer.addClass("is-hidden"), this.$searchResultsContainer.removeClass("is-hidden"), this.trigger("uiSearch", e), this.showPopover(), this.searchData = null
			}
		}, this.handleTypeaheadItemSelect = function(e, t) {
			var i;
			switch (t.searchType) {
				case "user":
					this.hidePopover(), this.trigger("uiShowProfile", {
						id: t.query
					});
					break;
				case "topic":
				case "saved-search":
				case "recent-search":
					t.removeItem ? this.trigger("uiRecentSearchClearItem", {
						query: t.query
					}) : this.performSearch(t);
					break;
				case "recent-search-clear":
					this.trigger("uiRecentSearchClearAction");
					break;
				case "list":
					i = t.query.split("/"), TD.ui.openColumn.showList(i[0], i[1])
			}
			this.searchData = null
		}, this.handleTypeaheadNoSuggestions = function(e, t) {
			this.hasTypeaheadResults = !1, this.isPopoverEmpty() && this.hidePopover(!1), this.trigger("uiAppSearchSetPreventDefault", {
				preventDefault: !1,
				key: 9
			})
		}, this.handleTypeaheadSuggestions = function(e, t) {
			this.trigger("uiAppSearchSetPreventDefault", {
				preventDefault: !0,
				key: 9
			})
		}, this.handleTypeaheadRenderResults = function() {
			this.hasTypeaheadResults = !0
		}, this.isPopoverEmpty = function() {
			return !this.hasTypeaheadResults && !s.default.contains(this.$popover[0], this.$input[0])
		}
	}, a.default)
}, function(e, t, i) {
	"use strict";
	var n = a(i(32)),
		s = a(i(0)),
		r = a(i(6));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		this.attributes({
			popoverSelector: ".js-popover",
			popoverContentSelector: ".js-popover-content",
			isHiddenClass: "is-hidden",
			hasOverlayClass: "has-overlay",
			noScrollClass: "scroll-none",
			defaultHeight: 2e3,
			defaultWidth: 350,
			bottomPadding: 30,
			withClickTrap: !0,
			withOverlay: !1,
			closeModals: !1,
			positionalClasses: {
				rt: "popover-position-rt"
			},
			popoverPosition: "rt"
		}), this.after("initialize", function() {
			this.trigger("uiPopoverCreated", {
				id: this.attr.id
			}), this.on(document, "uiCloseModal", this.handleCloseModal), this.boundClickTrap = this.popoverClickTrap.bind(this)
		}), this.handleCloseModal = function(e) {
			e.target !== this.node && this.hidePopover()
		}, this.popoverClickTrap = function(e) {
			e !== this.lastSeenEvent && (this.lastSeenEvent = e, this.$node && 0 === this.$node.find(e.currentTarget).length && this.hidePopover())
		}, this.isPopoverVisible = function() {
			return !this.$popover.hasClass(this.attr.isHiddenClass)
		}, this.showPopover = function(e) {
			this.$popover.hasClass(this.attr.isHiddenClass) && (this.$popover.removeClass(this.attr.isHiddenClass), this.withOverlay && (this.$overlay.removeClass(this.attr.isHiddenClass), this.$overlayControlNode.addClass(this.attr.hasOverlayClass)), this.attr.closeModals && this.trigger("uiCloseModal"), this.withClickTrap && (0, n.default)(function() {
				(0, s.default)("body").on("click", "*", this.boundClickTrap)
			}.bind(this)), this.trigger("uiPopoverShown", {
				id: this.attr.id
			}))
		}, this.hidePopover = function(e) {
			this.$popover.hasClass(this.attr.isHiddenClass) || ((0, s.default)("body").off("click", "*", this.boundClickTrap), this.trigger("uiPopoverHiding", {
				id: this.attr.id
			}), this.$popover.addClass(this.attr.isHiddenClass), this.$overlay.addClass(this.attr.isHiddenClass), this.$overlayControlNode.removeClass(this.attr.hasOverlayClass), clearInterval(this.repositionInterval), this.repositionInterval = null, this.trigger("uiPopoverHidden", {
				id: this.attr.id
			}))
		}, this.setPopoverSize = function(e) {
			this.width = e.width, this.height = e.height, this.$popover.css({
				width: this.width,
				height: this.height
			})
		}, this.getPopoverPositionClass = function() {
			return this.attr.positionalClasses[this.attr.popoverPosition]
		}, this.renderInPopover = function(e, t, i) {
			i && (this.defaultHeight = i.defaultHeight || this.attr.defaultHeight, this.withOverlay = i.withOverlay || this.attr.withOverlay, this.withClickTrap = i.withClickTrap || this.attr.withClickTrap), this.$overlay = (0, s.default)(r.default.render("overlay")), this.$overlayControlNode = this.$node.closest(".js-overlay"), this.$overlay.insertBefore(this.$overlayControlNode), this.$node.html(r.default.render("popover")), this.$popover = this.select("popoverSelector"), this.$popover.addClass(this.getPopoverPositionClass()), this.setPopoverSize({
				width: this.attr.defaultWidth
			}), this.$popoverContent = this.select("popoverContentSelector");
			var n = r.default.render(e, t);
			this.$popoverContent.append(n)
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = i(5).component,
		s = i(2579);
	e.exports = n(function() {
		this.attributes({
			userResultsSelector: ".js-user-results"
		}), this.after("initialize", function() {
			this.on(document, "uiSearch", this.showUsers), this.$userResults = this.select("userResultsSelector"), s.attachTo(this.$userResults), TD.util.isTouchDevice() && window.navigator.standalone && this.on(this.$userResults, "touchmove", function(e) {
				e.stopPropagation()
			})
		}), this.showUsers = function() {
			this.trigger("scribeEvent", {
				terms: {
					page: "main",
					section: "search_results",
					element: "show_user_results",
					action: "click"
				}
			})
		}, this.before("teardown", function() {
			this.trigger(this.$userResults, "uiUserResultsDestroy")
		})
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(5),
		r = i(6),
		a = (n = r) && n.__esModule ? n : {
			default: n
		};
	e.exports = (0, s.component)(function() {
		this.after("initialize", function() {
			this.query = null, this.on(document, "uiSearch", this.handleSearch), this.on(document, "dataUserSearch", this.handleResults), this.on("uiUserResultsDestroy", this.teardown)
		}), this.handleSearch = function(e, t) {
			this.query = t.query, this.$node.empty(), this.trigger(document, "uiNeedsUserSearch", {
				query: this.query
			})
		}, this.handleResults = function(e, t) {
			if (t.request.query === this.query) {
				var i = t.result;
				if (0 === i.length) {
					var n = a.default.render("search_no_users_placeholder");
					this.$node.html(n)
				} else {
					var s = a.default.render("menus/user_results", {
						users: i,
						withUserMenu: !0,
						userMenuPositon: "pos-r",
						withUserBio: !0
					});
					this.$node.html(s)
				}
			}
		}
	})
}, function(e, t, i) {
	"use strict";
	var n, s = i(32),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			appSearchSelector: ".js-search",
			appSearchInputSelector: ".js-search-form .js-app-search-input",
			isTouchSearchClass: "is-touch-search",
			searchPopoverInputSelector: ".js-search-in-popover .js-app-search-input"
		}), this.after("initialize", function() {
			TD.util.isTouchDevice() && TD.decider.get("touchdeck_search_v2") ? this.select("appSearchSelector").addClass(this.attr.isTouchSearchClass) : this.select("appSearchSelector").removeClass(this.attr.isTouchSearchClass), this.on(document, "uiPerformSearch", this.handlePerformSearch), this.on(document, "uiAppSearchFocus uiShowSearchButtonClick", this.focusSearchInput), this.on(document, "dataSettings", this.handleDataSettings), this.trigger("uiNeedsSettings")
		}), this.handleDataSettings = function(e, t) {
			"condensed" === t.navbarWidth ? this.$input = this.select("searchPopoverInputSelector") : this.$input = this.select("appSearchInputSelector")
		}, this.focusSearchInput = function() {
			this.$input.triggerHandler("focus"), this.$input.is(":focus") || this.$input.focus()
		}, this.handlePerformSearch = function(e, t) {
			e.target === document && (0, r.default)(function() {
				this.trigger(this.$input, "uiAppSearchSubmit", t)
			}.bind(this))
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = m(i(13)),
		s = m(i(218)),
		r = m(i(2)),
		a = m(i(0)),
		o = i(152),
		l = m(i(58)),
		c = m(i(18)),
		u = m(i(6)),
		d = i(37),
		h = m(i(7));

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var f = i(137),
		p = i(2582),
		g = i(884),
		v = i(361),
		T = i(45);
	e.exports = h.default.mixin(f, T, c.default, function() {
		this.attributes({
			headerActionSelector: ".js-header-action",
			settingsButtonSelector: '[data-action="settings-menu"]',
			accountNotificationCountSelector: ".js-account-count",
			userInfoSelector: ".js-account-summary"
		}), this.initialState({
			showUpdateAvailable: !1,
			showDisableDogfood: !1,
			showReleaseNotesLink: !1
		}), this.after("initialize", function() {
			var e = this;
			this.on("click", this.handleClick), this.on(document, "uiToggleNavbarWidth", this.toggleNavbarWidth), this.on(document, "dataSettings", this.handleDataSettings), this.on(document, "uiNotificationAccounts", this.handleNotificationAccounts), this.on(document, "uiSuggestRefreshToggle", function(t) {
				var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
					n = i.shouldShow,
					s = void 0 !== n && n;
				return e.mergeState({
					showUpdateAvailable: s
				})
			}), this.select("headerActionSelector").on("mouseover", this.handleListItemMouseover.bind(this)).on("mouseout", this.handleListItemMouseout.bind(this)), this.trigger("uiNeedsSettings"), this.observe(this.requestResource("accounts.state")).pluck("loginAccount").filter(s.default).subscribe(this.renderUserInfo.bind(this)), this.observe((0, l.default)()).map(function(e) {
				var t = (0, n.default)(e, "config.tweetdeck_devel.value", !1),
					i = (0, n.default)(e, "config.tweetdeck_dogfood.value", !1);
				return t || i
			}).subscribe(function(t) {
				return e.mergeState({
					showDisableDogfood: t
				})
			}), this.observe(d.showReleaseNotesLinkEnabled$).subscribe(function(t) {
				return e.mergeState({
					showReleaseNotesLink: t
				})
			}), this.after("stateChanged", this.maybeShowUpdateAvailable), this.setupCommands()
		}), this.renderUserInfo = function(e) {
			var t = u.default.render("topbar/navbar_account_summary", e);
			this.select("userInfoSelector").html(t)
		}, this.handleClick = function(e, t) {
			var i = (0, a.default)(e.target).closest("[data-action]"),
				n = i.attr("data-action");
			if (i.length) {
				switch ("url" !== n && e.preventDefault(), n) {
					case "settings-menu":
						e.stopPropagation(), this.toggleSettingsDropdown(i), TD.controller.stats.navbarSettingsClick();
						break;
					default:
						this.performAction(n)
				}
				i.hasClass("js-show-tip") && i.tooltip("hide"), this.destroyFlyover()
			}
		}, this.setupCommands = function() {
			var e = this;
			this.addCommands([{
				label: (0, r.default)("Show accounts"),
				apply: function() {
					return e.performAction("account-settings")
				}
			}, {
				label: (0, r.default)("Add a column"),
				shortcut: {
					key: "a"
				},
				apply: function() {
					return e.performAction("add-column")
				}
			}, {
				label: (0, r.default)("Expand/Collapse navigation"),
				shortcut: {
					key: "x"
				},
				apply: function() {
					return e.performAction("change-sidebar-width")
				}
			}, {
				label: (0, r.default)("Search Twitter"),
				shortcut: {
					key: "/"
				},
				apply: function() {
					return e.performAction("show-search")
				}
			}, {
				label: (0, r.default)("Log out"),
				apply: function() {
					return e.performAction("signOut")
				}
			}, {
				label: (0, r.default)("Show settings"),
				shortcut: {
					key: ","
				},
				apply: function() {
					return e.performAction("globalSettings")
				}
			}, {
				label: (0, r.default)("Show keyboard shortcuts"),
				shortcut: {
					key: "?"
				},
				apply: function() {
					return e.performAction("keyboardShortcutList")
				}
			}, {
				label: (0, r.default)("Show search tips"),
				apply: function() {
					return e.performAction("searchOperatorList")
				}
			}, {
				label: (0, r.default)("Update TweetDeck"),
				apply: function() {
					return e.performAction("updateAvailable")
				},
				canApply: function() {
					return e.state.showUpdateAvailable
				}
			}, {
				label: (0, r.default)("Disable Dev/Dogfood features"),
				apply: function() {
					return e.performAction("disableDogfood")
				},
				canApply: function() {
					return e.state.showDisableDogfood
				}
			}])
		}, this.performAction = function(e) {
			switch (e) {
				case "account-settings":
					this.trigger("uiShowAccountSettings");
					break;
				case "add-column":
					TD.ui.openColumn.showOpenColumn(), TD.controller.stats.navbarAddColumnClick();
					break;
				case "show-lists":
					TD.ui.openColumn.showLists(), TD.controller.stats.navbarListsClick();
					break;
				case "show-customtimelines":
					TD.ui.openColumn.showCustomTimelines();
					break;
				case "change-sidebar-width":
					this.toggleNavbarWidth();
					break;
				case "show-search":
					this.trigger("uiShowSearchButtonClick");
					break;
				case "signOut":
					TD.controller.init.signOut();
					break;
				case "globalSettings":
					(0, a.default)(document).trigger("uiShowGlobalSettings");
					break;
				case "keyboardShortcutList":
					(0, a.default)(document).trigger("uiShowKeyboardShortcutList");
					break;
				case "searchOperatorList":
					(0, a.default)(document).trigger("uiShowSearchOperatorList");
					break;
				case "updateAvailable":
					this.trigger("uiAppHeaderUpdateAvailableClick");
					break;
				case "disableDogfood":
					this.trigger("uiReload", {
						params: {
							no_dogfood: 1
						}
					})
			}
		}, this.toggleSettingsDropdown = function(e) {
			this.renderDropdown(e, "menus/topbar_menu", {
				account: TD.storage.accountController.getUserIdentifier(),
				showUpdateAvailable: this.state.showUpdateAvailable,
				showDisableDogfood: this.state.showDisableDogfood,
				showReleaseNotesLink: this.state.showReleaseNotesLink
			}, {
				position: this.attr.dropdownPositions.verticalRight,
				toggle: !0
			})
		}, this.toggleNavbarWidth = function() {
			var e;
			e = this.isCollapsed ? "full-size" : "condensed", this.trigger("uiNavbarWidthChangeAction", {
				navbarWidth: e
			})
		}, this.maybeShowUpdateAvailable = function() {
			this.select("settingsButtonSelector").find(".icon").toggleClass("color-twitter-yellow", this.state.showUpdateAvailable)
		}, this.handleDataSettings = function(e, t) {
			this.isCollapsed = Boolean("condensed" === t.navbarWidth)
		}, this.handleListItemMouseover = function(e) {
			if (this.isCollapsed && !TD.util.isTouchDevice()) {
				var t = (0, a.default)(e.currentTarget);
				this.renderFlyover(t)
			}
		}, this.handleListItemMouseout = function(e) {
			this.destroyFlyover()
		}, this.handleNotificationAccounts = function(e, t) {
			this.select("accountNotificationCountSelector").text(t.count > 20 ? "20+" : t.count).toggleClass("is-visible", t.count > 0)
		}
	}, p, g, v, o.flightWithCommands)
}, function(e, t, i) {
	"use strict";
	var n = d(i(0)),
		s = d(i(103)),
		r = d(i(4)),
		a = d(i(139)),
		o = d(i(2583)),
		l = i(58),
		c = i(164),
		u = d(i(232));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = function() {
		this.attributes({
			showDrawerButtonSelector: ".js-show-drawer",
			hideDrawerButtonSelector: ".js-hide-drawer",
			composeControlsSelector: ".js-compose-controls"
		}), this.after("initialize", function() {
			var e = this;
			this.subscription = (0, l.getStreamForFeatureFlag)("tweetdeck_rweb_composer").subscribe(function(e) {
				this.mergeState({
					rwebComposerEnabled: e
				}), this.state.composeActive && this.handleDockedComposeTweet()
			}.bind(this)), u.default.getComposeStayOpen() && this.handleDockedComposeTweet(), this.on("click", {
				showDrawerButtonSelector: this.handleShowDrawerClick,
				hideDrawerButtonSelector: this.handleHideDrawerClick
			}), this.on(document, "uiComposeFilesAdded", this.handleDockedComposeTweet), this.on(document, "uiDockedComposeTweet", this.handleDockedComposeTweet), this.on(document, "uiDrawerActive", this.handleDrawerActive), this.on(document, "dataSettingsValues", this.handleThemeSettings), this.on(document, "uiRwebComposerOptOut", function(t) {
				e.handleDockedComposeTweet(t)
			})
		}), this.before("teardown", function() {
			this.subscription.unsubscribe()
		}), this._renderCloseIcon = function() {
			var e = {
				height: 40,
				width: 40,
				color: "dark" === u.default.getTheme() ? "#3d5466" : "#2b7bb9"
			};
			return r.default.createElement(o.default, {
				style: e
			})
		}, this.handleDockedComposeTweet = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = this.select("composeControlsSelector")[0],
				n = "message" === t.type;
			this.state.rwebComposerEnabled ? (this.select("composeControlsSelector").css({
				display: "flex",
				"justify-content": "flex-end"
			}), (0, c.render)(r.default.createElement("div", {
				className: "js-hide-drawer",
				"data-drawer": "compose"
			}, r.default.createElement(a.default, {
				borderColor: "transparent",
				dominantColor: "rgb(255, 255, 255)",
				icon: this._renderCloseIcon(),
				onPress: this.unmountButton.bind(this),
				style: {
					height: 40,
					width: 40,
					marginTop: 6,
					marginBottom: 8,
					marginRight: 12,
					marginLeft: -1
				}
			})), i)) : (this.select("composeControlsSelector").css("display", "block"), (0, c.render)(r.default.createElement(r.default.Fragment, null, r.default.createElement("button", {
				className: "js-hide-drawer margin-t--8 margin-b--10 Button Button--primary Button--large tweet-button txt-left",
				"data-drawer": "compose"
			}, r.default.createElement("i", {
				className: (0, s.default)("Icon icon-compose", n ? "is-hidden" : ""),
				"data-tweet-type": "tweet reply"
			}), r.default.createElement("i", {
				className: (0, s.default)("Icon icon-compose-dm icon-large", n ? "" : "is-hidden"),
				"data-tweet-type": "message"
			}))), i))
		}, this.unmountButton = function() {
			(0, c.unmountComponentAtNode)(this.select("composeControlsSelector")[0])
		}, this.handleShowDrawerClick = function(e, t) {
			switch ((0, n.default)(t.el).attr("data-drawer")) {
				case "compose":
					this.trigger("uiComposeTweet"), TD.controller.stats.navbarComposeClick();
					break;
				case "accountSettings":
					this.trigger("uiShowAccountSettings")
			}
		}, this.handleHideDrawerClick = function(e, t) {
			var i = (0, n.default)(t.el).attr("data-drawer");
			this.trigger("uiDrawerHideDrawer"), "compose" === i && TD.controller.stats.navbarComposeClick()
		}, this.handleThemeSettings = function(e, t) {
			t.theme && this.state.composeActive && this.handleDockedComposeTweet()
		}, this.handleDrawerActive = function(e, t) {
			if (this.select("hideDrawerButtonSelector").addClass("is-hidden"), this.select("showDrawerButtonSelector").removeClass("is-hidden"), this.mergeState({
					composeActive: !!t.activeDrawer
				}), t.activeDrawer) {
				var i = function() {
					return (0, n.default)(this).attr("data-drawer") === t.activeDrawer
				};
				this.select("showDrawerButtonSelector").filter(i).addClass("is-hidden"), this.select("hideDrawerButtonSelector").filter(i).removeClass("is-hidden"), this.select("composeControlsSelector").removeClass("is-hidden")
			} else this.select("composeControlsSelector").addClass("is-hidden")
		}
	}
}, , function(e, t, i) {
	"use strict";
	var n = i(5).component;
	e.exports = n(function() {
		var e;
		this.attributes({
			jsAppSelector: ".js-app",
			jsAppHeaderSelector: ".js-app-header",
			isCondensedClass: "is-condensed"
		}), this.setNavbarWidth = function(t) {
			var i = this.select("jsAppHeaderSelector"),
				n = "condensed" === t,
				s = function() {
					e.toggleClass(this.attr.isCondensedClass, n), i.toggleClass(this.attr.isCondensedClass, n)
				}.bind(this);
			!n && !e.hasClass(this.attr.isCondensedClass) || n && e.hasClass(this.attr.isCondensedClass) || (s(), this.trigger("uiToggleNavBarWidth"))
		}, this.handleDataSettings = function(e, t) {
			this.setNavbarWidth(t.navbarWidth)
		}, this.after("initialize", function() {
			e = this.select("jsAppSelector"), this.on(document, "dataSettings", this.handleDataSettings)
		})
	})
}, function(e, t, i) {
	"use strict";
	var n = i(5).component,
		s = i(2586);
	e.exports = n(function() {
		var e;
		this.attributes({
			composeDrawerOpenClass: "hide-detail-view-inline",
			inlineOpenClass: ".js-inline-reply.is-inline-active"
		}), this.after("initialize", function() {
			this.on(document, "uiDrawerActive", this.handleDrawerActive), this.on(document, "uiComposeTweet", this.handleUiComposeTweet), this.on(document, "uiFilesAdded", this.handleFilesAdded), this.on(document, "uiRecipientToggledFromList", this.handleRecipientToggledFromList)
		}), this.handleDrawerActive = function(e, t) {
			var i = "compose" === t.activeDrawer;
			this.$node.toggleClass(this.attr.composeDrawerOpenClass, i)
		}, this.handleFilesAdded = function(e, t) {
			this.select("inlineOpenClass").length && this.trigger("uiPopInlineComposeState"), this.trigger("uiComposeFilesAdded", t)
		}, this.handleUiComposeTweet = function(t, i) {
			i = i || {};
			var n = function(e) {
				return this.select("inlineOpenClass").length && "tweet" === e.type && !e.text && !e.replyTo && !e.quotedTweet
			}.bind(this);
			this.$node.hasClass(this.attr.composeDrawerOpenClass) ? this.trigger("uiDockedComposeTweet", i) : "reply" === i.type && i.element && i.element.closest(".js-column").length > 0 ? (e || (s.attachTo(this.$node), e = !0), this.trigger("uiInlineComposeTweet", i)) : n(i) ? this.trigger("uiPopInlineComposeState") : this.trigger("uiDockedComposeTweet", i)
		}, this.handleRecipientToggledFromList = function(e, t) {
			var i = this.$node.hasClass(this.attr.composeDrawerOpenClass),
				n = i ? "uiRecipientToggledInDockedCompose" : "uiRecipientToggledInInlineCompose";
			this.trigger(n, t)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = p(i(46)),
		s = p(i(885)),
		r = p(i(32)),
		a = p(i(229)),
		o = p(i(112)),
		l = p(i(0)),
		c = p(i(822)),
		u = p(i(211)),
		d = p(i(18)),
		h = p(i(6)),
		m = i(47),
		f = p(i(21));

	function p(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var g = i(7),
		v = i(886),
		T = i(887),
		w = i(888),
		b = i(889),
		y = i(891),
		_ = i(892),
		C = i(231),
		S = i(893),
		D = i(277).TRANSITION_END,
		k = i(357),
		E = i(894),
		I = i(230),
		A = i(896),
		x = i(36);
	e.exports = g.mixin(u.default, d.default, function() {
		var e, t, i;
		this.attributes({
			panelCloseDelay: 500,
			inlineReplySelector: ".js-inline-reply",
			closeSelector: ".js-inline-compose-close",
			popSelector: ".js-inline-compose-pop",
			characterCountSelector: ".is-inline-active .js-character-count",
			progressSvgSelector: ".js-progress-svg",
			accountSafeguardCheckboxSelector: ".is-inline-active .js-account-safeguard-checkbox",
			accountSelector: ".js-inline-reply .js-account-item",
			tweetSelector: ".js-tweet",
			tweetActionsSelector: ".js-tweet-actions",
			replyActionSelector: ".js-reply-action",
			detailViewInlineSelector: ".js-detail-view-inline",
			tweetTextInputSelector: ".is-inline-active .js-compose-text",
			sendButtonContainerSelector: ".is-inline-active .js-send-button-container",
			replyInfoContainerSelector: ".is-inline-active .js-reply-info-container",
			pagingEasingFunction: "easeOutQuad",
			draftCacheSize: 50
		}), this.initialState({
			tweetType: "reply",
			sendingStatus: "ready",
			tweetText: "",
			accountSafeguardChecked: !1,
			tweetTextFocused: !1,
			batchMode: "off",
			attr: function() {
				return this.attr
			},
			messageRecipients: function() {
				return []
			},
			files: function() {
				return []
			},
			currentTime: function() {
				return new Date
			},
			selectedAccountKeys: function() {
				return []
			},
			selectionIndices: function() {
				return []
			}
		}), this.after("initialize", function() {
			try {
				this.afterInitialize.apply(this, arguments)
			} catch (e) {
				TD.controller.stats.generic({
					page: "compose",
					component: "inline_compose",
					action: "error"
				}, {
					custom_json_payload: {
						stack: e.stack,
						build: TD.buildIDShort
					}
				})
			}
		}), this.afterInitialize = function() {
			this.draftCache = new c.default(this.attr.draftCacheSize), this.on(document, "uiInlineComposeTweet", this.handleUiInlineComposeTweet), this.on(document, "uiDockedComposeTweet", this.closeInlineCompose), this.on(document, "uiComposeClose", this.closeInlineComposeIfFocused), this.on(document, "uiPopInlineComposeState", this.handlePopClick), this.on(document, "uiRecipientToggledInInlineCompose", this.handleRecipientToggledFromList), this.on("uiComposeTweetSending", this.enterSendingState), this.on("uiComposeTweetSent", this.enterSuccessState), this.on("uiComposeTweetError", this.enterErrorState), this.on("uiComposeTextChanged", this.handleTextChanged), this.on("uiAccountSafeguardCheckboxChange", this.handleAccountSafeguardCheckboxChange);
			var e = this.observe(this.requestResource("settings.state")).pluck("safeguarded_account_list").map(TD.util.unpluck("safeguarded_account_list")).map(TD.util.unpluck("settings")),
				t = this.observe(this.requestResource("/1.1/help/configuration.json")).map(TD.util.unpluck("configuration")),
				i = x.Observable.combineLatest([this.observableState, e, t], TD.util.merge).map(E).share();
			this.provideResource("inlineCompose.state", i), x.Observable.fromEvent(this.$node, "uiComposeSendTweet").do(function(e) {
				e.stopPropagation()
			}).withLatestFrom(i, function(e, t) {
				return t
			}).filter(TD.util.pluck("canSend")).map(this.prepareSendTweet.bind(this)).subscribe(this.sendTweet.bind(this)), this.on(D, {
				inlineReplySelector: this.handleAnimationEnd
			})
		}, this.setupDOM = function() {
			var e = this;
			if (i) {
				this.attachChild(_, this.select("tweetTextInputSelector"), {
					stateSource: "inlineCompose.state",
					teardownOn: "inlineInstanceTearDown"
				}), this.attachChild(T, this.select("characterCountSelector"), {
					stateSource: "inlineCompose.state",
					teardownOn: "inlineInstanceTearDown"
				}), this.observe(this.requestResource("inlineCompose.state")).pluck("displayedCharacterCount").distinctUntilChanged().subscribe(function(t) {
					e.mergeState({
						displayedCharacterCount: t
					})
				});
				var t = this.connect(w, {
					mapStateToProps: function(e) {
						return {
							characterCount: e.displayedCharacterCount,
							tweetType: "tweet"
						}
					}
				});
				this.attachChild(t, i.find(".js-progress-svg").first()), this.attachChild(b, this.select("sendButtonContainerSelector"), {
					stateSource: "inlineCompose.state",
					teardownOn: "inlineInstanceTearDown"
				}), this.attachChild(v, this.select("accountSafeguardCheckboxSelector"), {
					stateSource: "inlineCompose.state"
				});
				var n = this.connect(y, {
					mapStateToProps: function() {
						var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
							t = e.selectedAccountKeys,
							i = void 0 === t ? [] : t,
							n = e.implicitRecipients,
							s = void 0 === n ? [] : n,
							r = e.excludedRecipientsIds,
							a = e.batchMode,
							o = void 0 === a ? "off" : a;
						return {
							recipients: k.recipientsWithoutSelfMention(s, i),
							excludedRecipientsIds: r,
							batchMode: o
						}
					}
				});
				this.attachChild(n, this.select("replyInfoContainerSelector"), {
					teardownOn: "inlineInstanceTearDown"
				}), this.select("closeSelector").on("click", this.handleCloseClick.bind(this)), this.select("popSelector").on("click", this.handlePopClick.bind(this)), this.select("accountSelector").on("click", this.handlePopClick.bind(this))
			}
		}, this.handleUiInlineComposeTweet = function(i, n) {
			(e = n || {}).singleFrom = [n.from[0]];
			var s = (0, l.default)(n.element);
			s.find(this.attr.inlineReplySelector).length > 0 ? this.closeInlineCompose() : (t && this.closeInlineCompose(), s.find(".js-show-this-thread").addClass("is-hidden"), this.focusRequest(), this.setupInlineCompose(e))
		}, this.setupInlineCompose = function(e) {
			this.trigger(document, "scribeEvent", {
				terms: {
					page: "compose",
					component: "inline_compose",
					action: "impression"
				}
			}), (t = e.element).find(".js-tweet-actions").addClass("is-visible"), t.find(".js-detail-view-inline").addClass("is-hidden"), t.find(".js-reply-action").addClass("is-selected");
			var n = (0, m.getAccountData)(e.from),
				s = e.inReplyTo.chirp,
				c = s.isOwnChirp() && s.isInThread() && !s.isMidSelfThread() && s.lastInSelfThread();
			i = (0, l.default)(h.default.render("compose/compose_inline_reply", {
				account: n,
				isMac: "osx" === TD.util.getOSName(),
				inline: !0,
				addSubsequentTweet: c
			})), t.find(this.attr.tweetSelector).after(i), this.setupDOM();
			var u = (0, o.default)(e.mentions, "screenName").map(I.atMentionify),
				d = [e.inReplyTo.user.screenName].map(I.atMentionify);
			u = A.stripRepliesFromMentions(u, d);
			var f = (0, m.getAccountData)(e.from[0]).screenName;
			u = (0, a.default)(u, I.atMentionify(f)), d = (0, a.default)(d, I.atMentionify(f));
			var p, g, v = this.getDraftText();
			v && "" !== v ? p = [(g = v).length, g.length] : (g = "", p = A.getSelectionIndices(g, d, u)), this.mergeState({
				selectedAccountKeys: e.from,
				tweetText: g,
				selectionIndices: p,
				tweetTextFocused: !0,
				implicitRecipients: e.mentions,
				excludedRecipientsIds: [],
				autoPopulateReplyMetadata: !0,
				batchMode: c ? "subsequent" : "off",
				replies: d,
				mentions: u
			}), (0, r.default)(function() {
				i.removeClass("is-inline-inactive")
			}), i.on("click", function(e) {
				e.target.classList.contains("account-link") || e.stopPropagation()
			});
			var T = i.parents(".js-column");
			T.hasClass("js-column-state-detail-view") || TD.ui.columns.lockColumnToElement(T.attr("data-column"), t)
		}, this.closeInlineCompose = function() {
			t && (this.saveDraftText(this.state.tweetText), this.closeAndRemovePanels(), this.focusRelease(), this.trigger(document, "scribeEvent", {
				terms: {
					page: "compose",
					component: "inline_compose",
					action: "close"
				}
			}), t.find(".js-show-this-thread").removeClass("is-hidden"), this.trigger(i, "inlineInstanceTearDown"))
		}, this.closeInlineComposeIfFocused = function(e, t) {
			t && t.keyboardShortcut && !this.hasFocus || this.closeInlineCompose()
		}, this.closeAndRemovePanels = function(e) {
			i && this.select("inlineReplySelector").removeClass("is-inline-active").css({
				overflow: "hidden"
			}).addClass("is-inline-inactive")
		}, this.tearDownInlineCompose = function() {
			this.closeAndRemovePanels(), this.deleteDraftText(), this.focusRelease(), t = null, this.mergeState({
				sendingStatus: "ready",
				tweetText: "",
				selectedAccountKeys: []
			})
		}, this.handleAnimationEnd = function(e) {
			var t = (0, l.default)(e.target);
			if (t.hasClass("is-inline-inactive")) {
				var n = t.parents(".js-column").attr("data-column"),
					s = t.parents(".js-stream-item-content");
				TD.ui.columns.unlockColumnFromElement(n), s.find(this.attr.tweetActionsSelector).removeClass("is-visible"), s.find(this.attr.replyActionSelector).removeClass("is-selected"), s.find(this.attr.detailViewInlineSelector).removeClass("is-hidden"), t.remove()
			} else this.scrollColumnIfRequired(), i.css({
				overflow: "visible"
			})
		}, this.scrollColumnIfRequired = function() {
			var e, t = i.parents(".js-column"),
				n = t.attr("data-column"),
				s = f.default.getColumnScrollContainerByKey(n),
				r = t.find(".js-live-video"),
				a = i.offset().top + i.height() - s.height();
			if (a > 0) {
				e = s.scrollTop() - r.height();
				var o = TD.ui.columns.calculateScrollDuration(a, 50, 750);
				s.stop().animate({
					scrollTop: e + a
				}, o, this.attr.pagingEasingFunction)
			}
		}, this.accountsHaveSafeguard = function(e) {
			return (0, s.default)(e, TD.settings.getSafeguardedAccountList()).length > 0
		}, this.prepareSendTweet = function(t, i) {
			return {
				requestId: (0, n.default)("sendTweet"),
				text: this.state.tweetText,
				inReplyToStatusId: e.inReplyTo.id,
				autoPopulateReplyMetadata: this.state.autoPopulateReplyMetadata,
				excludeReplyUserIds: this.state.excludedRecipientsIds,
				from: this.state.selectedAccountKeys,
				type: "reply",
				inline: !0,
				batchMode: this.state.batchMode
			}
		}, this.enterSendingState = function(e) {
			e.stopPropagation(), this.mergeState({
				sendingStatus: "sending"
			})
		}, this.enterSuccessState = function(e) {
			e.stopPropagation(), this.mergeState({
				sendingStatus: "success"
			}), this.deleteDraftText(), setTimeout(this.tearDownInlineCompose.bind(this), this.attr.panelCloseDelay)
		}, this.enterErrorState = function(e, t) {
			e.stopPropagation(), this.mergeState({
				sendingStatus: "ready"
			})
		}, this.getDraftText = function() {
			if (t && t.length) return this.draftCache.get(t.attr("data-key"))
		}, this.saveDraftText = function(e) {
			if (t && t.length) {
				var i = t.attr("data-key");
				i && this.draftCache.enqueue(i, e)
			}
		}, this.deleteDraftText = function() {
			t && t.length && this.draftCache.dequeue(t.attr("data-key"))
		}, this.handleTextChanged = function(e, t) {
			e.stopPropagation(), this.saveDraftText(t.value), this.mergeState({
				tweetText: t.value
			})
		}, this.handleCloseClick = function() {
			this.closeInlineCompose()
		}, this.handlePopClick = function() {
			this.deleteDraftText(), this.trigger("uiDockedComposeTweet", {
				type: "reply",
				text: this.state.tweetText,
				from: e.from,
				mentions: e.mentions,
				inReplyTo: e.inReplyTo,
				excludedRecipientsIds: this.state.excludedRecipientsIds,
				batchMode: this.state.batchMode,
				popFromInline: !0
			})
		}, this.handleAccountSafeguardCheckboxChange = function(e, t) {
			this.mergeState({
				accountSafeguardChecked: t.checked
			})
		}, this.handleRecipientToggledFromList = function(e, t) {
			var i = k.getUpdatedExcludedRecipientsIds(this.state, t);
			this.mergeState({
				excludedRecipientsIds: i
			})
		}, this.render = function() {}
	}, C, S)
}, , function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.apiErrors = void 0, t.getApiErrorMessage = function() {
		var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
		return a[e.code] || e.message || a.unknown
	};
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = t.apiErrors = {
		0: (0, r.default)("Something went wrong. Please check your connection and try again."),
		32: (0, r.default)("The username and password you entered did not match our records. Please double-check and try again."),
		63: (0, r.default)("This user has been suspended."),
		64: (0, r.default)("Your account has been suspended."),
		130: (0, r.default)("Twitter is temporarily over capacity. Please try again later."),
		131: (0, r.default)("There's something wrong. Please try again later."),
		135: (0, r.default)("Could not authenticate you."),
		108: (0, r.default)("There is no user by that name."),
		150: (0, r.default)("This user doesn't follow you. You can only send messages to people who do."),
		151: (0, r.default)("Something went wrong, but don't fret. It's not your fault."),
		185: (0, r.default)("You reached your daily tweet limit. Please try again tomorrow."),
		187: (0, r.default)("You already tweeted that."),
		195: (0, r.default)("Invalid search query."),
		215: (0, r.default)("Could not authenticate you."),
		226: (0, r.default)("This action was flagged as suspicious."),
		231: (0, r.default)("You need to generate a temporary password on twitter.com to log in."),
		235: (0, r.default)("Your login verification request has expired. Please log in again."),
		236: (0, r.default)("That is not the correct code. Please re-enter the code sent to your phone."),
		241: (0, r.default)("The login verification request sent to your phone was rejected."),
		242: (0, r.default)("Your account is deactivated. Please log in on twitter.com to reactivate."),
		243: (0, r.default)("You have too many failed login attempts. Please try again in an hour."),
		244: (0, r.default)("You must reset the password on this account. Please log in on twitter.com to do this."),
		245: (0, r.default)("You have initiated too many login requests. Please try logging in again in an hour."),
		246: (0, r.default)("You have entered too many incorrect codes. Please try logging in again."),
		276: (0, r.default)("Scheduled tweet was rejected. Please try again."),
		297: (0, r.default)("You cannot have both media and tweet."),
		278: (0, r.default)("You are not a member of this group"),
		280: (0, r.default)("You cannot add more people to this conversation. Try starting a new one."),
		311: (0, r.default)("You have already sent this message."),
		429: (0, r.default)("You have initiated too many login requests. Please try logging in again later."),
		unknown: (0, r.default)("Unknown error. Please try again.")
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.getButtonText = function(e) {
		return e.scheduledDate ? (0, a.getFormattedDateTime)({
			time: e.scheduledDate,
			fullMonth: !1
		}) : (0, r.default)("Schedule Tweet")
	}, t.getTooltipText = function(e) {
		if (!this.canSchedule(e)) return (0, r.default)("Direct messages cannot be scheduled");
		return ""
	}, t.canSchedule = function(e) {
		return "message" !== e.tweetType
	};
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(207)
}, function(e, t, i) {
	"use strict";
	var n, s = i(885),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = {
		isSelectedAccountSafeguarded: function(e) {
			return (0, r.default)(e.settings.safeguarded_account_list, e.selectedAccountKeys).length > 0
		},
		isSafeguardingOk: function(e) {
			return !a.isSelectedAccountSafeguarded(e) || e.accountSafeguardChecked
		}
	};
	e.exports = a
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(895);
	var o = {
		buttonText: {
			tweet: (0, r.default)("Tweet"),
			reply: (0, r.default)("Tweet"),
			message: (0, r.default)("Send message")
		},
		tooltipText: {
			ready: (0, r.default)("Tweet"),
			tooLong: (0, r.default)("Your Tweet is too long"),
			noAccount: (0, r.default)("You have to select at least one account to Tweet from"),
			noRecipients: (0, r.default)("You have to select a recipient for your message"),
			scheduledDatePassed: (0, r.default)("Scheduled time has passed"),
			accountSafeguardNotChecked: (0, r.default)("You have to check the confirmation step to Tweet"),
			uploading: (0, r.default)("Uploading media"),
			processing: (0, r.default)("Processing media")
		},
		getButtonText: function(e) {
			return e.scheduledDate && !e.tweetSentWhileVideoUploadInProgress ? (0, r.default)("Tweet at {{time}}", {
				time: TD.util.prettyTimeOfDayOrDateString(e.scheduledDate)
			}) : e.tweetSentWhileVideoUploadInProgress && (0, a.isSending)(e) && (0, a.isUploading)(e) ? (0, r.default)("{{progress}}%", {
				progress: (0, a.getMinimumProgress)(e)
			}) : e.tweetSentWhileVideoUploadInProgress && (0, a.isSending)(e) && (0, a.isProcessing)(e) ? (0, r.default)("Processing") : o.buttonText[e.tweetType]
		},
		getDefaultTooltipText: function() {
			return [o.tooltipText.ready, " (", "osx" === TD.util.getOSName() ? "&#8984;" + (0, r.default)("Return") : (0, r.default)("Ctrl+Enter"), ")"].join("")
		},
		getTooltipText: function(e) {
			return 0 === e.selectedAccountKeys.length ? o.tooltipText.noAccount : e.remainingCharCount < 0 ? o.tooltipText.tooLong : "message" !== e.tweetType || e.hasMessageRecipients ? e.schedulingOk ? e.safeguardingOk ? e.tweetSentWhileVideoUploadInProgress && (0, a.isSending)(e) && (0, a.isUploading)(e) ? o.tooltipText.uploading : e.tweetSentWhileVideoUploadInProgress && (0, a.isSending)(e) && (0, a.isProcessing)(e) ? o.tooltipText.processing : o.getDefaultTooltipText() : o.tooltipText.accountSafeguardNotChecked : o.tooltipText.scheduledDatePassed : o.tooltipText.noRecipients
		}
	};
	e.exports = o
}, , , , function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(357));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function a(e) {
		return e.files.some(function(e) {
			return "image/gif" === e.type
		})
	}

	function o(e) {
		return e.files.some(function(e) {
			return "video/mp4" === e.type
		})
	}
	var l = {
		buttonText: {
			single: (0, n.default)("Add image"),
			another: (0, n.default)("Add another image"),
			multipleWithVideo: (0, n.default)("Add images or video")
		},
		tooltipText: {
			oneGIF: (0, n.default)("You cannot upload a GIF with other images"),
			oneVideo: (0, n.default)("You cannot upload a Video with other images"),
			isScheduling: (0, n.default)("You cannot add more than 4 images to a scheduled Tweet"),
			isMessaging: (0, n.default)("You cannot add more than 1 image to a message"),
			reachedLimit: "You cannot add more than {{max}} images",
			quotedTweet: (0, n.default)("Quoted Tweets cannot contain images")
		},
		getButtonText: function(e) {
			return e.files.length > 0 ? l.buttonText.another : l.isTweetTypeMessage(e) ? l.buttonText.single : l.buttonText.multipleWithVideo
		},
		isTweetTypeMessage: function(e) {
			return "message" === e.tweetType
		},
		getTooltipText: function(e) {
			if (4 === s.default.getMaxAllowedImages(e)) {
				if (a(e)) return l.tooltipText.oneGIF;
				if (o(e)) return l.tooltipText.oneVideo
			}
			return e.files.length >= s.default.getMaxAllowedImages(e) ? e.scheduledDate ? l.tooltipText.isScheduling : l.isTweetTypeMessage(e) ? l.tooltipText.isMessaging : (0, n.default)("You cannot add more than {{max}} images", {
				max: s.default.getMaxAllowedImages(e)
			}) : e.quotedTweet ? l.tooltipText.quotedTweet : void 0
		},
		canAddMedia: function(e) {
			return e.files.length < s.default.getMaxAllowedImages(e) && function(e) {
				return 1 === s.default.getMaxAllowedImages(e) || s.default.getMaxAllowedImages(e) > 1 && !a(e)
			}(e) && function(e) {
				return 1 === s.default.getMaxAllowedImages(e) || s.default.getMaxAllowedImages(e) > 1 && !o(e)
			}(e) && !e.quotedTweet
		}
	};
	e.exports = l
}, function(e, t, i) {
	"use strict";
	var n, s = i(2),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(2597);
	var o = {
		tooltipText: {
			messageCannotBeScheduled: (0, r.default)("Direct messages cannot be scheduled"),
			noMultipleImages: (0, r.default)("Direct messages cannot contain multiple images"),
			noVideo: (0, r.default)("Direct messages cannot contain video")
		},
		getTooltipText: function(e) {
			return e.scheduledDate ? o.tooltipText.messageCannotBeScheduled : e.files.length > 1 ? o.tooltipText.noMultipleImages : (0, a.hasVideo)(e) ? o.tooltipText.noVideo : ""
		},
		canSwitchTweetType: function(e) {
			return !e.scheduledDate && e.files.length <= 1 && !(0, a.hasVideo)(e)
		}
	};
	e.exports = o
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.hasVideo = function(e) {
		return 1 === e.files.length && (0, n.isVideo)(e.files[0])
	};
	var n = i(883)
}, function(e, t, i) {
	"use strict";
	var n = i(5).component,
		s = i(362);
	e.exports = n(function() {
		this.after("initialize", function() {
			this.on("dragstart", function(e) {
				var t = this.extractDataFromEvent(e);
				e.originalEvent.dataTransfer.setData("text", document.getSelection()), this.trigger(document, "uiDragStart", t)
			}), this.on("dragend", function(e) {
				var t = this.extractDataFromEvent(e);
				this.trigger(document, "uiDragEnd", t)
			})
		})
	}, s)
}, function(e, t, i) {
	"use strict";
	var n = l(i(48)),
		s = l(i(0)),
		r = i(5),
		a = l(i(6)),
		o = i(37);

	function l(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, r.component)(function() {
		this.attributes({
			modalContextTemplate: "modal/modal_context",
			modalContextSelector: ".js-modal-context",
			modalInnerSelector: ".js-modal-inner",
			modalContentSelector: ".js-modal-content",
			modalClickTrapSelector: ".js-click-trap",
			modalDismissSelector: ".js-dismiss",
			modalDragHandleSelector: ".js-drag-handle",
			modalNonDismissibleSelector: ".js-non-dismissible",
			modalOptions: {
				title: "",
				withNonDismissible: !1,
				withCenteredFooter: !1,
				withClickTrap: !0,
				withDismissButton: !0,
				withDoneButton: !1,
				withDraggable: !0,
				withDragHandle: !0,
				withFooter: !0,
				withHeader: !0,
				withHeaderDivider: !1,
				withBorder: !0,
				withClasses: [],
				withContentClasses: [],
				withOverlayClasses: [],
				withTitleClasses: []
			}
		}), this.after("initialize", function() {
			var e = this;
			this.on(document, "uiNeedsModalContext", this.handleCreateModalContext), this.on("uiModalShowing", {
				modalContextSelector: this.handleModalShowing
			}), this.on("uiModalHiding", {
				modalContextSelector: this.handleModalHiding
			}), this.on("click", {
				modalDismissSelector: this.handleModalDismiss,
				modalClickTrapSelector: this.handleModalContextClick
			}), this.gdprModal$ = o.gdprConsent$.subscribe(function(t) {
				e.gdprModalEnabled = t
			})
		}), this.handleCreateModalContext = function(e, t) {
			var i = (0, n.default)(t || {}, this.attr.modalOptions);
			if (!i.withNonDismissible && this.select("modalNonDismissibleSelector").length > 0) this.trigger("uiModalContext", {
				id: i.id,
				$node: null
			});
			else {
				if (i.withNonDismissible && i.withDismissButton) throw new Error("non-dismissible modals may not have dismiss button");
				if (i.withNonDismissible && i.withClickTrap && !this.gdprModalEnabled) throw new Error("non-dismissible modals may not have click trap");
				var s = this.createModalContext(i),
					r = s.find(this.attr.modalInnerSelector),
					a = r.find("header"),
					o = a.find("h3"),
					l = r.find(this.attr.modalContentSelector);
				s.addClass(i.withOverlayClasses.join(" ")), r.addClass(i.withClasses.join(" ")), l.addClass(i.withContentClasses.join(" ")), o.addClass(i.withTitleClasses.join(" ")), this.$node.append(s), this.trigger("uiModalContext", {
					id: i.id,
					$node: s.find(this.attr.modalContentSelector)
				}), i.withDraggable && this.setupDragHandle({
					draggable: r,
					handle: r.find(this.attr.modalDragHandleSelector),
					boundary: s
				});
				var c = i.withDraggable,
					u = i.withDragHandle;
				if (!1 === c && !1 === u) {
					var d = r.find(this.attr.modalDragHandleSelector);
					d.removeClass("is-movable js-drag-handle")
				}
			}
		}, this.setupDragHandle = function(e) {
			["draggable", "handle", "boundary"].forEach(function(t) {
				if (!e[t]) throw new Error("Required parameter " + t + " omitted")
			}), e.draggable.draggable({
				handle: e.handle,
				boundary: e.boundary
			}).on("start.draggable", function() {
				e.draggable.css({
					position: "absolute",
					top: e.draggable.offset().top,
					left: e.draggable.offset().left
				}), e.boundary.addClass("is-dragging")
			}).on("drop.draggable", function() {
				e.boundary.removeClass("is-dragging")
			})
		}, this.createModalContext = function(e) {
			return (0, s.default)(a.default.render(this.attr.modalContextTemplate, e))
		}, this.handleModalShowing = function(e, t) {
			var i = this.select("modalContextSelector");
			i.each(function(e) {
				var n = i[e];
				n !== t.el && (0, s.default)(n).addClass("is-hidden")
			})
		}, this.handleModalHiding = function(e, t) {
			(0, s.default)(t.el).remove()
		}, this.handleModalDismiss = function(e, t) {
			this.closeModals()
		}, this.closeModals = function() {
			this.trigger("uiCloseModal")
		}, this.handleModalContextClick = function(e, t) {
			var i = (0, s.default)(t.el),
				n = (0, s.default)(e.target);
			n.closest(this.attr.modalInnerSelector, i).length || this.closeModals()
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = u(i(9)),
		s = u(i(2)),
		r = u(i(0)),
		a = i(5),
		o = u(i(361)),
		l = i(33),
		c = i(19);

	function u(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = (0, a.component)(function() {
		this.attributes({
			isActionsMenu: !0,
			profileActionsButtonSelector: ".js-user-actions-menu",
			chirpActionsContainerSelector: ".js-tweet-actions",
			profileMenuTemplate: "menus/actions",
			chirpMenuTemplate: "menus/actions",
			dmMenuTemplate: "menus/actions_directmessage",
			menuPosition: "pos-l",
			actionScribeElementMap: {
				mention: "tweet_to_user",
				message: "send_a_dm_to_user",
				lists: "add_or_remove_from_lists",
				"flag-media": "flag_media",
				block: "block_user",
				"report-tweet": "report_tweet",
				"report-spam": "report_spam",
				followOrUnfollow: "follow_or_unfollow_from_accounts",
				favoriteOrUnfavorite: "like_or_unlike_from_accounts",
				follow: "follow",
				unfollow: "unfollow",
				"reference-to": "link_to_this_tweet",
				"message-to": "share_via_dm",
				email: "share_via_email",
				mute: "mute_user",
				unmute: "unmute_user",
				muteConversation: "mute_conversation",
				unmuteConversation: "unmute_conversation",
				"undo-retweet": "undo_retweet",
				destroy: "delete_tweet",
				customtimelines: "add_to_collection",
				embed: "embed_this_tweet",
				translate: "translate"
			}
		}), this.after("initialize", function() {
			this.state = {}, this.around("handleDocumentClick", this.maybeStopDocumentClick), this.after("renderDropdown", this.addActionsMenuClickHandler), this.before("teardownCurrentDropdown", this.removeActionsMenuClickHandler), this.before("teardownCurrentDropdown", this.removeForcedActionsMenuContainerVisibility), this.on("uiDetailViewClosing uiMediaGalleryClosing uiTwitterProfileClosing", this.teardownCurrentDropdown), this.on("click", {
				profileActionsButtonSelector: this.handleUserButtonClick
			}), this.on("uiShowActionsMenu", this.handleShowActionsMenu)
		}), this.addActionsMenuClickHandler = function() {
			this.currentDropdown && this.on(this.currentDropdown.$el, "click", this.handleActionsMenuClick)
		}, this.removeActionsMenuClickHandler = function() {
			this.currentDropdown && this.off(this.currentDropdown.$el, "click", this.handleActionsMenuClick)
		}, this.removeForcedActionsMenuContainerVisibility = function() {
			this.state.$actionsMenuContainer && (this.state.$actionsMenuContainer.removeClass("is-visible"), this.state.$actionsMenuContainer = null)
		}, this.maybeStopDocumentClick = function(e, t) {
			if (this.dropdownIsOpen()) {
				var i = (0, r.default)(t.target).closest(this.attr.profileActionsButtonSelector);
				0 === i.length && e(t)
			}
		}, this.showActionsMenu = function(e, t, i) {
			var n, s, r, a, o, l = 1 === TD.storage.accountController.getAccountsForService("twitter").length,
				c = void 0,
				u = e.hasClass("js-tweet-detail-action"),
				d = e.data("actions-menu-position");
			i ? (i.getRelatedTweet && (i = i.getRelatedTweet() || i), n = !l, s = i.getMedia().some(function(e) {
				return e.flaggedNSFW
			}), r = i instanceof TD.services.TwitterConversationMessageEvent, a = r ? this.attr.dmMenuTemplate : this.attr.chirpMenuTemplate, t = i.getMainUser(), c = i.conversationMuted) : a = this.attr.profileMenuTemplate;
			var h = TD.controller.clients.getClient(t.account.getKey());
			o = !!h.mutes[t.id], this.renderDropdown(e, a, {
				showFavorite: n,
				isFlagged: s,
				isMuted: o,
				isMutedConversation: c,
				isTweetDetailAction: u,
				user: t,
				chirp: i,
				isSingleAccount: l
			}, {
				toggle: !0,
				position: d || this.attr.menuPosition
			}), this.state = {
				user: t,
				chirp: i,
				$actionsMenuContainer: e.closest(this.attr.chirpActionsContainerSelector)
			}, this.state.$actionsMenuContainer.addClass("is-visible")
		}, this.handleShowActionsMenu = function(e, t) {
			var i = (0, r.default)(e.target),
				n = i.attr("data-parent-chirp-id");
			if (n || (n = i.attr("data-chirp-id")), !n) return this.handleUserButtonClick(e);
			var s = i.attr("data-account-key"),
				a = i.closest(".js-column").attr("data-column"),
				o = TD.controller.columnManager.findChirpByAccountKey({
					chirpId: n,
					accountKey: s,
					columnKey: a
				});
			this.showActionsMenu(i, null, o)
		}, this.handleUserButtonClick = function(e) {
			var t = (0, r.default)(e.target).closest(this.attr.profileActionsButtonSelector),
				i = t.data("user-id");
			if (i) {
				var s = TD.cache.twitterUsers.getById(i);
				e.stopPropagation(), e.preventDefault(), s.addCallback(function(e) {
					this.showActionsMenu(t, e, null)
				}.bind(this)), this.trigger("scribeEvent", {
					terms: (0, n.default)({}, (0, l.getElementNamespace)(t), {
						element: "user_actions_menu",
						action: "click"
					})
				})
			}
		}, this.handleFlagTweetSuccess = function() {
			var e = this.state.chirp.getMedia();
			e.forEach(function(e) {
				e.flaggedNSFW = !0
			}), (0, c.showNotification)({
				message: (0, s.default)("Success: Media flagged")
			})
		}, this.handleFlagTweetError = function() {
			(0, c.showErrorNotification)({
				message: (0, s.default)("Error: Failed to flag media. Please try again.")
			})
		}, this.scribeAction = function(e, t) {
			this.trigger("scribeEvent", {
				terms: (0, n.default)({}, (0, l.getElementNamespace)(t), {
					element: this.attr.actionScribeElementMap[e] || e.toLowerCase(),
					action: "click"
				})
			})
		}, this.handleActionsMenuClick = function(e) {
			var t = (0, r.default)(e.target);
			if (0 !== t.closest(this.attr.isSelectedSelector).length) {
				var i = t.data("action"),
					n = !0,
					a = this.state.user,
					o = this.state.chirp,
					l = [];
				switch (o && l.push(o.account.getKey()), o ? this.trigger("metric", {
						key: ["chirp", "ui", o.chirpType, i].join(":")
					}) : this.trigger("metric", {
						key: ["user", "ui", i].join(":")
					}), this.scribeAction(i, t), i) {
					case "mention":
						this.trigger("uiComposeTweet", {
							text: "@" + a.screenName + " ",
							from: l
						});
						break;
					case "message":
						this.trigger("uiComposeTweet", {
							type: "message",
							from: l,
							messageRecipients: [{
								screenName: a.screenName,
								avatar: a.profileImageURL
							}]
						});
						break;
					case "lists":
						new TD.components.AddToListsDialog(a);
						break;
					case "flag-media":
						(0, c.showNotification)({
							message: (0, s.default)("Flagging media…")
						}), TD.controller.clients.getClient(o.account.getKey()).flagTweet(o.id, this.handleFlagTweetSuccess.bind(this), this.handleFlagTweetError);
						break;
					case "block":
						this.trigger("uiBlockAction", {
							account: a.account,
							twitterUser: a
						});
						break;
					case "report-tweet":
						this.trigger("uiShowReportOptions", {
							account: a.account,
							tweetId: o.id,
							twitterUser: a,
							isMessage: o instanceof TD.services.TwitterConversationMessageEvent,
							isMedia: o.hasMedia()
						});
						break;
					case "report-spam":
						this.trigger("uiShowReportUserOptions", {
							account: a.account,
							twitterUser: a
						});
						break;
					case "followOrUnfollow":
						this.trigger("uiShowFollowFromOptions", {
							userToFollow: a
						});
						break;
					case "favoriteOrUnfavorite":
						this.trigger("uiShowFavoriteFromOptions", {
							tweet: o
						});
						break;
					case "follow":
						a.follow(a.account, null, null, !0);
						break;
					case "unfollow":
						a.unfollow(a.account, null, null, !0);
						break;
					case "reference-to":
						this.trigger("uiShowCopyTweetLink", {
							url: o.getChirpURL()
						});
						break;
					case "message-to":
						o.messageTo();
						break;
					case "email":
						o.email();
						break;
					case "mute":
						a.mute(a.account);
						break;
					case "unmute":
						a.unmute(a.account);
						break;
					case "muteConversation":
						o.muteConversation(a.account);
						break;
					case "unmuteConversation":
						o.unmuteConversation(a.account);
						break;
					case "destroy":
						o instanceof TD.services.TwitterConversationMessageEvent ? (0, r.default)(document).trigger("uiShowDeleteDmMessage", o) : o.destroy();
						break;
					case "undo-retweet":
						(0, r.default)(document).trigger("uiUndoRetweet", {
							tweetId: o.getMainTweet().id,
							retweetId: o.id,
							from: o.account.getKey()
						});
						break;
					case "customtimelines":
						new TD.components.AddToCustomTimelineDialog(o.getMainTweet());
						break;
					case "embed":
						this.trigger("uiShowEmbedTweet", {
							tweet: o.getMainTweet()
						});
						break;
					case "translate":
						o.translate();
						break;
					case "search-for-quoted":
						(0, r.default)(document).trigger("uiPerformSearch", {
							query: o.getChirpURL(),
							columnKey: t.closest(".js-column").attr("data-column")
						});
						break;
					default:
						n = !1
				}
				n && (e.preventDefault(), e.stopPropagation()), this.teardownCurrentDropdown()
			}
		}
	}, o.default)
}, function(e, t, i) {
	"use strict";
	var n, s = i(0),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(5).component;
	e.exports = a(function() {
		this.attributes({
			columnDragHandleSelector: ".js-column-drag-handle",
			appColumnsContainerSelector: ".js-app-columns-container",
			columnsContainerSelector: ".js-app-columns",
			columnSelector: ".js-column"
		}), this.after("initialize", function() {
			this.on("uiColumnRendered", this.handleColumnRendered), this.select("columnsContainerSelector").dragdroplist({
				selector: this.attr.columnSelector,
				contentSelector: this.attr.columnSelector,
				handle: this.attr.columnDragHandleSelector,
				$boundary: this.select("appColumnsContainerSelector"),
				orientation: "horizontal",
				tagName: "section",
				scroll_speed: 24
			}).on("dropped.dragdroplist", function() {
				var e = [];
				this.select("columnSelector").each(function() {
					e.push((0, r.default)(this).attr("data-column"))
				}), TD.storage.clientController.client.setColumnOrder(e)
			}.bind(this))
		}), this.handleColumnRendered = function(e, t) {
			t.$column.trigger("itemadded.dragdroplist", {
				itemId: t.column
			})
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = c(i(9)),
		s = c(i(0)),
		r = i(2603),
		a = c(i(232)),
		o = i(37),
		l = c(i(18));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = i(2628),
		d = i(277).TRANSITION_END,
		h = i(7);
	e.exports = h.mixin(function() {
		var e = {
			accountSettings: "accounts"
		};
		this.attributes({
			contentSelector: ".js-app-content",
			drawerSelector: ".js-drawer",
			closeDrawerSelector: ".js-drawer-close",
			transitionDuration: 200
		}), this.initialState({
			drawerWidth: m,
			activeDrawer: null,
			hidingDrawer: null,
			previousDrawer: null
		}), this._toggleWideDrawer = function(e) {
			this.select("drawerSelector").toggleClass("wide", e), this.mergeState({
				drawerWidth: e ? f : m
			}), this.state.activeDrawer && (this.setTransitionDuration(!1), this.applyContentTransition(!1, {
				transform: "translateX(" + this.state.drawerWidth + "px)"
			}))
		}, this.componentDidInitialize = function() {
			var e = this;
			this.$content = this.select("contentSelector"), this.observe(o.useRwebComposer$).subscribe(function(t) {
				return e._toggleWideDrawer(t)
			}), this.on(document, "uiDrawerHideDrawer", this.handleDrawerHide), this.on(document, "uiDrawerShowDrawer", this.handleDrawerShow), this.on(document, "uiShowAccountSettings", this.handleShowAccountSettings), this.on("click", {
				closeDrawerSelector: this.handleDrawerHide
			});
			var t = this.connect(r.DockedComposeUiBase, {
				mapStateToProps: function(e) {
					return {
						isVisible: "compose" === e.activeDrawer || "compose" === e.hidingDrawer,
						shouldOpenOnMount: null === e.activeDrawer && null === e.hidingDrawer && null === e.previousDrawer && a.default.getComposeStayOpen()
					}
				}
			});
			this.attachChild(t, this.getDrawerContainer("compose"), {
				props: {
					onShow: function(t) {
						e.handleDrawerShow(null, (0, n.default)({}, t, {
							drawer: "compose"
						}))
					},
					onClose: function() {
						e.handleDrawerHide()
					}
				}
			}), this.attachChild(u, this.getDrawerContainer("accountSettings"))
		}, this.handleDrawerShow = function(e, t) {
			this.showDrawer({
				drawer: t.drawer,
				withAnimation: t.withAnimation,
				withCloseModal: t.withCloseModal
			})
		}, this.handleDrawerHide = function(e, t) {
			this.hideDrawer({
				withAnimation: !0
			})
		}, this.getDrawerContainer = function(e) {
			return this.select("drawerSelector").filter(function() {
				return (0, s.default)(this).attr("data-drawer") === e
			})
		}, this.handleShowAccountSettings = function() {
			this.showDrawer({
				drawer: "accountSettings",
				withAnimation: !0
			})
		}, this.applyContentTransition = function(e, t) {
			e ? (this.$content.one(d, this.handleTransitionEnd.bind(this)), this.$content.css(t)) : (this.$content.css(t), this.handleTransitionEnd())
		}, this.hideDrawer = function(e) {
			this.state.activeDrawer && (this.select("contentSelector").removeClass("is-open"), this.setTransitionDuration(e.withAnimation), this.mergeState({
				activeDrawer: null,
				hidingDrawer: e.withAnimation ? this.state.activeDrawer : null,
				previousDrawer: this.state.activeDrawer
			}), this.applyContentTransition(e.withAnimation, {
				transform: "translateX(0px)",
				"margin-right": "0"
			}), this.trigger("uiDrawerActive", {
				activeDrawer: this.state.activeDrawer
			}))
		}, this.showDrawer = function(t) {
			t.drawer !== this.state.activeDrawer && (this.select("contentSelector").addClass("is-open"), this.setVisibleDrawer(t), this.state.activeDrawer ? this.mergeState({
				activeDrawer: t.drawer
			}) : (this.setTransitionDuration(t.withAnimation), this.mergeState({
				activeDrawer: t.drawer
			}), this.applyContentTransition(t.withAnimation, {
				transform: "translateX(" + this.state.drawerWidth + "px)"
			})), this.trigger("uiDrawerActive", {
				activeDrawer: this.state.activeDrawer
			}), e[t.drawer] && this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: e[t.drawer],
					action: "impression"
				}
			}))
		}, this.handleTransitionEnd = function() {
			this.state.activeDrawer && this.$content.css({
				"margin-right": this.state.drawerWidth
			}), this.mergeState({
				hidingDrawer: null
			}), this.trigger("uiDrawerTransitionComplete")
		}, this.setVisibleDrawer = function(e) {
			var t = e.drawer,
				i = e.withCloseModal,
				n = void 0 === i || i;
			n && this.trigger("uiCloseModal"), this.select("drawerSelector").addClass("is-hidden");
			var s = this.getDrawerContainer(t);
			s.removeClass("is-hidden")
		}, this.setTransitionDuration = function(e) {
			e ? this.$content.css({
				"transition-duration": this.attr.transitionDuration + "ms"
			}) : this.$content.css({
				"transition-duration": "0ms"
			})
		}, this.render = function() {}
	}, l.default);
	var m = 270,
		f = 350
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.DockedComposeUiBase = void 0;
	var n = y(i(9)),
		s = y(i(26)),
		r = y(i(14)),
		a = y(i(16)),
		o = y(i(27)),
		l = y(i(28));
	t.default = S;
	var c = y(i(4)),
		u = (y(i(8)), y(i(0))),
		d = i(7),
		h = i(2604),
		m = y(i(232)),
		f = i(33),
		p = i(206),
		g = y(i(2621)),
		v = i(37),
		T = y(i(829)),
		w = i(74),
		b = y(i(2622));

	function y(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var _ = {
			isScheduled: !1,
			composeType: "tweet",
			composerKey: 0,
			text: void 0,
			selectedAccountId: void 0,
			inReplyToStatusId: void 0,
			quotedStatusId: void 0
		},
		C = function(e) {
			function t() {
				var e, i, a, l;
				(0, r.default)(this, t);
				for (var d = arguments.length, h = Array(d), p = 0; p < d; p++) h[p] = arguments[p];
				return i = a = (0, o.default)(this, (e = t.__proto__ || (0, s.default)(t)).call.apply(e, [this].concat(h))), a.state = _, a.rwebComposerRef = c.default.createRef(), a.legacyComposerRef = c.default.createRef(), a.handleUiComposeTweet = function(e, t) {
					var i = t.type || "tweet",
						s = (0, w.getDefaultAccount)();
					(0, f.generic)({
						page: "compose",
						component: "docked_compose",
						element: i,
						action: "impression"
					}), (0, u.default)(document).trigger("uiRwebComposerExperimentImpression"), a._pendingComposeEventData = t, a.setState(function(e) {
						return t.files ? (0, n.default)({}, a.props.isVisible ? {} : _, {
							composeType: i
						}) : {
							isScheduled: !!t.schedule,
							composeType: i,
							composerKey: a.shouldShowLegacyComposer() ? e.composerKey : e.composerKey + 1,
							text: t.text || t.appendText,
							selectedAccountId: t.from && t.from[0] ? (r = t.from[0], T.default.get(r).getUserID()) : s ? s.userId : void 0,
							inReplyToStatusId: t.inReplyTo ? t.inReplyTo.id : void 0,
							quotedStatusId: t.quotedTweet ? t.quotedTweet.id : void 0
						};
						var r
					}, function() {
						a.props.isVisible || a.props.onShow({
							withAnimation: !t.noAnimate,
							withCloseModal: !t.noFocus
						})
					})
				}, a.handleUiComposeFilesAdded = function(e, t) {
					a.handleUiComposeTweet(null, {
						type: a.state.composeType,
						files: t.files
					})
				}, a.handleUiComposeClose = function() {
					m.default.getComposeStayOpen() ? a.setState(function(e) {
						return {
							composerKey: e.composerKey + 1
						}
					}) : a.props.onClose()
				}, a.handleSend = function() {
					m.default.getComposeStayOpen() ? ((0, u.default)(document).trigger("uiRwebComposerExperimentImpression"), a.shouldShowLegacyComposer() && a.legacyComposerRef.current.resetAfterSend(a.optedInToNewComposerFlow())) : a.props.onClose()
				}, a.handleTypeChange = function(e) {
					(0, u.default)(document).trigger("uiDockedComposeTweet", {
						type: e
					})
				}, a.handleOptIn = function() {
					a.props.onNewComposerOptInChange(!0), (0, f.generic)({
						page: "compose",
						component: "rweb_compose",
						action: "opt_in"
					})
				}, a.handleOptOut = function() {
					a.props.onNewComposerOptInChange(!1), (0, f.generic)({
						page: "compose",
						component: "rweb_compose",
						action: "opt_out"
					}), (0, u.default)(document).trigger("uiRwebComposerOptOut")
				}, l = i, (0, o.default)(a, l)
			}
			return (0, l.default)(t, e), (0, a.default)(t, [{
				key: "componentDidMount",
				value: function() {
					(0, u.default)(document).on("uiDockedComposeTweet", this.handleUiComposeTweet), (0, u.default)(document).on("uiComposeFilesAdded", this.handleUiComposeFilesAdded), (0, u.default)(document).on("uiComposeClose", this.handleUiComposeClose), this.props.shouldOpenOnMount && this.handleUiComposeTweet(null, {
						noAnimate: !0,
						noFocus: !0
					})
				}
			}, {
				key: "componentDidUpdate",
				value: function(e) {
					this.props.isVisible && (this._pendingComposeEventData && (this.shouldShowLegacyComposer() ? this.legacyComposerRef.current && this.legacyComposerRef.current.resetComposePanelState(this._pendingComposeEventData, this.optedInToNewComposerFlow()) : !this._pendingComposeEventData.noFocus && this.rwebComposerRef.current && this.rwebComposerRef.current.focus()), this._pendingComposeEventData = void 0)
				}
			}, {
				key: "componentWillUnmount",
				value: function() {
					(0, u.default)(document).off("uiDockedComposeTweet", this.handleUiComposeTweet), (0, u.default)(document).off("uiComposeFilesAdded", this.handleUiComposeFilesAdded), (0, u.default)(document).off("uiComposeClose", this.handleUiComposeClose)
				}
			}, {
				key: "optedInToNewComposerFlow",
				value: function() {
					return this.props.useRwebComposer && this.props.newComposerOptIn && !this.state.isScheduled
				}
			}, {
				key: "shouldShowLegacyComposer",
				value: function() {
					return "message" === this.state.composeType || !this.optedInToNewComposerFlow()
				}
			}, {
				key: "handleStayOpen",
				value: function() {
					var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
					m.default.setComposeStayOpen(e), (0, f.generic)({
						page: "compose",
						component: t ? "rweb_compose" : "docked_compose",
						element: "stay_open",
						action: e ? "check" : "uncheck"
					})
				}
			}, {
				key: "render",
				value: function() {
					var e = this;
					return this.props.isVisible ? this.shouldShowLegacyComposer() ? c.default.createElement(h.LegacyDockedComposeReact, {
						ref: this.legacyComposerRef,
						key: this.state.composerKey,
						rwebComposerEnabled: this.props.useRwebComposer,
						newComposerOptIn: this.props.newComposerOptIn,
						composeType: this.state.composeType,
						onTypeChange: this.handleTypeChange,
						onSend: this.handleSend,
						onClose: this.props.onClose,
						onOptIn: this.handleOptIn,
						onStayOpen: this.handleStayOpen
					}) : c.default.createElement(b.default, {
						ref: this.rwebComposerRef,
						composerKey: this.state.composerKey,
						text: this.state.text,
						inReplyToStatusId: this.state.inReplyToStatusId,
						selectedAccountId: this.state.selectedAccountId,
						quotedStatusId: this.state.quotedStatusId,
						onNewDM: function() {
							e.handleTypeChange("message"), (0, f.generic)({
								page: "compose",
								component: "rweb_compose",
								element: "new_dm",
								action: "click"
							})
						},
						onOptOut: this.handleOptOut,
						onSend: this.handleSend,
						onStayOpen: this.handleStayOpen
					}) : null
				}
			}]), t
		}(c.default.Component);

	function S(e) {
		return c.default.createElement(p.Observe, {
			observable: v.useRwebComposer$
		}, function(t) {
			return null == t ? null : c.default.createElement(g.default, {
				name: TD.settings.NEW_COMPOSER_OPT_IN
			}, function(i, s) {
				return c.default.createElement(C, (0, n.default)({}, e, {
					useRwebComposer: t,
					newComposerOptIn: i,
					onNewComposerOptInChange: s
				}))
			})
		})
	}
	t.DockedComposeUiBase = (0, d.reactToUiBase)(S)
}, function(e, t, i) {
	"use strict";
	var n = I(i(9)),
		s = I(i(65)),
		r = I(i(162)),
		a = I(i(44)),
		o = I(i(229)),
		l = I(i(112)),
		c = I(i(43)),
		u = I(i(46)),
		d = I(i(527)),
		h = I(i(122)),
		m = I(i(13)),
		f = I(i(2)),
		p = I(i(0)),
		g = I(i(211)),
		v = I(i(18)),
		T = i(74),
		w = i(17),
		b = i(73),
		y = I(i(2605)),
		_ = i(895),
		C = i(47),
		S = I(i(2606)),
		D = i(7),
		k = I(D),
		E = I(i(6));

	function I(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var A = i(886),
		x = i(2607),
		M = i(2608),
		R = i(887),
		F = i(888),
		O = i(2609),
		P = i(891),
		N = i(2610),
		U = i(2611),
		L = i(2613),
		j = i(892),
		B = i(889),
		$ = i(2614),
		z = i(2615),
		H = i(2616),
		K = i(875),
		V = i(231),
		q = i(2617),
		W = i(893),
		G = i(230),
		Y = i(896),
		Q = i(894),
		J = i(357),
		X = i(36),
		Z = k.default.mixin(g.default, v.default, function() {
			this.attributes({
				stayOpenInputSelector: ".js-compose-stay-open",
				tweetTextInputSelector: ".js-compose-text",
				characterCountSelector: ".js-character-count",
				progressSvgSelector: ".js-progress-svg",
				accountSafeguardCheckboxSelector: ".js-account-safeguard-checkbox",
				composeScrollerSelector: ".js-compose-scroller",
				withTouchComposeClass: "is-touch-compose",
				addImageButtonSelector: ".js-add-image-button",
				sendButtonContainerSelector: ".js-send-button-container",
				replyInfoContainerSelector: ".js-reply-info-container",
				scheduleButtonSelector: ".js-scheduler",
				tweetTypeButtonSelector: ".js-tweet-type-button",
				inReplyToSelector: ".js-in-reply-to",
				quoteTweetHolderSelector: ".js-quote-tweet-holder",
				inlineConfirmationSelector: ".js-inline-confirmation",
				accountSelectorSelector: ".js-account-list",
				composeCloseSelector: ".js-compose-close",
				tcoLinkLength: 22,
				tweetLinkLength: 23,
				panelCloseDelay: 500,
				releaseFocusDelay: 300,
				defaultTextComposeHeight: 130,
				increasedTextComposeHeight: 160,
				minimumComposeHeight: 180,
				scheduledHintSelector: ".js-compose-hint",
				accountSelectorGridToggleSelector: ".js-account-selector-grid-toggle",
				maxRecipients: 20,
				onTypeChange: null,
				onSend: null,
				onClose: null,
				onOptIn: null,
				onStayOpen: null,
				rwebComposerEnabled: !1,
				newComposerOptIn: !1,
				newComposerUpsellButton: ".js-new-composer-opt-in",
				newComposerUpsellMessage: ".js-new-composer-opt-in-msg",
				newComposerUpsellPadding: ".js-new-composer-upsell-padding"
			}), this.initialState({
				sendingStatus: "ready",
				tweetText: "",
				tweetType: "tweet",
				tweetTextFocused: !1,
				messageConversation: null,
				scheduledDate: null,
				quotedTweet: null,
				stayOpen: null,
				accountSafeguardChecked: !1,
				inReplyTo: null,
				uploadsInProgress: {},
				usingNewComposer: !1,
				attr: function() {
					return this.attr
				},
				selectedAccountKeys: function() {
					return [(0, T.getDefaultAccount)().accountKey]
				},
				messageRecipients: function() {
					return []
				},
				files: function() {
					return []
				},
				currentTime: function() {
					return new Date
				},
				replies: function() {
					return []
				},
				mentions: function() {
					return []
				},
				selectionIndices: function() {
					return []
				},
				tweetSentWhileVideoUploadInProgress: !1
			}), this.after("initialize", function() {
				var e = this;
				this.$node.html(E.default.render("compose/docked_compose", {
					rwebComposerEnabled: this.attr.rwebComposerEnabled,
					showUpsellButton: this.attr.rwebComposerEnabled && !this.attr.newComposerOptIn
				})), TD.util.isTouchDevice() && TD.decider.get("touchdeck_compose_v2") && this.$node.addClass(this.attr.withTouchComposeClass);
				var t = this.observe(this.requestResource("settings.state")).map(TD.util.unpluck("settings")),
					i = this.observe(this.requestResource("/1.1/help/configuration.json")).map(TD.util.unpluck("configuration")),
					n = X.Observable.combineLatest([this.observableState, t, i], TD.util.merge).map(Q).share();
				this.provideResource("dockedCompose.state", n), this.observe(X.Observable.fromEvent(this.$node, "uiComposeSendTweet")).do(function(e) {
					e.stopPropagation()
				}).withLatestFrom(n, function(e, t) {
					return t
				}).filter(TD.util.pluck("canSend")).map(this.prepareSendTweet.bind(this)).subscribe(this.sendTweet.bind(this)), this.observe(this.observableState).distinctUntilKeyChanged("scheduledDate", b.existenceEquality).filter(function(e) {
					var t = (0, m.default)(e, ["metadata", "originalUpdates"], []),
						i = !e.quotedTweet && t.some(function(e) {
							return e.attachmentUrl
						}),
						n = !e.inReplyTo && t.some(function(e) {
							return e.inReplyToStatusId
						});
					return e.scheduledDate && (i || n)
				}).subscribe(this.hydrateScheduledFields.bind(this)), this.observe(this.observableState).filter(function(e) {
					return "reply" === e.tweetType && e.autoPopulateReplyMetadata && (0, m.default)(e, "inReplyTo.getReplyUsers") && 0 === (0, m.default)(e, "implicitRecipients.length", 0)
				}).map(function(e) {
					return e.inReplyTo.getReplyUsers()
				}).filter(function(e) {
					return e.length
				}).subscribe(function(t) {
					e.mergeState({
						implicitRecipients: t
					})
				}), this.observe(this.observableState).pluck("tweetTextFocused").distinctUntilChanged().filter(TD.util.equals(!1)).subscribe(this.setReleaseFocusTimer.bind(this)), this.observe(this.observableState).subscribe(function(t) {
					var i = !e.attr.rwebComposerEnabled || !!t.scheduledDate || "message" === t.tweetType;
					e.select("newComposerUpsellButton").toggleClass("is-hidden", i), e.select("newComposerUpsellPadding").toggleClass("height--40", i), e.select("newComposerUpsellPadding").toggleClass("height--125", !i)
				});
				var s = this.connect(S.default, {
					mapStateToProps: function(e) {
						return {
							scheduledDate: e.scheduledDate
						}
					}
				});
				this.attachChild(s, this.select("scheduledHintSelector")), this.observe(this.requestResource("dockedCompose.state")).pluck("displayedCharacterCount").distinctUntilChanged().subscribe(function(t) {
					e.mergeState({
						displayedCharacterCount: t
					})
				}), this.attachChild(R, this.select("characterCountSelector"), {
					stateSource: "dockedCompose.state"
				});
				var r = this.connect(F, {
					mapStateToProps: function(e) {
						return {
							characterCount: e.displayedCharacterCount,
							tweetType: e.tweetType
						}
					}
				});
				this.attachChild(r, this.select("progressSvgSelector").first()), this.attachChild(L, this.$node, {
					stateSource: "dockedCompose.state",
					maxRecipients: this.attr.maxRecipients
				}), this.attachChild(O, this.select("inReplyToSelector"), {
					stateSource: "dockedCompose.state"
				}), this.attachChild(j, this.select("tweetTextInputSelector"), {
					stateSource: "dockedCompose.state"
				}), this.attachChild(H, this.select("quoteTweetHolderSelector"), {
					stateSource: "dockedCompose.state"
				}), this.attachChild(B, this.select("sendButtonContainerSelector"), {
					stateSource: "dockedCompose.state"
				}), this.attachChild(N, this.select("addImageButtonSelector"), {
					stateSource: "dockedCompose.state"
				}), this.attachChild(U, this.select("scheduleButtonSelector"), {
					stateSource: "dockedCompose.state"
				}), this.attachChild(z, this.select("tweetTypeButtonSelector"), {
					stateSource: "dockedCompose.state",
					onTypeChange: function() {
						return e.attr.onTypeChange
					}
				}), this.attachChild($, this.$node, {
					stateSource: "dockedCompose.state"
				}), this.on("uiAccountsSelected", this.handleAccountsSelected), this.attachChild(x, this.select("accountSelectorSelector"), {
					stateSource: "dockedCompose.state"
				}), this.attachChild(M, this.select("accountSelectorGridToggleSelector")), this.attachChild(A, this.select("accountSafeguardCheckboxSelector"), {
					stateSource: "dockedCompose.state"
				});
				var a = this.connect(P, {
					mapStateToProps: function() {
						var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
							t = e.selectedAccountKeys,
							i = void 0 === t ? [] : t,
							n = e.implicitRecipients,
							s = void 0 === n ? [] : n,
							r = e.excludedRecipientsIds;
						return {
							recipients: J.recipientsWithoutSelfMention(s, i),
							excludedRecipientsIds: r
						}
					}
				});
				this.attachChild(a, this.select("replyInfoContainerSelector")), this.releaseFocusTimer = null, this.observe(this.requestResource("settings.state")).pluck("compose_stay_open").distinctUntilChanged().subscribe(function(t) {
					e.mergeState({
						stayOpen: t
					}), e.select("stayOpenInputSelector").prop("checked", t)
				}), this.on(this.attr.composeCloseSelector, "click", this.handleUiComposeClose), this.on(document, "uiRemoveQuotedTweet", this.handleQuotedTweetRemove), this.on(document, "uiRecipientToggledInDockedCompose", this.handleRecipientToggledFromList), this.on(document, "videoUploadProgress", this.handleVideoUploadProgress), this.on(document, "videoUploadCancel", this.handleVideoUploadCancel), this.on("uiComposeTweetSending", this.enterSendingState), this.on("uiComposeTweetSent", this.enterSuccessState), this.on("uiComposeTweetError", this.enterErrorState), this.on("uiComposeScheduleDate", this.handleUiComposeScheduleDate), this.on("uiAccountSafeguardCheckboxChange", this.handleAccountSafeguardCheckboxChange), this.on("uiRemoveInReplyTo", this.handleRemoveInReplyTo), this.after("attachImagesPreview", function() {
					this.mergeState({
						selectionIndices: [this.state.tweetText.length, this.state.tweetText.length]
					})
				}), this.after("removeFile", function() {
					this.mergeState({
						files: this.getFiles()
					})
				}), this.onReceiveClick(function() {
					this.hasFocus || this.focusRequest()
				}), this.onLoseClick(function() {
					this.hasFocus && this.focusRelease()
				}), this.on("uiComposeImageAdded", this.handleComposeImageAdded), this.on(document, "uiComposeResetFiles", this.resetFiles.bind(this)), this.on("uiComposeImageClicked", function() {
					this.mergeState({
						tweetTextFocused: !0
					})
				}), this.on("uiComposeTextChanged", this.handleComposeTextChanged), this.on("uiAddMessageRecipient", this.handleUiAddMessageRecipient), this.on("uiRemoveMessageRecipient", this.handleUiRemoveMessageRecipient), this.on("uiRemoveLastMessageRecipient", this.handleUiRemoveLastMessageRecipient), this.on("uiAddMessageConversation", this.handleUiAddMessageConversation), this.on("uiRemoveMessageConversation", this.handleUiRemoveMessageConversation), this.on("uiComposeTextFocus", this.handleUiComposeTextFocus), this.$composeScroller = this.select("composeScrollerSelector"), this.observe(X.Observable.merge(this.observableState.distinctUntilChanged(function(e, t) {
					var i = (0, m.default)(e, "inReplyTo.id") === (0, m.default)(t, "inReplyTo.id"),
						n = (0, m.default)(e, "quotedTweet.id") === (0, m.default)(t, "quotedTweet.id");
					return i && n
				}), t.pluck("account_selector_grid_mode"), X.Observable.fromEvent((0, p.default)(document), "uiMainWindowResized"), X.Observable.fromEvent(this.$node, "uiComposeScheduleDatePickerOpen"))).debounceTime(50).subscribe(this.initScrollbars.bind(this)), this.observe(X.Observable.timer(0, 1e3)).map(function(e) {
					return {
						value: e,
						timestamp: Date.now()
					}
				}).pluck("timestamp").map(TD.util.makeDate).subscribe(this.toState("currentTime").bind(this));
				var o = function() {
					var t = TD.settings.getNewComposerUpsellViewed();
					t && e.select("newComposerUpsellMessage").text((0, f.default)("Launch new composer"))
				};
				o(), (0, p.default)(document).on("dataSettingsValues", o), this.on(this.attr.newComposerUpsellButton, "click", this.handleNewComposerOptIn), this.on(this.attr.stayOpenInputSelector, "click", this.handleStayOpen)
			}), this.componentWillReceiveProps = function(e) {
				this.state.tweetType !== e.composeType && this.mergeState({
					tweetType: e.composeType
				})
			}, this.componentWillTeardown = function() {
				this.removeFiles(), this.disableClickTrap(), this.resetSendTweet(), this.triggerEventForClearingVideoProcessing()
			}, this.resetFiles = function() {
				this.mergeState({
					files: this.getFiles()
				})
			}, this.getConversation = function(e, t) {
				return t.map(C.getClientByAccountKey).map(function(t) {
					return t.conversations.getConversation(e)
				}).find(function(e) {
					return e
				}) || null
			}, this.hydrateMessageRecipients = function(e) {
				return TD.core.defer.gatherResults(e.map(function(e) {
					return e.screenName && e.id && e.profileImageURL ? TD.core.defer.succeed(e) : TD.cache.twitterUsers.getByScreenName(e.screenName || e)
				})).addCallbackWith(this, function(e) {
					return (0, h.default)(e, function(e) {
						return e.id
					})
				})
			}, this.hydrateScheduledFields = function(e) {
				var t = this,
					i = (0, m.default)(e, ["metadata", "originalUpdates"], []),
					n = i.map(function(e) {
						var t = e.account,
							i = e.attachmentUrl,
							n = e.inReplyToStatusId;
						return {
							account: t,
							hydrations: {
								quotedTweet: (0, w.extractTweetIdFromPermalink)(i),
								inReplyTo: n
							}
						}
					}),
					o = TD.core.defer.gatherResults(n.map(function(e) {
						var t = e.account,
							i = e.hydrations,
							n = TD.controller.clients.getClient(t.getKey()),
							o = (0, a.default)(i).map(function(e) {
								var t = i[e];
								if (!t) return TD.core.defer.succeed();
								var s = new TD.core.defer.Deferred;
								return n.show(t, s.callback.bind(s), s.errback.bind(s)), s.addCallback(function(t) {
									return (0, r.default)({}, e, t)
								}), s
							}),
							l = TD.core.defer.gatherResults(o);
						return l.addCallback(function(e) {
							return d.default.apply(void 0, [{}].concat((0, s.default)(e)))
						}), l
					}));
				o.addCallback(function(e) {
					t.mergeState(e[0])
				})
			}, this.handleUiAddMessageConversation = function(e, t) {
				J.existingConversation(this.state) || J.keyIsInSelectedAccounts(this.state, t.conversation.accountKey) && this.mergeState({
					messageConversation: this.getConversation(t.conversation.conversationId, [t.conversation.accountKey]),
					tweetTextFocused: !0
				})
			}, this.handleUiAddMessageRecipient = function(e, t) {
				if (this.state.messageConversation) return !1;
				J.maxRecipientsReached(this.state) || this.hydrateMessageRecipients(this.state.messageRecipients.concat(t.recipient)).addCallbackWith(this, function(e) {
					this.mergeState({
						messageRecipients: e,
						tweetTextFocused: e.length >= this.attr.maxRecipients
					})
				})
			}, this.handleUiRemoveMessageConversation = function(e) {
				this.mergeState({
					messageConversation: null
				})
			}, this.handleUiRemoveMessageRecipient = function(e, t) {
				var i = this.state.messageRecipients.filter(function(e) {
					return e.id !== t.id
				});
				this.hydrateMessageRecipients(i).addCallbackWith(this, this.toState("messageRecipients"))
			}, this.handleUiRemoveLastMessageRecipient = function(e, t) {
				this.hydrateMessageRecipients(this.state.messageRecipients.slice(0, -1)).addCallbackWith(this, this.toState("messageRecipients"))
			}, this.handleAccountsSelected = function(e, t) {
				this.mergeState({
					selectedAccountKeys: t.accountKeys
				}), this.updateAccountsMediaIds(t.accountKeys)
			}, this.handleQuotedTweetRemove = function() {
				this.mergeState({
					quotedTweet: null
				}), TD.controller.stats.discardQuoteTweet()
			}, this.handleUiComposeClose = function() {
				var e = this;
				this.state.tweetSentWhileVideoUploadInProgress ? this.attachChild(y.default, this.select("inlineConfirmationSelector"), {
					confirmationText: (0, f.default)("Are you sure you want to discard this Tweet?"),
					primaryButtonText: (0, f.default)("Discard"),
					secondaryButtonText: (0, f.default)("Cancel"),
					buttonPrimaryAction: function() {
						return function() {
							e.attr.onClose()
						}
					},
					buttonPrimaryIsNegative: !0,
					buttonPrimaryClickShouldCauseTeardown: !0,
					buttonSecondaryClickShouldCauseTeardown: !0,
					teardownOn: "teardownInlineConfirmation"
				}) : this.attr.onClose()
			}, this.prepareSendTweet = function(e) {
				var t = (0, _.isUploading)(this.state);
				t && this.trigger("uiDockedComposeSendingVideoInProgress"), this.mergeState({
					tweetSentWhileVideoUploadInProgress: t
				});
				var i = {};
				return i.requestId = (0, u.default)("sendTweet"), i.text = TD.decider.get("compose_quoted_tweet_as_attachment") ? e.tweetText : e.rawTweetText, i.inReplyToStatusId = this.state.inReplyTo && this.state.inReplyTo.id, i.autoPopulateReplyMetadata = this.state.autoPopulateReplyMetadata, i.excludeReplyUserIds = this.state.excludedRecipientsIds, i.files = this.getFiles(), TD.decider.get("compose_quoted_tweet_as_attachment") && (i.attachmentUrl = e.hasQuotedTweet ? e.quotedTweet.getChirpURL() : ""), i.messageRecipientIds = e.messageRecipients.map(TD.util.pluck("id")).join(","), i.conversationId = e.messageConversation && e.messageConversation.conversationId, i.scheduledDate = e.scheduledDate, i.from = e.selectedAccountKeys, i.type = e.tweetType, i.metadata = e.metadata, i.files.length && (i.accountsMediaIds = i.from.reduce(function(e, t) {
					return e[t] = this.getDeferredMediaIdsFor(t), e
				}.bind(this), {})), i
			}, this.enterSendingState = function(e) {
				e.stopPropagation(), this.mergeState({
					sendingStatus: "sending"
				})
			}, this.enterSuccessState = function(e) {
				e.stopPropagation(), this.mergeState({
					sendingStatus: "success"
				}), setTimeout(this.attr.onSend, this.attr.panelCloseDelay)
			}, this.enterErrorState = function(e, t) {
				var i;
				e.stopPropagation(), t.errors && (i = t.errors.map(function(e) {
					return e.request.accountKey
				})), this.trigger(document, "teardownInlineConfirmation"), this.mergeState({
					sendingStatus: "ready",
					selectedAccountKeys: i || this.state.selectedAccountKeys
				}), this.triggerEventForClearingVideoProcessing()
			}, this.resetAfterSend = function(e) {
				this.mergeState({
					tweetType: "message" === this.state.tweetType ? "message" : "tweet",
					tweetText: "",
					sendingStatus: "ready",
					messageRecipients: [],
					messageConversation: null,
					quotedTweet: null,
					files: [],
					inReplyTo: null,
					replies: [],
					mentions: [],
					implicitRecipients: [],
					excludedRecipientsIds: [],
					scheduledDate: null,
					metadata: {},
					tweetSentWhileVideoUploadInProgress: !1,
					usingNewComposer: e
				}), this.trigger(document, "teardownInlineConfirmation"), this.resetComposePanelState({
					type: this.state.tweetType,
					text: "",
					from: this.state.selectedAccountKeys
				}, e), this.triggerEventForClearingVideoProcessing()
			}, this.resetComposePanelState = function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
					t = arguments[1];
				if (e.files) return this.resetVideoUploadProgress(), void this.addFiles((0, c.default)(e.files));
				e.type = e.type || "tweet";
				var i = void 0 !== e.text,
					s = {
						tweetText: this.state.tweetText,
						scheduledDate: this.state.scheduledDate,
						metadata: e.metadata || this.state.metadata || {},
						selectedAccountKeys: this.state.selectedAccountKeys,
						implicitRecipients: this.state.implicitRecipients,
						usingNewComposer: t
					};
				switch (i && (s.scheduledDate = null, this.removeFiles()), e.schedule && (s.scheduledDate = e.schedule.time, s.selectedAccountKeys = e.from), e.type) {
					case "tweet":
						s.inReplyTo = null, void 0 !== e.text ? s.tweetText = e.text : this.state.messageRecipients.length > 0 && (s.tweetText = Y.prependRecipients(this.state)), void 0 !== e.appendText && (s.tweetText = Y.appendText(e.appendText, this.state)), (e.from && e.from.length > 0 || e.quotedTweet) && (s.selectedAccountKeys = e.from), e.noFocus || TD.util.isiOSDevice() && TD.decider.get("touchdeck_compose_v2") || (s.tweetTextFocused = !0, s.selectionIndices = s.tweetText && [s.tweetText.length, s.tweetText.length]), s.messageRecipients = [], s.messageConversation = null, s.quotedTweet = e.quotedTweet || null;
						break;
					case "reply":
						if (J.shouldSetNewReplyTo(this.state) && (s.inReplyTo = e.inReplyTo, s.selectedAccountKeys = e.from, s.autoPopulateReplyMetadata = "boolean" != typeof e.autoPopulateReplyMetadata || e.autoPopulateReplyMetadata, s.implicitRecipients = [], s.autoPopulateReplyMetadata && (s.implicitRecipients = e.mentions, s.excludedRecipientsIds = e.excludedRecipientsIds || [])), e.popFromInline) s.tweetText = e.text, s.selectionIndices = [e.text.length, e.text.length], s.mentions = (0, l.default)(e.mentions, "screenName").map(G.atMentionify), s.inReplyTo = e.inReplyTo;
						else {
							var r = Y.mergeRepliesAndMentions(this.state.replies, this.state.mentions, e.inReplyTo, e.mentions, s.implicitRecipients);
							if (s = (0, n.default)({}, s, r), J.onlyOneAccountIsSelected(s)) {
								var a = (0, C.getAccountData)(s.selectedAccountKeys[0]).screenName;
								s.mentions = (0, o.default)(s.mentions, G.atMentionify(a)), s.replies = (0, o.default)(s.replies, G.atMentionify(a))
							}
							s.tweetText = Y.getStackedRepliesText(this.state.tweetText, s.replies, s.mentions), s.selectionIndices = Y.getSelectionIndices(s.tweetText, s.replies, s.mentions), s.tweetTextFocused = !0
						}
						s.messageRecipients = [], s.messageConversation = null;
						break;
					case "message":
						var u, d = [];
						if (e.from && e.from.length > 0 && (s.selectedAccountKeys = e.from), void 0 !== e.text ? s.tweetText = e.text : u = G.extractMentions(this.state.tweetText), e.conversationId) s.messageConversation = this.getConversation(e.conversationId, s.selectedAccountKeys);
						else if (e.messageRecipients) d = e.messageRecipients;
						else if (e.to && e.to.screenName) d = [e.to.screenName];
						else if (this.state.messageRecipients.length > 0) d = this.state.messageRecipients;
						else if (u && u.length) {
							d = u;
							var h = G.removeFirstMention(this.state.tweetText);
							s.tweetText = h
						}
						var m = this.hydrateMessageRecipients(d).addCallbackWith(this, this.toState("messageRecipients"));
						d.length && m.addCallbackWith(this, function() {
							s.tweetTextFocused = !0
						}), s.quotedTweet = e.quotedTweet || null, s.inReplyTo = null
				}
				if (e.columnKey) {
					var f = TD.controller.columnManager.get(e.columnKey),
						p = f.getFeeds();
					p.length > 1 ? s.selectedAccountKeys = [(0, T.getDefaultAccount)().accountKey] : s.selectedAccountKeys = [p[0].getAccountKey()]
				}
				this.mergeState(s)
			}, this.triggerEventForClearingVideoProcessing = function() {
				this.trigger("uiDockedComposeSendingVideoComplete")
			}, this.resetVideoUploadProgress = function() {
				this.mergeState({
					uploadsInProgress: {}
				}), this.triggerEventForClearingVideoProcessing()
			}, this.handleUiComposeScheduleDate = function(e) {
				var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
					i = t.date;
				this.mergeState({
					scheduledDate: i
				})
			}, this.initScrollbars = function() {
				var e = this.$composeScroller.data("antiscroll");
				e ? e.refresh() : this.$composeScroller.antiscroll({
					initialDisplay: !1
				})
			}, this.handleComposeTextChanged = function(e, t) {
				e.stopPropagation(), this.mergeState({
					tweetText: t.value
				})
			}, this.setReleaseFocusTimer = function(e) {
				var t = 0;
				this.state.stayOpen || (t = this.attr.releaseFocusDelay), this.releaseFocusTimer = setTimeout(function() {
					this.releaseFocusTimer = null, this.focusRelease()
				}.bind(this), t)
			}, this.handleComposeImageAdded = function(e) {
				this.mergeState({
					files: this.getFiles()
				})
			}, this.handleAccountSafeguardCheckboxChange = function(e, t) {
				e.stopPropagation(), this.mergeState({
					accountSafeguardChecked: t.checked
				})
			}, this.handleRemoveInReplyTo = function(e, t) {
				e.stopPropagation(), this.mergeState({
					tweetText: Y.stripNamesFromText(this.state.tweetText, this.state.mentions.concat(this.state.replies)),
					inReplyTo: null,
					replies: [],
					mentions: [],
					implicitRecipients: [],
					excludedRecipientsIds: [],
					autoPopulateReplyMetadata: !1,
					tweetTextFocused: !0
				})
			}, this.handleUiComposeTextFocus = function(e, t) {
				e.stopPropagation(), this.mergeState({
					tweetTextFocused: t.focused
				})
			}, this.handleRecipientToggledFromList = function(e, t) {
				var i = J.getUpdatedExcludedRecipientsIds(this.state, t);
				this.mergeState({
					excludedRecipientsIds: i
				})
			}, this.handleVideoUploadProgress = function(e, t) {
				var i = this.getFiles();
				i && i.length && this.mergeState({
					uploadsInProgress: (0, n.default)({}, this.state.uploadsInProgress, (0, r.default)({}, t.userId, {
						mode: t.mode,
						percent: t.percent
					}))
				})
			}, this.handleVideoUploadCancel = function(e, t) {
				delete this.state.uploadsInProgress[t.userId]
			}, this.handleNewComposerOptIn = function() {
				var e = TD.settings.getNewComposerUpsellViewed();
				e ? this.attr.onOptIn() : (0, p.default)(document).trigger("uiNewComposerLearnMoreModal")
			}, this.handleStayOpen = function(e) {
				var t = e.target,
					i = !!t.checked;
				this.attr.onStayOpen(i, !1)
			}, this.render = function() {}
		}, K, V, q, W);
	e.exports = Z, e.exports.LegacyDockedComposeReact = (0, D.uiBaseToReact)(Z, {
		displayName: "LegacyDockedCompose"
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(6)),
		s = r(i(7));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.attributes({
			template: "inline_confirmation",
			confirmationText: null,
			primaryButtonText: null,
			secondaryButtonText: null,
			backgroundColorClass: "bg-color-twitter-lightest-gray",
			textColorClass: "color-twitter-black",
			buttonPrimarySelector: ".js-btn-primary",
			buttonSecondarySelector: ".js-btn-secondary",
			buttonPrimaryAction: null,
			buttonSecondaryAction: function() {
				return function() {}
			},
			buttonPrimaryIsNegative: !1,
			buttonPrimaryClickShouldCauseTeardown: !1,
			buttonSecondaryClickShouldCauseTeardown: !1
		}), this.componentDidInitialize = function() {
			this.on("click", {
				buttonPrimarySelector: this.handlePrimaryButtonClick,
				buttonSecondarySelector: this.handleSecondaryButtonClick
			})
		}, this.handlePrimaryButtonClick = function() {
			var e = this.attr,
				t = e.buttonPrimaryAction,
				i = e.buttonPrimaryClickShouldCauseTeardown;
			t && t(), i && this.teardown()
		}, this.handleSecondaryButtonClick = function() {
			var e = this.attr,
				t = e.buttonSecondaryAction,
				i = e.buttonSecondaryClickShouldCauseTeardown;
			t && t(), i && this.teardown()
		}, this.render = function() {
			var e = this.attr,
				t = e.confirmationText,
				i = e.primaryButtonText,
				s = e.secondaryButtonText,
				r = e.buttonPrimaryIsNegative,
				a = e.backgroundColorClass,
				o = e.textColorClass,
				l = n.default.render(this.attr.template, {
					confirmationText: t,
					primaryButtonText: i,
					secondaryButtonText: s,
					buttonPrimaryIsNegative: r,
					backgroundColorClass: a,
					textColorClass: o
				});
			this.$node.html(l)
		}, this.componentWillTeardown = function() {
			this.$node.html("")
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(7)),
		s = r(i(6));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(function() {
		this.attributes({
			template: "scheduled_hint"
		}), this.shouldComponentUpdate = function(e) {
			return this.props.scheduledDate !== e.scheduledDate
		}, this.render = function() {
			var e = Boolean(this.props.scheduledDate),
				t = s.default.render(this.attr.template, {
					showHint: e
				});
			this.$node.html(t)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = m(i(13)),
		s = m(i(112)),
		r = m(i(77)),
		a = m(i(0)),
		o = m(i(7)),
		l = m(i(6)),
		c = m(i(890)),
		u = m(i(73)),
		d = m(i(18)),
		h = i(74);

	function m(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = o.default.mixin(function() {
		this.attributes({
			accountItemSelector: ".js-account-item",
			gridModeClass: {
				grid: "is-grid",
				minigrid: "is-minigrid",
				list: "is-list"
			},
			avatarSize: {
				grid: "48",
				minigrid: "32",
				list: "32"
			},
			stateSource: null
		}), this.initialState({
			defaultAccountKey: function() {
				return (0, h.getDefaultAccount)().accountKey
			},
			selectedAccountKeys: function() {
				return [(0, h.getDefaultAccount)().accountKey]
			},
			gridMode: function() {
				return TD.settings.getAccountSelectorGridMode()
			},
			tweetSentWhileVideoUploadInProgress: !1
		}), this.componentDidInitialize = function() {
			this.on("click keypress", {
				accountItemSelector: this.handleClick
			}), this.observe(this.requestResource("settings.state")).pluck("account_selector_grid_mode").subscribe(this.toState("gridMode").bind(this)), this.observe(this.requestResource(this.attr.stateSource)).map(u.default.filterKeys(["selectedAccountKeys", "tweetSentWhileVideoUploadInProgress"])).distinctUntilChanged(r.default).subscribe(this.mergeState.bind(this)), this.observe(this.requestResource("accounts.state")).map(u.default.filterKeys(["accounts"])).distinctUntilKeyChanged("accounts", function(e, t) {
				var i = (0, s.default)(e, "accountKey"),
					n = (0, s.default)(t, "accountKey");
				return (0, r.default)(i, n)
			}).map(this.processAccounts, this).subscribe(this.mergeState.bind(this)), this.initializeTooltips()
		}, this.shouldComponentUpdate = function(e, t) {
			return !(0, r.default)(t, this.state)
		}, this.initializeTooltips = function() {
			TD.util.isTouchDevice() && TD.decider.get("touchdeck_compose_v2") || this.$node.tooltip({
				selector: ".js-show-tip",
				container: "body",
				placement: "bottom",
				suppressFadeOut: !0
			})
		}, this.processAccounts = function(e) {
			if (e.accounts) {
				var t;
				e.accounts.some(function(e) {
					if (e.isDefault) return t = e.accountKey, !0
				});
				var i = this.state.selectedAccountKeys.filter(function(t) {
						return e.accounts.some(function(e) {
							return e.accountKey === t
						})
					}),
					n = 1 === this.state.selectedAccountKeys.length && this.state.selectedAccountKeys[0] === this.state.defaultAccountKey;
				return (0 === i.length || n) && (i = [t]), {
					defaultAccountKey: t,
					accounts: e.accounts,
					selectedAccountKeys: i
				}
			}
		}, this.getAccountData = function() {
			var e = this;
			return this.state.accounts.map(function(t) {
				return {
					accountKey: t.accountKey,
					screenName: t.screenName,
					name: t.name,
					profileImageURL: t.profileImageURL,
					isSelected: e.state.selectedAccountKeys.includes(t.accountKey),
					emojifiedName: t.emojifiedName
				}
			})
		}, this.render = function() {
			if (this.state.accounts) {
				var e = {
						gridModeClass: this.attr.gridModeClass[this.state.gridMode],
						avatarSize: this.attr.avatarSize[this.state.gridMode],
						isListGridMode: "list" === this.state.gridMode,
						accounts: this.getAccountData()
					},
					t = this.getSelectedAccountElement().is(document.activeElement),
					i = l.default.render("compose/account_selector", e);
				this.$node.html(i), t && this.restoreFocusOnSelectedAccount()
			}
		}, this.handleClick = function(e) {
			if (!this.state.tweetSentWhileVideoUploadInProgress && (!c.default.eventIsKey(e) || c.default.isSpacebar(e))) {
				var t = (0, a.default)(e.target).closest(this.attr.accountItemSelector),
					i = [t.attr("data-account-key")];
				this.mergeState({
					selectedAccountKeys: i
				})
			}
		}, this.getSelectedAccountElement = function() {
			return this.state.selectedAccountKeys ? this.select("accountItemSelector").filter('[data-account-key="' + this.state.selectedAccountKeys[0] + '"]') : (0, a.default)()
		}, this.restoreFocusOnSelectedAccount = function() {
			this.state.selectedAccountKeys && this.getSelectedAccountElement().focus()
		}, this.after("stateChanged", function(e, t) {
			var i = (0, n.default)(e, "selectedAccountKeys"),
				s = (0, n.default)(t, "selectedAccountKeys");
			(0, r.default)(i, s) || this.trigger("uiAccountsSelected", {
				accountKeys: this.state.selectedAccountKeys
			})
		})
	}, d.default)
}, function(e, t, i) {
	"use strict";
	var n = r(i(0)),
		s = r(i(6));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(137);
	e.exports = a(o, function() {
		this.attributes({
			gridToggleSelector: "[data-grid-mode]"
		}), this.initialState({
			gridMode: function() {
				return TD.settings.getAccountSelectorGridMode()
			}
		}), this.after("initialize", function() {
			this.after("mergeState", this.renderToggle), this.on(document, "dataSettingsValues", this.handleSettingsValue), this.on("click", {
				gridToggleSelector: this.handleGridToggleClick
			}), this.renderToggle()
		}), this.renderToggle = function() {
			var e = {};
			if (e[this.state.gridMode] = !0, this.state.gridMode !== this.previousGridMode) {
				var t = s.default.render("compose/account_selector_grid_toggle", e);
				this.$node.html(t), this.previousGridMode = this.state.gridMode
			}
		}, this.handleSettingsValue = function(e, t) {
			t.account_selector_grid_mode && this.mergeState({
				gridMode: t.account_selector_grid_mode
			})
		}, this.handleGridToggleClick = function(e) {
			var t = (0, n.default)(e.target).closest(this.attr.gridToggleSelector).attr("data-grid-mode");
			TD.settings.setAccountSelectorGridMode(t)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = r(i(13)),
		s = r(i(18));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(45),
		l = i(6);
	e.exports = a(s.default, function() {
		this.attributes({
			stateSource: null,
			removeSelector: ".js-in-reply-to-remove"
		}), this.after("initialize", function() {
			this.on("click", {
				removeSelector: function() {
					this.trigger("uiRemoveInReplyTo")
				}
			}), this.observe(this.requestResource(this.attr.stateSource)).pluck("inReplyTo").distinctUntilChanged(function(e, t) {
				return (0, n.default)(e, "id") === (0, n.default)(t, "id")
			}).subscribe(this.render.bind(this))
		}), this.render = function(e) {
			e ? (this.$node.html(l.render("compose/in_reply_to", e)), this.$node.removeClass("is-hidden")) : (this.$node.addClass("is-hidden"), this.$node.html(""))
		}
	}, o)
}, function(e, t, i) {
	"use strict";
	var n = r(i(0)),
		s = r(i(18));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(45);
	e.exports = a(s.default, function() {
		this.attributes({
			stateSource: null,
			buttonLabelSelector: ".js-add-image-button-label"
		}), this.after("initialize", function() {
			this.$buttonLabel = this.select("buttonLabelSelector"), this.on(this.$node, "click", this.handleClick);
			var e = this.observe(this.requestResource(this.attr.stateSource));
			e.pluck("addImageButtonText").distinctUntilChanged().subscribe(this.renderButtonText.bind(this)), e.pluck("addImageButtonTooltip").distinctUntilChanged().subscribe(this.renderTooltip.bind(this)), e.pluck("canAddMedia").distinctUntilChanged().subscribe(this.toggleEnabled.bind(this)), e.pluck("tweetType").distinctUntilChanged().subscribe(this.toggleTweetType.bind(this)), e.pluck("scheduledDate").distinctUntilChanged().subscribe(this.toggleScheduledDate.bind(this))
		}), this.toggleTweetType = function(e) {
			this.trigger(this.$node, "uiComposeUpdatedTweetType", {
				type: e
			})
		}, this.toggleScheduledDate = function(e) {
			this.trigger(this.$node, "uiComposeUpdatedScheduledDate", {
				scheduledDate: e
			})
		}, this.renderButtonText = function(e) {
			this.$buttonLabel.text(e)
		}, this.renderTooltip = function(e) {
			var t = (0, n.default)("<div/>").html(e).text();
			this.$node.attr("data-original-title", t)
		}, this.toggleEnabled = function(e) {
			this.$node.toggleClass("is-disabled", !e).attr("tabindex", e ? "" : "-1")
		}, this.handleClick = function(e) {
			this.$node.hasClass("is-disabled") || this.trigger(this.$node, "uiComposeAddImageClick")
		}
	}, o)
}, function(e, t, i) {
	"use strict";
	var n = c(i(32)),
		s = c(i(2612)),
		r = c(i(0)),
		a = c(i(211)),
		o = c(i(18)),
		l = function(e) {
			if (e && e.__esModule) return e;
			var t = {};
			if (null != e)
				for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
			return t.default = e, t
		}(i(17));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = i(5).component,
		d = i(45),
		h = i(36),
		m = i(100);
	e.exports = u(o.default, a.default, function() {
		this.attributes({
			stateSource: null,
			scheduleButtonSelector: ".js-schedule-button",
			scheduleButtonLabelSelector: ".js-schedule-button-label",
			scheduleDatePickerHolderSelector: ".js-schedule-datepicker-holder"
		}), this.initialState({
			datePickerOpen: !1
		}), this.after("initialize", function() {
			var e = this;
			this.$scheduleButton = this.select("scheduleButtonSelector"), this.$scheduleButtonLabel = this.select("scheduleButtonLabelSelector"), this.$scheduleDatePickerHolder = this.select("scheduleDatePickerHolderSelector"), this.initPicker(), this.observe(h.Observable.fromEvent(this.$scheduleButton, "click", function(e) {
				return e.currentTarget
			})).filter((0, s.default)(l.isDisabled())).map((0, s.default)(this.fromState("datePickerOpen")), this).subscribe(this.toState("datePickerOpen").bind(this));
			var t = this.observe(this.requestResource(this.attr.stateSource)),
				i = t.pluck("scheduledDate").distinctUntilChanged(function(e, t) {
					var i = e ? e.getTime() : null,
						n = t ? t.getTime() : null;
					return i === n
				});
			t.pluck("canSchedule").distinctUntilChanged().subscribe(this.toggleEnabled.bind(this)), t.pluck("scheduleButtonTooltip").distinctUntilChanged().subscribe(this.renderTooltip.bind(this)), t.pluck("scheduleButtonText").distinctUntilChanged().subscribe(this.$scheduleButtonLabel.text.bind(this.$scheduleButtonLabel)), t.pluck("usingNewComposer").distinctUntilChanged().subscribe(function(t) {
				e.$scheduleButton.toggleClass("is-hidden", t)
			}), i.subscribe(function(t) {
				return e.scheduleDatePicker.setDate(t)
			});
			var n = this.observableState.pluck("datePickerOpen").distinctUntilChanged().share();
			n.subscribe(this.togglePicker.bind(this)), n.map(l.unpluck("datePickerOpen")).withLatestFrom(i.map(l.unpluck("scheduledDate")), l.merge).subscribe(this.handleStateChanged.bind(this))
		}), this.after("teardown", function() {
			r.default.unsubscribe(this.dateChangedSubscription), r.default.unsubscribe(this.dateRemovedSubscription)
		}), this.handleStateChanged = function(e) {
			e.datePickerOpen && !e.scheduledDate && this.changePickerDate(m().add(20, "m").toDate())
		}, this.togglePicker = function(e) {
			var t = this;
			this.scheduleDatePicker.$node.toggle(e), this.trigger("uiComposeScheduleDatePickerOpen"), (0, n.default)(function() {
				return t.toggleClickTrap(e)
			})
		}, this.renderTooltip = function(e) {
			var t = (0, r.default)("<div/>").html(e).text();
			this.$scheduleButton.attr("data-original-title", t)
		}, this.toggleEnabled = function(e) {
			this.$scheduleButton.toggleClass("is-disabled", !e).attr("tabindex", e ? "" : "-1")
		}, this.scheduleRemoved = function(e) {
			this.mergeState({
				datePickerOpen: !1
			})
		}, this.initPicker = function() {
			this.dateChangedSubscription = r.default.subscribe("/change/date", this.changePickerDate.bind(this)), this.dateRemovedSubscription = r.default.subscribe("/removed/date", this.scheduleRemoved.bind(this)), this.scheduleDatePicker = new TD.components.ScheduledDatePicker(this.$scheduleDatePickerHolder, {
				hidden: !this.state.datePickerOpen
			})
		}, this.changePickerDate = function(e) {
			this.trigger("uiComposeScheduleDate", {
				date: e ? m(e).seconds(0).toDate() : e
			})
		}, this.elementIsOutsideScheduler = function(e) {
			return 0 === e.closest(this.$scheduleDatePickerHolder).length && 0 === e.closest(this.$scheduleButton).length
		}, this.elementIsScroller = function(e) {
			return e.hasClass("antiscroll-scrollbar") || e.hasClass("antiscroll-wrap")
		}, this.toggleClickTrap = function(e) {
			e ? (0, r.default)("body").on("click.scheduleclicktrap", function(e) {
				var t = (0, r.default)(e.target);
				this.elementIsOutsideScheduler(t) && !this.elementIsScroller(t) && this.mergeState({
					datePickerOpen: !1
				})
			}.bind(this)) : (0, r.default)("body").off("click.scheduleclicktrap")
		}
	}, d)
}, , function(e, t, i) {
	"use strict";
	var n = o(i(77)),
		s = o(i(13)),
		r = o(i(0)),
		a = o(i(18));

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var l = i(5).component,
		c = i(45),
		u = i(66),
		d = i(137),
		h = i(531),
		m = i(874),
		f = i(363),
		p = i(73),
		g = i(6);
	e.exports = l(d, a.default, function() {
		this.attributes({
			containerSelector: ".js-compose-message-recipient-container",
			inputSelector: ".js-compose-message-account",
			inputContainerSelector: ".js-compose-message-recipient-input-container",
			listContainerSelector: ".js-compose-message-recipient-list",
			removeRecipientSelector: ".js-remove-recipient",
			removeConversationSelector: ".js-remove-conversation",
			recipientSelector: ".js-compose-message-recipient",
			hideInputClass: "compose-message-account-hidden",
			stateSource: null,
			maxRecipients: null,
			dropdownSelector: ".js-typeahead-dropdown",
			focusableSelector: "textarea, input"
		}), this.initialState({
			selectedAccountKeys: function() {
				return []
			}
		}), this.after("initialize", function() {
			this.$container = this.select("containerSelector"), this.$input = this.select("inputSelector"), this.$inputContainer = this.select("inputContainerSelector"), this.$list = this.select("listContainerSelector"), this.on(this.$input, "focus", this.handleInputFocus), this.on(this.$input, "blur", this.handleInputBlur), this.on("click", {
				removeConversationSelector: this.handleRemoveConversationClick,
				removeRecipientSelector: this.handleRemoveRecipientClick,
				listContainerSelector: this.handleListContainerClick
			}), this.attachChild(m, this.$node, {
				inputSelector: this.attr.inputSelector
			}), this.attachChild(h, this.$node, {
				alwaysOpen: !1,
				autoSelect: !0,
				blockLinkActions: !0,
				datasources: ["users", "conversations"],
				datasourcesRecentOnly: [],
				hideAfterSelect: !0,
				inputSelector: this.attr.inputSelector,
				usersTemplate: "typeahead/typeahead_users_compose",
				withClickTrap: !0
			}), this.on("uiTypeaheadInputEscaped uiTypeaheadNoItemSelected", {
				inputSelector: this.handleTypeaheadInputEscaped
			}), this.on("uiTypeaheadInputBackspace", this.handleTypeaheadInputBackspace), this.on("uiTypeaheadItemComplete uiTypeaheadItemSelected", this.handleTypeaheadItemSelected), this.on("uiNeedsTypeaheadSuggestions", this.extendTypeaheadRequest);
			var e = this.observe(this.requestResource(this.attr.stateSource));
			e.pluck("tweetType").map(TD.util.equals("message")).distinctUntilChanged().subscribe(this.toggleVisibility.bind(this)), e.map(p.filterKeys(["messageRecipients", "messageConversation"])).distinctUntilChanged(function(e, t) {
				var i = {
						messageRecipients: e.messageRecipients,
						messageConversationId: (0, s.default)(e, "messageConversation.conversationId")
					},
					r = {
						messageRecipients: t.messageRecipients,
						messageConversationId: (0, s.default)(t, "messageConversation.conversationId")
					};
				return (0, n.default)(i, r)
			}).subscribe(this.render.bind(this)), e.pluck("selectedAccountKeys").distinctUntilChanged().subscribe(this.toState("selectedAccountKeys").bind(this)), this.setScrollToTopListener()
		}), this.extendTypeaheadRequest = function(e, t) {
			t.accountKey = (this.state.selectedAccountKeys || [])[0]
		}, this.handleRemoveConversationClick = function() {
			this.trigger("uiRemoveMessageConversation")
		}, this.handleRemoveRecipientClick = function(e, t) {
			this.trigger("uiRemoveMessageRecipient", {
				id: (0, r.default)(t.el).attr("data-user-id")
			})
		}, this.handleInputFocus = function() {
			this.$inputContainer.addClass("is-focused")
		}, this.handleInputBlur = function() {
			this.$inputContainer.removeClass("is-focused")
		}, this.handleListContainerClick = function(e, t) {
			e.target === t.el && (this.$input.focus(), f.makeElementVisible(this.$inputContainer, this.$input))
		}, this.toggleVisibility = function(e) {
			this.$container.toggleClass("is-hidden", !e), e ? TD.util.isTouchDevice() && TD.decider.get("touchdeck_compose_v2") || this.$input.focus() : this.$input.blur()
		}, this.render = function(e) {
			var t = this.$inputContainer.scrollTop(),
				i = t + this.$inputContainer.height() >= this.$inputContainer.prop("scrollHeight");
			this.select("recipientSelector").remove(), e.messageRecipients && e.messageRecipients.length > 0 ? (this.renderRecipientList(e.messageRecipients), this.$inputContainer.scrollTop(t), i && f.makeElementVisible(this.$inputContainer, this.$input), this.checkMaxRecipients(e.messageRecipients)) : e.messageConversation ? (this.renderConversation(e.messageConversation), this.$input.addClass(this.attr.hideInputClass)) : (this.$list.addClass("is-hidden"), this.$input.removeClass(this.attr.hideInputClass), this.$input.focus(), this.trigger("uiMessageRecipientUnset"))
		}, this.renderConversation = function(e) {
			var t = e.render({
				templateName: "compose/message_conversation"
			});
			this.$list.prepend(t), this.$list.removeClass("is-hidden")
		}, this.renderRecipientList = function(e) {
			var t = g.render("compose/message_recipients", {
				users: e
			});
			this.$list.prepend(t), this.$list.removeClass("is-hidden")
		}, this.checkMaxRecipients = function(e) {
			var t = e.length >= this.attr.maxRecipients;
			this.$input.toggleClass(this.attr.hideInputClass, t).trigger(t ? "blur" : "focus")
		}, this.handleTypeaheadInputBackspace = function(e, t) {
			this.trigger("uiRemoveLastMessageRecipient")
		}, this.handleTypeaheadItemSelected = function(e, t) {
			this.$input.val(""), "conversation" === t.searchType ? this.trigger("uiAddMessageConversation", {
				conversation: t.item
			}) : "user" === t.searchType && this.trigger("uiAddMessageRecipient", {
				recipient: t.item
			})
		}, this.handleTypeaheadInputEscaped = function(e) {
			var t = this.select("inputSelector");
			"" === t.val().trim() ? t.blur() : t.val("")
		}, this.setScrollToTopListener = function() {
			var e = this.select("focusableSelector");
			this.on(e, "focus", function() {
				window.scrollTo(0, 0), document.body.scrollTop = 0
			})
		}
	}, u, c)
}, function(e, t, i) {
	"use strict";
	var n = r(i(2)),
		s = r(i(18));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(45),
		l = i(73);
	e.exports = a(s.default, function() {
		this.attributes({
			stateSource: null,
			titleSelector: ".js-compose-title",
			headerSelector: ".js-compose-header",
			messageHeaderSelector: ".js-compose-message-header"
		}), this.after("initialize", function() {
			this.$title = this.select("titleSelector"), this.$header = this.select("headerSelector"), this.$messageHeader = this.select("messageHeaderSelector"), this.observe(this.requestResource(this.attr.stateSource)).map(l.filterKeys(["tweetType", "scheduledDate", "metadata"])).distinctUntilChanged(l.shallowEquals()).subscribe(this.render.bind(this))
		}), this.render = function(e) {
			this.$header.toggleClass("with-dm-icon", "message" === e.tweetType), this.$messageHeader.text("message" === e.tweetType ? (0, n.default)("Message") : (0, n.default)("Tweet"));
			var t = e.scheduledDate && e.metadata && e.metadata.originalUpdates;
			t ? this.$title.text((0, n.default)("Edit scheduled Tweet")) : this.$title.text("message" === e.tweetType ? (0, n.default)("New message") : (0, n.default)("New Tweet"))
		}
	}, o)
}, function(e, t, i) {
	"use strict";
	var n = a(i(0)),
		s = a(i(18)),
		r = i(33);

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var o = i(5).component,
		l = i(45);
	e.exports = o(s.default, function() {
		this.attributes({
			stateSource: null,
			messageButtonSelector: ".js-dm-button",
			tweetButtonSelector: ".js-tweet-button",
			onTypeChange: null
		}), this.after("initialize", function() {
			this.$messageButton = this.select("messageButtonSelector"), this.$tweetButton = this.select("tweetButtonSelector"), this.on(this.$messageButton, "click", function() {
				this.$messageButton.hasClass("is-disabled") || (this.attr.onTypeChange("message"), (0, r.generic)({
					page: "compose",
					component: "docked_compose",
					element: "new_dm",
					action: "click"
				}))
			}), this.on(this.$tweetButton, "click", function() {
				this.attr.onTypeChange("tweet")
			});
			var e = this.observe(this.requestResource(this.attr.stateSource));
			e.map(function(e) {
				var t = e.tweetType,
					i = e.usingNewComposer;
				return {
					tweetType: t,
					usingNewComposer: i
				}
			}).distinctUntilChanged().subscribe(this.toggleButtonType.bind(this)), e.pluck("tweetTypeButtonTooltip").distinctUntilChanged().subscribe(this.renderTooltip.bind(this)), e.pluck("canSwitchTweetType").distinctUntilChanged().subscribe(this.toggleEnabled.bind(this))
		}), this.toggleButtonType = function(e) {
			var t = e.tweetType,
				i = e.usingNewComposer;
			this.$messageButton.toggleClass("is-hidden", "message" === t || i), this.$tweetButton.toggleClass("is-hidden", "message" !== t)
		}, this.renderTooltip = function(e) {
			var t = (0, n.default)("<div/>").html(e).text();
			this.$messageButton.attr("data-original-title", t)
		}, this.toggleEnabled = function(e) {
			this.$messageButton.toggleClass("is-disabled", !e).attr("tabindex", e ? "" : "-1")
		}
	}, l)
}, function(e, t, i) {
	"use strict";
	var n = r(i(13)),
		s = r(i(18));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var a = i(5).component,
		o = i(45);
	e.exports = a(s.default, function() {
		this.attributes({
			removeSelector: ".js-quote-tweet-remove",
			stateSource: null
		}), this.after("initialize", function(e) {
			var t = this;
			this.on("click", {
				removeSelector: function() {
					this.trigger(document, "uiRemoveQuotedTweet")
				}
			}), this.observe(this.requestResource(this.attr.stateSource)).pluck("quotedTweet").distinctUntilChanged(function(e, t) {
				return (0, n.default)(e, "id") === (0, n.default)(t, "id")
			}).map(function(e) {
				return t.renderTweet(e)
			}).do(function(e) {
				return t.toggle(!!e)
			}).subscribe(function(e) {
				return t.$node.html(e)
			})
		}), this.renderTweet = function(e) {
			return e ? e.renderQuotedTweet({
				inCompose: !0,
				mediaPreviewSize: TD.vo.Column.MEDIA_PREVIEW_SIZE_MEDIUM
			}) : ""
		}, this.toggle = function(e) {
			this.$node.toggleClass("is-hidden", !e)
		}
	}, o)
}, function(e, t, i) {
	"use strict";
	var n = v(i(44)),
		s = v(i(13)),
		r = v(i(2)),
		a = v(i(0)),
		o = i(5),
		l = i(19),
		c = v(i(812)),
		u = i(66),
		d = v(i(2618)),
		h = v(i(6)),
		m = v(i(208)),
		f = v(i(2619)),
		p = i(2620),
		g = i(33);

	function v(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}

	function T() {
		this.mediaBarData = {
			files: [],
			previews: [],
			descriptions: [],
			accountsMediaIds: {}
		}
	}
	e.exports = function() {
		o.compose.mixin(this, [m.default]), this.attributes({
			addImageDescriptionSelector: ".js-add-image-description",
			mediaBarContainerSelector: ".js-media-added",
			mediaBarRemoveSelector: ".js-media-bar-remove",
			mediaBarThumb: ".js-media-bar-thumb",
			mediaBarSelector: ".compose-media-bar",
			maxImageHeight: 310
		}), this.before("initialize", T), this.after("initialize", function() {
			this.$mediaBarContainer = this.select("mediaBarContainerSelector"), this.on("click", {
				mediaBarRemoveSelector: this.removeFile,
				addImageDescriptionSelector: this.addImageDescription
			}), this.on(document, "uiComposeVideoTooLarge", this.handleVideoTooLarge.bind(this))
		}), this.addFiles = function(e) {
			if (this.$mediaBarContainer.removeClass("is-hidden"), TD.util.hasFeature("filereader")) {
				var t = new TD.core.defer.DeferredList(e.map(this.loadFileData));
				return t.addCallback(function(t) {
					t.forEach(function(t, i) {
						if (t[0]) {
							var n = t[1];
							this.mediaBarData.previews.indexOf(n) < 0 && (this.mediaBarData.files.push(e[i]), this.mediaBarData.descriptions.push(null), this.mediaBarData.previews.push(n), this.state.selectedAccountKeys.forEach(function(e) {
								this.addMediaIdsFor(e)
							}, this))
						}
					}, this), this.attachImagesPreview()
				}.bind(this)), t
			}
			this.mediaBarData.files = e, this.attachImageInfoBar()
		}, this.loadFileData = function(e) {
			var t = new TD.core.defer.Deferred,
				i = new FileReader;
			return i.onloadend = function(e) {
				t.callback(e.target.result)
			}, i.readAsDataURL(e), t
		}, this.attachImageInfoBar = function() {
			var e = h.default.render("compose/media_bar_infobar");
			this.$mediaBarContainer.html(e)
		}, this.getMediaInfo = function() {
			var e = this;
			return this.mediaBarData.previews.map(function(t, i) {
				return {
					src: t,
					fileIndex: i,
					description: e.mediaBarData.descriptions[i]
				}
			})
		}, this.attachImagesPreview = function(e) {
			var t = this.mediaBarData.previews.length,
				i = t > 1,
				n = (0, s.default)(this.mediaBarData, "files[0].type"),
				r = "video/mp4" === n,
				o = h.default.render("compose/media_bar_image", {
					isMediaGridContent: i,
					mediaLength: t,
					isVideo: r,
					isGif: "image/gif" === n,
					mediaInfo: this.getMediaInfo(),
					description: null
				});
			if (this.$mediaBarContainer.html(o), this.$mediaBarContainer.on("click", function(e) {
					var t = (0, a.default)(e.target);
					(t.is("img") || t.hasClass("media-image")) && this.trigger("uiComposeImageClicked")
				}.bind(this)), r) {
				var l = this.$node.find(".js-video"),
					d = (0, u.attach)(c.default, l, {
						data: this.mediaBarData
					}).teardownEvent;
				this.videoTeardownEvent = d, this.trigger("uiComposeImageAdded", {
					files: this.getFiles()
				})
			} else i ? !1 !== e && this.trigger("uiComposeImageAdded", {
				files: this.getFiles()
			}) : (o = this.select("mediaBarThumb"))[0].complete ? this.setImageHeight(o, e) : o.load(this.setImageHeight.bind(this, o, e))
		}, this.setImageHeight = function(e, t) {
			var i = this.select("mediaBarSelector");
			e.height() > this.attr.maxImageHeight ? (e.height(this.attr.maxImageHeight), i.addClass("compose-media-compressed")) : (e.height("auto"), i.removeClass("compose-media-compressed")), !1 !== t && this.trigger("uiComposeImageAdded")
		}, this.onDescriptionAdded = function(e, t) {
			var i = t.imageDescription;
			this.mediaBarData.descriptions[e] = i, (0, a.default)(this.select("addImageDescriptionSelector")[e]).text(i), this.createMetadataForImage(e)
		}, this.createMetadataForImage = function(e, t) {
			var i = this.state.selectedAccountKeys[0],
				n = t || this.mediaBarData.descriptions[e];
			n && this.getDeferredMediaIdsFor(i).addCallback(function(t) {
				var s = t[e][1];
				(0, p.createMetadata)(i, n, s).addCallbacks(function() {}, function() {
					(0, l.showErrorNotification)({
						message: (0, r.default)("Adding an image description failed.")
					})
				})
			})
		}, this.createMetadataForImages = function() {
			var e = this;
			this.mediaBarData.descriptions.forEach(function(t, i) {
				e.createMetadataForImage(i, t)
			})
		}, this.getMediaIndex = function(e) {
			return parseInt((0, a.default)(e.currentTarget).prev().attr("data-file-index"), 10)
		}, this.addImageDescription = function(e) {
			var t = this,
				i = this.getMediaIndex(e);
			(0, g.generic)({
				page: "compose",
				section: "docked_compose",
				action: "click",
				element: "add_description"
			}), this.showModal(f.default, {
				src: this.getMediaInfo()[i].src,
				onDescriptionAdded: function() {
					return t.onDescriptionAdded.bind(t, i)
				},
				initialDescription: this.mediaBarData.descriptions[i]
			}, {
				title: (0, r.default)("Add image description"),
				withFooter: !1
			})
		}, this.removeFile = function(e) {
			var t = (0, a.default)(e.target).closest(this.attr.mediaBarRemoveSelector).attr("data-file-index");
			if (t && (this.removeFileAtIndex(parseInt(t, 10)), this.mediaBarData.files.length)) return this.attachImagesPreview();
			this.removeFiles()
		}, this.removeFiles = function() {
			(0, n.default)(this.mediaBarData.accountsMediaIds).forEach(function(e) {
				this.removeMediaIdsFor(e)
			}, this), T.call(this), this.$mediaBarContainer.addClass("is-hidden"), this.$mediaBarContainer.empty(), this.trigger("uiResetImageUpload"), this.videoTeardownEvent && this.trigger(this.videoTeardownEvent)
		}, this.removeFileAtIndex = function(e) {
			this.mediaBarData.files.splice(e, 1), this.mediaBarData.descriptions.splice(e, 1), this.mediaBarData.previews.splice(e, 1), (0, n.default)(this.mediaBarData.accountsMediaIds).forEach(function(t) {
				this.mediaBarData.accountsMediaIds[t].splice(e, 1)[0].cancel()
			}, this)
		}, this.removeFilesBut = function(e) {
			for (var t = this.mediaBarData.files, i = t.length; i--;) t[i] !== e && this.removeFileAtIndex(i)
		}, this.addMediaIdsFor = function(e) {
			var t = this.mediaBarData,
				i = t.accountsMediaIds[e];
			i || (i = [], t.accountsMediaIds[e] = i), t.files.forEach(function(t, n) {
				i[n] || (i[n] = function(e, t) {
					var i = d.default.upload({
						file: e,
						accountKey: t
					});
					return i.addErrback(function(t) {
						if (!(t instanceof TD.core.defer.CancelledError)) {
							var i = this.mediaBarData.files.indexOf(e);
							if (i > -1) {
								this.mediaBarData.files.length > 1 ? (this.removeFileAtIndex(i), this.attachImagesPreview()) : this.removeFiles();
								var n = (0, r.default)("We could not upload {{name}}, please try again.", {
									name: e.name
								});
								setTimeout(l.showErrorNotification, 0, {
									message: n
								})
							}
							return t
						}
					}.bind(this)), i
				}.call(this, t, e))
			}, this)
		}, this.removeMediaIdsFor = function(e) {
			var t = this.mediaBarData;
			t.accountsMediaIds[e] && (t.accountsMediaIds[e].forEach(function(e) {
				e.cancel()
			}), delete t.accountsMediaIds[e])
		}, this.updateAccountsMediaIds = function(e) {
			(0, n.default)(this.mediaBarData.accountsMediaIds).forEach(function(t) {
				e.indexOf(t) < 0 && this.removeMediaIdsFor(t)
			}, this), e.forEach(function(e) {
				this.mediaBarData.accountsMediaIds[e] || this.addMediaIdsFor(e)
			}, this), this.createMetadataForImages()
		}, this.getDeferredMediaIdsFor = function(e) {
			var t = this.mediaBarData.accountsMediaIds[e];
			if (!t) throw new Error("unknown list of media ids for " + e);
			return new TD.core.defer.DeferredList(t.slice(0))
		}, this.getFiles = function() {
			return this.mediaBarData.files.concat()
		}, this.handleVideoTooLarge = function() {
			this.removeFiles(), this.trigger("uiComposeResetFiles"), (0, l.showErrorNotification)({
				message: (0, r.default)("Looks like the video is longer than 2 minutes and 20 seconds. Please upload a shorter video.")
			})
		}
	}
}, function(e, t, i) {
	"use strict";
	e.exports = {
		upload: function() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
			if (!e.file) throw new Error("Missing file to upload.");
			if (!e.accountKey) throw new Error("Missing account key to upload with.");
			var t = TD.controller.clients.getClient(e.accountKey).oauth.account;
			return TD.net.ajax.upload(e.file, t)
		}
	}
}, function(e, t, i) {
	"use strict";
	var n = o(i(7)),
		s = o(i(6)),
		r = i(37),
		a = i(33);

	function o(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = n.default.mixin(function() {
		this.attributes({
			template: "add_image_description",
			src: null,
			initialDescription: null,
			onDescriptionAdded: null,
			inputImageDescriptionSelector: ".js-input-image-description",
			submitImageDescriptionSelector: ".js-submit-image-description"
		}), this.initialState({
			altTextMaxLength: l,
			canSubmit: !1
		}), this.getTrimmedDescriptionValue = function() {
			return this.select("inputImageDescriptionSelector").val().trim()
		}, this.toggleSubmit = function() {
			var e = this.getTrimmedDescriptionValue();
			this.mergeState({
				canSubmit: e.length > 0
			})
		}, this.submit = function() {
			if (this.state.canSubmit) {
				var e = this.getTrimmedDescriptionValue();
				this.attr.onDescriptionAdded({
					imageDescription: e
				}), (0, a.generic)({
					page: "compose",
					section: "docked_compose",
					action: "click",
					element: "apply_description"
				}), this.trigger("uiCloseModal")
			}
		}, this.initialRender = function() {
			var e = this.attr,
				t = e.src,
				i = e.initialDescription,
				n = this.state,
				r = n.canSubmit,
				a = n.altTextMaxLength,
				o = {
					altTextMaxLength: a,
					canSubmit: r,
					initialDescription: i,
					src: t
				},
				l = s.default.render(this.attr.template, o);
			this.$node.html(l)
		}, this.componentDidInitialize = function() {
			var e = this;
			r.altTextMaxLength$.subscribe(function(t) {
				e.mergeState({
					altTextMaxLength: t || l
				})
			}), this.initialRender(), this.on(this.attr.inputImageDescriptionSelector, "input", this.toggleSubmit), this.on(this.attr.submitImageDescriptionSelector, "click", this.submit)
		}, this.render = function() {
			this.select("submitImageDescriptionSelector").toggleClass("is-disabled", !this.state.canSubmit), this.select("inputImageDescriptionSelector").attr("maxlength", this.state.altTextMaxLength)
		}
	});
	var l = 420
}, function(e, t, i) {
	"use strict";
	var n, s = i(68),
		r = (n = s) && n.__esModule ? n : {
			default: n
		},
		a = i(458);
	e.exports = {
		createMetadata: function(e, t, i) {
			var n = a.twitter_api_base + "/" + a.twitter_api_version + "/media/metadata/create.json",
				s = {
					account: TD.storage.accountController.get(e),
					method: "POST",
					params: (0, r.default)({
						media_id: i,
						alt_text: {
							text: t
						}
					})
				};
			return TD.net.ajax.request(n, s)
		}
	}
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = d(i(26)),
		s = d(i(14)),
		r = d(i(16)),
		a = d(i(27)),
		o = d(i(28)),
		l = d(i(4)),
		c = d(i(0)),
		u = (d(i(8)), d(i(232)));

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = function(e) {
		function t() {
			var e, i, r, o;
			(0, s.default)(this, t);
			for (var l = arguments.length, c = Array(l), d = 0; d < l; d++) c[d] = arguments[d];
			return i = r = (0, a.default)(this, (e = t.__proto__ || (0, n.default)(t)).call.apply(e, [this].concat(c))), r.state = {
				setting: u.default.get(r.props.name)
			}, r.handleDataSettingsValues = function(e, t) {
				if (r.props.name in t) {
					var i = t[r.props.name];
					r.state.setting !== i && r.setState({
						setting: i
					})
				}
			}, r.setSettingValue = function(e) {
				u.default.set(r.props.name, e)
			}, o = i, (0, a.default)(r, o)
		}
		return (0, o.default)(t, e), (0, r.default)(t, [{
			key: "componentDidMount",
			value: function() {
				(0, c.default)(document).on("dataSettingsValues", this.handleDataSettingsValues)
			}
		}, {
			key: "componentWillUnmount",
			value: function() {
				(0, c.default)(document).off("dataSettingsValues", this.handleDataSettingsValues)
			}
		}, {
			key: "render",
			value: function() {
				return this.props.children(this.state.setting, this.setSettingValue)
			}
		}]), t
	}(l.default.Component);
	t.default = h
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	});
	var n = y(i(44)),
		s = y(i(26)),
		r = y(i(14)),
		a = y(i(16)),
		o = y(i(27)),
		l = y(i(28)),
		c = y(i(4)),
		u = (y(i(8)), y(i(2623))),
		d = y(i(508)),
		h = y(i(25)),
		m = y(i(2625)),
		f = y(i(210)),
		p = y(i(232)),
		g = i(832),
		v = y(i(2)),
		T = y(i(795)),
		w = y(i(2627)),
		b = i(19);

	function y(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var _ = function(e) {
		function t() {
			var e, i, a, l;
			(0, r.default)(this, t);
			for (var u = arguments.length, d = Array(u), h = 0; h < u; h++) d[h] = arguments[h];
			return i = a = (0, o.default)(this, (e = t.__proto__ || (0, s.default)(t)).call.apply(e, [this].concat(d))), a.iframeRef = c.default.createRef(), a.state = {
				loadedComposerKey: null,
				stayOpen: p.default.getComposeStayOpen()
			}, a.handleMessage = function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
				if (e && (0, n.default)(e).length) {
					var t = e.type,
						i = e.payload;
					switch (t) {
						case "tweet_sent":
							if (i) {
								var s = a.getToasterMessage(i);
								s && (0, b.showNotification)({
									message: s
								})
							}
							a.props.onSend();
							break;
						case "composer_ready":
							a.setState({
								loadedComposerKey: a.props.composerKey
							})
					}
				}
			}, a.getToasterMessage = function(e) {
				var t = e.type,
					i = void 0 === t ? "" : t,
					n = e.reply_id,
					s = void 0 === n ? "" : n;
				return "thread" === i ? (0, v.default)("Your Tweets were sent.") : "tweet" === i ? s ? (0, v.default)("Your reply was sent.") : (0, v.default)("Your Tweet was sent.") : void 0
			}, a.handleStayOpen = function(e) {
				a.props.onStayOpen(e, !0), a.setState({
					stayOpen: e
				})
			}, l = i, (0, o.default)(a, l)
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "focus",
			value: function() {
				this.iframeRef.current.focus()
			}
		}, {
			key: "render",
			value: function() {
				var e = this,
					t = this.state.stayOpen,
					i = {
						dtab_hide: !0,
						font_size: p.default.getHorizonWebFontSize(),
						in_reply_to: this.props.inReplyToStatusId,
						lang: "en-US",
						night_mode: "dark" === p.default.getTheme(),
						quoted_status: this.props.quotedStatusId,
						selected_account_id: this.props.selectedAccountId,
						text: this.props.text
					};
				return c.default.createElement(c.default.Fragment, null, c.default.createElement(f.default, null, function(n) {
					return c.default.createElement("div", {
						"data-testid": "newComposer",
						className: "flex flex-column height-p--100 " + ("light" === n ? "bg-color-twitter-white" : "bg-color-twitter-midnight-dark-gray")
					}, c.default.createElement("div", {
						className: "flex flex-column flex-auto",
						style: {
							position: "relative"
						}
					}, c.default.createElement(C, {
						contentKey: e.props.composerKey,
						loadedContentKey: e.state.loadedComposerKey
					}, c.default.createElement(d.default, {
						key: e.props.composerKey,
						title: (0, v.default)("Compose new Tweet"),
						ref: e.iframeRef,
						src: (0, g.addURLParameters)("/i/tweetdeck/compose/tweet", i),
						style: D.iframe,
						allowForms: !0,
						onMessage: e.handleMessage
					}))), c.default.createElement("div", {
						className: "divider-bar margin-v--0"
					}), c.default.createElement("button", {
						className: "flex flex-align--center padding-v--14 no-radius new-composer-bottom-button",
						onClick: e.props.onNewDM
					}, c.default.createElement(T.default, {
						style: D.icon
					}), c.default.createElement("div", {
						className: "txt-size-variable--14 txt-weight-normal"
					}, (0, v.default)("New Direct Message"))), c.default.createElement("div", {
						className: "divider-bar margin-v--0"
					}), c.default.createElement("button", {
						className: "flex flex-align--center padding-v--14 no-radius new-composer-bottom-button",
						onClick: e.props.onOptOut
					}, c.default.createElement(w.default, {
						style: D.icon
					}), c.default.createElement("div", {
						className: "txt-size-variable--14 txt-left txt-weight-normal"
					}, (0, v.default)("Schedule Tweets from the old composer"))), c.default.createElement("div", {
						className: "divider-bar margin-v--0"
					}), c.default.createElement("label", {
						className: "flex flex-align--center flex-justify-content--flex-end flex-row padding-v--4 padding-h--8"
					}, c.default.createElement("span", {
						className: "margin-a--14 txt-size-variable--14"
					}, (0, v.default)("Stay open")), c.default.createElement(m.default, {
						checked: t,
						onChange: e.handleStayOpen
					})))
				}))
			}
		}]), t
	}(c.default.Component);
	t.default = _;
	var C = function(e) {
		function t() {
			var e, i, n, a;
			(0, r.default)(this, t);
			for (var l = arguments.length, c = Array(l), u = 0; u < l; u++) c[u] = arguments[u];
			return i = n = (0, o.default)(this, (e = t.__proto__ || (0, s.default)(t)).call.apply(e, [this].concat(c))), n.state = {
				previousChildren: null
			}, a = i, (0, o.default)(n, a)
		}
		return (0, l.default)(t, e), (0, a.default)(t, [{
			key: "componentDidUpdate",
			value: function(e) {
				this.props.loadedContentKey !== e.loadedContentKey && this.setState({
					previousChildren: this.props.children
				})
			}
		}, {
			key: "render",
			value: function() {
				var e = void 0,
					t = void 0,
					i = void 0;
				return this.props.contentKey === this.props.loadedContentKey ? i = c.default.createElement("div", {
					className: "flex flex-column flex-auto",
					key: this.props.contentKey
				}, this.props.children) : this.state.previousChildren ? (i = c.default.createElement("div", {
					className: "flex flex-column flex-auto",
					key: this.props.contentKey,
					style: {
						position: "absolute",
						left: -99999
					}
				}, this.props.children), e = c.default.createElement("div", {
					className: "flex flex-column flex-auto",
					key: this.props.loadedContentKey
				}, this.state.previousChildren), t = c.default.createElement(S, {
					backgroundOpacity: 50
				})) : (i = c.default.createElement("div", {
					className: "flex flex-column flex-auto",
					key: this.props.contentKey
				}, this.props.children), t = c.default.createElement(S, null)), c.default.createElement(c.default.Fragment, null, e, i, t)
			}
		}]), t
	}(c.default.Component);

	function S(e) {
		var t = e.backgroundOpacity,
			i = void 0 === t ? 100 : t;
		return c.default.createElement(c.default.Fragment, null, c.default.createElement(f.default, null, function(e) {
			return c.default.createElement("div", {
				className: "flex flex-column opacity--" + i + " " + ("light" === e ? "bg-color-twitter-white" : "bg-color-twitter-midnight-dark-gray"),
				style: {
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0
				}
			})
		}), c.default.createElement("div", {
			"data-testid": "loadingOverlay",
			className: "flex flex-column flex-justify-content--center",
			style: {
				position: "absolute",
				top: 165,
				left: 0,
				right: 0
			}
		}, c.default.createElement(u.default, {
			size: "large"
		})))
	}
	var D = h.default.create(function(e) {
		return {
			iframe: {
				flex: 1
			},
			icon: {
				marginRight: e.spaces.small
			}
		}
	})
}, , , , , , function(e, t, i) {
	"use strict";
	var n = w(i(9)),
		s = w(i(65)),
		r = w(i(110)),
		a = w(i(2629)),
		o = w(i(85)),
		l = w(i(2)),
		c = w(i(0)),
		u = w(i(36)),
		d = w(i(7)),
		h = w(i(18)),
		m = w(i(208)),
		f = w(i(2630)),
		p = i(19),
		g = i(2631),
		v = w(i(2632)),
		T = i(74);

	function w(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var b = i(876),
		y = i(66),
		_ = i(2633),
		C = i(73),
		S = i(363),
		D = i(6);
	e.exports = d.default.mixin(h.default, function() {
		this.initialState({
			hasOpenedDefaultAccount: !1,
			userData: function() {
				return {}
			},
			contributorManagerAccountKey: null,
			invitations: [],
			accounts: []
		}), this.attributes({
			accountManagerContainerSelector: ".js-account-manager-container",
			contributorManagerContainerSelector: ".js-contributor-manager-container",
			scrollContainerSelector: ".scroll-v",
			contributorManagerTeardownEvent: "uiTeardownContributorManager",
			contributorManagerSelector: ".js-contributor-manager",
			contributorManagerBackSelector: ".js-contributor-manager-back",
			teamInvitationsPanel: ".js-invitations-panel",
			teamInvitationsTeardownEvent: "uiTeardownTeamInvitations",
			teamInvitationsSelector: ".js-team-invitations",
			teamInvitationsBackSelector: ".js-team-invitations-back",
			actionButtonSelector: ".js-account-action",
			manageTeamSelector: ".js-manage-team",
			manageTeamDisabledSelector: ".js-manage-team-disabled",
			accountRowSelector: ".js-account-settings-row",
			accountSummarySelector: ".js-account-settings-summary",
			accountsLoginAccountSelector: ".js-account-settings-login-account",
			teamAccountsInfoSelector: ".js-account-settings-team-info",
			teamAccountsContainerSelector: ".js-account-settings-accounts",
			accountsTeamInvitationsSelector: ".js-account-settings-team-invitations",
			accountsScrollContainerSelector: ".js-account-settings-scroll-container",
			accountsRemoveCheckSelector: ".js-account-remove-check",
			accountRemoveCheckClass: "account-remove-check-open",
			openAccountRowSelector: ".js-account-settings-row.is-expanded",
			accountsInvitedContainerSelector: ".js-account-invited-accounts",
			accountInvitedRowSelector: ".js-account-settings-invited-row",
			profileLinkSelector: 'a[rel="user"]',
			editProfileSelector: ".js-edit-profile",
			shiftedColumnClass: "is-shifted-1",
			shiftedColumnInvitationsClass: "is-shifted-2",
			accountProfileHeader: ".js-account-profile-header",
			accountSafeguardSelector: '.js-account-action[data-action="setAccountSafeguard"]',
			accountSafeguardSwitchSelector: ".js-account-safeguard-switch",
			logInAccountSelector: ".js-log-in-account"
		}), this.componentDidInitialize = function() {
			var e = this;
			this.on(document, "dataCachedTwitterUser", this.handleCacheTwitterUser), this.on(document, "uiDrawerActive", this.handleActiveDrawer), this.on(document, "dataContributors", this.handleContributors), this.on(document, "dataContributorsError", this.handleContributorsError), this.on(document, "dataContributeeNotManaged", this.handleContributeeNotManaged), this.on(document, "dataContributeeAcceptError", this.handleContributeeInviteAcceptanceFailure), this.on("click", {
				actionButtonSelector: this.handleActionButtonClick,
				contributorManagerBackSelector: this.hideContributorManager,
				profileLinkSelector: this.handleProfileLinkClick,
				editProfileSelector: this.handleEditProfileClick,
				teamInvitationsBackSelector: this.hideTeamInvitations
			}), this.on("uiAccordionWillExpand", this.handleAccordionItemWillExpand), this.on("uiAccordionDidExpand", {
				accountsScrollContainerSelector: (0, o.default)(this.handleAccordionItemDidExpand)
			}), this.on("uiAccordionExpandAction", this.handleAccordionItemExpandAction), this.on("uiAccordionCollapseAction", this.handleAccordionItemCollapseAction);
			var t = D.render("settings/account_settings");
			this.$node.html(t);
			var i = this.observe(this.requestResource("accounts.state")).pluck("accounts").combineLatest(u.default.Observable.fromEvent((0, c.default)(document), "dataDeciderUpdated").startWith(null), function(e, t) {
					return e
				}),
				n = i.combineLatest(C.fromEventOnce((0, c.default)(document), "uiShowAccountSettings"), function(e, t) {
					return e
				});
			i.subscribe(function(t) {
				return e.mergeState({
					accounts: t
				})
			}), n.subscribe(this.renderAccounts.bind(this)), n.subscribe(this.maybeCloseContributorManager.bind(this)), this.on("click", {
				logInAccountSelector: function() {
					var t = TD.storage.accountController.getCookieAccount(),
						i = t.getUsername(),
						n = {
							title: (0, l.default)("Add @{{screenName}} as an admin for another account", {
								screenName: i
							}),
							withHeader: !0,
							withHeaderDivider: !0,
							withFooter: !1,
							withDismissButton: !0,
							withBorder: !1,
							withClasses: ["s-narrow-500", "s-fluid-height"],
							withContentClasses: ["padding-h--30"],
							withTitleClasses: ["margin-r--20"]
						};
					e.showModal(f.default, {
						account: t
					}, n)
				}
			})
		}, this.after("stateChanged", function(e, t) {
			var i = !t || e.invitations.length !== t.invitations.length || e.accounts !== t.accounts;
			if (i) {
				var n = e.invitations.length,
					s = e.accounts.filter(function(e) {
						return e.requireConsent
					}).length,
					r = n + s;
				this.trigger("uiNotificationAccounts", {
					count: r
				})
			}
		}), this.render = function() {
			var e = D.render("settings/invitations_panel", {
				invitationCount: this.state.invitations.length,
				showInvitationPanel: Boolean(this.state.invitations.length)
			});
			this.select("teamInvitationsPanel").html(e)
		}, this.handleAccountsRendered = function(e) {
			var t = !this.state.hasOpenedDefaultAccount,
				i = ((0, a.default)(e) || {}).accountKey,
				n = this.select("accountsInvitedContainerSelector"),
				s = !!n.children().length;
			this.mergeState({
				hasOpenedDefaultAccount: !0
			}), t ? s && S.makeElementVisible(n.closest(this.attr.scrollContainerSelector), n) : this.expandAccount(i, 0)
		}, this.expandAccount = function(e, t) {
			t = t || 0, e && setTimeout(function() {
				this.getAccountSettingsRow(e).find(this.attr.accordionToggleSelector).click()
			}.bind(this), t)
		}, this.recalculateAccordion = function() {
			this.trigger("uiAccordionUpdatePanelHeights")
		}, this.maybeCloseContributorManager = function(e) {
			if (this.state.contributorManagerAccountKey) {
				var t = e.filter(function(e) {
					return e.accountKey === this.state.contributorManagerAccountKey
				}, this)[0];
				t && !1 !== t.isAdmin || this.hideContributorManager()
			}
		}, this.handleCacheTwitterUser = function(e, t) {
			this.updateManagedUserInfo(t)
		}, this.updateAccountFromUserCache = function(e) {
			var t = this.state.userData[e.userId];
			(t ? TD.core.defer.succeed(t) : TD.cache.twitterUsers.getById(e.userId)).addCallback(this.updateManagedUserInfo.bind(this))
		}, this.updateManagedUserInfo = function(e) {
			var t = (0, T.getAccountFromId)(e.id);
			t && (this.state.userData[e.id] = e, this.updateUserInfo(e))
		}, this.updateUserInfo = function(e) {
			var t = this.$node.find('.account-settings-row[data-user-id="' + e.id + '"]');
			t.length && t.find(this.attr.accountProfileHeader).css({
				"background-color": "#" + e.profileColor,
				"background-image": "url(" + e.bannerUrlSmall + ")"
			})
		}, this.updateAccountContributorsUi = function(e) {
			e.isAdmin && this.trigger("uiNeedsContributors", {
				accountKey: e.accountKey
			})
		}, this.handleContributors = function(e, t) {
			this.toggleContributorsUiForAccount(t.accountKey, !0)
		}, this.handleContributorsError = function(e, t) {
			this.toggleContributorsUiForAccount(t.request.accountKey, !1)
		}, this.toggleContributorsUiForAccount = function(e, t) {
			var i = this.getAccountSettingsRow(e);
			i.find(this.attr.manageTeamSelector).toggleClass("is-hidden", !t), i.find(this.attr.manageTeamDisabledSelector).toggleClass("is-hidden", t), this.recalculateAccordion()
		}, this.handleContributeeNotManaged = function(e, t) {
			var i = TD.cache.twitterUsers.getById(t.id);
			i.addCallback(function(e) {
				var i = (0, r.default)({}, e, {
						accountKey: "invited:" + t.id,
						userId: e.id,
						isAdmin: !!t.isAdmin
					}),
					n = this.state.invitations.find(function(e) {
						return e.id === i.id
					});
				n || this.mergeState({
					invitations: [].concat((0, s.default)(this.state.invitations), [i])
				})
			}.bind(this))
		}, this.handleContributeeInviteAcceptanceFailure = function(e, t) {
			(0, p.showErrorNotification)({
				message: (0, l.default)("Looks like the invitation could not be accepted. Please try again.")
			}), this.handleContributeeNotManaged(null, {
				id: t.request.id,
				isAdmin: t.request.isAdmin
			})
		}, this.renderAccounts = function(e) {
			var t = this,
				i = void 0,
				n = this.select("accountRowSelector"),
				s = this.select("accountsLoginAccountSelector"),
				r = this.select("teamAccountsContainerSelector"),
				a = [],
				o = e.map(function(e) {
					return e.accountKey
				});
			n.each(function(e, t) {
				var i = (0, c.default)(t),
					n = i.attr("data-account-key"); - 1 === o.indexOf(n) && i.remove()
			});
			var l = e.length >= 2;
			this.select("teamAccountsInfoSelector").toggleClass("is-hidden", !l);
			var u = e.length;
			e.forEach(function(e) {
				var o = (0, c.default)(t.renderAccount(e, u)),
					l = n.filter('[data-account-key="' + e.accountKey + '"]');
				t.updateFromExistingAccount(l, o), 0 === l.length && a.push(e), l.remove(), e.isTwoginAccount ? s.html(o) : (i ? i.after(o) : r.prepend(o), i = o), t.updateAccountContributorsUi(e), t.updateAccountFromUserCache(e)
			}), this.handleAccountsRendered(a)
		}, this.renderAccount = function(e, t) {
			var i = TD.storage.accountController.getCookieAccount(),
				s = (0, n.default)({}, e, {
					getProfileURL: "https://twitter.com/" + e.screenName,
					profileImageURL: e.isTwoginAccount ? (0, g.getAvatarUrlBySize)(e.profileImageURL, g.x128) : e.profileImageURL,
					cookieProfileImageURL: i.getProfileImageURL(),
					isSafeguarded: this.isAccountSafeguarded(e.accountKey),
					emojifiedName: e.emojifiedName,
					withManageTeam: e.isTwoginAccount || e.isContributor,
					isRemovable: !e.isTwoginAccount,
					isSoleAccount: e.isTwoginAccount && 1 === t
				}),
				r = e.isTwoginAccount ? "settings/account_settings_login_account" : "settings/account_settings_row";
			return D.render(r, s)
		}, this.updateFromExistingAccount = function(e, t) {
			if (0 !== e.length) {
				t.toggleClass(this.attr.accordionIsExpandedClass, e.hasClass(this.attr.accordionIsExpandedClass)), t.toggleClass(this.attr.accordionIsActiveClass, e.hasClass(this.attr.accordionIsActiveClass));
				var i = e.find(this.attr.manageTeamSelector).hasClass("is-hidden");
				t.find(this.attr.manageTeamSelector).toggleClass("is-hidden", i), t.find(this.attr.manageTeamDisabledSelector).toggleClass("is-hidden", !i)
			}
		}, this.handleDefaultAccountSelected = function(e, t) {
			var i = (0, c.default)(t.el).val();
			this.trigger("uiAccountAction", {
				action: "setDefault",
				accountKey: i
			}), this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "accounts",
					element: "default",
					action: "select"
				}
			})
		}, this.handleActionButtonClick = function(e, t) {
			var i = (0, c.default)(t.el);
			if (!t.el.disabled && !i.hasClass("is-disabled")) {
				var n = i.attr("data-action"),
					s = i.attr("data-account-key"),
					r = function(e) {
						return {
							page: "settings",
							section: "accounts",
							component: {
								remove: "account",
								removeCheck: "account",
								removeCancel: "account",
								manageContributors: "account",
								showInvitations: "account",
								setAccountSafeguard: "account",
								addAccountLoginFormShowing: "add_account_login_form",
								addAccountLoginRequest: "add_account_login_form",
								addAccount2faTimeout: "add_account_login_form",
								addAccount2faCancel: "add_account_login_form",
								addAccountLoginSuccess: "add_account_login_form",
								addAccountLoginError: "add_account_login_form",
								addAccountLoginServerError: "add_account_login_form"
							} [e],
							element: {
								remove: "remove",
								removeCheck: "remove_check",
								removeCancel: "remove_cancel",
								add: "add_twitter_account",
								passwordReset: "reset_password",
								manageContributors: "show_contributor_manager",
								showInvitations: "show_team_invitations",
								setAccountSafeguard: "confirmation_step",
								setDefault: "default",
								addAccountLoginFormShowing: "login_form",
								addAccountLoginRequest: "add_twitter_account",
								addAccount2faTimeout: "two_factor",
								addAccount2faCancel: "two_factor",
								addAccountLoginSuccess: "login_form",
								addAccountLoginError: "login_form",
								addAccountLoginServerError: "login_form"
							} [e],
							action: {
								setDefault: "select",
								addAccountLoginFormShowing: "impression",
								addAccountLoginRequest: "click",
								addAccount2faTimeout: "timeout",
								addAccount2faCancel: "cancel",
								addAccountLoginSuccess: "success",
								addAccountLoginError: "error",
								addAccountLoginServerError: "error"
							} [e] || "click"
						}
					}(n),
					a = this.getInfoNode(e),
					o = this.getUpdatedInvitations(a);
				switch (n) {
					case "setDefault":
						this.trigger("uiAccountAction", {
							action: n,
							accountKey: s
						});
						break;
					case "removeCheck":
						this.toggleAccountRemoveCheck(s, !0);
						break;
					case "removeCancel":
						this.toggleAccountRemoveCheck(s, !1);
						break;
					case "remove":
						this.trigger("uiAccountAction", {
							action: n,
							accountKey: s
						});
						break;
					case "add":
						this.trigger("uiAccountAction", {
							action: n
						});
						break;
					case "manageContributors":
						this.showContributorManager(s);
						break;
					case "showInvitations":
						this.showTeamInvitations();
						break;
					case "setAccountSafeguard":
						var l = i.find("i").hasClass("icon-toggle-on");
						this.toggleAccountSafeguarded(s, l), this.trigger("metric", {
							key: "account:safeguard:" + (l ? "disable" : "enable")
						});
						break;
					case "inviteAccept":
						0 === o.length && this.hideTeamInvitations(), this.mergeState({
							invitations: o
						}), (0, c.default)(document).trigger("uiAcceptContributeeInvite", {
							accountKey: TD.storage.store.getTwitterLoginAccount().getKey(),
							userId: a.attr("data-user-id"),
							id: a.attr("data-user-id"),
							isAdmin: void 0 !== a.attr("data-user-is-admin")
						}), this.trigger("metric", {
							key: "contributors:ui:invite:click:accept"
						});
						break;
					case "inviteCancel":
						0 === o.length && this.hideTeamInvitations(), this.mergeState({
							invitations: o
						}), (0, c.default)(document).trigger("uiRemoveContributee", {
							accountKey: TD.storage.store.getTwitterLoginAccount().getKey(),
							userId: a.attr("data-user-id")
						}), this.trigger("metric", {
							key: "contributors:ui:invite:click:reject"
						})
				}
				this.trigger(document, "scribeEvent", {
					terms: r
				})
			}
		}, this.getInfoNode = function(e) {
			return (0, c.default)(e.currentTarget).closest(".js-account-settings-invited-row")
		}, this.getUpdatedInvitations = function(e) {
			return this.state.invitations.filter(function(t) {
				return t.id !== e.attr("data-user-id")
			})
		}, this.getInvitedAccount = function(e) {
			var t = (0, c.default)(e).attr("data-account-key");
			return this.select("accountsInvitedContainerSelector").find(this.attr.accountInvitedRowSelector + '[data-account-key="' + t + '"]')
		}, this.isAccountSafeguarded = function(e) {
			return TD.settings.getSafeguardedAccountList().some(function(t) {
				return e === t
			})
		}, this.toggleAccountSafeguarded = function(e, t) {
			var i = t ? "icon-toggle-off" : "icon-toggle-on",
				n = t ? "icon-toggle-on" : "icon-toggle-off";
			t ? TD.settings.removeSafeguardedAccount(e) : TD.settings.addSafeguardedAccount(e), this.select("accountRowSelector").filter(function(t, i) {
				return (0, c.default)(i).attr("data-account-key") === e
			}).find(this.attr.accountSafeguardSwitchSelector).addClass(i).removeClass(n)
		}, this.handleActiveDrawer = function(e, t) {
			t.activeDrawer || (this.hideContributorManager(), this.hideTeamInvitations())
		}, this.toggleAccountRemoveCheck = function(e, t) {
			var i = this.select("accountRowSelector").filter(function(t, i) {
				return (0, c.default)(i).attr("data-account-key") === e
			}).toggleClass(this.attr.accountRemoveCheckClass, t).trigger("uiAccordionUpdatePanelHeights");
			t && S.makeElementVisible(i.closest(this.attr.scrollContainerSelector), i.find(this.attr.accountsRemoveCheckSelector))
		}, this.teardownContributorManagerInstances = function() {
			this.trigger(document, this.attr.contributorManagerTeardownEvent)
		}, this.showContributorManager = function(e) {
			var t = this.select("contributorManagerContainerSelector");
			this.teardownContributorManagerInstances(), this.$node.addClass(this.attr.shiftedColumnClass), this.mergeState({
				contributorManagerAccountKey: e
			}), this.attachChild(_, t, {
				accountKey: e,
				teardownOn: [this.attr.contributorManagerTeardownEvent, this.childTeardownEvent].join(" ")
			})
		}, this.teardownTeamInvitationsInstances = function() {
			this.trigger(document, this.attr.teamInvitationsTeardownEvent)
		}, this.showTeamInvitations = function() {
			var e = this.select("teamInvitationsSelector");
			this.teardownTeamInvitationsInstances(), this.$node.addClass(this.attr.shiftedColumnInvitationsClass);
			var t = this.connect(v.default, {
				mapStateToProps: function(e) {
					return {
						invitations: e.invitations
					}
				}
			});
			this.attachChild(t, e, {
				teardownOn: this.attr.teamInvitationsTeardownEvent
			})
		}, this.hideTeamInvitations = function() {
			this.teardownTeamInvitationsInstances(), this.$node.removeClass(this.attr.shiftedColumnInvitationsClass), this.recalculateAccordion(), this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "team_invitations",
					element: "back",
					action: "click"
				}
			})
		}, this.hideContributorManager = function() {
			this.teardownContributorManagerInstances(), this.state.contributorManagerAccountKey = null, this.$node.removeClass(this.attr.shiftedColumnClass), this.recalculateAccordion(), this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "contributor_manager",
					element: "back",
					action: "click"
				}
			})
		}, this.handleAccordionItemWillExpand = function(e) {
			this.toggleAccountRemoveCheck(e.target.getAttribute("data-account-key"), !1)
		}, this.handleAccordionItemDidExpand = function() {
			S.makeElementVisible(this.select("accountsScrollContainerSelector"), this.select("openAccountRowSelector"))
		}, this.handleAccordionItemExpandAction = function(e) {
			(0, c.default)(e.target).find(".js-consent-badge").addClass("is-hidden"), this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "accounts",
					component: "account",
					action: "impression"
				}
			})
		}, this.handleAccordionItemCollapseAction = function(e) {
			(0, c.default)(e.target).find(".js-consent-badge").removeClass("is-hidden")
		}, this.handleProfileLinkClick = function() {
			this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "accounts",
					component: "account",
					element: "show_profile",
					action: "click"
				}
			})
		}, this.handleEditProfileClick = function() {
			TD.util.openURL("https://twitter.com/settings/profile")
		}, this.getAccountSettingsRow = function(e) {
			return this.select("accountsScrollContainerSelector").find(this.attr.accountRowSelector + '[data-account-key="' + e + '"]')
		}
	}, m.default, b, y)
}, , function(e, t, i) {
	"use strict";
	var n = c(i(2)),
		s = c(i(6)),
		r = c(i(7)),
		a = i(867),
		o = i(19),
		l = c(i(109));

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = r.default.mixin(function() {
		this.attributes({
			template: "add_account_info",
			addAccountContinueSelector: ".js-add-account-continue",
			account: null,
			successCallbackPath: "/web/success.html"
		}), this.componentDidInitialize = function() {
			this.on("click", {
				addAccountContinueSelector: this.continueClick
			})
		}, this.continueClick = function() {
			this.trigger("uiCloseModal");
			var e = (0, l.default)(window.location.href).path(this.attr.successCallbackPath).toString();
			(0, a.observedPopup)({
				queryParams: {
					authorize_callback: e
				},
				paramToExtractValueFrom: "teams_authorized_user_id",
				callbackUrl: e,
				baseUrl: "https://twitter.com/teams/authorize"
			}).then(function(e) {
				TD.controller.clients.addExpectedNewContributeeId(e.valueFromParams), TD.controller.clients.fetchContributees()
			}, this.handleJoinTeamError.bind(this))
		}, this.handleJoinTeamError = function(e) {
			e.message === a.POPUP_BLOCKED && (0, o.showErrorNotification)({
				message: (0, n.default)("Could not join team - Popup was blocked by your browser")
			})
		}, this.render = function() {
			var e = this.attr.account,
				t = s.default.render(this.attr.template, {
					screenName: e.getUsername(),
					profileImageURL: e.getProfileImageURL()
				});
			this.$node.html(t)
		}
	})
}, function(e, t, i) {
	"use strict";
	Object.defineProperty(t, "__esModule", {
		value: !0
	}), t.x400 = t.x200 = t.x128 = t.x96 = t.x73 = t.x48 = t.x24 = t.ORIGINAL = void 0;
	var n, s = a(i(44)),
		r = a(i(162));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	t.getAvatarUrlBySize = function(e, t) {
		var i = v[t];
		if ("string" != typeof e) return e;
		if ("string" != typeof i) return e;
		return function(e, t) {
			return e.replace(w, t + "$1")
		}(function(e) {
			return e.replace(T, ".")
		}(e), i)
	};
	var o = t.ORIGINAL = "original",
		l = t.x24 = "24x24",
		c = t.x48 = "48x48",
		u = t.x73 = "73x73",
		d = t.x96 = "96x96",
		h = t.x128 = "128x128",
		m = t.x200 = "200x200",
		f = t.x400 = "400x400";
	var p, g, v = (n = {}, (0, r.default)(n, o, ""), (0, r.default)(n, l, "_mini"), (0, r.default)(n, c, "_normal"), (0, r.default)(n, u, "_bigger"), (0, r.default)(n, d, "_x96"), (0, r.default)(n, h, "_reasonably_small"), (0, r.default)(n, m, "_200x200"), (0, r.default)(n, f, "_400x400"), n),
		T = (p = v, g = "(" + (0, s.default)(p).map(function(e) {
			return p[e]
		}).filter(Boolean).join("|") + ")\\.", new RegExp(g + "(?!.*" + g + ")")),
		w = /(\.[^\.\/]*$)/
}, function(e, t, i) {
	"use strict";
	var n = r(i(6)),
		s = r(i(7));

	function r(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.attributes({
			template: "team_invitations",
			buttonSelector: ".js-team-invitation-btn"
		}), this.render = function() {
			var e = n.default.render(this.attr.template, {
				invitations: this.props.invitations
			});
			this.$node.html(e)
		}
	})
}, function(e, t, i) {
	"use strict";
	var n = d(i(331)),
		s = d(i(9)),
		r = d(i(65)),
		a = d(i(112)),
		o = d(i(2)),
		l = d(i(7)),
		c = i(19),
		u = i(74);

	function d(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var h = i(66),
		m = i(878),
		f = i(2634),
		p = i(6);
	e.exports = l.default.mixin(function() {
		this.initialState({
			pollIntervalId: null,
			contributors: [],
			pending: [],
			unconfirmed: []
		}), this.attributes({
			accountKey: null,
			contributorAdderSelector: ".js-contributor-adder",
			contributorsContainer: ".js-contributors",
			contributorListSelector: ".js-contributor-list",
			pendingContainer: ".js-pending",
			pendingListSelector: ".js-contributor-list-pending",
			readMoreLinkSelector: ".js-read-more",
			contributorsPollInterval: 6e4
		}), this.componentDidInitialize = function() {
			var e = this;
			this.initialRender(), this.attachChild(m, this.attr.contributorAdderSelector, {
				focusOnInit: !1,
				placeholder: (0, o.default)("@username or name"),
				withAutocompleteAboveInput: !1
			}), this.attachChild(this.connect(f, {
				mapStateToProps: this.contributorListMapStateToPropsFactory(this.getTeamMembersFromState)
			}), this.attr.contributorListSelector, {
				accountKey: this.attr.accountKey
			}), this.attachChild(this.connect(f, {
				mapStateToProps: this.contributorListMapStateToPropsFactory(this.getPendingMembersFromState)
			}), this.attr.pendingListSelector, {
				accountKey: this.attr.accountKey
			}), this.on("uiUserSelected", {
				contributorAdderSelector: this.handleUserSelection
			}), this.on("click", {
				readMoreLinkSelector: this.trackReadMoreClick
			}), this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "contributor_manager",
					action: "impression"
				}
			}), this.on(document, "dataContributors", this.handleContributors), this.mergeState({
				pollIntervalId: setInterval(function() {
					return e.fetchContributors()
				}, this.attr.contributorsPollInterval)
			}), this.fetchContributors(), this.on(document, "dataContributorActionSuccess", this.fetchContributors)
		}, this.componentWillTeardown = function() {
			clearInterval(this.state.pollIntervalId)
		}, this.render = function() {
			this.select("contributorsContainer").toggleClass("is-hidden", 0 === this.getTeamMembersFromState(this.state).length), this.select("pendingContainer").toggleClass("is-hidden", 0 === this.getPendingMembersFromState(this.state).length)
		}, this.initialRender = function() {
			var e = (0, u.getAccount)(this.attr.accountKey);
			e.getProfileURL = "https://twitter.com/" + e.screenName;
			var t = p.render("contributors/contributor_manager", {
				account: e,
				withUserBio: !1,
				withUserMenu: !1
			});
			this.$node.html(t)
		}, this.contributorListMapStateToPropsFactory = function(e) {
			var t = this;
			return function(i) {
				return {
					contributors: e(i),
					onUnconfirmedContributorCancelClick: function(e) {
						return t.onUnconfirmedContributorCancelClick(e)
					}
				}
			}
		}, this.getTeamMembersFromState = function(e) {
			return [].concat((0, r.default)(e.contributors))
		}, this.getPendingMembersFromState = function(e) {
			return [].concat((0, r.default)(e.pending), (0, r.default)(e.unconfirmed.map(function(e) {
				return (0, s.default)({}, e, {
					isUnconfirmed: !0
				})
			})))
		}, this.fetchContributors = function() {
			this.trigger("uiNeedsContributors", {
				accountKey: this.attr.accountKey
			})
		}, this.handleContributors = function(e) {
			var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
				i = t.accountKey,
				s = t.contributors,
				o = t.pending;
			if (i === this.attr.accountKey) {
				var l = new n.default((0, a.default)([].concat((0, r.default)(s), (0, r.default)(o)), "user.id"));
				this.mergeState({
					contributors: s,
					pending: o,
					unconfirmed: this.state.unconfirmed.filter(function(e) {
						return !l.has(e.user.id)
					})
				})
			}
		}, this.handleUserSelection = function(e, t) {
			var i = {
					user: t.user,
					isAdmin: !1
				},
				s = this.state,
				l = s.contributors,
				u = s.pending,
				d = s.unconfirmed,
				h = new n.default((0, a.default)([].concat((0, r.default)(l), (0, r.default)(u), (0, r.default)(d)), "user.id"));
			if (h.has(i.user.id))(0, c.showNotification)({
				message: (0, o.default)("Already added!")
			});
			else {
				var m = TD.storage.accountController.get(this.attr.accountKey);
				i.user.id !== m.getUserID() ? (this.mergeState({
					unconfirmed: [].concat((0, r.default)(this.state.unconfirmed), [i])
				}), this.trigger(document, "scribeEvent", {
					terms: {
						page: "settings",
						section: "contributor_manager",
						component: "user_search",
						action: "select"
					}
				})) : (0, c.showErrorNotification)({
					message: (0, o.default)("You cannot add a user to their own team — they can already contribute to this account.")
				})
			}
		}, this.onUnconfirmedContributorCancelClick = function(e) {
			this.mergeState({
				unconfirmed: this.state.unconfirmed.filter(function(t) {
					return t.user.id !== e
				})
			})
		}, this.trackReadMoreClick = function() {
			this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "contributor_manager",
					element: "read_more",
					action: "click"
				}
			})
		}
	}, h)
}, function(e, t, i) {
	"use strict";
	var n = c(i(48)),
		s = c(i(2)),
		r = c(i(0)),
		a = c(i(7)),
		o = i(19),
		l = i(74);

	function c(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	var u = i(153),
		d = i(363),
		h = i(6);
	e.exports = a.default.mixin(function() {
		this.initialState({
			contributee: function() {
				return TD.storage.accountController.get(this.attr.accountKey)
			}
		}), this.attributes({
			accountKey: null,
			contributorRowSelector: ".js-contributor-row",
			contributorRowClass: "js-contributor-row",
			contributorOpenSettingsSelector: ".js-contributor-open-settings",
			contributorRemoveSelector: ".js-contributor-remove",
			contributorRoleSelector: ".js-contributor-role",
			contributorErrorMessageSelector: ".js-contributor-error-message",
			selectedContributorRoleSelector: ".js-contributor-role:checked",
			actionConfirmSelector: ".js-contributor-action-confirm",
			actionCancelSelector: ".js-contributor-action-cancel",
			genericErrorMessage: (0, s.default)("Something went wrong. Please try again."),
			STATE_INITIAL: "initial",
			STATE_CLOSED: "closed",
			STATE_SETTINGS: "settings",
			STATE_CONFIRM_ADD: "confirmAdd",
			STATE_CONFIRM_DEADMIN: "confirmDeadmin",
			STATE_CONFIRM_REMOVE: "confirmRemove",
			STATE_REMOVING: "confirmRemove-removing",
			disallowedStateTransitions: {
				confirmAdd: {
					anotherContributorOpening: ["closed"]
				}
			},
			notAnimatedStateTransitions: {
				initial: {
					load: ["closed"]
				}
			},
			stateToScribeElement: {
				settings: "settings",
				confirmAdd: "confirm_add",
				confirmRemove: "confirm_remove",
				confirmDeadmin: "confirm_deadmin"
			},
			scrollWait: 300
		}), this.componentDidInitialize = function() {
			this.on(document, "dataContributorsError", this.handleContributorsError), this.on(document, "dataContributorActionSuccess", this.handleContributorActionSuccess), this.on(document, "dataContributorActionError", this.handleContributorActionError), this.on("click", {
				contributorOpenSettingsSelector: this.handleOpenSettings,
				contributorRemoveSelector: this.handleRemoveContributorClick,
				actionConfirmSelector: this.handleActionConfirmClick,
				actionCancelSelector: this.handleActionCancelClick
			})
		}, this.sortByName = function(e, t) {
			var i = "string" == typeof e ? e.toLowerCase() : e.user.name.toLowerCase(),
				n = "string" == typeof t ? t.toLowerCase() : t.user.name.toLowerCase();
			return i < n ? -1 : i > n ? 1 : 0
		}, this.handleContributorsError = function(e, t) {
			t.request.accountKey === this.attr.accountKey && this.$node.html(h.render("contributors/contributor_list_error"))
		}, this.render = function() {
			var e = this,
				t = this.props.contributors,
				i = void 0 === t ? [] : t,
				n = this.select("contributorRowSelector").toArray().map(function(e) {
					return (0, r.default)(e).attr("data-user-id")
				}),
				s = i.filter(function(e) {
					return !n.includes(e.user.id)
				}).find(function(e) {
					return e.isUnconfirmed
				});
			this.removeMessages(), n.filter(function(t) {
				return !e.getContributor(t)
			}).forEach(function(t) {
				return e.getContributorRow(t).remove()
			}), i.forEach(function(t) {
				var i = e.getContributorRow(t.user.id),
					n = i.attr("data-state"),
					s = e.getUpdatedState(t, n);
				0 === i.length && e.createContributorRow(t), e.setContributorState(t, s, {
					transition: "load"
				})
			}), s && this.scrollToContributor(s)
		}, this.getUpdatedState = function(e, t) {
			var i = e.isUnconfirmed ? this.attr.STATE_CONFIRM_ADD : this.attr.STATE_CLOSED,
				n = !t || e.isUnconfirmed && t !== this.attr.STATE_CONFIRM_ADD || !e.isUnconfirmed && t === this.attr.STATE_CONFIRM_ADD;
			return n ? i : t
		}, this.handleOpenSettings = function(e, t) {
			e.preventDefault();
			var i = (0, r.default)(t.el),
				n = i.attr("data-user-id"),
				s = this.getContributor(n),
				a = this.getContributorRow(n);
			if (0 !== a.length) {
				var o = this.getContributorRole(s);
				a.find(this.attr.contributorRoleSelector).filter(function() {
					return (0, r.default)(this).attr("data-contributor-role") === o
				}).prop("selected", !0), this.select("contributorRowSelector").each(function(e, t) {
					var i = (0, r.default)(t).attr("data-user-id");
					if (i !== n) {
						var s = this.getContributor(i);
						this.setContributorState(s, this.attr.STATE_CLOSED, {
							transition: "anotherContributorOpening"
						})
					}
				}.bind(this)), this.setContributorState(s, this.attr.STATE_SETTINGS), this.scribeContributorAction("open_settings", "click");
				var l = this.$node.closest(".scroll-v");
				setTimeout(function() {
					d.makeElementVisible(l, a)
				}, this.attr.scrollWait)
			}
		}, this.handleRemoveContributorClick = function(e, t) {
			var i = (0, r.default)(t.el),
				n = i.attr("data-user-id"),
				s = this.getContributor(n);
			this.setContributorState(s, this.attr.STATE_CONFIRM_REMOVE), this.scribeContributorAction("remove", "click")
		}, this.setRole = function(e, t) {
			var i = this.getContributor(t),
				n = this.getContributorRow(t);
			if (0 !== n.length) {
				var s = n.find(this.attr.selectedContributorRoleSelector),
					r = s.attr("data-contributor-role"),
					a = "admin" === r;
				if (a === i.isAdmin) return this.setContributorState(i, this.attr.STATE_CLOSED);
				var o = (0, l.getTwitterLoginAccount)(),
					c = o && o.userId === t;
				c && !a ? this.setContributorState(i, this.attr.STATE_CONFIRM_DEADMIN) : (this.setContributorState(i, this.attr.STATE_CLOSED), this.trigger("uiContributorAction", {
					accountKey: this.attr.accountKey,
					action: "update",
					userId: t,
					isAdmin: a
				}))
			}
		}, this.handleActionConfirmClick = function(e, t) {
			var i = (0, r.default)(t.el),
				n = i.attr("data-user-id"),
				s = this.getContributor(n),
				a = this.getContributorRow(n).attr("data-state"),
				o = {
					accountKey: this.attr.accountKey,
					userId: n,
					action: null
				};
			switch (a) {
				case this.attr.STATE_SETTINGS:
					this.setRole(i, n);
					break;
				case this.attr.STATE_CONFIRM_ADD:
					o.action = "add", this.setContributorState(s, this.attr.STATE_CLOSED);
					break;
				case this.attr.STATE_CONFIRM_DEADMIN:
					o.action = "update", o.isAdmin = !1, this.setContributorState(s, this.attr.STATE_CLOSED);
					break;
				case this.attr.STATE_CONFIRM_REMOVE:
					o.action = "remove", this.setContributorState(s, this.attr.STATE_REMOVING)
			}
			o.action && this.trigger("uiContributorAction", o), this.scribeContributorAction(this.attr.stateToScribeElement[a], "confirm")
		}, this.handleActionCancelClick = function(e, t) {
			var i = (0, r.default)(t.el).attr("data-user-id"),
				n = this.getContributor(i),
				s = this.getContributorRow(i).attr("data-state");
			switch (s) {
				case this.attr.STATE_SETTINGS:
					this.setContributorState(n, this.attr.STATE_CLOSED);
					break;
				case this.attr.STATE_CONFIRM_ADD:
					this.props.onUnconfirmedContributorCancelClick(i);
					break;
				case this.attr.STATE_CONFIRM_DEADMIN:
				case this.attr.STATE_CONFIRM_REMOVE:
					this.setContributorState(n, this.attr.STATE_SETTINGS)
			}
			this.scribeContributorAction(this.attr.stateToScribeElement[s], "cancel")
		}, this.handleContributorActionSuccess = function(e, t) {
			if (t.request.accountKey === this.attr.accountKey) {
				var i = this.getContributor(t.request.userId);
				if (i) switch (t.request.action) {
					case "add":
						this.setContributorState(i, this.attr.STATE_CLOSED);
						break;
					case "update":
						this.setContributorState(i, this.attr.STATE_CLOSED), this.scribeContributorAction("admin", t.request.isAdmin ? "on" : "off")
				}
			}
		}, this.handleContributorActionError = function(e, t) {
			if (t.request.accountKey === this.attr.accountKey) {
				var i = this.getContributor(t.request.userId);
				if (i) {
					var n;
					try {
						n = t.response.req.errors[0]
					} catch (e) {}
					if ("add" === t.request.action && i.isUnconfirmed) return this.setContributorState(i, this.attr.STATE_CONFIRM_ADD, {
						error: this.makeErrorState(this.attr.STATE_CONFIRM_ADD),
						errorData: n
					});
					n && (0, o.showErrorNotification)({
						message: n.message
					}), this.revertContributorState(i)
				}
			}
		}, this.setContributorState = function(e, t, i) {
			if (i = (0, n.default)(i || {}, {
					error: "",
					errorData: {},
					transition: ""
				}), e) {
				var s = this.getContributorRow(e.user.id);
				if (0 !== s.length) {
					var r = s.attr("data-state"),
						a = s.attr("data-error"),
						o = s.attr("data-error-code"),
						l = "" + i.errorData.twitterErrorCode,
						c = this.getContributorRole(e),
						u = s.attr("data-contributor-role");
					if (t !== r || c !== u || i.error !== a || l !== o) {
						var d = this.stateRuleMatch(this.attr.disallowedStateTransitions, {
							from: r,
							transition: i.transition,
							to: t
						});
						if (!d) {
							var h = this.doStateChange(s, {
								from: r,
								to: t,
								error: i.error,
								errorData: i.errorData,
								transition: i.transition,
								role: this.getContributorRole(e)
							});
							return h.addCallbackWith(this, function() {
								this.scrollFix(), this.scribeContributorAction(this.attr.stateToScribeElement[t], "impression")
							}), h
						}
					}
				}
			}
		}, this.doStateChange = function(e, t) {
			t = t || {};
			var i = this;

			function n() {
				e.attr({
					"data-previous-state": t.from,
					"data-state": t.to,
					"data-state-error": t.error,
					"data-state-error-code": t.errorData.twitterErrorCode,
					"data-contributor-role": t.role
				}), e.find(i.attr.contributorErrorMessageSelector).text(t.errorData.message || i.attr.genericErrorMessage)
			}
			var s = !this.stateRuleMatch(this.attr.notAnimatedStateTransitions, t);
			return s ? this.deferredAnimateElementHeightChange(e, n) : TD.core.defer.maybeDeferred(n)
		}, this.stateRuleMatch = function(e, t) {
			return (t = t || {}).transition && t.from && t.to && e[t.from] && e[t.from][t.transition] && e[t.from][t.transition].indexOf(t.to) > -1
		}, this.revertContributorState = function(e) {
			var t = this.getContributorRow(e.user.id).attr("data-previous-state");
			t && this.setContributorState(e, t, {
				error: this.makeErrorState(t)
			})
		}, this.scrollToContributor = function(e) {
			var t = this.getContributorRow(e.user.id),
				i = this.$node.closest(".scroll-v");
			setTimeout(function() {
				d.makeElementVisible(i, t)
			}, this.attr.scrollWait)
		}, this.scrollFix = function() {
			this.$node.closest(".scroll-v").trigger("scroll")
		}, this.removeMessages = function() {
			this.$node.contents().filter(function(e, t) {
				return !(0, r.default)(t).hasClass(this.attr.contributorRowClass)
			}.bind(this)).remove()
		}, this.getContributor = function(e) {
			return this.props.contributors.find(function(t) {
				return t.user.id === e
			})
		}, this.getContributorRow = function(e) {
			return this.select("contributorRowSelector").filter(function() {
				return (0, r.default)(this).attr("data-user-id") === e
			})
		}, this.createContributorRow = function(e) {
			var t = !1,
				i = (0, r.default)(this.renderContributorRow(e));
			return e.isUnconfirmed || this.select("contributorRowSelector").each(function(n, s) {
				var a = (0, r.default)(s),
					o = this.getContributor(a.attr("data-user-id")),
					l = 1 === this.sortByName(a.attr("data-name"), e),
					c = o.isUnconfirmed;
				t || !l && !c || (i.insertBefore(a), t = !0)
			}.bind(this)), t || this.$node.append(i), i
		}, this.renderContributorRow = function(e) {
			var t = (0, l.getTwitterLoginAccount)(),
				i = {
					initialState: this.attr.STATE_INITIAL,
					contributor: e,
					contributee: this.state.contributee,
					isSigninAccount: t && e.user.id === t.userId
				};
			return h.render("contributors/contributor_list_row", i)
		}, this.scribeContributorAction = function(e, t) {
			e && (this.trigger(document, "scribeEvent", {
				terms: {
					page: "settings",
					section: "contributor_manager",
					component: "contributor",
					element: e,
					action: t
				}
			}), this.trigger("metric", {
				key: ["contributors:ui", e, t].join(":")
			}))
		}, this.getContributorRole = function(e) {
			return e.isAdmin ? "admin" : "contributor"
		}, this.makeErrorState = function(e) {
			return e + "-error"
		}
	}, u)
}, function(e, t, i) {
	"use strict";
	var n = a(i(0)),
		s = a(i(7)),
		r = a(i(361));

	function a(e) {
		return e && e.__esModule ? e : {
			default: e
		}
	}
	e.exports = s.default.mixin(function() {
		this.initialState({
			conversationData: {}
		}), this.after("initialize", function() {
			this.on("uiShowConversationMenu", this.handleShowConversationMenu), this.after("renderDropdown", this.addConversationMenuClickHandler), this.before("teardownCurrentDropdown", this.handleRemoveConversationMenu)
		}), this.getConversation = function(e) {
			var t = TD.controller.clients.getClient(e.accountKey);
			return t.conversations.getConversation(e.conversationId)
		}, this.addConversationMenuClickHandler = function() {
			this.currentDropdown && this.on(this.currentDropdown.$el, "click", this.handleConversationMenuClick)
		}, this.handleConversationMenuClick = function(e) {
			var t = (0, n.default)(e.target),
				i = this.state.conversationData;
			if (0 !== t.closest(this.attr.isSelectedSelector).length) {
				var s = t.data("action");
				switch (s) {
					case "rename-conversation":
						t.closest(".js-detail-header").trigger("uiRenameConversation", i);
						break;
					case "leave-conversation":
						(0, n.default)(document).trigger("uiShowDeleteDmConversation", i);
						break;
					case "notify-conversation":
						var r = this.getConversation(i),
							a = r.notificationsDisabled ? "uiConversationsEnableNotifications" : "uiConversationsDisableNotifications";
						r.notificationsDisabled = !r.notificationsDisabled, this.trigger(a, i);
						break;
					case "view-people":
						this.trigger("metric", {
							key: "dm:ui:conversation:view-participiants"
						}), this.trigger(document, "uiShowDmParticipants", i);
						break;
					case "flag-conversation":
						var o = TD.storage.accountController.get(i.accountKey);
						this.trigger(document, "uiShowReportOptions", {
							account: o,
							twitterUser: this.getConversation(i).participants[0],
							isGroupConversation: i.group,
							conversationId: i.conversationId
						})
				}
				this.teardownCurrentDropdown()
			}
		}, this.handleShowConversationMenu = function(e, t) {
			var i = t.$targetElement.find(".js-menu-target"),
				n = this.getConversation(t),
				s = TD.storage.store.getTwitterLoginAccount().getKey(),
				r = {
					columnKey: t.columnKey,
					accountKey: t.accountKey,
					conversationId: t.conversationId,
					notificationsDisabled: n.notificationsDisabled,
					name: n.name,
					group: "GROUP_DM" === n.type,
					loginAccount: s === t.accountKey
				};
			this.renderDropdown(i, "menus/dm_conversations_menu", r, {
				toggle: !0,
				position: "pos-l conversation-menu-position"
			}), this.mergeState({
				conversationData: r
			})
		}, this.handleRemoveConversationMenu = function(e, t) {
			this.currentDropdown && this.mergeState({
				conversationData: {}
			})
		}
	}, r.default)
}, function(e, t, i) {
	"use strict";
	var n, s = i(18),
		r = (n = s) && n.__esModule ? n : {
			default: n
		};
	var a = i(7);
	e.exports = a.mixin(function() {
		this.attributes({
			menuItemSelector: "js-suggest-refresh--item",
			dismissButtonSelector: ".js-suggest-refresh--dismiss",
			updateAvailableInactiveClass: "update-available--inactive"
		}), this.initialState({
			isShowing: !1,
			version: function() {
				return {
					isOutOfDate: !1
				}
			}
		}), this.after("initialize", function() {
			this.observe(this.requestResource("version")).subscribe(this.toState("version").bind(this)), this.on("uiAppHeaderUpdateAvailableClick", this.onRefresh)
		}), this.render = function() {
			var e = this.state,
				t = e.version,
				i = (t = void 0 === t ? {} : t).isOutOfDate,
				n = void 0 !== i && i,
				s = e.isShowing,
				r = void 0 !== s && s,
				a = n && TD.decider.get("suggest_refresh");
			a !== r && (a && !r && TD.util.metric("suggest-refresh:show"), this.trigger("uiSuggestRefreshToggle", {
				shouldShow: a
			}), this.mergeState({
				isShowing: a
			}))
		}, this.onRefresh = function() {
			TD.util.metric("suggest-refresh:refresh:click"), window.location.reload()
		}
	}, r.default)
}]);